sentence_idx,original_sentence,original_annotated,de_annotated_content,generated_annotated,source_file,similarity_score
1,# DejaVu ## Table of Contents =================    * [Code](#code)     * [Install Requirements](#install-requirements)     * [Usage](#usage)     * [Example](#example)   * [Datasets](#datasets)   * [Deployment and Failure Injection Scripts of Train-Ticket](#deployment-and-failure-injection-scripts-of-train-ticket)   * [Citation](#citation)   * [Supplementary details](#supplementary-details)    ## Paper A preprint version: https://arxiv.org/abs/2207.09021 ## Code ### Install 1.,# <PROJECT>DejaVu</PROJECT> ## Table of Contents =================    * [Code](#code)     * [Install Requirements](#install-requirements)     * [Usage](#usage)     * [Example](#example)   * [Datasets](#datasets)   * [Deployment and Failure Injection Scripts of Train-Ticket](#deployment-and-failure-injection-scripts-of-train-ticket)   * [Citation](#citation)   * [Supplementary details](#supplementary-details)    ## Paper A preprint version: https://arxiv.org/abs/2207.09021 ## Code ### Install 1.,"# DejaVu ## Table of Contents =================    * [Code](#code)     * [Install Requirements](#install-requirements)     * [Usage](#usage)     * [Example](#example)   * [Datasets](#datasets)   * [Deployment and Failure Injection Scripts of Train-Ticket](#deployment-and-failure-injection-scripts-of-train-ticket)   * [Citation](#citation)   * [Supplementary details](#supplementary-details)    ## Paper A preprint version: https://arxiv.org/abs/2207.09021 ## Code ### Install 1.
","# <PROJECT>DejaVu</PROJECT> ## Table of Contents =================    * [<PROGLANG>Code</PROGLANG>](#code)     * [Install Requirements](#install-requirements)     * [Usage](#usage)     * [Example](#example)   * [<DATASET>Datasets</DATASET>](#datasets)   * [Deployment and Failure Injection Scripts of <PROJECT>Train-Ticket</PROJECT>](#deployment-and-failure-injection-scripts-of-train-ticket)   * [Citation](#citation)   * [Supplementary details](#supplementary-details)    ## <PUBLICATION>Paper</PUBLICATION> A preprint version: https://arxiv.org/abs/2207.09021 ## <PROGLANG>Code</PROGLANG> ### Install 1.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e3f6bea6.txt,0.9989594172736732
2,All the software requirements are already pre-installed in the Docker image below.,All the software requirements are already pre-installed in the <SOFTWARE>Docker</SOFTWARE> image below.,All the software requirements are already pre-installed in the Docker image below.,All the <SOFTWARE>software</SOFTWARE> requirements are already pre-installed in the <SOFTWARE>Docker image</SOFTWARE> below.,../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\2b25741b.txt,1.0
3,The requirements are also listed in `requirements.txt` and `requirements-dev.txt`.,The requirements are also listed in `requirements.txt` and `requirements-dev.txt`.,The requirements are also listed in requirements.txt and requirements-dev.txt.,The requirements are also listed in <SOFTWARE>requirements.txt</SOFTWARE> and <SOFTWARE>requirements-dev.txt</SOFTWARE>.,../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\79d21e8d.txt,0.975
4,"Note that `DGL 0.8` is not released yet when I did this work, so I installed `DGL 0.8` manually from the source code.","Note that `<SOFTWARE>DGL 0.8</SOFTWARE>` is not released yet when I did this work, so I installed `<SOFTWARE>DGL 0.8</SOFTWARE>` manually from the source code.","Note that DGL 0.8 is not released yet when I did this work, so I installed DGL 0.8 manually from the source code.
","Note that <SOFTWARE>DGL 0.8</SOFTWARE> is not released yet when I did this work, so I installed <SOFTWARE>DGL 0.8</SOFTWARE> manually from the source code.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\ea5f1720.txt,0.9783549783549783
5,PyTorch version should be equal to or greater than 1.11.0.,<SOFTWARE>PyTorch</SOFTWARE> version should be equal to or greater than 1.11.0.,PyTorch version should be equal to or greater than 1.11.0.,<PROGLANG>PyTorch</PROGLANG> version should be equal to or greater than 1.11.0.,../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\6efd0ebe.txt,1.0
6,```bash    docker pull lizytalk/dejavu    ``` 2.,```<PROGLANG>bash</PROGLANG>    <SOFTWARE>docker</SOFTWARE> pull <SOFTWARE>lizytalk/dejavu</SOFTWARE>    ``` 2.,bash    docker pull lizytalk/dejavu     2.,bash    docker pull <SOFTWARE>lizytalk/dejavu</SOFTWARE>     2.,../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\d8da790c.txt,0.9333333333333333
7,Pull the code from GitHub    ```bash    git pull https://github.com/NetManAIOps/DejaVu.git DejaVu    ``` 3.,Pull the code from GitHub    ```<PROGLANG>bash</PROGLANG>    <SOFTWARE>git</SOFTWARE> pull https://github.com/NetManAIOps/<PROJECT>DejaVu</PROJECT>.git <PROJECT>DejaVu</PROJECT>    ``` 3.,"Pull the code from GitHub    bash    git pull https://github.com/NetManAIOps/DejaVu.git DejaVu     3.
","Pull the code from GitHub    bash    git pull https://github.com/<PROJECT>NetManAIOps</PROJECT>/<SOFTWARE>DejaVu</SOFTWARE>.git <SOFTWARE>DejaVu</SOFTWARE>     3.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\ac4b9121.txt,0.9665071770334929
8,Download the datasets following the link in the GitHub repo and extract the datasets into `.,Download the datasets following the link in the GitHub repo and extract the datasets into `.,Download the datasets following the link in the GitHub repo and extract the datasets into .,Download the datasets following the link in the GitHub repo and extract the datasets into .,../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\799e3bab.txt,0.994535519125683
9,/DejaVu/data` 4.,/DejaVu/data` 4.,"/DejaVu/data 4.
","/<DATASET>DejaVu</DATASET>/data 4.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e3479698.txt,0.9375
10,"I use the command `realpath` in the example commands below, which is not bundled in macOS and Windows.","I use the command `<SOFTWARE>realpath</SOFTWARE>` in the example commands below, which is not bundled in macOS and Windows.","I use the command realpath in the example commands below, which is not bundled in macOS and Windows.","I use the command <SOFTWARE>realpath</SOFTWARE> in the example commands below, which is not bundled in macOS and Windows.",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e4a11be3.txt,0.9900990099009901
11,"On macOS, you can install it by `brew install coreutils`. 5.","On macOS, you can install it by `<SOFTWARE>brew</SOFTWARE> install <SOFTWARE>coreutils</SOFTWARE>`. 5.","On macOS, you can install it by brew install coreutils. 5.
","On macOS, you can install it by brew install <PROGLANG>coreutils</PROGLANG>. 5.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\c3ecf5e0.txt,0.9747899159663865
12,Start a Docker container with our image and enter its shell    ```bash    docker run -it --rm -v $(realpath DejaVu):/workspace lizytalk/dejavu bash    ``` 6.,Start a <SOFTWARE>Docker</SOFTWARE> container with our image and enter its shell    ```<PROGLANG>bash</PROGLANG>    <SOFTWARE>docker</SOFTWARE> run -it --rm -v $(realpath <PROJECT>DejaVu</PROJECT>):/workspace <SOFTWARE>lizytalk/dejavu</SOFTWARE> <SOFTWARE>bash</SOFTWARE>    ``` 6.,"bash
docker run -it --rm -v $(realpath DejaVu):/workspace lizytalk/dejavu bash
","bash
docker run -it --rm -v $(realpath <PROJECT>DejaVu</PROJECT>):/workspace <SOFTWARE>lizytalk/dejavu</SOFTWARE> bash
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\ef7df5f1.txt,0.652542372881356
13,Run `direnv allow` in the shell of the Docker container to set the environment variables. 7.,Run `<SOFTWARE>direnv</SOFTWARE> allow` in the shell of the <SOFTWARE>Docker</SOFTWARE> container to set the environment variables. 7.,"Run direnv allow in the shell of the Docker container to set the environment variables. 7.
","Run <PROGLANG>direnv allow</PROGLANG> in the shell of the Docker container to set the environment variables. 7.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\d8f1dc82.txt,0.9836065573770492
14,"Run experiments in the shell of the Docker container following the usage table as follows.   ### Usage |Algorithm|Usage| |---|---| |DejaVu|Run for dataset A1: `python exp/run_GAT_node_classification.py -H=4 -L=8 -fe=GRU -bal=True --data_dir=data/A1`| |JSS'20|Run for dataset A1: `python exp/DejaVu/run_JSS20.py --data_dir=data/A1`| |iSQUAD|Run for dataset A1: `python exp/DejaVu/run_iSQ.py --data_dir=data/A1`| |Decision Tree|Run for dataset A1: `python exp/run_DT_node_classification.py --data_dir=data/A1`| |RandomWalk@Metric|Run for dataset A1: `python exp/DejaVu/run_random_walk_single_metric.py --data_dir=data/A1 --window_size 60 10 --score_aggregation_method=min`| |RandomWalk@FI|Run for dataset A1: `python exp/DejaVu/run_random_walk_failure_instance.py --data_dir=data/A1 --window_size 60 10 --anomaly_score_aggregation_method=min --corr_aggregation_method=max`| |Global interpretation|Run `notebooks/explain.py` as a jupyter notebook with `jupytext`| |Local interpretation|`DejaVu/explanability/similar_faults.py`|  The commands would print a `one-line summary` in the end, including the following fields: `A@1`, `A@2`, `A@3`, `A@5`, `MAR`, `Time`, `Epoch`, `Valid Epoch`, `output_dir`, `val_loss`, `val_MAR`, `val_A@1`, `command`, `git_commit_url`, which are the desrired results.","Run experiments in the shell of the Docker container following the usage table as follows.   ### Usage |Algorithm|Usage| |---|---| |DejaVu|Run for dataset A1: `python exp/run_GAT_node_classification.py -H=4 -L=8 -fe=GRU -bal=True --data_dir=data/A1`| |JSS'20|Run for dataset A1: `python exp/DejaVu/run_JSS20.py --data_dir=data/A1`| |<DATASET>iSQUAD</DATASET>|Run for dataset A1: `python exp/DejaVu/run_iSQ.py --data_dir=data/A1`| |Decision Tree|Run for dataset A1: `python exp/run_DT_node_classification.py --data_dir=data/A1`| |RandomWalk@Metric|Run for dataset A1: `python exp/DejaVu/run_random_walk_single_metric.py --data_dir=data/A1 --window_size 60 10 --score_aggregation_method=min`| |RandomWalk@FI|Run for dataset A1: `python exp/DejaVu/run_random_walk_failure_instance.py --data_dir=data/A1 --window_size 60 10 --anomaly_score_aggregation_method=min --corr_aggregation_method=max`| |Global interpretation|Run `notebooks/explain.py` as a jupyter notebook with `jupytext`| |Local interpretation|`DejaVu/explanability/similar_faults.py`|  The commands would print a `one-line summary` in the end, including the following fields: `A@1`, `A@2`, `A@3`, `A@5`, `MAR`, `Time`, `Epoch`, `Valid Epoch`, `output_dir`, `val_loss`, `val_MAR`, `val_A@1`, `command`, `git_commit_url`, which are the desrired results.","Run experiments in the shell of the Docker container following the usage table as follows.   ### Usage |Algorithm|Usage| |---|---| |DejaVu|Run for dataset A1: python exp/run_GAT_node_classification.py -H=4 -L=8 -fe=GRU -bal=True --data_dir=data/A1| |JSS'20|Run for dataset A1: python exp/DejaVu/run_JSS20.py --data_dir=data/A1| |iSQUAD|Run for dataset A1: python exp/DejaVu/run_iSQ.py --data_dir=data/A1| |Decision Tree|Run for dataset A1: python exp/run_DT_node_classification.py --data_dir=data/A1| |RandomWalk@Metric|Run for dataset A1: python exp/DejaVu/run_random_walk_single_metric.py --data_dir=data/A1 --window_size 60 10 --score_aggregation_method=min| |RandomWalk@FI|Run for dataset A1: python exp/DejaVu/run_random_walk_failure_instance.py --data_dir=data/A1 --window_size 60 10 --anomaly_score_aggregation_method=min --corr_aggregation_method=max| |Global interpretation|Run notebooks/explain.py as a jupyter notebook with jupytext| |Local interpretation|DejaVu/explanability/similar_faults.py|  The commands would print a one-line summary in the end, including the following fields: A@1, A@2, A@3, A@5, MAR, Time, Epoch, Valid Epoch, output_dir, val_loss, val_MAR, val_A@1, command, git_commit_url, which are the desrired results.
","Run experiments in the shell of the Docker container following the usage table as follows.   ### Usage |Algorithm|Usage| |---|---| |<SOFTWARE>DejaVu</SOFTWARE>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/run_GAT_node_classification.py -H=4 -L=8 -fe=GRU -bal=True --data_dir=data/A1| |<PUBLICATION>JSS'20</PUBLICATION>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/<SOFTWARE>DejaVu</SOFTWARE>/run_JSS20.py --data_dir=data/A1| |<SOFTWARE>iSQUAD</SOFTWARE>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/<SOFTWARE>DejaVu</SOFTWARE>/run_iSQ.py --data_dir=data/A1| |<SOFTWARE>Decision Tree</SOFTWARE>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/run_DT_node_classification.py --data_dir=data/A1| |<SOFTWARE>RandomWalk@Metric</SOFTWARE>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/<SOFTWARE>DejaVu</SOFTWARE>/run_random_walk_single_metric.py --data_dir=data/A1 --window_size 60 10 --score_aggregation_method=min| |<SOFTWARE>RandomWalk@FI</SOFTWARE>|Run for dataset A1: <PROGLANG>python</PROGLANG> exp/<SOFTWARE>DejaVu</SOFTWARE>/run_random_walk_failure_instance.py --data_dir=data/A1 --window_size 60 10 --anomaly_score_aggregation_method=min --corr_aggregation_method=max| |<SOFTWARE>Global interpretation</SOFTWARE>|Run notebooks/explain.py as a jupyter notebook with <SOFTWARE>jupytext</SOFTWARE>| |<SOFTWARE>Local interpretation</SOFTWARE>|<SOFTWARE>DejaVu</SOFTWARE>/explanability/similar_faults.py|  The commands would print a one-line summary in the end, including the following fields: <EVALMETRIC>A@1</EVALMETRIC>, <EVALMETRIC>A@2</EVALMETRIC>, <EVALMETRIC>A@3</EVALMETRIC>, <EVALMETRIC>A@5</EVALMETRIC>, <EVALMETRIC>MAR</EVALMETRIC>, <EVALMETRIC>Time</EVALMETRIC>, <EVALMETRIC>Epoch</EVALMETRIC>, <EVALMETRIC>Valid Epoch</EVALMETRIC>, <EVALMETRIC>output_dir</EVALMETRIC>, <EVALMETRIC>val_loss</EVALMETRIC>, <EVALMETRIC>val_MAR</EVALMETRIC>, <EVALMETRIC>val_A@1</EVALMETRIC>, <EVALMETRIC>command</EVALMETRIC>, <EVALMETRIC>git_commit_url</EVALMETRIC>, which are the desrired results.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\18e45ab6.txt,0.9230769230769231
15,"Totally, the main experiment commands of DejaVu should output as follows: - FDG message, including the data paths, edge types, the number of nodes (failure units), the number of metrics, the metrics of each failure class. - Traning setup message: the faults used for training, validation and testing. - Model architecture: model parameters in each part, total params - Training process: the training/validation/testing loss and accuracy - Time Report. - command output one-line summary.  ### Example See https://github.com/NetManAIOps/DejaVu/issues/4  ## Datasets  The datasets A, B, C, D are public at : - https://www.dropbox.com/sh/ist4ojr03e2oeuw/AAD5NkpAFg1nOI2Ttug3h2qja?","Totally, the main experiment commands of DejaVu should output as follows: - FDG message, including the data paths, edge types, the number of nodes (failure units), the number of metrics, the metrics of each failure class. - Traning setup message: the faults used for training, validation and testing. - Model architecture: model parameters in each part, total params - Training process: the training/validation/testing loss and <EVALMETRIC>accuracy</EVALMETRIC> - Time Report. - command output one-line summary.  ### Example See https://github.com/NetManAIOps/<PROJECT>DejaVu</PROJECT>/issues/4  ## Datasets  The datasets A, B, C, D are public at : - https://www.dropbox.com/sh/ist4ojr03e2oeuw/AAD5NkpAFg1nOI2Ttug3h2qja?","Totally, the main experiment commands of DejaVu should output as follows: - FDG message, including the data paths, edge types, the number of nodes (failure units), the number of metrics, the metrics of each failure class. - Traning setup message: the faults used for training, validation and testing. - Model architecture: model parameters in each part, total params - Training process: the training/validation/testing loss and accuracy - Time Report. - command output one-line summary.  ### Example See https://github.com/NetManAIOps/DejaVu/issues/4  ## Datasets  The datasets A, B, C, D are public at : - https://www.dropbox.com/sh/ist4ojr03e2oeuw/AAD5NkpAFg1nOI2Ttug3h2qja?
","Totally, the main experiment commands of <SOFTWARE>DejaVu</SOFTWARE> should output as follows: - FDG message, including the data paths, edge types, the number of nodes (failure units), the number of metrics, the metrics of each failure class. - Traning setup message: the faults used for training, validation and testing. - Model architecture: model parameters in each part, total params - Training process: the training/validation/testing loss and accuracy - Time Report. - command output one-line summary.  ### Example See https://github.com/<PROJECT>NetManAIOps</PROJECT>/<SOFTWARE>DejaVu</SOFTWARE>/issues/4  ## Datasets  The <DATASET>datasets A, B, C, D</DATASET> are public at : - https://www.dropbox.com/sh/ist4ojr03e2oeuw/AAD5NkpAFg1nOI2Ttug3h2qja?
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e0ce60f0.txt,0.9992609016999261
16,"dl=0 - https://doi.org/10.5281/zenodo.6955909 (including the raw data of the Train-Ticket dataset) In each dataset, `graph.yml` or `graphs/*.yml` are FDGs, `metrics.csv` is metrics, and `faults.csv` is failures (including ground truths).","dl=0 - https://doi.org/10.5281/zenodo.6955909 (including the raw data of the Train-Ticket dataset) In each dataset, `graph.yml` or `graphs/*.yml` are FDGs, `metrics.csv` is metrics, and `faults.csv` is failures (including ground truths).","dl=0 - https://doi.org/10.5281/zenodo.6955909 (including the raw data of the Train-Ticket dataset) In each dataset, graph.yml or graphs/*.yml are FDGs, metrics.csv is metrics, and faults.csv is failures (including ground truths).
","dl=0 - https://doi.org/10.5281/zenodo.6955909 (including the raw data of the <DATASET>Train-Ticket</DATASET> dataset) In each dataset, graph.yml or graphs/*.yml are FDGs, metrics.csv is metrics, and faults.csv is failures (including ground truths).
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\b11fd24f.txt,0.9635974304068522
17,"`FDG.pkl` is a pickle of the FDG object, which contains all the above data.","`FDG.pkl` is a pickle of the FDG object, which contains all the above data.","FDG.pkl is a pickle of the FDG object, which contains all the above data.","<DATASET>FDG.pkl</DATASET> is a pickle of the <DATASET>FDG</DATASET> object, which contains all the above data.",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\dd989168.txt,0.9864864864864865
18,Note that the pickle files are not compatible in different Python and Pandas versions.,Note that the pickle files are not compatible in different <PROGLANG>Python</PROGLANG> and <SOFTWARE>Pandas</SOFTWARE> versions.,"Note that the pickle files are not compatible in different Python and Pandas versions.
","Note that the pickle files are not compatible in different <PROGLANG>Python</PROGLANG> and <SOFTWARE>Pandas</SOFTWARE> versions.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\2c820e9f.txt,0.9942196531791907
20,"They are only used to speed up data load.  ## Deployment and Failure Injection Scripts of Train-Ticket https://github.com/lizeyan/train-ticket  ## Citation ``` bibtex @inproceedings{li2022actionable,   title = {Actionable and Interpretable Fault Localization for Recurring Failures in Online Service Systems},   booktitle = {Proceedings of the 2022 30th {{ACM Joint Meeting}} on {{European Software Engineering Conference}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}},   author = {Li, Zeyan and Zhao, Nengwen and Li, Mingjie and Lu, Xianglin and Wang, Lixin and Chang, Dongdong and Nie, Xiaohui and Cao, Li and Zhang, Wenchi and Sui, Kaixin and Wang, Yanhua and Du, Xu and Duan, Guoqing and Pei, Dan},   year = {2022},   month = nov,   series = {{{ESEC}}/{{FSE}} 2022} } ```  ## Supplementary details ### Local interpretation !","They are only used to speed up data load.  ## Deployment and Failure Injection Scripts of Train-Ticket https://github.com/lizeyan/train-ticket  ## Citation ``` bibtex @inproceedings{li2022actionable,   title = {<PUBLICATION>Actionable and Interpretable Fault Localization for Recurring Failures in Online Service Systems</PUBLICATION>},   booktitle = {<PUBLICATION>Proceedings of the 2022 30th {{ACM Joint Meeting}} on {{European Software Engineering Conference}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}</PUBLICATION><CONFERENCE>ACM Joint Meeting</CONFERENCE>}} on {{<CONFERENCE>European Software Engineering Conference</CONFERENCE>}} and {{Symposium}} on the {{Foundations}} of {{Software Engineering}}},   author = {Li, Zeyan and Zhao, Nengwen and Li, Mingjie and Lu, Xianglin and Wang, Lixin and Chang, Dongdong and Nie, Xiaohui and Cao, Li and Zhang, Wenchi and Sui, Kaixin and Wang, Yanhua and Du, Xu and Duan, Guoqing and Pei, Dan},   year = {2022},   month = nov,   series = {{{ESEC}}/{{FSE}} 2022} } ```  ## Supplementary details ### Local interpretation !","They are only used to speed up data load.  ## Deployment and Failure Injection Scripts of Train-Ticket https://github.com/lizeyan/train-ticket  ## Citation  bibtex @inproceedings{li2022actionable,   title = {Actionable and Interpretable Fault Localization for Recurring Failures in Online Service Systems},   booktitle = {Proceedings of the 2022 30th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},   author = {Li, Zeyan and Zhao, Nengwen and Li, Mingjie and Lu, Xianglin and Wang, Lixin and Chang, Dongdong and Nie, Xiaohui and Cao, Li and Zhang, Wenchi and Sui, Kaixin and Wang, Yanhua and Du, Xu and Duan, Guoqing and Pei, Dan},   year = {2022},   month = nov,   series = {ESEC/FSE 2022} }   ## Supplementary details ### Local interpretation !
","They are only used to speed up data load.  ## Deployment and Failure Injection Scripts of <PROJECT>Train-Ticket</PROJECT> https://github.com/lizeyan/<PROJECT>train-ticket</PROJECT>  ## Citation  bibtex @inproceedings{li2022actionable,   title = {Actionable and Interpretable Fault Localization for Recurring Failures in Online Service Systems},   booktitle = {<PUBLICATION>Proceedings of the 2022 30th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering</PUBLICATION>},   author = {Li, Zeyan and Zhao, Nengwen and Li, Mingjie and Lu, Xianglin and Wang, Lixin and Chang, Dongdong and Nie, Xiaohui and Cao, Li and Zhang, Wenchi and Sui, Kaixin and Wang, Yanhua and Du, Xu and Duan, Guoqing and Pei, Dan},   year = {2022},   month = nov,   series = {<CONFERENCE>ESEC/FSE 2022</CONFERENCE>} }   ## Supplementary details ### Local interpretation !
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e47a27dc.txt,0.5164375373580394
21,"[local interpretation](figures/local_interpretation.png)   Since the DejaVu model is trained with historical failures, it is straightforward to interpret how it diagnoses a given failure by figuring out from which historical failures it learns to localize the root causes.","[local interpretation](figures/local_interpretation.png)   Since the DejaVu model is trained with historical failures, it is straightforward to interpret how it diagnoses a given failure by figuring out from which historical failures it learns to localize the root causes.","[local interpretation](figures/local_interpretation.png)   Since the DejaVu model is trained with historical failures, it is straightforward to interpret how it diagnoses a given failure by figuring out from which historical failures it learns to localize the root causes.
","[local interpretation](figures/local_interpretation.png)   Since the <SOFTWARE>DejaVu</SOFTWARE> model is trained with historical failures, it is straightforward to interpret how it diagnoses a given failure by figuring out from which historical failures it learns to localize the root causes.
",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\b9ce2182.txt,0.998165137614679
22,"Therefore, we propose a pairwise failure similarity function based on the aggregated features extracted by the DejaVu model.","Therefore, we propose a pairwise failure similarity function based on the aggregated features extracted by the DejaVu model.","Therefore, we propose a pairwise failure similarity function based on the aggregated features extracted by the DejaVu model.","Therefore, we propose a pairwise failure similarity function based on the aggregated features extracted by the <SOFTWARE>DejaVu</SOFTWARE> model.",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\5eda0f24.txt,1.0
23,"Compared with raw metrics, the extracted features are of much lower dimension and contain little useless information, which the DejaVu model ignores.","Compared with raw metrics, the extracted features are of much lower dimension and contain little useless information, which the DejaVu model ignores.","Compared with raw metrics, the extracted features are of much lower dimension and contain little useless information, which the DejaVu model ignores.","Compared with raw metrics, the extracted features are of much lower dimension and contain little useless information, which the <SOFTWARE>DejaVu</SOFTWARE> model ignores.",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\e13b0695.txt,1.0
24,"However, computing failure similarity is not trivial due to the generalizability of DejaVu.","However, computing failure similarity is not trivial due to the generalizability of <PROJECT>DejaVu</PROJECT>.","However, computing failure similarity is not trivial due to the generalizability of DejaVu.","However, computing failure similarity is not trivial due to the generalizability of <SOFTWARE>DejaVu</SOFTWARE>.",../results/deepseek-chat/prompt-0/zzz_anonymous-submission-22_dejavu_master_README.md.tsv\ca159443.txt,1.0
