sentence_idx,original_sentence,original_annotated,de_annotated_content,generated_annotated,source_file,similarity_score
1,"# EvPSNet: Evidential Panoptic Segmentation Network for Uncertainy-aware Panoptic Segmentation  EvPSNet is the first approach to tackle the task of uncertainty-aware panoptic segmentation, with an aim to provide per-pixel semantic and instance label together with per-pixel panoptic uncertainty estimation.  !","# <PROJECT>EvPSNet</PROJECT>: Evidential Panoptic Segmentation Network for <PUBLICATION>Uncertainy-aware Panoptic Segmentation</PUBLICATION>  <PROJECT>EvPSNet</PROJECT> is the first approach to tackle the task of uncertainty-aware panoptic segmentation, with an aim to provide per-pixel semantic and instance label together with per-pixel panoptic uncertainty estimation.  !","# EvPSNet: Evidential Panoptic Segmentation Network for Uncertainy-aware Panoptic Segmentation  EvPSNet is the first approach to tackle the task of uncertainty-aware panoptic segmentation, with an aim to provide per-pixel semantic and instance label together with per-pixel panoptic uncertainty estimation.  !","# <SOFTWARE>EvPSNet</SOFTWARE>: Evidential Panoptic Segmentation Network for Uncertainy-aware Panoptic Segmentation  <SOFTWARE>EvPSNet</SOFTWARE> is the first approach to tackle the task of uncertainty-aware panoptic segmentation, with an aim to provide per-pixel semantic and instance label together with per-pixel panoptic uncertainty estimation.  !",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\9351af1d.txt,1.0
2,[Illustration of EvPSNet](.,[Illustration of <PROJECT>EvPSNet</PROJECT>](.,[Illustration of EvPSNet](.,[Illustration of EvPSNet](.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\2b133aea.txt,1.0
3,/images/intro.png)  This repository contains the **PyTorch implementation** of our RAL'2023 paper [Uncertainty-aware Panoptic Segmentation](https://arxiv.org/abs/2206.14554).,/images/intro.png)  This repository contains the **<SOFTWARE>PyTorch</SOFTWARE> implementation** of our <CONFERENCE>RAL'2023</CONFERENCE> paper [<PUBLICATION>Uncertainty-aware Panoptic Segmentation</PUBLICATION>](https://arxiv.org/abs/2206.14554).,/images/intro.png)  This repository contains the **PyTorch implementation** of our RAL'2023 paper [Uncertainty-aware Panoptic Segmentation](https://arxiv.org/abs/2206.14554).,/images/intro.png)  This repository contains the **<PROGLANG>PyTorch</PROGLANG> implementation** of our <PUBLICATION>RAL'2023 paper [Uncertainty-aware Panoptic Segmentation](https://arxiv.org/abs/2206.14554)</PUBLICATION>.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\3c57216b.txt,1.0
4,"The repository builds on [EfficientPS](https://github.com/DeepSceneSeg/EfficientPS), [mmdetection](https://github.com/open-mmlab/mmdetection) and [gen-efficientnet-pytorch](https://github.com/rwightman/gen-efficientnet-pytorch) codebases.","The repository builds on [<PROJECT>EfficientPS</PROJECT>](https://github.com/DeepSceneSeg/<PROJECT>EfficientPS</PROJECT>), [<PROJECT>mmdetection</PROJECT>](https://github.com/open-mmlab/<PROJECT>mmdetection</PROJECT>) and [gen-efficientnet-<SOFTWARE>pytorch</SOFTWARE>](https://github.com/rwightman/gen-efficientnet-<SOFTWARE>pytorch</SOFTWARE>) codebases.","The repository builds on [EfficientPS](https://github.com/DeepSceneSeg/EfficientPS), [mmdetection](https://github.com/open-mmlab/mmdetection) and [gen-efficientnet-pytorch](https://github.com/rwightman/gen-efficientnet-pytorch) codebases.","The repository builds on [<SOFTWARE>EfficientPS</SOFTWARE>](https://github.com/DeepSceneSeg/<SOFTWARE>EfficientPS</SOFTWARE>), [<SOFTWARE>mmdetection</SOFTWARE>](https://github.com/open-mmlab/<SOFTWARE>mmdetection</SOFTWARE>) and [<SOFTWARE>gen-efficientnet-pytorch</SOFTWARE>](https://github.com/rwightman/<SOFTWARE>gen-efficientnet-pytorch</SOFTWARE>) codebases.",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\f62cfa31.txt,1.0
5,"If you find the code useful for your research, please consider citing our paper: ``` @article{sirohi2023uncertainty,   title={Uncertainty-aware panoptic segmentation},   author={Sirohi, Kshitij and Marvi, Sajad and B{\""u}scher, Daniel and Burgard, Wolfram},   journal={IEEE Robotics and Automation Letters},   volume={8},   number={5},   pages={2629--2636},   year={2023},   publisher={IEEE} } ```  ## System Requirements * Linux  * Python 3.7 * PyTorch 1.7 * CUDA 10.2 * GCC 7 or 8  **IMPORTANT NOTE**: These requirements are not necessarily mandatory.","If you find the code useful for your research, please consider citing our paper: ``` @article{sirohi2023uncertainty,   title={<PUBLICATION>Uncertainty-aware panoptic segmentation</PUBLICATION>},   author={Sirohi, Kshitij and Marvi, Sajad and B{\""u}scher, Daniel and Burgard, Wolfram},   journal={IEEE Robotics and Automation Letters},   volume={8},   number={5},   pages={2629--2636},   year={2023},   publisher={IEEE} } ```  ## System Requirements * Linux  * <SOFTWARE>Python 3.7</SOFTWARE> * <SOFTWARE>PyTorch 1.7</SOFTWARE> * <SOFTWARE>CUDA 10.2</SOFTWARE> * <SOFTWARE>GCC 7</SOFTWARE> or 8  **IMPORTANT NOTE**: These requirements are not necessarily mandatory.","If you find the code useful for your research, please consider citing our paper: ``` @article{sirohi2023uncertainty,   title={Uncertainty-aware panoptic segmentation},   author={Sirohi, Kshitij and Marvi, Sajad and B{\""u}scher, Daniel and Burgard, Wolfram},   journal={IEEE Robotics and Automation Letters},   volume={8},   number={5},   pages={2629--2636},   year={2023},   publisher={IEEE} } ```  ## System Requirements * Linux  * Python 3.7 * PyTorch 1.7 * CUDA 10.2 * GCC 7 or 8  **IMPORTANT NOTE**: These requirements are not necessarily mandatory.","If you find the code useful for your research, please consider citing our paper: ``` @article{sirohi2023uncertainty,   title={<PUBLICATION>Uncertainty-aware panoptic segmentation</PUBLICATION>},   author={Sirohi, Kshitij and Marvi, Sajad and B{\""u}scher, Daniel and Burgard, Wolfram},   journal={<PUBLICATION>IEEE Robotics and Automation Letters</PUBLICATION>},   volume={8},   number={5},   pages={2629--2636},   year={2023},   publisher={IEEE} } ```  ## System Requirements * Linux  * <PROGLANG>Python</PROGLANG> 3.7 * <SOFTWARE>PyTorch</SOFTWARE> 1.7 * <SOFTWARE>CUDA</SOFTWARE> 10.2 * <SOFTWARE>GCC</SOFTWARE> 7 or 8  **IMPORTANT NOTE**: These requirements are not necessarily mandatory.",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\43f48682.txt,1.0
6,"However, we have only tested the code under the above settings and cannot provide support for other setups.  ## Installation a.","However, we have only tested the code under the above settings and cannot provide support for other setups.  ## Installation a.","However, we have only tested the code under the above settings and cannot provide support for other setups.  ## Installation a.","However, we have only tested the code under the above settings and cannot provide support for other setups.  ## Installation a.",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\d05d3362.txt,1.0
7,Create a conda virtual environment from the provided environment.yml and activate it.,Create a conda virtual environment from the provided environment.yml and activate it.,Create a conda virtual environment from the provided environment.yml and activate it.,Create a conda virtual environment from the provided environment.yml and activate it.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\a0922bcf.txt,1.0
8,```shell git clone https://github.com/kshitij3112/EvPSNet.git cd EvPSNet conda env create -n EvPSnet_env --file=environment.yml conda activate EvPSnet_env ``` b.,```shell git clone https://github.com/kshitij3112/<PROJECT>EvPSNet</PROJECT>.git cd <PROJECT>EvPSNet</PROJECT> conda env create -n <PROJECT>EvPSnet</PROJECT>_env --file=environment.yml conda activate <PROJECT>EvPSnet</PROJECT>_env ``` b.,"```shell git clone https://github.com/kshitij3112/EvPSNet.git cd EvPSNet conda env create -n EvPSnet_env --file=environment.yml conda activate EvPSnet_env ``` b.
```","```shell git clone https://github.com/kshitij3112/<SOFTWARE>EvPSNet</SOFTWARE>.git cd <SOFTWARE>EvPSNet</SOFTWARE> conda env create -n EvPSnet_env --file=environment.yml conda activate EvPSnet_env ``` b.
```",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\41e3a641.txt,0.9877300613496932
9,Install all other dependencies using pip: ```bash pip install -r requirements.txt ``` c.,Install all other dependencies using pip: ```bash pip install -r requirements.txt ``` c.,Install all other dependencies using pip: ```bash pip install -r requirements.txt ``` c.,Install all other dependencies using pip: ```bash pip install -r requirements.txt ``` c.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\e915cf8d.txt,1.0
10,Install EfficientNet implementation ```bash cd efficientNet python setup.py develop ``` d.,Install <PROJECT>EfficientNet</PROJECT> implementation ```bash cd <PROJECT>efficientNet</PROJECT> <PROGLANG>python</PROGLANG> setup.py develop ``` d.,Install EfficientNet implementation ```bash cd efficientNet python setup.py develop ``` d.,Install <SOFTWARE>EfficientNet</SOFTWARE> implementation ```bash cd efficientNet python setup.py develop ``` d.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\1c9e92f4.txt,1.0
11,Install EvPSNet implementation ```bash cd .. python setup.py develop ``` ## Prepare datasets It is recommended to symlink the dataset root to `$EvPSNet/data`.,Install <PROJECT>EvPSNet</PROJECT> implementation ```bash cd .. <SOFTWARE>python</SOFTWARE> setup.py develop ``` ## Prepare datasets It is recommended to symlink the dataset root to `$EvPSNet/data`.,Install EvPSNet implementation ```bash cd .. python setup.py develop ``` ## Prepare datasets It is recommended to symlink the dataset root to `$EvPSNet/data`.,Install <SOFTWARE>EvPSNet</SOFTWARE> implementation ```bash cd .. python setup.py develop ``` ## Prepare datasets It is recommended to symlink the dataset root to `$<SOFTWARE>EvPSNet</SOFTWARE>/data`.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\306c72c2.txt,1.0
12,"If your folder structure is different, you may need to change the corresponding paths in config files.  ``` EvPSNet ├── mmdet ├── tools ├── configs └── data     └── cityscapes         ├── annotations         ├── train         ├── val         ├── stuffthingmaps         ├── cityscapes_panoptic_val.json         └── cityscapes_panoptic_val ``` The cityscapes annotations have to be converted into the aforementioned format using `tools/convert_datasets/cityscapes.py`: ```shell python tools/convert_cityscapes.py ROOT_DIRECTORY_OF_CITYSCAPES .","If your folder structure is different, you may need to change the corresponding paths in config files.  ``` <PROJECT>EvPSNet</PROJECT> ├── mmdet ├── tools ├── configs └── data     └── cityscapes         ├── annotations         ├── train         ├── val         ├── stuffthingmaps         ├── cityscapes_panoptic_val.json         └── cityscapes_panoptic_val ``` The cityscapes annotations have to be converted into the aforementioned format using `tools/convert_datasets/cityscapes.py`: ```<PROGLANG>shell</PROGLANG> <SOFTWARE>python</SOFTWARE> tools/convert_cityscapes.py ROOT_DIRECTORY_OF_CITYSCAPES .","If your folder structure is different, you may need to change the corresponding paths in config files.  ``` EvPSNet ├── mmdet ├── tools ├── configs └── data     └── cityscapes         ├── annotations         ├── train         ├── val         ├── stuffthingmaps         ├── cityscapes_panoptic_val.json         └── cityscapes_panoptic_val ``` The cityscapes annotations have to be converted into the aforementioned format using `tools/convert_datasets/cityscapes.py`: ```shell python tools/convert_cityscapes.py ROOT_DIRECTORY_OF_CITYSCAPES .","If your folder structure is different, you may need to change the corresponding paths in config files.  ``` <SOFTWARE>EvPSNet</SOFTWARE> ├── <SOFTWARE>mmdet</SOFTWARE> ├── <SOFTWARE>tools</SOFTWARE> ├── <SOFTWARE>configs</SOFTWARE> └── <DATASET>data</DATASET>     └── <DATASET>cityscapes</DATASET>         ├── <DATASET>annotations</DATASET>         ├── <DATASET>train</DATASET>         ├── <DATASET>val</DATASET>         ├── <DATASET>stuffthingmaps</DATASET>         ├── <DATASET>cityscapes_panoptic_val.json</DATASET>         └── <DATASET>cityscapes_panoptic_val</DATASET> ``` The <DATASET>cityscapes</DATASET> annotations have to be converted into the aforementioned format using `<SOFTWARE>tools/convert_datasets/cityscapes.py</SOFTWARE>`: ```shell python <SOFTWARE>tools/convert_cityscapes.py</SOFTWARE> ROOT_DIRECTORY_OF_CITYSCAPES .",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\95ba9e69.txt,1.0
13,/data/cityscapes/ cd .. git clone https://github.com/mcordts/cityscapesScripts.git cd cityscapesScripts/cityscapesscripts/preparation python createPanopticImgs.py --dataset-folder path_to_cityscapes_gtFine_folder --output-folder ../../..,/data/cityscapes/ cd .. git clone https://github.com/mcordts/cityscapesScripts.git cd cityscapesScripts/cityscapesscripts/preparation <SOFTWARE>python</SOFTWARE> createPanopticImgs.py --dataset-folder path_to_cityscapes_gtFine_folder --output-folder ../../..,/data/cityscapes/ cd .. git clone https://github.com/mcordts/cityscapesScripts.git cd cityscapesScripts/cityscapesscripts/preparation python createPanopticImgs.py --dataset-folder path_to_cityscapes_gtFine_folder --output-folder ../../..,/data/<DATASET>cityscapes</DATASET>/ cd .. git clone https://github.com/mcordts/<SOFTWARE>cityscapesScripts</SOFTWARE>.git cd <SOFTWARE>cityscapesScripts</SOFTWARE>/cityscapesscripts/preparation python <SOFTWARE>createPanopticImgs.py</SOFTWARE> --dataset-folder path_to_<DATASET>cityscapes_gtFine</DATASET>_folder --output-folder ../../..,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\1ac4f487.txt,1.0
14,/EvPSNet/data/cityscapes --set-names val ```  ## Training and Evaluation ### Training Procedure Edit the config file appropriately in configs folder.,/EvPSNet/data/cityscapes --set-names val ```  ## Training and Evaluation ### Training Procedure Edit the config file appropriately in configs folder.,/EvPSNet/data/cityscapes --set-names val ```  ## Training and Evaluation ### Training Procedure Edit the config file appropriately in configs folder.,/EvPSNet/data/<DATASET>cityscapes</DATASET> --set-names val ```  ## Training and Evaluation ### Training Procedure Edit the config file appropriately in configs folder.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\e6035cbb.txt,1.0
15,Train with a single GPU: ``` python tools/train.py configs/EvPSNet_unc_singlegpu.py --work_dir work_dirs/checkpoints --validate  ``` Train with multiple GPUS: ``` .,Train with a single GPU: ``` <SOFTWARE>python</SOFTWARE> tools/train.py configs/<PROJECT>EvPSNet</PROJECT>_unc_singlegpu.py --work_dir work_dirs/checkpoints --validate  ``` Train with multiple GPUS: ``` .,Train with a single GPU: ``` python tools/train.py configs/EvPSNet_unc_singlegpu.py --work_dir work_dirs/checkpoints --validate  ``` Train with multiple GPUS: ``` .,Train with a single GPU: ``` <PROGLANG>python</PROGLANG> tools/train.py configs/EvPSNet_unc_singlegpu.py --work_dir work_dirs/checkpoints --validate  ``` Train with multiple GPUS: ``` .,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\079b3864.txt,1.0
16,/tools/dist_train.sh configs/EvPSNet_unc_mutigpu.py ${GPU_NUM} --work_dir work_dirs/checkpoints --validate  ``` * --resume_from ${CHECKPOINT_FILE}: Resume from a previous checkpoint file. ### Evaluation Procedure Test with a single GPU: ``` python tools/test.py configs/EvPSNet_unc_singlegpu.py ${CHECKPOINT_FILE} --eval panoptic ``` Test with multiple GPUS: ``` .,/tools/dist_train.sh configs/<PROJECT>EvPSNet</PROJECT>_unc_mutigpu.py ${GPU_NUM} --work_dir work_dirs/checkpoints --validate  ``` * --resume_from ${CHECKPOINT_FILE}: Resume from a previous checkpoint file. ### Evaluation Procedure Test with a single GPU: ``` <SOFTWARE>python</SOFTWARE> tools/test.py configs/<PROJECT>EvPSNet</PROJECT>_unc_singlegpu.py ${CHECKPOINT_FILE} --eval panoptic ``` Test with multiple GPUS: ``` .,/tools/dist_train.sh configs/EvPSNet_unc_mutigpu.py ${GPU_NUM} --work_dir work_dirs/checkpoints --validate  ``` * --resume_from ${CHECKPOINT_FILE}: Resume from a previous checkpoint file. ### Evaluation Procedure Test with a single GPU: ``` python tools/test.py configs/EvPSNet_unc_singlegpu.py ${CHECKPOINT_FILE} --eval panoptic ``` Test with multiple GPUS: ``` .,/tools/dist_train.sh configs/<SOFTWARE>EvPSNet_unc_mutigpu.py</SOFTWARE> ${GPU_NUM} --work_dir work_dirs/checkpoints --validate  ``` * --resume_from ${CHECKPOINT_FILE}: Resume from a previous checkpoint file. ### Evaluation Procedure Test with a single GPU: ``` <PROGLANG>python</PROGLANG> tools/test.py configs/<SOFTWARE>EvPSNet_unc_singlegpu.py</SOFTWARE> ${CHECKPOINT_FILE} --eval <EVALMETRIC>panoptic</EVALMETRIC> ``` Test with multiple GPUS: ``` .,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\e75b1fe5.txt,1.0
17,/tools/dist_test.sh configs/EvPSNet_unc_mutigpu.py ${CHECKPOINT_FILE} ${GPU_NUM} --eval panoptic ```  ## Additional Notes:    * tool/cityscapes_inference.py: saves predictions in the official cityscapes panoptic format,/tools/dist_test.sh configs/<PROJECT>EvPSNet</PROJECT>_unc_mutigpu.py ${CHECKPOINT_FILE} ${GPU_NUM} --eval panoptic ```  ## Additional Notes:    * tool/cityscapes_inference.py: saves predictions in the official <DATASET>cityscapes</DATASET> panoptic format,/tools/dist_test.sh configs/EvPSNet_unc_mutigpu.py ${CHECKPOINT_FILE} ${GPU_NUM} --eval panoptic ```  ## Additional Notes:    * tool/cityscapes_inference.py: saves predictions in the official cityscapes panoptic format,/tools/<SOFTWARE>dist_test.sh</SOFTWARE> configs/<SOFTWARE>EvPSNet_unc_mutigpu.py</SOFTWARE> ${CHECKPOINT_FILE} ${GPU_NUM} --eval <EVALMETRIC>panoptic</EVALMETRIC> ```  ## Additional Notes:    * tool/<SOFTWARE>cityscapes_inference.py</SOFTWARE>: saves predictions in the official cityscapes panoptic format,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\22b71398.txt,1.0
18,.,.,.,.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\cdb4ee2a.txt,1.0
19,* tool/cityscapes_save_predictions.py: saves color visualizations,* tool/cityscapes_save_predictions.py: saves color visualizations,* tool/cityscapes_save_predictions.py: saves color visualizations,* tool/<SOFTWARE>cityscapes_save_predictions.py</SOFTWARE>: saves color visualizations,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\811d8039.txt,1.0
20,.,.,.,.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\cdb4ee2a.txt,1.0
21,* This is an impmentation of EvPSNet in PyTorch.,* This is an impmentation of <PROJECT>EvPSNet</PROJECT> in <SOFTWARE>PyTorch</SOFTWARE>.,* This is an impmentation of EvPSNet in PyTorch.,* This is an impmentation of <SOFTWARE>EvPSNet</SOFTWARE> in <PROGLANG>PyTorch</PROGLANG>.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\582cd233.txt,1.0
22,Please refer to the metrics reported in [Uncertainty-aware Panoptic Segmentation](https://arxiv.org/abs/2206.14554) when making comparisons.  ## Acknowledgements We have used utility functions from other open-source projects.,Please refer to the metrics reported in [<PUBLICATION>Uncertainty-aware Panoptic Segmentation</PUBLICATION>](https://arxiv.org/abs/2206.14554) when making comparisons.  ## Acknowledgements We have used utility functions from other open-source projects.,Please refer to the metrics reported in [Uncertainty-aware Panoptic Segmentation](https://arxiv.org/abs/2206.14554) when making comparisons.  ## Acknowledgements We have used utility functions from other open-source projects.,Please refer to the metrics reported in [<PUBLICATION>Uncertainty-aware Panoptic Segmentation</PUBLICATION>](https://arxiv.org/abs/2206.14554) when making comparisons.  ## Acknowledgements We have used utility functions from other open-source projects.,../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\418fbf13.txt,1.0
23,"We especially thank the authors of: - [EfficientPS](https://github.com/DeepSceneSeg/EfficientPS) - [mmdetection](https://github.com/open-mmlab/mmdetection) - [gen-efficientnet-pytorch](https://github.com/rwightman/gen-efficientnet-pytorch) - [seamseg](https://github.com/mapillary/seamseg.git)  ## Contacts * [Kshitij Sirohi](http://www2.informatik.uni-freiburg.de/~sirohik/) * [Sajad Marvi](http://www2.informatik.uni-freiburg.de/~sirohik/) * [Daniel Büscher](http://www2.informatik.uni-freiburg.de/~buescher/)  ## License For academic usage, the code is released under the [GPLv3](https://www.gnu.org/licenses/gpl-3.0.en.html) license.","We especially thank the authors of: - [<PROJECT>EfficientPS</PROJECT>](https://github.com/DeepSceneSeg/<PROJECT>EfficientPS</PROJECT>) - [<PROJECT>mmdetection</PROJECT>](https://github.com/open-mmlab/<PROJECT>mmdetection</PROJECT>) - [<PROJECT>gen-efficientnet-pytorch</PROJECT><SOFTWARE>pytorch</SOFTWARE>](https://github.com/rwightman/<PROJECT>gen-efficientnet-pytorch</PROJECT><SOFTWARE>pytorch</SOFTWARE>) - [<PROJECT>seamseg</PROJECT>](https://github.com/mapillary/<PROJECT>seamseg</PROJECT>.git)  ## Contacts * [Kshitij Sirohi](http://www2.informatik.uni-freiburg.de/~sirohik/) * [Sajad Marvi](http://www2.informatik.uni-freiburg.de/~sirohik/) * [Daniel Büscher](http://www2.informatik.uni-freiburg.de/~buescher/)  ## License For academic usage, the code is released under the [<LICENSE>GPLv3</LICENSE>](https://www.gnu.org/licenses/<LICENSE>gpl-3.0</LICENSE>.en.html) license.","We especially thank the authors of: 
- [EfficientPS](https://github.com/DeepSceneSeg/EfficientPS) 
- [mmdetection](https://github.com/open-mmlab/mmdetection) 
- [gen-efficientnet-pytorch](https://github.com/rwightman/gen-efficientnet-pytorch) 
- [seamseg](https://github.com/mapillary/seamseg.git)  

## Contacts 
* [Kshitij Sirohi](http://www2.informatik.uni-freiburg.de/~sirohik/) 
* [Sajad Marvi](http://www2.informatik.uni-freiburg.de/~sirohik/) 
* [Daniel Büscher](http://www2.informatik.uni-freiburg.de/~buescher/)  

## License 
For academic usage, the code is released under the [GPLv3](https://www.gnu.org/licenses/gpl-3.0.en.html) license.","We especially thank the authors of: 
- [<SOFTWARE>EfficientPS</SOFTWARE>](https://github.com/DeepSceneSeg/<SOFTWARE>EfficientPS</SOFTWARE>) 
- [<SOFTWARE>mmdetection</SOFTWARE>](https://github.com/open-mmlab/<SOFTWARE>mmdetection</SOFTWARE>) 
- [<SOFTWARE>gen-efficientnet-pytorch</SOFTWARE>](https://github.com/rwightman/<SOFTWARE>gen-efficientnet-pytorch</SOFTWARE>) 
- [<SOFTWARE>seamseg</SOFTWARE>](https://github.com/mapillary/<SOFTWARE>seamseg</SOFTWARE>.git)  

## Contacts 
* [Kshitij Sirohi](http://www2.informatik.uni-freiburg.de/~sirohik/) 
* [Sajad Marvi](http://www2.informatik.uni-freiburg.de/~sirohik/) 
* [Daniel Büscher](http://www2.informatik.uni-freiburg.de/~buescher/)  

## License 
For academic usage, the code is released under the [<LICENSE>GPLv3</LICENSE>](https://www.gnu.org/licenses/<LICENSE>gpl-3.0</LICENSE>.en.html) license.",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\943ccd60.txt,0.8989113530326595
24,"For any commercial purpose, please contact the authors.","For any commercial purpose, please contact the authors.","For any commercial purpose, please contact the authors.","For any commercial purpose, please contact the authors.",../results/deepseek-chat/prompt-0/zzz_kshitij3112_evpsnet_main_README.md.tsv\eb289710.txt,1.0
