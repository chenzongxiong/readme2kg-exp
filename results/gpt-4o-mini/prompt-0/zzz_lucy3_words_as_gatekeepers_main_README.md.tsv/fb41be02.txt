```markdown
- `<SOFTWARE>get_discipline_specific.py</SOFTWARE>`: get discipline specific journals and their papers, for the audience design experiment - `<SOFTWARE>jargonyness_per_paper.py</SOFTWARE>`: calculate amount of jargon per abstract  Example usage:  ``` python <SOFTWARE>jargonyness_per_paper.py</SOFTWARE> --cutoff 0.1 --exp_name general_specific  python <SOFTWARE>jargonyness_per_paper.py</SOFTWARE> --cutoff 0.1 --exp_name regression_sample ```  - `<SOFTWARE>expected_max_npmi.py</SOFTWARE>`: expected max NPMI over token positions in abstract, for audience design experiment - `<PUBLICATION>Paper Jargon Rate.ipynb</PUBLICATION>`: audience design plots - `<SOFTWARE>get_paper_time_and_place.py</SOFTWARE>`: get FOS and year of potential papers that may cite the papers in regression study - `<DATASET>General Dataset Statistics</DATASET>`: get data used for regression  - `<SOFTWARE>regression_variables.py</SOFTWARE>`: get some of the simpler regression variables - `<SOFTWARE>citations_per_journal.py</SOFTWARE>`: for calculating the average number of citations per journal, a regression variable - `<PUBLICATION>Paper Success Regression.ipynb</PUBLICATION>`: notebook that runs regressions - `<SOFTWARE>get_fos_citation_matrix.py</SOFTWARE>`: for calculating similarity among disciplines, part of interdisciplinarity regression  **Citation graph**  Future work may want to run analysis on the S2ORC citation graph.
```