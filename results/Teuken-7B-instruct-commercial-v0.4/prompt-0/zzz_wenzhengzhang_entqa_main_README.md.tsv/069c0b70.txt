```
## GERBIL evaluation

Our GERBIL evaluation follows [here](https://github.com/dalab/end2end_neural_el) specifically:

1. **Entity Classes:**
	- **CONFERENCE**: Conference events.
	*Definition*:
	A formal meeting or gathering focused on a particular field of study or topic.
	*Example*:
	`<CONFERENCE>International Semantic Web Conference 2019</CONFERENCE>`
	`<CONFERENCE>ISWC 2019</CONFERENCE>`
	`<CONFERENCE>CVPR2023</CONFERENCE> workshop`

	- **DATASET**: Structured collections of data.
	*Definition*:
	A structured collection of data, organized typically for a specific goal such as analysis, research, or reference.
	*Example*:
	`<DATASET>Maules Creek</DATASET>`
	`Download the <DATASET>USTPO MIT</DATASET> dataset from (https://github.com/wenggong-jin/nips17-rexgen/blob/master/USPTO/data.zip)`

	- **EVALMETRIC**: Evaluation metrics for models.
	*Definition*:
	A quantitative measure used to assess the performance and effectiveness of a statistical or machine learning model.
	*Example*:
	The evaluation metrics used are `<EVALMETRIC>Precision</EVALMETRIC>`, `<EVALMETRIC>Recall</EVALMETRIC>`, `<EVALMETRIC>F1-Score</EVALMETRIC>`, and `<EVALMETRIC>BLEU Score</EVALMETRIC>`.

	- **LICENSE**: Licensing terms.
	*Definition*:
	Legal terms and conditions for using a particular resource.
	*Example*:
	Available licenses to use: `<LICENSE>cc-by-3</LICENSE>` and `<LICENSE>CC BY-NC 4.0</LICENSE>`

	- **ONTOLOGY**: Semantic frameworks for knowledge representation.
	*Definition*:
	A framework representing knowledge about a domain, including concepts, entities, properties, and relationships.
	*Example*:
	The `<ONTOLOGY>Intelligence Task Ontology</ONTOLOGY>` is ...

	- **PROGLANG**: Programming languages.
	*Definition*:
	A formal language used for implementing software.
	*Example*:
	Programming languages such as `<PROGLANG>Python</PROGLANG>`, `<PROGLANG>PHP</PROGLANG>`, and `<PROGLANG>C++</PROGLANG>`

	- **PROJECT**: Scientific or business initiatives.
	*Definition*:
	A planned initiative aimed at addressing a research question or achieving a specific goal.
	*Example*:
	The `<PROJECT>Paper With Code</PROJECT>` project (<https://<PROJECT>paperswithcode</PROJECT>.com/>)

	- **PUBLICATION**: Scholarly works.
	*Definition*:
	A creative work resulting from a publishing process, such as a journal article, conference proceeding, or preprint.
	*Example*:
	`<PUBLICATION>No Length Left Behind: Enhancing Knowledge Tracing for Modeling Sequences of Excessive or Insufficient Lengths</PUBLICATION>`. In `<PUBLICATION>Proceedings of the 32nd ACM International Conference on Information and Knowledge Management</PUBLICATION>`

	- **SOFTWARE**: Software tools or programs.
	*Definition*:
	Programs or tools designed to perform specific tasks on electronic devices.
	*Example*:
	You can use the `<SOFTWARE>Protege ontology editor</SOFTWARE>` to explore and edit the resource.

	- **WORKSHOP**: Workshop events.
	*Definition*:
	An educational or hands-on session focused on a specific subject.
	*Example*:
	Refers to the [Thermal Image Super-Resolution](<WORKSHOP>pbvs-workshop</WORKSHOP>.github.io/datasets.html)

2. **Annotation Rules:**
	- Include the entire proper name but exclude standalone generic descriptors (e.g., exclude "Dataset" in "BookSum Dataset").
	*Example*: Include the full name "Conference" but exclude "BookSum Dataset."

	- Use a single-class annotation per entity, based on the context.
	*Example*: Use "Conference" for all instances of "Conference events."

	- Annotate nested entities separately.
	*Example*: Annotate "Conference" for "Conference of the European Association of Psychology Students" and "BookSum Dataset" separately.

	- Include punctuation marks only if part of the entity (e.g., titles with ":" in "PAV-SOD: Panoramic Audiovisual Saliency Detection").
	*Example*: Include the colon in "PAV-SOD: Panoramic Audiovisual Saliency Detection."

3. **Output Format:**
	- Return the original content with entities directly annotated using XML-style tags for their respective classes. Example:
	```xml
	The <SOFTWARE>Protege Ontology Editor</SOFTWARE> is widely used for creating ontologies.
	```
	Your output should be in Markdown format with all entities tagged as instructed.

---
Input Text:

Use the above reader training scripts and set `--epochs` to be 0 for evaluation. 
### Reader Results  |   val F1  |   test F1  |   val Recall  |   test Recall  |   val Precision  |   test Precision  |  |:-----------:|:----------:|:--------------:|:---------------:|:-----------------:|:------------------:| |   87.32%  |   84.4%  |   90.23%     |    87.0%       |     84.6%        |      81.96%        |  ## GERBIL evaluation Our GERBIL evaluation steps follow [here](https://github.com/dalab/end2end_neural_el), specifically:

Please tag the entities in the input text as follows:
```xml
The <SOFTWARE>Protege Ontology Editor</SOFTWARE> is widely used for creating ontologies.
```
</CONFERENCE> conference of the European Association of Psychology Students</CONFERENCE>, the <DATASET>Maules Creek</DATASET> dataset can be downloaded from (https://github.com/wenggong-jin/nips17-rexgen/blob/master/USPTO/data.zip)</DATASET>. The <EVALMETRIC>Precision</EVALMETRIC>, <EVALMETRIC>Recall</EVALMETRIC>, <EVALMETRIC>F1-Score</EVALMETRIC>, and <EVALMETRIC>BLEU Score</EVALMETRIC> are used for evaluation. The <LICENSE>cc-by-3</LICENSE> and <LICENSE>CC BY-NC 4.0</LICENSE> are the available licenses to use. The <ONTOLOGY>Intelligence Task Ontology</ONTOLOGY> is ...
```
<ONTOLOGY>Intelligence Task Ontology</ONTOLOGY> is a structured collection of knowledge about the intelligence task domain. The <PROGLANG>Python</PROGLANG>, <PROGLANG>PHP</PROGLANG>, and <PROGLANG>C++</PROGLANG> are programming languages used for implementing software. The <PROJECT>Paper With Code</PROJECT> project (<https://<PROJECT>paperswithcode</PROJECT>.com/>)</PROJECT> is a scientific initiative aimed at addressing a research question or achieving a specific goal. The <PUBLICATION>No Length Left Behind: Enhancing Knowledge Tracing for Modeling Sequences of Excessive or Insufficient Lengths</PUBLICATION>. In <PUBLICATION>Proceedings of the 32nd ACM International Conference on Information and Knowledge Management</PUBLICATION> is a scholarly work. The <SOFTWARE>Protege ontology editor</SOFTWARE> is a software tool designed to perform specific tasks on electronic devices. The <WORKSHOP>pbvs-workshop</WORKSHOP> is a workshop event focused on a specific subject. The <DATASET>Panoramic Audiovisual Saliency Detection</DATASET> is a structured collection of data, organized typically for a specific goal such as analysis, research, or reference. The <ONTOLOGY>Semantic Interoperability Ontology</ONTOLOGY> is a framework representing knowledge about the semantic interoperability domain. The <WORKSHOP>paperswithcode</WORKSHOP> is a scientific initiative aimed at addressing a research question or achieving a specific goal. The <DATASET>BookSum Dataset</DATASET> is a structured collection of data, organized typically for a specific goal such as analysis, research, or reference. The <WORKSHOP>pbvs-workshop</WORKSHOP> is a workshop event focused on a specific subject. The <ONTOLOGY>Information Extraction Ontology</ONTOLOGY> is a framework representing knowledge about the information extraction domain. The <WORKSHOP>paperswithcode</WORKSHOP> is a scientific initiative aimed at addressing a research question or achieving a specific goal. The <ONTOLOGY>Knowledge Representation