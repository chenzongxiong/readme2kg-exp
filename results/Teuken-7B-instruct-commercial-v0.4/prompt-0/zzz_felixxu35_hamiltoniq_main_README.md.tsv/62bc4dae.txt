```python
from hamiltoniq.benchmark import Toniq

toniq = Toniq()
backend = "qvm"
n_qubits = 1
n_layers = 1
n_cores = 4
score = toniq.simulator_run(backend=backend, n_qubits=n_qubits, n_layers=n_layers, n_cores=n_cores)
```
In the above code, the entities are annotated using the appropriate tags for their respective classes.

The `toniq` object is used to run a benchmark using the QVM (Quantum Virtual Machine) simulator. The `backend` parameter specifies the type of simulator to use, while `n_qubits`, `n_layers`, and `n_cores` specify the number of qubits, layers, and cores, respectively, to use for the benchmark.

The `simulator_run` method is used to run the benchmark and return the score. The score is a measure of performance for the given configuration of qubits, layers, and cores.