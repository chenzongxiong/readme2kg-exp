#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Denoising Diffusion Probabilistic Models for Generation of Realistic Fully-Annotated Microscopy Image Data Sets <br> This repository contains code to simulated 2D/3D cellular structures and synthesize corresponding microscopy image data based on Denoising Diffusion Probabilistic Models (DDPM).
1-1	0-1	#	_	_
1-2	2-11	Denoising	_	_
1-3	12-21	Diffusion	*[2]	PUBLICATION[2]
1-4	22-35	Probabilistic	*[2]	PUBLICATION[2]
1-5	36-42	Models	*[2]	PUBLICATION[2]
1-6	43-46	for	*[2]	PUBLICATION[2]
1-7	47-57	Generation	*[2]	PUBLICATION[2]
1-8	58-60	of	*[2]	PUBLICATION[2]
1-9	61-70	Realistic	*[2]	PUBLICATION[2]
1-10	71-86	Fully-Annotated	*[2]	PUBLICATION[2]
1-11	87-97	Microscopy	*[2]	PUBLICATION[2]
1-12	98-103	Image	*[2]	PUBLICATION[2]
1-13	104-108	Data	*[2]	PUBLICATION[2]
1-14	109-113	Sets	_	_
1-15	114-115	<	_	_
1-16	115-117	br	_	_
1-17	117-118	>	_	_
1-18	119-123	This	_	_
1-19	124-134	repository	_	_
1-20	135-143	contains	_	_
1-21	144-148	code	_	_
1-22	149-151	to	_	_
1-23	152-161	simulated	_	_
1-24	162-164	2D	_	_
1-25	164-165	/	_	_
1-26	165-167	3D	_	_
1-27	168-176	cellular	_	_
1-28	177-187	structures	_	_
1-29	188-191	and	_	_
1-30	192-202	synthesize	_	_
1-31	203-216	corresponding	_	_
1-32	217-227	microscopy	_	_
1-33	228-233	image	_	_
1-34	234-238	data	_	_
1-35	239-244	based	_	_
1-36	245-247	on	_	_
1-37	248-257	Denoising	_	_
1-38	258-267	Diffusion	*[0]	SOFTWARE[0]
1-39	268-281	Probabilistic	*[0]	SOFTWARE[0]
1-40	282-288	Models	*[0]	SOFTWARE[0]
1-41	289-290	(	*[0]	SOFTWARE[0]
1-42	290-294	DDPM	*[0]	SOFTWARE[0]
1-43	294-295	)	*[0]	SOFTWARE[0]
1-44	295-296	.	_	_

#Text=Sketches are generated to indicate cell shapes and structural characteristics, and they serve as a basis for the diffusion process to ultimately allow for the generation of fully-annotated microscopy image data sets without the need for human annotation effort.
2-1	297-305	Sketches	_	_
2-2	306-309	are	_	_
2-3	310-319	generated	_	_
2-4	320-322	to	_	_
2-5	323-331	indicate	_	_
2-6	332-336	cell	_	_
2-7	337-343	shapes	_	_
2-8	344-347	and	_	_
2-9	348-358	structural	_	_
2-10	359-374	characteristics	_	_
2-11	374-375	,	_	_
2-12	376-379	and	_	_
2-13	380-384	they	_	_
2-14	385-390	serve	_	_
2-15	391-393	as	_	_
2-16	394-395	a	_	_
2-17	396-401	basis	_	_
2-18	402-405	for	_	_
2-19	406-409	the	_	_
2-20	410-419	diffusion	_	_
2-21	420-427	process	_	_
2-22	428-430	to	_	_
2-23	431-441	ultimately	_	_
2-24	442-447	allow	_	_
2-25	448-451	for	_	_
2-26	452-455	the	_	_
2-27	456-466	generation	_	_
2-28	467-469	of	_	_
2-29	470-485	fully-annotated	_	_
2-30	486-496	microscopy	_	_
2-31	497-502	image	_	_
2-32	503-507	data	_	_
2-33	508-512	sets	_	_
2-34	513-520	without	_	_
2-35	521-524	the	_	_
2-36	525-529	need	_	_
2-37	530-533	for	_	_
2-38	534-539	human	_	_
2-39	540-550	annotation	_	_
2-40	551-557	effort	_	_
2-41	557-558	.	_	_

#Text=Generated data sets are available at <a href=https://osf.io/dnp65/>OSF</a> and the article is available at <a href=https://journals.plos.org/ploscompbiol/article?
3-1	559-568	Generated	_	_
3-2	569-573	data	_	_
3-3	574-578	sets	_	_
3-4	579-582	are	_	_
3-5	583-592	available	_	_
3-6	593-595	at	_	_
3-7	596-597	<	_	_
3-8	597-598	a	_	_
3-9	599-603	href	_	_
3-10	603-604	=	_	_
3-11	604-609	https	_	_
3-12	609-610	:	_	_
3-13	610-611	/	_	_
3-14	611-612	/	_	_
3-15	612-618	osf.io	_	_
3-16	618-619	/	_	_
3-17	619-624	dnp65	_	_
3-18	624-625	/	_	_
3-19	625-626	>	_	_
3-20	626-629	OSF	_	_
3-21	629-630	<	_	_
3-22	630-631	/	_	_
3-23	631-632	a	_	_
3-24	632-633	>	_	_
3-25	634-637	and	_	_
3-26	638-641	the	_	_
3-27	642-649	article	_	_
3-28	650-652	is	_	_
3-29	653-662	available	_	_
3-30	663-665	at	_	_
3-31	666-667	<	_	_
3-32	667-668	a	_	_
3-33	669-673	href	_	_
3-34	673-674	=	_	_
3-35	674-679	https	_	_
3-36	679-680	:	_	_
3-37	680-681	/	_	_
3-38	681-682	/	_	_
3-39	682-699	journals.plos.org	_	_
3-40	699-700	/	_	_
3-41	700-712	ploscompbiol	_	_
3-42	712-713	/	_	_
3-43	713-720	article	_	_
3-44	720-721	?	_	_

#Text=id=10.1371/journal.pcbi.1011890>PLOS CB</a>.
4-1	721-723	id	_	_
4-2	723-724	=	_	_
4-3	724-731	10.1371	_	_
4-4	731-732	/	_	_
4-5	732-744	journal.pcbi	_	_
4-6	744-752	.1011890	_	_
4-7	752-753	>	_	_
4-8	753-757	PLOS	_	_
4-9	758-760	CB	_	_
4-10	760-761	<	_	_
4-11	761-762	/	_	_
4-12	762-763	a	_	_
4-13	763-764	>	_	_
4-14	764-765	.	_	_

#Text=To access the trained models and get a showcase of the fully-simulated data sets, please visit to our <a href=https://transfer.lfb.rwth-aachen.de/CellDiffusion>website</a> (work in progress).
5-1	766-768	To	_	_
5-2	769-775	access	_	_
5-3	776-779	the	_	_
5-4	780-787	trained	_	_
5-5	788-794	models	_	_
5-6	795-798	and	_	_
5-7	799-802	get	_	_
5-8	803-804	a	_	_
5-9	805-813	showcase	_	_
5-10	814-816	of	_	_
5-11	817-820	the	_	_
5-12	821-836	fully-simulated	_	_
5-13	837-841	data	_	_
5-14	842-846	sets	_	_
5-15	846-847	,	_	_
5-16	848-854	please	_	_
5-17	855-860	visit	_	_
5-18	861-863	to	_	_
5-19	864-867	our	_	_
5-20	868-869	<	_	_
5-21	869-870	a	_	_
5-22	871-875	href	_	_
5-23	875-876	=	_	_
5-24	876-881	https	_	_
5-25	881-882	:	_	_
5-26	882-883	/	_	_
5-27	883-884	/	_	_
5-28	884-911	transfer.lfb.rwth-aachen.de	_	_
5-29	911-912	/	_	_
5-30	912-925	CellDiffusion	_	_
5-31	925-926	>	_	_
5-32	926-933	website	_	_
5-33	933-934	<	_	_
5-34	934-935	/	_	_
5-35	935-936	a	_	_
5-36	936-937	>	_	_
5-37	938-939	(	_	_
5-38	939-943	work	_	_
5-39	944-946	in	_	_
5-40	947-955	progress	_	_
5-41	955-956	)	_	_
5-42	956-957	.	_	_

#Text=<br><br> <span style="white-space:nowrap"><img src="figures/example\_data.png" alt="Diverse examplary synthetic data samples." align="middle" width="100%" /><br> <span style="white-space:nowrap"><img src="figures/multi-channel.png" alt="Synthetic multi-channel data sample." align="middle" width="32.7%" /><img src="figures/overlapping\_cells.png" alt="Synthetic data sample of overlapping cells." align="middle" width="32.7%" /><img src="figures/timeseries.gif" alt="Synthetic timeseries data sample." align="middle" width="32.7%" /></span></span><br> <em>Exemplary synthetic samples from our experiments</em><br><br><br>   If you are using code or data, please cite the following work: ``` @article{eschweiler2024celldiffusion,   title={Denoising diffusion probabilistic models for generation of realistic fully-annotated microscopy image datasets},   author={Eschweiler, Dennis and Yilmaz, R{\\"u}veyda and Baumann, Matisse and Laube, Ina and Roy, Rijo and Jose, Abin and Br{\\"u}ckner, Daniel and Stegmaier, Johannes},   journal={PLOS Computational Biology},   volume={20},   number={2},   pages={e1011890},   year={2024} } ``` <br><br><br> We provide Jupyter Notebooks that give an overview of how to preprocess your data, train and apply the image generation process.
6-1	957-958	<	_	_
6-2	958-960	br	_	_
6-3	960-961	>	_	_
6-4	961-962	<	_	_
6-5	962-964	br	_	_
6-6	964-965	>	_	_
6-7	966-967	<	_	_
6-8	967-971	span	_	_
6-9	972-977	style	_	_
6-10	977-978	=	_	_
6-11	978-979	"	_	_
6-12	979-990	white-space	_	_
6-13	990-991	:	_	_
6-14	991-997	nowrap	_	_
6-15	997-998	"	_	_
6-16	998-999	>	_	_
6-17	999-1000	<	_	_
6-18	1000-1003	img	_	_
6-19	1004-1007	src	_	_
6-20	1007-1008	=	_	_
6-21	1008-1009	"	_	_
6-22	1009-1016	figures	_	_
6-23	1016-1017	/	_	_
6-24	1017-1033	example\_data.png	_	_
6-25	1033-1034	"	*[1]	PUBLICATION[1]
6-26	1035-1038	alt	*[1]	PUBLICATION[1]
6-27	1038-1039	=	*[1]	PUBLICATION[1]
6-28	1039-1040	"	*[1]	PUBLICATION[1]
6-29	1040-1047	Diverse	*[1]	PUBLICATION[1]
6-30	1048-1057	examplary	_	_
6-31	1058-1067	synthetic	_	_
6-32	1068-1072	data	_	_
6-33	1073-1080	samples	_	_
6-34	1080-1081	.	_	_
6-35	1081-1082	"	_	_
6-36	1083-1088	align	_	_
6-37	1088-1089	=	_	_
6-38	1089-1090	"	_	_
6-39	1090-1096	middle	_	_
6-40	1096-1097	"	_	_
6-41	1098-1103	width	_	_
6-42	1103-1104	=	_	_
6-43	1104-1105	"	_	_
6-44	1105-1109	100%	_	_
6-45	1109-1110	"	_	_
6-46	1111-1112	/	_	_
6-47	1112-1113	>	_	_
6-48	1113-1114	<	_	_
6-49	1114-1116	br	_	_
6-50	1116-1117	>	_	_
6-51	1118-1119	<	_	_
6-52	1119-1123	span	_	_
6-53	1124-1129	style	_	_
6-54	1129-1130	=	_	_
6-55	1130-1131	"	_	_
6-56	1131-1142	white-space	_	_
6-57	1142-1143	:	_	_
6-58	1143-1149	nowrap	_	_
6-59	1149-1150	"	_	_
6-60	1150-1151	>	_	_
6-61	1151-1152	<	_	_
6-62	1152-1155	img	*[1]	SOFTWARE[1]
6-63	1156-1159	src	*[1]	SOFTWARE[1]
6-64	1159-1160	=	*[1]	SOFTWARE[1]
6-65	1160-1161	"	*[1]	SOFTWARE[1]
6-66	1161-1168	figures	*[1]	SOFTWARE[1]
6-67	1168-1169	/	*[1]	SOFTWARE[1]
6-68	1169-1186	multi-channel.png	_	_
6-69	1186-1187	"	_	_
6-70	1188-1191	alt	_	_
6-71	1191-1192	=	_	_
6-72	1192-1193	"	_	_
6-73	1193-1202	Synthetic	_	_
6-74	1203-1216	multi-channel	_	_
6-75	1217-1221	data	_	_
6-76	1222-1228	sample	_	_
6-77	1228-1229	.	_	_
6-78	1229-1230	"	_	_
6-79	1231-1236	align	_	_
6-80	1236-1237	=	_	_
6-81	1237-1238	"	_	_
6-82	1238-1244	middle	_	_
6-83	1244-1245	"	_	_
6-84	1246-1251	width	_	_
6-85	1251-1252	=	_	_
6-86	1252-1253	"	_	_
6-87	1253-1258	32.7%	_	_
6-88	1258-1259	"	_	_
6-89	1260-1261	/	_	_
6-90	1261-1262	>	_	_
6-91	1262-1263	<	_	_
6-92	1263-1266	img	_	_
6-93	1267-1270	src	_	_
6-94	1270-1271	=	_	_
6-95	1271-1272	"	_	_
6-96	1272-1279	figures	_	_
6-97	1279-1280	/	_	_
6-98	1280-1301	overlapping\_cells.png	_	_
6-99	1301-1302	"	_	_
6-100	1303-1306	alt	_	_
6-101	1306-1307	=	_	_
6-102	1307-1308	"	_	_
6-103	1308-1317	Synthetic	_	_
6-104	1318-1322	data	_	_
6-105	1323-1329	sample	_	_
6-106	1330-1332	of	_	_
6-107	1333-1344	overlapping	_	_
6-108	1345-1350	cells	_	_
6-109	1350-1351	.	_	_
6-110	1351-1352	"	_	_
6-111	1353-1358	align	_	_
6-112	1358-1359	=	_	_
6-113	1359-1360	"	_	_
6-114	1360-1366	middle	_	_
6-115	1366-1367	"	_	_
6-116	1368-1373	width	_	_
6-117	1373-1374	=	_	_
6-118	1374-1375	"	_	_
6-119	1375-1380	32.7%	_	_
6-120	1380-1381	"	_	_
6-121	1382-1383	/	_	_
6-122	1383-1384	>	_	_
6-123	1384-1385	<	_	_
6-124	1385-1388	img	_	_
6-125	1389-1392	src	_	_
6-126	1392-1393	=	_	_
6-127	1393-1394	"	_	_
6-128	1394-1401	figures	_	_
6-129	1401-1402	/	_	_
6-130	1402-1416	timeseries.gif	_	_
6-131	1416-1417	"	_	_
6-132	1418-1421	alt	_	_
6-133	1421-1422	=	_	_
6-134	1422-1423	"	_	_
6-135	1423-1432	Synthetic	_	_
6-136	1433-1443	timeseries	_	_
6-137	1444-1448	data	_	_
6-138	1449-1455	sample	_	_
6-139	1455-1456	.	_	_
6-140	1456-1457	"	_	_
6-141	1458-1463	align	_	_
6-142	1463-1464	=	_	_
6-143	1464-1465	"	_	_
6-144	1465-1471	middle	_	_
6-145	1471-1472	"	_	_
6-146	1473-1478	width	_	_
6-147	1478-1479	=	_	_
6-148	1479-1480	"	_	_
6-149	1480-1485	32.7%	_	_
6-150	1485-1486	"	_	_
6-151	1487-1488	/	_	_
6-152	1488-1489	>	_	_
6-153	1489-1490	<	_	_
6-154	1490-1491	/	_	_
6-155	1491-1495	span	_	_
6-156	1495-1496	>	_	_
6-157	1496-1497	<	_	_
6-158	1497-1498	/	_	_
6-159	1498-1502	span	_	_
6-160	1502-1503	>	_	_
6-161	1503-1504	<	_	_
6-162	1504-1506	br	_	_
6-163	1506-1507	>	_	_
6-164	1508-1509	<	_	_
6-165	1509-1511	em	_	_
6-166	1511-1512	>	_	_
6-167	1512-1521	Exemplary	_	_
6-168	1522-1531	synthetic	_	_
6-169	1532-1539	samples	_	_
6-170	1540-1544	from	_	_
6-171	1545-1548	our	_	_
6-172	1549-1560	experiments	_	_
6-173	1560-1561	<	_	_
6-174	1561-1562	/	_	_
6-175	1562-1564	em	_	_
6-176	1564-1565	>	_	_
6-177	1565-1566	<	_	_
6-178	1566-1568	br	_	_
6-179	1568-1569	>	_	_
6-180	1569-1570	<	_	_
6-181	1570-1572	br	_	_
6-182	1572-1573	>	_	_
6-183	1573-1574	<	_	_
6-184	1574-1576	br	_	_
6-185	1576-1577	>	_	_
6-186	1580-1582	If	_	_
6-187	1583-1586	you	_	_
6-188	1587-1590	are	_	_
6-189	1591-1596	using	_	_
6-190	1597-1601	code	_	_
6-191	1602-1604	or	_	_
6-192	1605-1609	data	_	_
6-193	1609-1610	,	_	_
6-194	1611-1617	please	_	_
6-195	1618-1622	cite	_	_
6-196	1623-1626	the	_	_
6-197	1627-1636	following	_	_
6-198	1637-1641	work	_	_
6-199	1641-1642	:	_	_
6-200	1643-1644	`	_	_
6-201	1644-1645	`	_	_
6-202	1645-1646	`	_	_
6-203	1647-1648	@	_	_
6-204	1648-1655	article	_	_
6-205	1655-1656	{	_	_
6-206	1656-1683	eschweiler2024celldiffusion	_	_
6-207	1683-1684	,	_	_
6-208	1687-1692	title	_	_
6-209	1692-1693	=	_	_
6-210	1693-1694	{	_	_
6-211	1694-1703	Denoising	_	_
6-212	1704-1713	diffusion	_	_
6-213	1714-1727	probabilistic	_	_
6-214	1728-1734	models	_	_
6-215	1735-1738	for	_	_
6-216	1739-1749	generation	_	_
6-217	1750-1752	of	_	_
6-218	1753-1762	realistic	_	_
6-219	1763-1778	fully-annotated	_	_
6-220	1779-1789	microscopy	_	_
6-221	1790-1795	image	_	_
6-222	1796-1804	datasets	_	_
6-223	1804-1805	}	_	_
6-224	1805-1806	,	_	_
6-225	1809-1815	author	_	_
6-226	1815-1816	=	_	_
6-227	1816-1817	{	_	_
6-228	1817-1827	Eschweiler	_	_
6-229	1827-1828	,	_	_
6-230	1829-1835	Dennis	_	_
6-231	1836-1839	and	_	_
6-232	1840-1846	Yilmaz	_	_
6-233	1846-1847	,	_	_
6-234	1848-1849	R	_	_
6-235	1849-1850	{	_	_
6-236	1850-1851	\\	_	_
6-237	1851-1852	"	_	_
6-238	1852-1853	u	_	_
6-239	1853-1854	}	_	_
6-240	1854-1859	veyda	_	_
6-241	1860-1863	and	_	_
6-242	1864-1871	Baumann	_	_
6-243	1871-1872	,	_	_
6-244	1873-1880	Matisse	_	_
6-245	1881-1884	and	_	_
6-246	1885-1890	Laube	_	_
6-247	1890-1891	,	_	_
6-248	1892-1895	Ina	_	_
6-249	1896-1899	and	_	_
6-250	1900-1903	Roy	_	_
6-251	1903-1904	,	_	_
6-252	1905-1909	Rijo	_	_
6-253	1910-1913	and	_	_
6-254	1914-1918	Jose	_	_
6-255	1918-1919	,	_	_
6-256	1920-1924	Abin	_	_
6-257	1925-1928	and	_	_
6-258	1929-1931	Br	_	_
6-259	1931-1932	{	_	_
6-260	1932-1933	\\	_	_
6-261	1933-1934	"	_	_
6-262	1934-1935	u	_	_
6-263	1935-1936	}	_	_
6-264	1936-1941	ckner	_	_
6-265	1941-1942	,	_	_
6-266	1943-1949	Daniel	_	_
6-267	1950-1953	and	_	_
6-268	1954-1963	Stegmaier	_	_
6-269	1963-1964	,	_	_
6-270	1965-1973	Johannes	_	_
6-271	1973-1974	}	_	_
6-272	1974-1975	,	_	_
6-273	1978-1985	journal	_	_
6-274	1985-1986	=	_	_
6-275	1986-1987	{	_	_
6-276	1987-1991	PLOS	_	_
6-277	1992-2005	Computational	_	_
6-278	2006-2013	Biology	_	_
6-279	2013-2014	}	_	_
6-280	2014-2015	,	_	_
6-281	2018-2024	volume	_	_
6-282	2024-2025	=	_	_
6-283	2025-2026	{	_	_
6-284	2026-2028	20	_	_
6-285	2028-2029	}	_	_
6-286	2029-2030	,	_	_
6-287	2033-2039	number	_	_
6-288	2039-2040	=	_	_
6-289	2040-2041	{	_	_
6-290	2041-2042	2	_	_
6-291	2042-2043	}	_	_
6-292	2043-2044	,	_	_
6-293	2047-2052	pages	_	_
6-294	2052-2053	=	_	_
6-295	2053-2054	{	_	_
6-296	2054-2062	e1011890	_	_
6-297	2062-2063	}	_	_
6-298	2063-2064	,	_	_
6-299	2067-2071	year	_	_
6-300	2071-2072	=	_	_
6-301	2072-2073	{	_	_
6-302	2073-2077	2024	_	_
6-303	2077-2078	}	_	_
6-304	2079-2080	}	_	_
6-305	2081-2082	`	_	_
6-306	2082-2083	`	_	_
6-307	2083-2084	`	_	_
6-308	2085-2086	<	_	_
6-309	2086-2088	br	_	_
6-310	2088-2089	>	_	_
6-311	2089-2090	<	_	_
6-312	2090-2092	br	_	_
6-313	2092-2093	>	_	_
6-314	2093-2094	<	_	_
6-315	2094-2096	br	_	_
6-316	2096-2097	>	_	_
6-317	2098-2100	We	_	_
6-318	2101-2108	provide	_	_
6-319	2109-2116	Jupyter	_	_
6-320	2117-2126	Notebooks	_	_
6-321	2127-2131	that	_	_
6-322	2132-2136	give	_	_
6-323	2137-2139	an	_	_
6-324	2140-2148	overview	_	_
6-325	2149-2151	of	_	_
6-326	2152-2155	how	_	_
6-327	2156-2158	to	_	_
6-328	2159-2169	preprocess	_	_
6-329	2170-2174	your	_	_
6-330	2175-2179	data	_	_
6-331	2179-2180	,	_	_
6-332	2181-2186	train	_	_
6-333	2187-2190	and	_	_
6-334	2191-2196	apply	_	_
6-335	2197-2200	the	_	_
6-336	2201-2206	image	_	_
6-337	2207-2217	generation	_	_
6-338	2218-2225	process	_	_
6-339	2225-2226	.	_	_

#Text=The following gives a <em>very brief</em> overview of the general functionality, for more detailed examples we refer to the notebooks.   ## Data Preparation The presented pipelines require the hdf5 file format for processing.
7-1	2227-2230	The	_	_
7-2	2231-2240	following	_	_
7-3	2241-2246	gives	_	_
7-4	2247-2248	a	_	_
7-5	2249-2250	<	_	_
7-6	2250-2252	em	_	_
7-7	2252-2253	>	_	_
7-8	2253-2257	very	_	_
7-9	2258-2263	brief	_	_
7-10	2263-2264	<	_	_
7-11	2264-2265	/	_	_
7-12	2265-2267	em	_	_
7-13	2267-2268	>	_	_
7-14	2269-2277	overview	_	_
7-15	2278-2280	of	_	_
7-16	2281-2284	the	_	_
7-17	2285-2292	general	_	_
7-18	2293-2306	functionality	_	_
7-19	2306-2307	,	_	_
7-20	2308-2311	for	_	_
7-21	2312-2316	more	_	_
7-22	2317-2325	detailed	_	_
7-23	2326-2334	examples	_	_
7-24	2335-2337	we	_	_
7-25	2338-2343	refer	_	_
7-26	2344-2346	to	_	_
7-27	2347-2350	the	_	_
7-28	2351-2360	notebooks	_	_
7-29	2360-2361	.	_	_
7-30	2364-2365	#	_	_
7-31	2365-2366	#	_	_
7-32	2367-2371	Data	_	_
7-33	2372-2383	Preparation	_	_
7-34	2384-2387	The	_	_
7-35	2388-2397	presented	_	_
7-36	2398-2407	pipelines	_	_
7-37	2408-2415	require	_	_
7-38	2416-2419	the	_	_
7-39	2420-2424	hdf5	_	_
7-40	2425-2429	file	_	_
7-41	2430-2436	format	_	_
7-42	2437-2440	for	_	_
7-43	2441-2451	processing	_	_
7-44	2451-2452	.	_	_

#Text=Therefore, each image file has to be converted to hdf5, which can be done by using `utils.h5\_converter.prepare\_images`.
8-1	2453-2462	Therefore	_	_
8-2	2462-2463	,	_	_
8-3	2464-2468	each	_	_
8-4	2469-2474	image	_	_
8-5	2475-2479	file	_	_
8-6	2480-2483	has	_	_
8-7	2484-2486	to	_	_
8-8	2487-2489	be	_	_
8-9	2490-2499	converted	_	_
8-10	2500-2502	to	_	_
8-11	2503-2507	hdf5	_	_
8-12	2507-2508	,	_	_
8-13	2509-2514	which	_	_
8-14	2515-2518	can	_	_
8-15	2519-2521	be	_	_
8-16	2522-2526	done	_	_
8-17	2527-2529	by	_	_
8-18	2530-2535	using	_	_
8-19	2536-2537	`	_	_
8-20	2537-2545	utils.h5	_	_
8-21	2545-2546	\_	_	_
8-22	2546-2570	converter.prepare\_images	_	_
8-23	2570-2571	`	_	_
8-24	2571-2572	.	_	_

#Text=Once all files have been converted, a list of those files has to be stored as a csv file to make them accessible by the processing pipelines.
9-1	2573-2577	Once	_	_
9-2	2578-2581	all	_	_
9-3	2582-2587	files	_	_
9-4	2588-2592	have	_	_
9-5	2593-2597	been	_	_
9-6	2598-2607	converted	_	_
9-7	2607-2608	,	_	_
9-8	2609-2610	a	_	_
9-9	2611-2615	list	_	_
9-10	2616-2618	of	_	_
9-11	2619-2624	those	_	_
9-12	2625-2630	files	_	_
9-13	2631-2634	has	_	_
9-14	2635-2637	to	_	_
9-15	2638-2640	be	_	_
9-16	2641-2647	stored	_	_
9-17	2648-2650	as	_	_
9-18	2651-2652	a	_	_
9-19	2653-2656	csv	_	_
9-20	2657-2661	file	_	_
9-21	2662-2664	to	_	_
9-22	2665-2669	make	_	_
9-23	2670-2674	them	_	_
9-24	2675-2685	accessible	_	_
9-25	2686-2688	by	_	_
9-26	2689-2692	the	_	_
9-27	2693-2703	processing	_	_
9-28	2704-2713	pipelines	_	_
9-29	2713-2714	.	_	_

#Text=This can be done by using `utils.csv\_generator.create\_csv`.
10-1	2715-2719	This	_	_
10-2	2720-2723	can	_	_
10-3	2724-2726	be	_	_
10-4	2727-2731	done	_	_
10-5	2732-2734	by	_	_
10-6	2735-2740	using	_	_
10-7	2741-2742	`	_	_
10-8	2742-2772	utils.csv\_generator.create\_csv	_	_
10-9	2772-2773	`	_	_
10-10	2773-2774	.	_	_

#Text=A more detailed explanation is given in `jupyter\_preparation\_script.ipynb`.   ## Diffusion Model Training and Application To use the proposed pipeline to either train or apply your models, make sure to adapt all parameters in the pipeline files `models/DiffusionModel3D` or `models/DiffusionModel2D`, and in the training script `train\_script.py` or application script `apply\_script\_diffusion.py`.
11-1	2775-2776	A	_	_
11-2	2777-2781	more	_	_
11-3	2782-2790	detailed	_	_
11-4	2791-2802	explanation	_	_
11-5	2803-2805	is	_	_
11-6	2806-2811	given	_	_
11-7	2812-2814	in	_	_
11-8	2815-2816	`	_	_
11-9	2816-2848	jupyter\_preparation\_script.ipynb	_	_
11-10	2848-2849	`	_	_
11-11	2849-2850	.	_	_
11-12	2853-2854	#	_	_
11-13	2854-2855	#	_	_
11-14	2856-2865	Diffusion	_	_
11-15	2866-2871	Model	_	_
11-16	2872-2880	Training	_	_
11-17	2881-2884	and	_	_
11-18	2885-2896	Application	_	_
11-19	2897-2899	To	_	_
11-20	2900-2903	use	_	_
11-21	2904-2907	the	_	_
11-22	2908-2916	proposed	_	_
11-23	2917-2925	pipeline	_	_
11-24	2926-2928	to	_	_
11-25	2929-2935	either	_	_
11-26	2936-2941	train	_	_
11-27	2942-2944	or	_	_
11-28	2945-2950	apply	_	_
11-29	2951-2955	your	_	_
11-30	2956-2962	models	_	_
11-31	2962-2963	,	_	_
11-32	2964-2968	make	_	_
11-33	2969-2973	sure	_	_
11-34	2974-2976	to	_	_
11-35	2977-2982	adapt	_	_
11-36	2983-2986	all	_	_
11-37	2987-2997	parameters	_	_
11-38	2998-3000	in	_	_
11-39	3001-3004	the	_	_
11-40	3005-3013	pipeline	_	_
11-41	3014-3019	files	_	_
11-42	3020-3021	`	_	_
11-43	3021-3027	models	_	_
11-44	3027-3028	/	_	_
11-45	3028-3044	DiffusionModel3D	_	_
11-46	3044-3045	`	_	_
11-47	3046-3048	or	_	_
11-48	3049-3050	`	_	_
11-49	3050-3056	models	_	_
11-50	3056-3057	/	_	_
11-51	3057-3073	DiffusionModel2D	_	_
11-52	3073-3074	`	_	_
11-53	3074-3075	,	_	_
11-54	3076-3079	and	_	_
11-55	3080-3082	in	_	_
11-56	3083-3086	the	_	_
11-57	3087-3095	training	_	_
11-58	3096-3102	script	_	_
11-59	3103-3104	`	_	_
11-60	3104-3119	train\_script.py	_	_
11-61	3119-3120	`	_	_
11-62	3121-3123	or	_	_
11-63	3124-3135	application	_	_
11-64	3136-3142	script	_	_
11-65	3143-3144	`	_	_
11-66	3144-3169	apply\_script\_diffusion.py	_	_
11-67	3169-3170	`	_	_
11-68	3170-3171	.	_	_

#Text=Alternatively, all parameters can be provided as command line arguments.
12-1	3172-3185	Alternatively	_	_
12-2	3185-3186	,	_	_
12-3	3187-3190	all	_	_
12-4	3191-3201	parameters	_	_
12-5	3202-3205	can	_	_
12-6	3206-3208	be	_	_
12-7	3209-3217	provided	_	_
12-8	3218-3220	as	_	_
12-9	3221-3228	command	_	_
12-10	3229-3233	line	_	_
12-11	3234-3243	arguments	_	_
12-12	3243-3244	.	_	_

#Text=A more detailed explanation is given in `jupyter\_train\_script.ipynb` and `jupyter\_apply\_script.ipynb`.   ## Simulation of Cellular Structures and Sketch Generation Since the proposed approach is working in a very intuitive manner, sketches can generally be created in any arbitrary way.
13-1	3245-3246	A	_	_
13-2	3247-3251	more	_	_
13-3	3252-3260	detailed	_	_
13-4	3261-3272	explanation	_	_
13-5	3273-3275	is	_	_
13-6	3276-3281	given	_	_
13-7	3282-3284	in	_	_
13-8	3285-3286	`	_	_
13-9	3286-3312	jupyter\_train\_script.ipynb	_	_
13-10	3312-3313	`	_	_
13-11	3314-3317	and	_	_
13-12	3318-3319	`	_	_
13-13	3319-3345	jupyter\_apply\_script.ipynb	_	_
13-14	3345-3346	`	_	_
13-15	3346-3347	.	_	_
13-16	3350-3351	#	_	_
13-17	3351-3352	#	_	_
13-18	3353-3363	Simulation	_	_
13-19	3364-3366	of	_	_
13-20	3367-3375	Cellular	_	_
13-21	3376-3386	Structures	_	_
13-22	3387-3390	and	_	_
13-23	3391-3397	Sketch	_	_
13-24	3398-3408	Generation	_	_
13-25	3409-3414	Since	_	_
13-26	3415-3418	the	_	_
13-27	3419-3427	proposed	_	_
13-28	3428-3436	approach	_	_
13-29	3437-3439	is	_	_
13-30	3440-3447	working	_	_
13-31	3448-3450	in	_	_
13-32	3451-3452	a	_	_
13-33	3453-3457	very	_	_
13-34	3458-3467	intuitive	_	_
13-35	3468-3474	manner	_	_
13-36	3474-3475	,	_	_
13-37	3476-3484	sketches	_	_
13-38	3485-3488	can	_	_
13-39	3489-3498	generally	_	_
13-40	3499-3501	be	_	_
13-41	3502-3509	created	_	_
13-42	3510-3512	in	_	_
13-43	3513-3516	any	_	_
13-44	3517-3526	arbitrary	_	_
13-45	3527-3530	way	_	_
13-46	3530-3531	.	_	_

#Text=We mainly focused on using and adapting simulation techniques proposed in <a href='https://journals.plos.org/plosone/article?
14-1	3532-3534	We	_	_
14-2	3535-3541	mainly	_	_
14-3	3542-3549	focused	_	_
14-4	3550-3552	on	_	_
14-5	3553-3558	using	_	_
14-6	3559-3562	and	_	_
14-7	3563-3571	adapting	_	_
14-8	3572-3582	simulation	_	_
14-9	3583-3593	techniques	_	_
14-10	3594-3602	proposed	_	_
14-11	3603-3605	in	_	_
14-12	3606-3607	<	_	_
14-13	3607-3608	a	_	_
14-14	3609-3613	href	_	_
14-15	3613-3614	=	_	_
14-16	3614-3615	'	_	_
14-17	3615-3620	https	_	_
14-18	3620-3621	:	_	_
14-19	3621-3622	/	_	_
14-20	3622-3623	/	_	_
14-21	3623-3640	journals.plos.org	_	_
14-22	3640-3641	/	_	_
14-23	3641-3648	plosone	_	_
14-24	3648-3649	/	_	_
14-25	3649-3656	article	_	_
14-26	3656-3657	?	_	_

#Text=id=10.1371/journal.pone.0260509'>3D fluorescence microscopy data synthesis for segmentation and benchmarking</a>.
15-1	3657-3659	id	_	_
15-2	3659-3660	=	_	_
15-3	3660-3667	10.1371	_	_
15-4	3667-3668	/	_	_
15-5	3668-3680	journal.pone	_	_
15-6	3680-3688	.0260509	_	_
15-7	3688-3689	'	_	_
15-8	3689-3690	>	_	_
15-9	3690-3692	3D	_	_
15-10	3693-3705	fluorescence	_	_
15-11	3706-3716	microscopy	_	_
15-12	3717-3721	data	_	_
15-13	3722-3731	synthesis	_	_
15-14	3732-3735	for	_	_
15-15	3736-3748	segmentation	_	_
15-16	3749-3752	and	_	_
15-17	3753-3765	benchmarking	_	_
15-18	3765-3766	<	_	_
15-19	3766-3767	/	_	_
15-20	3767-3768	a	_	_
15-21	3768-3769	>	_	_
15-22	3769-3770	.	_	_

#Text=Nevertheless, the functionality used in this work can be found in `utils.synthetic\_cell\_membrane\_masks` and `utils.synthetic\_cell\_nuclei\_masks` for cellular membranes and nuclei, respectively.  ## Processing Times and Hardware Requirements Due to the layout and working principle of the computation cluster we used, determining precise hardware requirements was difficult.
16-1	3771-3783	Nevertheless	_	_
16-2	3783-3784	,	_	_
16-3	3785-3788	the	_	_
16-4	3789-3802	functionality	_	_
16-5	3803-3807	used	_	_
16-6	3808-3810	in	_	_
16-7	3811-3815	this	_	_
16-8	3816-3820	work	_	_
16-9	3821-3824	can	_	_
16-10	3825-3827	be	_	_
16-11	3828-3833	found	_	_
16-12	3834-3836	in	_	_
16-13	3837-3838	`	_	_
16-14	3838-3873	utils.synthetic\_cell\_membrane\_masks	_	_
16-15	3873-3874	`	_	_
16-16	3875-3878	and	_	_
16-17	3879-3880	`	_	_
16-18	3880-3913	utils.synthetic\_cell\_nuclei\_masks	_	_
16-19	3913-3914	`	_	_
16-20	3915-3918	for	_	_
16-21	3919-3927	cellular	_	_
16-22	3928-3937	membranes	_	_
16-23	3938-3941	and	_	_
16-24	3942-3948	nuclei	_	_
16-25	3948-3949	,	_	_
16-26	3950-3962	respectively	_	_
16-27	3962-3963	.	_	_
16-28	3965-3966	#	_	_
16-29	3966-3967	#	_	_
16-30	3968-3978	Processing	_	_
16-31	3979-3984	Times	_	_
16-32	3985-3988	and	_	_
16-33	3989-3997	Hardware	_	_
16-34	3998-4010	Requirements	_	_
16-35	4011-4014	Due	_	_
16-36	4015-4017	to	_	_
16-37	4018-4021	the	_	_
16-38	4022-4028	layout	_	_
16-39	4029-4032	and	_	_
16-40	4033-4040	working	_	_
16-41	4041-4050	principle	_	_
16-42	4051-4053	of	_	_
16-43	4054-4057	the	_	_
16-44	4058-4069	computation	_	_
16-45	4070-4077	cluster	_	_
16-46	4078-4080	we	_	_
16-47	4081-4085	used	_	_
16-48	4085-4086	,	_	_
16-49	4087-4098	determining	_	_
16-50	4099-4106	precise	_	_
16-51	4107-4115	hardware	_	_
16-52	4116-4128	requirements	_	_
16-53	4129-4132	was	_	_
16-54	4133-4142	difficult	_	_
16-55	4142-4143	.	_	_

#Text=The used hardware offered varying hardware capabilities, including GPUs ranging from GTX 1080 to RTX 6000.
17-1	4145-4148	The	_	_
17-2	4149-4153	used	_	_
17-3	4154-4162	hardware	_	_
17-4	4163-4170	offered	_	_
17-5	4171-4178	varying	_	_
17-6	4179-4187	hardware	_	_
17-7	4188-4200	capabilities	_	_
17-8	4200-4201	,	_	_
17-9	4202-4211	including	_	_
17-10	4212-4216	GPUs	_	_
17-11	4217-4224	ranging	_	_
17-12	4225-4229	from	_	_
17-13	4230-4233	GTX	_	_
17-14	4234-4238	1080	_	_
17-15	4239-4241	to	_	_
17-16	4242-4245	RTX	_	_
17-17	4246-4250	6000	_	_
17-18	4250-4251	.	_	_

#Text=Nevertheless, the following should give some brief indication of the specifications needed to run the presented pipelines.
18-1	4252-4264	Nevertheless	_	_
18-2	4264-4265	,	_	_
18-3	4266-4269	the	_	_
18-4	4270-4279	following	_	_
18-5	4280-4286	should	_	_
18-6	4287-4291	give	_	_
18-7	4292-4296	some	_	_
18-8	4297-4302	brief	_	_
18-9	4303-4313	indication	_	_
18-10	4314-4316	of	_	_
18-11	4317-4320	the	_	_
18-12	4321-4335	specifications	_	_
18-13	4336-4342	needed	_	_
18-14	4343-4345	to	_	_
18-15	4346-4349	run	_	_
18-16	4350-4353	the	_	_
18-17	4354-4363	presented	_	_
18-18	4364-4373	pipelines	_	_
18-19	4373-4374	.	_	_

#Text=Training times varied between one day for 2D models to roughly a week for 3D models, requiring 2-8 GB of RAM and 4-8 GB of GPU memory.
19-1	4377-4385	Training	_	_
19-2	4386-4391	times	_	_
19-3	4392-4398	varied	_	_
19-4	4399-4406	between	_	_
19-5	4407-4410	one	_	_
19-6	4411-4414	day	_	_
19-7	4415-4418	for	_	_
19-8	4419-4421	2D	_	_
19-9	4422-4428	models	_	_
19-10	4429-4431	to	_	_
19-11	4432-4439	roughly	_	_
19-12	4440-4441	a	_	_
19-13	4442-4446	week	_	_
19-14	4447-4450	for	_	_
19-15	4451-4453	3D	_	_
19-16	4454-4460	models	_	_
19-17	4460-4461	,	_	_
19-18	4462-4471	requiring	_	_
19-19	4472-4473	2	_	_
19-20	4473-4474	-	_	_
19-21	4474-4475	8	_	_
19-22	4476-4478	GB	_	_
19-23	4479-4481	of	_	_
19-24	4482-4485	RAM	_	_
19-25	4486-4489	and	_	_
19-26	4490-4491	4	_	_
19-27	4491-4492	-	_	_
19-28	4492-4493	8	_	_
19-29	4494-4496	GB	_	_
19-30	4497-4499	of	_	_
19-31	4500-4503	GPU	_	_
19-32	4504-4510	memory	_	_
19-33	4510-4511	.	_	_

#Text=Prediction times were highly varying, as they are influences by the choice of the backward starting point $t\_\\mathrm{start}$ and the total image size.
20-1	4512-4522	Prediction	_	_
20-2	4523-4528	times	_	_
20-3	4529-4533	were	_	_
20-4	4534-4540	highly	_	_
20-5	4541-4548	varying	_	_
20-6	4548-4549	,	_	_
20-7	4550-4552	as	_	_
20-8	4553-4557	they	_	_
20-9	4558-4561	are	_	_
20-10	4562-4572	influences	_	_
20-11	4573-4575	by	_	_
20-12	4576-4579	the	_	_
20-13	4580-4586	choice	_	_
20-14	4587-4589	of	_	_
20-15	4590-4593	the	_	_
20-16	4594-4602	backward	_	_
20-17	4603-4611	starting	_	_
20-18	4612-4617	point	_	_
20-19	4618-4619	$	_	_
20-20	4619-4620	t	_	_
20-21	4620-4621	\_	_	_
20-22	4621-4622	\\	_	_
20-23	4622-4628	mathrm	_	_
20-24	4628-4629	{	_	_
20-25	4629-4634	start	_	_
20-26	4634-4635	}	_	_
20-27	4635-4636	$	_	_
20-28	4637-4640	and	_	_
20-29	4641-4644	the	_	_
20-30	4645-4650	total	_	_
20-31	4651-4656	image	_	_
20-32	4657-4661	size	_	_
20-33	4661-4662	.	_	_

#Text=For the proposed starting point $t\_\\mathrm{start}=400$, image generation times ranged between less than a minute for 2D image data of size 1024x1024 pixel to roughly one hour for image data of size 512x512x180 voxel or 1700x2450x13 voxel.
21-1	4663-4666	For	_	_
21-2	4667-4670	the	_	_
21-3	4671-4679	proposed	_	_
21-4	4680-4688	starting	_	_
21-5	4689-4694	point	_	_
21-6	4695-4696	$	_	_
21-7	4696-4697	t	_	_
21-8	4697-4698	\_	_	_
21-9	4698-4699	\\	_	_
21-10	4699-4705	mathrm	_	_
21-11	4705-4706	{	_	_
21-12	4706-4711	start	_	_
21-13	4711-4712	}	_	_
21-14	4712-4713	=	_	_
21-15	4713-4716	400	_	_
21-16	4716-4717	$	_	_
21-17	4717-4718	,	_	_
21-18	4719-4724	image	_	_
21-19	4725-4735	generation	_	_
21-20	4736-4741	times	_	_
21-21	4742-4748	ranged	_	_
21-22	4749-4756	between	_	_
21-23	4757-4761	less	_	_
21-24	4762-4766	than	_	_
21-25	4767-4768	a	_	_
21-26	4769-4775	minute	_	_
21-27	4776-4779	for	_	_
21-28	4780-4782	2D	_	_
21-29	4783-4788	image	_	_
21-30	4789-4793	data	_	_
21-31	4794-4796	of	_	_
21-32	4797-4801	size	_	_
21-33	4802-4811	1024x1024	_	_
21-34	4812-4817	pixel	_	_
21-35	4818-4820	to	_	_
21-36	4821-4828	roughly	_	_
21-37	4829-4832	one	_	_
21-38	4833-4837	hour	_	_
21-39	4838-4841	for	_	_
21-40	4842-4847	image	_	_
21-41	4848-4852	data	_	_
21-42	4853-4855	of	_	_
21-43	4856-4860	size	_	_
21-44	4861-4872	512x512x180	_	_
21-45	4873-4878	voxel	_	_
21-46	4879-4881	or	_	_
21-47	4882-4894	1700x2450x13	_	_
21-48	4895-4900	voxel	_	_
21-49	4900-4901	.	_	_

#Text=Memory requirements were similarly varying, ranging between 2-80 GB of RAM and 4-8 GB of GPU memory.
22-1	4902-4908	Memory	_	_
22-2	4909-4921	requirements	_	_
22-3	4922-4926	were	_	_
22-4	4927-4936	similarly	_	_
22-5	4937-4944	varying	_	_
22-6	4944-4945	,	_	_
22-7	4946-4953	ranging	_	_
22-8	4954-4961	between	_	_
22-9	4962-4963	2	_	_
22-10	4963-4964	-	_	_
22-11	4964-4966	80	_	_
22-12	4967-4969	GB	_	_
22-13	4970-4972	of	_	_
22-14	4973-4976	RAM	_	_
22-15	4977-4980	and	_	_
22-16	4981-4982	4	_	_
22-17	4982-4983	-	_	_
22-18	4983-4984	8	_	_
22-19	4985-4987	GB	_	_
22-20	4988-4990	of	_	_
22-21	4991-4994	GPU	_	_
22-22	4995-5001	memory	_	_
22-23	5001-5002	.	_	_