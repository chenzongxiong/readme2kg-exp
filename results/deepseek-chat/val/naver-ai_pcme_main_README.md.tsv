#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Probabilistic Cross-Modal Embedding (PCME) CVPR 2021  Official Pytorch implementation of PCME \| \[Paper\](https://arxiv.org/abs/2101.05068)  \[Sanghyuk Chun\](https://sanghyukchun.github.io/home/)<sup>1</sup> \[Seong Joon Oh\](https://seongjoonoh.com/)<sup>1</sup> Rafael Sampaio de Rezende<sup>2</sup> \[Yannis Kalantidis\](https://www.skamalas.com/)<sup>2</sup> Diane Larlus<sup>2</sup>  <sup>1</sup><sub>\[NAVER AI LAB\](https://naver-career.gitbook.io/en/teams/clova-cic)</sub><br> <sup>2</sup><sub>\[NAVER LABS Europe\](https://europe.naverlabs.com/)</sub>   <a href="https://www.youtube.com/watch?
1-1	0-1	#	_	_
1-2	2-15	Probabilistic	_	_
1-3	16-27	Cross-Modal	_	_
1-4	28-37	Embedding	_	_
1-5	38-39	(	_	_
1-6	39-43	PCME	_	_
1-7	43-44	)	_	_
1-8	45-49	CVPR	_	_
1-9	50-54	2021	_	_
1-10	56-64	Official	_	_
1-11	65-72	Pytorch	*[29]	CONFERENCE[29]
1-12	73-87	implementation	_	_
1-13	88-90	of	*[3]	PROGLANG[3]
1-14	91-95	PCME	_	_
1-15	96-97	\|	_	_
1-16	98-99	\[	_	_
1-17	99-104	Paper	_	_
1-18	104-105	\]	_	_
1-19	105-106	(	_	_
1-20	106-111	https	_	_
1-21	111-112	:	_	_
1-22	112-113	/	_	_
1-23	113-114	/	_	_
1-24	114-123	arxiv.org	_	_
1-25	123-124	/	_	_
1-26	124-127	abs	_	_
1-27	127-128	/	_	_
1-28	128-138	2101.05068	_	_
1-29	138-139	)	_	_
1-30	141-142	\[	_	_
1-31	142-150	Sanghyuk	_	_
1-32	151-155	Chun	_	_
1-33	155-156	\]	_	_
1-34	156-157	(	_	_
1-35	157-162	https	_	_
1-36	162-163	:	_	_
1-37	163-164	/	_	_
1-38	164-165	/	_	_
1-39	165-187	sanghyukchun.github.io	_	_
1-40	187-188	/	_	_
1-41	188-192	home	_	_
1-42	192-193	/	_	_
1-43	193-194	)	_	_
1-44	194-195	<	_	_
1-45	195-198	sup	_	_
1-46	198-199	>	_	_
1-47	199-200	1	_	_
1-48	200-201	<	_	_
1-49	201-202	/	_	_
1-50	202-205	sup	_	_
1-51	205-206	>	_	_
1-52	207-208	\[	_	_
1-53	208-213	Seong	_	_
1-54	214-218	Joon	_	_
1-55	219-221	Oh	_	_
1-56	221-222	\]	_	_
1-57	222-223	(	_	_
1-58	223-228	https	_	_
1-59	228-229	:	_	_
1-60	229-230	/	_	_
1-61	230-231	/	_	_
1-62	231-246	seongjoonoh.com	_	_
1-63	246-247	/	_	_
1-64	247-248	)	_	_
1-65	248-249	<	_	_
1-66	249-252	sup	_	_
1-67	252-253	>	_	_
1-68	253-254	1	_	_
1-69	254-255	<	_	_
1-70	255-256	/	_	_
1-71	256-259	sup	_	_
1-72	259-260	>	_	_
1-73	261-267	Rafael	_	_
1-74	268-275	Sampaio	_	_
1-75	276-278	de	_	_
1-76	279-286	Rezende	_	_
1-77	286-287	<	_	_
1-78	287-290	sup	_	_
1-79	290-291	>	_	_
1-80	291-292	2	_	_
1-81	292-293	<	_	_
1-82	293-294	/	_	_
1-83	294-297	sup	_	_
1-84	297-298	>	_	_
1-85	299-300	\[	_	_
1-86	300-306	Yannis	_	_
1-87	307-317	Kalantidis	_	_
1-88	317-318	\]	_	_
1-89	318-319	(	_	_
1-90	319-324	https	_	_
1-91	324-325	:	_	_
1-92	325-326	/	_	_
1-93	326-327	/	_	_
1-94	327-343	www.skamalas.com	_	_
1-95	343-344	/	_	_
1-96	344-345	)	_	_
1-97	345-346	<	_	_
1-98	346-349	sup	_	_
1-99	349-350	>	_	_
1-100	350-351	2	_	_
1-101	351-352	<	_	_
1-102	352-353	/	_	_
1-103	353-356	sup	_	_
1-104	356-357	>	_	_
1-105	358-363	Diane	_	_
1-106	364-370	Larlus	_	_
1-107	370-371	<	_	_
1-108	371-374	sup	_	_
1-109	374-375	>	_	_
1-110	375-376	2	_	_
1-111	376-377	<	_	_
1-112	377-378	/	_	_
1-113	378-381	sup	_	_
1-114	381-382	>	_	_
1-115	384-385	<	_	_
1-116	385-388	sup	_	_
1-117	388-389	>	_	_
1-118	389-390	1	_	_
1-119	390-391	<	_	_
1-120	391-392	/	_	_
1-121	392-395	sup	_	_
1-122	395-396	>	_	_
1-123	396-397	<	_	_
1-124	397-400	sub	_	_
1-125	400-401	>	_	_
1-126	401-402	\[	_	_
1-127	402-407	NAVER	_	_
1-128	408-410	AI	_	_
1-129	411-414	LAB	_	_
1-130	414-415	\]	_	_
1-131	415-416	(	_	_
1-132	416-421	https	_	_
1-133	421-422	:	_	_
1-134	422-423	/	_	_
1-135	423-424	/	_	_
1-136	424-447	naver-career.gitbook.io	_	_
1-137	447-448	/	_	_
1-138	448-450	en	_	_
1-139	450-451	/	_	_
1-140	451-456	teams	_	_
1-141	456-457	/	_	_
1-142	457-466	clova-cic	_	_
1-143	466-467	)	_	_
1-144	467-468	<	_	_
1-145	468-469	/	_	_
1-146	469-472	sub	_	_
1-147	472-473	>	_	_
1-148	473-474	<	_	_
1-149	474-476	br	_	_
1-150	476-477	>	_	_
1-151	478-479	<	_	_
1-152	479-482	sup	_	_
1-153	482-483	>	_	_
1-154	483-484	2	_	_
1-155	484-485	<	_	_
1-156	485-486	/	_	_
1-157	486-489	sup	_	_
1-158	489-490	>	_	_
1-159	490-491	<	_	_
1-160	491-494	sub	_	_
1-161	494-495	>	_	_
1-162	495-496	\[	_	_
1-163	496-501	NAVER	_	_
1-164	502-506	LABS	_	_
1-165	507-513	Europe	_	_
1-166	513-514	\]	_	_
1-167	514-515	(	_	_
1-168	515-520	https	_	_
1-169	520-521	:	_	_
1-170	521-522	/	_	_
1-171	522-523	/	_	_
1-172	523-543	europe.naverlabs.com	_	_
1-173	543-544	/	_	_
1-174	544-545	)	_	_
1-175	545-546	<	_	_
1-176	546-547	/	_	_
1-177	547-550	sub	_	_
1-178	550-551	>	_	_
1-179	554-555	<	_	_
1-180	555-556	a	_	_
1-181	557-561	href	_	_
1-182	561-562	=	_	_
1-183	562-563	"	_	_
1-184	563-568	https	_	_
1-185	568-569	:	_	_
1-186	569-570	/	_	_
1-187	570-571	/	_	_
1-188	571-586	www.youtube.com	_	_
1-189	586-587	/	_	_
1-190	587-592	watch	_	_
1-191	592-593	?	_	_

#Text=v=J\_DaqSLEcVk"><img src="http://img.youtube.com/vi/J\_DaqSLEcVk/0.jpg"  alt="VIDEO" width="700" border="10" /></a>   ## Updates  - Jan 2024: \[PCME++\](https://openreview.net/forum?
2-1	593-594	v	_	_
2-2	594-595	=	_	_
2-3	595-606	J\_DaqSLEcVk	_	_
2-4	606-607	"	_	_
2-5	607-608	>	_	_
2-6	608-609	<	_	_
2-7	609-612	img	_	_
2-8	613-616	src	_	_
2-9	616-617	=	_	_
2-10	617-618	"	_	_
2-11	618-622	http	_	_
2-12	622-623	:	_	_
2-13	623-624	/	_	_
2-14	624-625	/	_	_
2-15	625-640	img.youtube.com	_	_
2-16	640-641	/	_	_
2-17	641-643	vi	_	_
2-18	643-644	/	_	_
2-19	644-655	J\_DaqSLEcVk	_	_
2-20	655-656	/	_	_
2-21	656-657	0	_	_
2-22	657-658	.	_	_
2-23	658-661	jpg	_	_
2-24	661-662	"	_	_
2-25	664-667	alt	_	_
2-26	667-668	=	_	_
2-27	668-669	"	_	_
2-28	669-674	VIDEO	_	_
2-29	674-675	"	_	_
2-30	676-681	width	_	_
2-31	681-682	=	_	_
2-32	682-683	"	_	_
2-33	683-686	700	_	_
2-34	686-687	"	_	_
2-35	688-694	border	_	_
2-36	694-695	=	_	_
2-37	695-696	"	_	_
2-38	696-698	10	_	_
2-39	698-699	"	_	_
2-40	700-701	/	_	_
2-41	701-702	>	_	_
2-42	702-703	<	_	_
2-43	703-704	/	_	_
2-44	704-705	a	_	_
2-45	705-706	>	_	_
2-46	709-710	#	_	_
2-47	710-711	#	_	_
2-48	712-719	Updates	_	_
2-49	721-722	-	_	_
2-50	723-726	Jan	_	_
2-51	727-731	2024	_	_
2-52	731-732	:	_	_
2-53	733-734	\[	_	_
2-54	734-738	PCME	_	_
2-55	738-739	+	_	_
2-56	739-740	+	_	_
2-57	740-741	\]	_	_
2-58	741-742	(	_	_
2-59	742-747	https	_	_
2-60	747-748	:	_	_
2-61	748-749	/	_	_
2-62	749-750	/	_	_
2-63	750-764	openreview.net	_	_
2-64	764-765	/	_	_
2-65	765-770	forum	_	_
2-66	770-771	?	_	_

#Text=id=ft1mr3WlGM), the improved version of PCME, is accepted at ICLR 2024.
3-1	771-773	id	_	_
3-2	773-774	=	_	_
3-3	774-784	ft1mr3WlGM	_	_
3-4	784-785	)	_	_
3-5	785-786	,	_	_
3-6	787-790	the	_	_
3-7	791-799	improved	_	_
3-8	800-807	version	_	_
3-9	808-810	of	_	_
3-10	811-815	PCME	_	_
3-11	815-816	,	_	_
3-12	817-819	is	_	_
3-13	820-828	accepted	_	_
3-14	829-831	at	_	_
3-15	832-836	ICLR	_	_
3-16	837-841	2024	_	_
3-17	841-842	.	_	_

#Text=Please use \[naver-ai/pcmepp\](https://github.com/naver-ai/pcmepp) for the improved version!
4-1	843-849	Please	_	_
4-2	850-853	use	_	_
4-3	854-855	\[	_	_
4-4	855-863	naver-ai	_	_
4-5	863-864	/	_	_
4-6	864-870	pcmepp	_	_
4-7	870-871	\]	_	_
4-8	871-872	(	_	_
4-9	872-877	https	_	_
4-10	877-878	:	_	_
4-11	878-879	/	_	_
4-12	879-880	/	_	_
4-13	880-890	github.com	_	_
4-14	890-891	/	_	_
4-15	891-899	naver-ai	_	_
4-16	899-900	/	_	_
4-17	900-906	pcmepp	_	_
4-18	906-907	)	_	_
4-19	908-911	for	_	_
4-20	912-915	the	_	_
4-21	916-924	improved	_	_
4-22	925-932	version	_	_
4-23	932-933	!	_	_

#Text=- 16 Jul, 2022: Add PCME CutMix-pretrained weight (used for \[ECCV Caption\](https://github.com/naver-ai/eccv-caption) paper) - 23 Jun, 2021: Initial upload.  ## Installation  Install dependencies using the following command.  ``` pip install cython && pip install -r requirements.txt python -c 'import nltk\; nltk.download("punkt", download\_dir="/opt/conda/nltk\_data")' git clone https://github.com/NVIDIA/apex && cd apex && pip install -v --no-cache-dir --global-option="--cpp\_ext" --global-option="--cuda\_ext" ./ ```  ### Dockerfile  You can use my docker image as well ``` docker pull sanghyukchun/pcme:torch1.2-apex-dali ```  Please Add `--model\_\_cache\_dir /vector\_cache` when you run the code  ## Configuration  All experiments are based on configuration files (see \[config/coco\](config/coco) and \[config/cub\](config/cub)).
5-1	934-935	-	_	_
5-2	936-938	16	_	_
5-3	939-942	Jul	_	_
5-4	942-943	,	_	_
5-5	944-948	2022	_	_
5-6	948-949	:	_	_
5-7	950-953	Add	_	_
5-8	954-958	PCME	_	_
5-9	959-976	CutMix-pretrained	_	_
5-10	977-983	weight	_	_
5-11	984-985	(	_	_
5-12	985-989	used	_	_
5-13	990-993	for	_	_
5-14	994-995	\[	_	_
5-15	995-999	ECCV	_	_
5-16	1000-1007	Caption	_	_
5-17	1007-1008	\]	_	_
5-18	1008-1009	(	_	_
5-19	1009-1014	https	_	_
5-20	1014-1015	:	_	_
5-21	1015-1016	/	_	_
5-22	1016-1017	/	_	_
5-23	1017-1027	github.com	_	_
5-24	1027-1028	/	_	_
5-25	1028-1036	naver-ai	_	_
5-26	1036-1037	/	_	_
5-27	1037-1049	eccv-caption	_	_
5-28	1049-1050	)	_	_
5-29	1051-1056	paper	_	_
5-30	1056-1057	)	_	_
5-31	1058-1059	-	_	_
5-32	1060-1062	23	_	_
5-33	1063-1066	Jun	_	_
5-34	1066-1067	,	_	_
5-35	1068-1072	2021	_	_
5-36	1072-1073	:	_	_
5-37	1074-1081	Initial	_	_
5-38	1082-1088	upload	_	_
5-39	1088-1089	.	_	_
5-40	1091-1092	#	_	_
5-41	1092-1093	#	_	_
5-42	1094-1106	Installation	_	_
5-43	1108-1115	Install	_	_
5-44	1116-1128	dependencies	_	_
5-45	1129-1134	using	_	_
5-46	1135-1138	the	_	_
5-47	1139-1148	following	_	_
5-48	1149-1156	command	_	_
5-49	1156-1157	.	_	_
5-50	1159-1160	`	_	_
5-51	1160-1161	`	_	_
5-52	1161-1162	`	_	_
5-53	1163-1166	pip	_	_
5-54	1167-1174	install	_	_
5-55	1175-1181	cython	_	_
5-56	1182-1183	&	_	_
5-57	1183-1184	&	_	_
5-58	1185-1188	pip	_	_
5-59	1189-1196	install	_	_
5-60	1197-1198	-	_	_
5-61	1198-1199	r	_	_
5-62	1200-1216	requirements.txt	_	_
5-63	1217-1223	python	_	_
5-64	1224-1225	-	_	_
5-65	1225-1226	c	_	_
5-66	1227-1228	'	_	_
5-67	1228-1234	import	_	_
5-68	1235-1239	nltk	_	_
5-69	1239-1240	\;	_	_
5-70	1241-1254	nltk.download	_	_
5-71	1254-1255	(	_	_
5-72	1255-1256	"	_	_
5-73	1256-1261	punkt	_	_
5-74	1261-1262	"	_	_
5-75	1262-1263	,	_	_
5-76	1264-1276	download\_dir	_	_
5-77	1276-1277	=	_	_
5-78	1277-1278	"	_	_
5-79	1278-1279	/	_	_
5-80	1279-1282	opt	_	_
5-81	1282-1283	/	_	_
5-82	1283-1288	conda	_	_
5-83	1288-1289	/	_	_
5-84	1289-1298	nltk\_data	_	_
5-85	1298-1299	"	_	_
5-86	1299-1300	)	_	_
5-87	1300-1301	'	_	_
5-88	1302-1305	git	_	_
5-89	1306-1311	clone	_	_
5-90	1312-1317	https	_	_
5-91	1317-1318	:	_	_
5-92	1318-1319	/	_	_
5-93	1319-1320	/	_	_
5-94	1320-1330	github.com	_	_
5-95	1330-1331	/	_	_
5-96	1331-1337	NVIDIA	_	_
5-97	1337-1338	/	_	_
5-98	1338-1342	apex	_	_
5-99	1343-1344	&	_	_
5-100	1344-1345	&	_	_
5-101	1346-1348	cd	_	_
5-102	1349-1353	apex	_	_
5-103	1354-1355	&	_	_
5-104	1355-1356	&	_	_
5-105	1357-1360	pip	_	_
5-106	1361-1368	install	_	_
5-107	1369-1370	-	_	_
5-108	1370-1371	v	_	_
5-109	1372-1373	-	_	_
5-110	1373-1374	-	_	_
5-111	1374-1386	no-cache-dir	_	_
5-112	1387-1388	-	_	_
5-113	1388-1389	-	_	_
5-114	1389-1402	global-option	_	_
5-115	1402-1403	=	_	_
5-116	1403-1404	"	_	_
5-117	1404-1405	-	_	_
5-118	1405-1406	-	_	_
5-119	1406-1413	cpp\_ext	_	_
5-120	1413-1414	"	_	_
5-121	1415-1416	-	_	_
5-122	1416-1417	-	_	_
5-123	1417-1430	global-option	_	_
5-124	1430-1431	=	_	_
5-125	1431-1432	"	_	_
5-126	1432-1433	-	_	_
5-127	1433-1434	-	_	_
5-128	1434-1442	cuda\_ext	_	_
5-129	1442-1443	"	_	_
5-130	1444-1445	.	_	_
5-131	1445-1446	/	_	_
5-132	1447-1448	`	_	_
5-133	1448-1449	`	_	_
5-134	1449-1450	`	_	_
5-135	1452-1453	#	_	_
5-136	1453-1454	#	_	_
5-137	1454-1455	#	_	_
5-138	1456-1466	Dockerfile	_	_
5-139	1468-1471	You	_	_
5-140	1472-1475	can	_	_
5-141	1476-1479	use	_	_
5-142	1480-1482	my	_	_
5-143	1483-1489	docker	_	_
5-144	1490-1495	image	_	_
5-145	1496-1498	as	_	_
5-146	1499-1503	well	_	_
5-147	1504-1505	`	_	_
5-148	1505-1506	`	_	_
5-149	1506-1507	`	_	_
5-150	1508-1514	docker	_	_
5-151	1515-1519	pull	_	_
5-152	1520-1532	sanghyukchun	_	_
5-153	1532-1533	/	_	_
5-154	1533-1537	pcme	_	_
5-155	1537-1538	:	_	_
5-156	1538-1546	torch1.2	_	_
5-157	1546-1547	-	_	_
5-158	1547-1556	apex-dali	_	_
5-159	1557-1558	`	_	_
5-160	1558-1559	`	_	_
5-161	1559-1560	`	_	_
5-162	1562-1568	Please	_	_
5-163	1569-1572	Add	_	_
5-164	1573-1574	`	_	_
5-165	1574-1575	-	_	_
5-166	1575-1576	-	_	_
5-167	1576-1581	model	_	_
5-168	1581-1582	\_	_	_
5-169	1582-1583	\_	_	_
5-170	1583-1592	cache\_dir	_	_
5-171	1593-1594	/	_	_
5-172	1594-1606	vector\_cache	_	_
5-173	1606-1607	`	_	_
5-174	1608-1612	when	_	_
5-175	1613-1616	you	_	_
5-176	1617-1620	run	_	_
5-177	1621-1624	the	_	_
5-178	1625-1629	code	_	_
5-179	1631-1632	#	_	_
5-180	1632-1633	#	_	_
5-181	1634-1647	Configuration	_	_
5-182	1649-1652	All	_	_
5-183	1653-1664	experiments	_	_
5-184	1665-1668	are	_	_
5-185	1669-1674	based	_	_
5-186	1675-1677	on	_	_
5-187	1678-1691	configuration	_	_
5-188	1692-1697	files	_	_
5-189	1698-1699	(	_	_
5-190	1699-1702	see	_	_
5-191	1703-1704	\[	_	_
5-192	1704-1710	config	_	_
5-193	1710-1711	/	_	_
5-194	1711-1715	coco	_	_
5-195	1715-1716	\]	_	_
5-196	1716-1717	(	_	_
5-197	1717-1723	config	_	_
5-198	1723-1724	/	_	_
5-199	1724-1728	coco	_	_
5-200	1728-1729	)	_	_
5-201	1730-1733	and	_	_
5-202	1734-1735	\[	_	_
5-203	1735-1741	config	_	_
5-204	1741-1742	/	_	_
5-205	1742-1745	cub	_	_
5-206	1745-1746	\]	_	_
5-207	1746-1747	(	_	_
5-208	1747-1753	config	_	_
5-209	1753-1754	/	_	_
5-210	1754-1757	cub	_	_
5-211	1757-1758	)	_	_
5-212	1758-1759	)	_	_
5-213	1759-1760	.	_	_

#Text=If you want to change only a few options, instead of re-writing a new configuration file, you can override the configuration as the follows:  ``` python <train \| eval>.py --dataloader\_\_batch\_size 32 --dataloader\_\_eval\_batch\_size 8 --model\_\_eval\_method matching\_prob ```  See \[config/parser.py\](config/parser.py) for details  ## Dataset preparation  ### COCO Caption  We followed the same split provided by \[VSE++\](http://www.cs.toronto.edu/~faghri/vsepp/data.tar).
6-1	1761-1763	If	_	_
6-2	1764-1767	you	_	_
6-3	1768-1772	want	_	_
6-4	1773-1775	to	_	_
6-5	1776-1782	change	_	_
6-6	1783-1787	only	_	_
6-7	1788-1789	a	_	_
6-8	1790-1793	few	_	_
6-9	1794-1801	options	_	_
6-10	1801-1802	,	_	_
6-11	1803-1810	instead	_	_
6-12	1811-1813	of	_	_
6-13	1814-1824	re-writing	_	_
6-14	1825-1826	a	_	_
6-15	1827-1830	new	_	_
6-16	1831-1844	configuration	_	_
6-17	1845-1849	file	_	_
6-18	1849-1850	,	_	_
6-19	1851-1854	you	_	_
6-20	1855-1858	can	_	_
6-21	1859-1867	override	_	_
6-22	1868-1871	the	_	_
6-23	1872-1885	configuration	_	_
6-24	1886-1888	as	_	_
6-25	1889-1892	the	_	_
6-26	1893-1900	follows	_	_
6-27	1900-1901	:	_	_
6-28	1903-1904	`	_	_
6-29	1904-1905	`	_	_
6-30	1905-1906	`	_	_
6-31	1907-1913	python	_	_
6-32	1914-1915	<	_	_
6-33	1915-1920	train	_	_
6-34	1921-1922	\|	_	_
6-35	1923-1927	eval	_	_
6-36	1927-1928	>	_	_
6-37	1928-1929	.	_	_
6-38	1929-1931	py	_	_
6-39	1932-1933	-	_	_
6-40	1933-1934	-	_	_
6-41	1934-1944	dataloader	_	_
6-42	1944-1945	\_	_	_
6-43	1945-1946	\_	_	_
6-44	1946-1956	batch\_size	_	_
6-45	1957-1959	32	_	_
6-46	1960-1961	-	_	_
6-47	1961-1962	-	_	_
6-48	1962-1972	dataloader	_	_
6-49	1972-1973	\_	_	_
6-50	1973-1974	\_	_	_
6-51	1974-1989	eval\_batch\_size	_	_
6-52	1990-1991	8	_	_
6-53	1992-1993	-	_	_
6-54	1993-1994	-	_	_
6-55	1994-1999	model	_	_
6-56	1999-2000	\_	_	_
6-57	2000-2001	\_	_	_
6-58	2001-2012	eval\_method	_	_
6-59	2013-2026	matching\_prob	_	_
6-60	2027-2028	`	_	_
6-61	2028-2029	`	_	_
6-62	2029-2030	`	_	_
6-63	2032-2035	See	_	_
6-64	2036-2037	\[	_	_
6-65	2037-2043	config	_	_
6-66	2043-2044	/	_	_
6-67	2044-2053	parser.py	_	_
6-68	2053-2054	\]	_	_
6-69	2054-2055	(	_	_
6-70	2055-2061	config	_	_
6-71	2061-2062	/	_	_
6-72	2062-2071	parser.py	_	_
6-73	2071-2072	)	_	_
6-74	2073-2076	for	_	_
6-75	2077-2084	details	_	_
6-76	2086-2087	#	_	_
6-77	2087-2088	#	_	_
6-78	2089-2096	Dataset	_	_
6-79	2097-2108	preparation	_	_
6-80	2110-2111	#	_	_
6-81	2111-2112	#	_	_
6-82	2112-2113	#	_	_
6-83	2114-2118	COCO	_	_
6-84	2119-2126	Caption	_	_
6-85	2128-2130	We	_	_
6-86	2131-2139	followed	_	_
6-87	2140-2143	the	_	_
6-88	2144-2148	same	_	_
6-89	2149-2154	split	_	_
6-90	2155-2163	provided	_	_
6-91	2164-2166	by	_	_
6-92	2167-2168	\[	_	_
6-93	2168-2171	VSE	_	_
6-94	2171-2172	+	_	_
6-95	2172-2173	+	_	_
6-96	2173-2174	\]	_	_
6-97	2174-2175	(	_	_
6-98	2175-2179	http	_	_
6-99	2179-2180	:	_	_
6-100	2180-2181	/	_	_
6-101	2181-2182	/	_	_
6-102	2182-2200	www.cs.toronto.edu	_	_
6-103	2200-2201	/	_	_
6-104	2201-2202	~	_	_
6-105	2202-2208	faghri	_	_
6-106	2208-2209	/	_	_
6-107	2209-2214	vsepp	_	_
6-108	2214-2215	/	_	_
6-109	2215-2223	data.tar	_	_
6-110	2223-2224	)	_	_
6-111	2224-2225	.	_	_

#Text=Dataset splits can be found in \[datasets/annotations\](datasets/annotations).
7-1	2226-2233	Dataset	_	_
7-2	2234-2240	splits	_	_
7-3	2241-2244	can	_	_
7-4	2245-2247	be	_	_
7-5	2248-2253	found	_	_
7-6	2254-2256	in	_	_
7-7	2257-2258	\[	_	_
7-8	2258-2266	datasets	_	_
7-9	2266-2267	/	_	_
7-10	2267-2278	annotations	_	_
7-11	2278-2279	\]	_	_
7-12	2279-2280	(	_	_
7-13	2280-2288	datasets	_	_
7-14	2288-2289	/	_	_
7-15	2289-2300	annotations	_	_
7-16	2300-2301	)	_	_
7-17	2301-2302	.	_	_

#Text=Note that we also need `instances\_<train \| val>2014.json` for computing PMRP score.  ### CUB Caption  Download images (CUB-200-2011) from \[this link\](http://www.vision.caltech.edu/visipedia/CUB-200-2011.html), and download caption from \[reedscot/cvpr2016\](https://github.com/reedscot/cvpr2016).
8-1	2304-2308	Note	_	_
8-2	2309-2313	that	_	_
8-3	2314-2316	we	_	_
8-4	2317-2321	also	_	_
8-5	2322-2326	need	_	_
8-6	2327-2328	`	_	_
8-7	2328-2337	instances	_	_
8-8	2337-2338	\_	_	_
8-9	2338-2339	<	_	_
8-10	2339-2344	train	_	_
8-11	2345-2346	\|	_	_
8-12	2347-2350	val	_	_
8-13	2350-2351	>	_	_
8-14	2351-2355	2014	_	_
8-15	2355-2356	.	_	_
8-16	2356-2360	json	_	_
8-17	2360-2361	`	_	_
8-18	2362-2365	for	_	_
8-19	2366-2375	computing	_	_
8-20	2376-2380	PMRP	_	_
8-21	2381-2386	score	_	_
8-22	2386-2387	.	_	_
8-23	2389-2390	#	_	_
8-24	2390-2391	#	_	_
8-25	2391-2392	#	_	_
8-26	2393-2396	CUB	_	_
8-27	2397-2404	Caption	_	_
8-28	2406-2414	Download	_	_
8-29	2415-2421	images	_	_
8-30	2422-2423	(	_	_
8-31	2423-2426	CUB	_	_
8-32	2426-2427	-	_	_
8-33	2427-2430	200	_	_
8-34	2430-2431	-	_	_
8-35	2431-2435	2011	_	_
8-36	2435-2436	)	_	_
8-37	2437-2441	from	_	_
8-38	2442-2443	\[	_	_
8-39	2443-2447	this	_	_
8-40	2448-2452	link	_	_
8-41	2452-2453	\]	_	_
8-42	2453-2454	(	_	_
8-43	2454-2458	http	_	_
8-44	2458-2459	:	_	_
8-45	2459-2460	/	_	_
8-46	2460-2461	/	_	_
8-47	2461-2483	www.vision.caltech.edu	_	_
8-48	2483-2484	/	_	_
8-49	2484-2493	visipedia	_	_
8-50	2493-2494	/	_	_
8-51	2494-2497	CUB	_	_
8-52	2497-2498	-	_	_
8-53	2498-2501	200	_	_
8-54	2501-2502	-	_	_
8-55	2502-2506	2011	_	_
8-56	2506-2507	.	_	_
8-57	2507-2511	html	_	_
8-58	2511-2512	)	_	_
8-59	2512-2513	,	_	_
8-60	2514-2517	and	_	_
8-61	2518-2526	download	_	_
8-62	2527-2534	caption	_	_
8-63	2535-2539	from	_	_
8-64	2540-2541	\[	_	_
8-65	2541-2549	reedscot	_	_
8-66	2549-2550	/	_	_
8-67	2550-2558	cvpr2016	_	_
8-68	2558-2559	\]	_	_
8-69	2559-2560	(	_	_
8-70	2560-2565	https	_	_
8-71	2565-2566	:	_	_
8-72	2566-2567	/	_	_
8-73	2567-2568	/	_	_
8-74	2568-2578	github.com	_	_
8-75	2578-2579	/	_	_
8-76	2579-2587	reedscot	_	_
8-77	2587-2588	/	_	_
8-78	2588-2596	cvpr2016	_	_
8-79	2596-2597	)	_	_
8-80	2597-2598	.	_	_

#Text=You can use the image path and the caption path separately in the code.  ## Evaluate pretrained models  NOTE: the current implementation of plausible match R-Precision (PMRP) is not efficient: <br> It first dumps all ranked items for each item to a local file, and compute R-precision.
9-1	2599-2602	You	_	_
9-2	2603-2606	can	_	_
9-3	2607-2610	use	_	_
9-4	2611-2614	the	_	_
9-5	2615-2620	image	_	_
9-6	2621-2625	path	_	_
9-7	2626-2629	and	_	_
9-8	2630-2633	the	_	_
9-9	2634-2641	caption	_	_
9-10	2642-2646	path	_	_
9-11	2647-2657	separately	_	_
9-12	2658-2660	in	_	_
9-13	2661-2664	the	_	_
9-14	2665-2669	code	_	_
9-15	2669-2670	.	_	_
9-16	2672-2673	#	_	_
9-17	2673-2674	#	_	_
9-18	2675-2683	Evaluate	_	_
9-19	2684-2694	pretrained	_	_
9-20	2695-2701	models	_	_
9-21	2703-2707	NOTE	_	_
9-22	2707-2708	:	_	_
9-23	2709-2712	the	_	_
9-24	2713-2720	current	_	_
9-25	2721-2735	implementation	_	_
9-26	2736-2738	of	_	_
9-27	2739-2748	plausible	_	_
9-28	2749-2754	match	_	_
9-29	2755-2766	R-Precision	_	_
9-30	2767-2768	(	_	_
9-31	2768-2772	PMRP	_	_
9-32	2772-2773	)	_	_
9-33	2774-2776	is	_	_
9-34	2777-2780	not	_	_
9-35	2781-2790	efficient	_	_
9-36	2790-2791	:	_	_
9-37	2792-2793	<	_	_
9-38	2793-2795	br	_	_
9-39	2795-2796	>	_	_
9-40	2797-2799	It	_	_
9-41	2800-2805	first	_	_
9-42	2806-2811	dumps	_	_
9-43	2812-2815	all	_	_
9-44	2816-2822	ranked	_	_
9-45	2823-2828	items	_	_
9-46	2829-2832	for	_	_
9-47	2833-2837	each	_	_
9-48	2838-2842	item	_	_
9-49	2843-2845	to	_	_
9-50	2846-2847	a	_	_
9-51	2848-2853	local	_	_
9-52	2854-2858	file	_	_
9-53	2858-2859	,	_	_
9-54	2860-2863	and	_	_
9-55	2864-2871	compute	_	_
9-56	2872-2883	R-precision	_	_
9-57	2883-2884	.	_	_

#Text=<br> We are planning to re-implement efficient PMRP as soon as possible.  ### COCO Caption  ``` # Compute recall metrics python evaluate\_recall\_coco.py .
10-1	2885-2886	<	_	_
10-2	2886-2888	br	_	_
10-3	2888-2889	>	_	_
10-4	2890-2892	We	_	_
10-5	2893-2896	are	_	_
10-6	2897-2905	planning	_	_
10-7	2906-2908	to	_	_
10-8	2909-2921	re-implement	_	_
10-9	2922-2931	efficient	_	_
10-10	2932-2936	PMRP	_	_
10-11	2937-2939	as	_	_
10-12	2940-2944	soon	_	_
10-13	2945-2947	as	_	_
10-14	2948-2956	possible	_	_
10-15	2956-2957	.	_	_
10-16	2959-2960	#	_	_
10-17	2960-2961	#	_	_
10-18	2961-2962	#	_	_
10-19	2963-2967	COCO	_	_
10-20	2968-2975	Caption	_	_
10-21	2977-2978	`	_	_
10-22	2978-2979	`	_	_
10-23	2979-2980	`	_	_
10-24	2981-2982	#	_	_
10-25	2983-2990	Compute	_	_
10-26	2991-2997	recall	_	_
10-27	2998-3005	metrics	_	_
10-28	3006-3012	python	_	_
10-29	3013-3036	evaluate\_recall\_coco.py	_	_
10-29	3022-3028	recall	_	_
10-29	3029-3033	coco	_	_
10-30	3037-3038	.	_	_

#Text=/config/coco/pcme\_coco.yaml \\     --dataset\_root <your\_dataset\_path> \\     --model\_path model\_last.pth \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  ``` # Compute plausible match R-Precision (PMRP) metric python extract\_rankings\_coco.py .
11-1	3038-3039	/	_	_
11-2	3039-3045	config	_	_
11-3	3045-3046	/	_	_
11-4	3046-3050	coco	_	_
11-5	3050-3051	/	_	_
11-6	3051-3065	pcme\_coco.yaml	_	_
11-6	3056-3060	coco	_	_
11-7	3066-3067	\\	_	_
11-8	3072-3073	-	_	_
11-9	3073-3074	-	_	_
11-10	3074-3086	dataset\_root	_	_
11-11	3087-3088	<	_	_
11-12	3088-3105	your\_dataset\_path	_	_
11-13	3105-3106	>	_	_
11-14	3107-3108	\\	_	_
11-15	3113-3114	-	_	_
11-16	3114-3115	-	_	_
11-17	3115-3125	model\_path	_	_
11-18	3126-3140	model\_last.pth	_	_
11-19	3141-3142	\\	_	_
11-20	3147-3148	#	_	_
11-21	3149-3150	-	_	_
11-22	3150-3151	-	_	_
11-23	3151-3156	model	_	_
11-24	3156-3157	\_	_	_
11-25	3157-3158	\_	_	_
11-26	3158-3167	cache\_dir	_	_
11-27	3168-3169	/	_	_
11-28	3169-3181	vector\_cache	_	_
11-29	3182-3183	#	_	_
11-30	3184-3186	if	_	_
11-31	3187-3190	you	_	_
11-32	3191-3194	use	_	_
11-33	3195-3197	my	_	_
11-34	3198-3204	docker	_	_
11-35	3205-3210	image	_	_
11-36	3211-3212	`	_	_
11-37	3212-3213	`	_	_
11-38	3213-3214	`	_	_
11-39	3216-3217	`	_	_
11-40	3217-3218	`	_	_
11-41	3218-3219	`	_	_
11-42	3220-3221	#	_	_
11-43	3222-3229	Compute	_	_
11-44	3230-3239	plausible	_	_
11-45	3240-3245	match	_	_
11-46	3246-3257	R-Precision	_	_
11-47	3258-3259	(	_	_
11-48	3259-3263	PMRP	_	_
11-49	3263-3264	)	_	_
11-50	3265-3271	metric	_	_
11-51	3272-3278	python	_	_
11-52	3279-3303	extract\_rankings\_coco.py	_	_
11-53	3304-3305	.	_	_

#Text=/config/coco/pcme\_coco.yaml \\     --dataset\_root <your\_dataset\_path> \\     --model\_path model\_last.pth \\     --dump\_to <dumped\_ranking\_file> \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image  python evaluate\_pmrp\_coco.py --ranking\_file <dumped\_ranking\_file> ```  \| Method   \| I2T 1K PMRP \| I2T 1K R@1 \| I2T ECCV mAP@R \| T2I 1K PMRP \| T2I 1K R@1 \| T2I ECCV mAP@R \| Model file \| \|----------\|----------\|---------\|----------\|----------\|---------\|----------\|------------\| \| PCME     \| 45.0     \| 68.8    \|   26.2   \| 46.0     \| 54.6    \|   48.0   \| \[link\](https://github.com/naver-ai/pcme/releases/download/v1.0.0/pcme\_coco.pth) \| \| PCME (CutMix-pretrained) \| 46.2 \| 68.3 \| 28.6 \| 47.1 \| 56.7 \| 54.9 \| \[link\](https://github.com/naver-ai/pcme/releases/download/v1.0.0/pcme\_cutmix\_coco.pth) \| \| PVSE K=1 \| 40.3     \| 66.7    \|   23.4   \| 41.8     \| 53.5    \|   44.6   \| -          \| \| PVSE K=2 \| 42.8     \| 69.2    \|   26.7   \| 43.6     \| 55.2    \|   53.8   \| -          \| \| VSRN     \| 41.2     \| 76.2    \|   30.8   \| 42.4     \| 62.8    \|   53.8   \| -          \| \| VSRN + AOQ \| 44.7   \| 77.5    \|   30.7   \| 45.6     \| 63.5    \|   51.2   \| -          \|  Check \[ECCV Caption dataset\](https://github.com/naver-ai/eccv-caption) for more details of "ECCV mAP@R". - Paper: \[ECCV Caption: Correcting False Negatives by Collecting Machine-and-Human-verified Image-Caption Associations for MS-COCO\](https://arxiv.org/abs/2204.03359) - GitHub: \[naver-ai/eccv-caption\](https://github.com/naver-ai/eccv-caption)  ### CUB Caption  ``` python evaluate\_cub.py .
12-1	3305-3306	/	_	_
12-2	3306-3312	config	_	_
12-3	3312-3313	/	_	_
12-4	3313-3317	coco	_	_
12-5	3317-3318	/	_	_
12-6	3318-3332	pcme\_coco.yaml	_	_
12-6	3318-3322	pcme	_	_
12-6	3323-3327	coco	_	_
12-7	3333-3334	\\	_	_
12-8	3339-3340	-	_	_
12-9	3340-3341	-	_	_
12-10	3341-3353	dataset\_root	_	_
12-11	3354-3355	<	_	_
12-12	3355-3372	your\_dataset\_path	_	_
12-13	3372-3373	>	_	_
12-14	3374-3375	\\	_	_
12-15	3380-3381	-	_	_
12-16	3381-3382	-	_	_
12-17	3382-3392	model\_path	_	_
12-18	3393-3407	model\_last.pth	_	_
12-19	3408-3409	\\	_	_
12-20	3414-3415	-	_	_
12-21	3415-3416	-	_	_
12-22	3416-3423	dump\_to	_	_
12-23	3424-3425	<	_	_
12-24	3425-3444	dumped\_ranking\_file	_	_
12-25	3444-3445	>	_	_
12-26	3446-3447	\\	_	_
12-27	3452-3453	#	_	_
12-28	3454-3455	-	_	_
12-29	3455-3456	-	_	_
12-30	3456-3461	model	_	_
12-31	3461-3462	\_	_	_
12-32	3462-3463	\_	_	_
12-33	3463-3472	cache\_dir	_	_
12-34	3473-3474	/	_	_
12-35	3474-3486	vector\_cache	_	_
12-36	3487-3488	#	_	_
12-37	3489-3491	if	_	_
12-38	3492-3495	you	_	_
12-39	3496-3499	use	_	_
12-40	3500-3502	my	_	_
12-41	3503-3509	docker	_	_
12-42	3510-3515	image	_	_
12-43	3517-3523	python	_	_
12-44	3524-3545	evaluate\_pmrp\_coco.py	_	_
12-44	3533-3537	pmrp	_	_
12-45	3546-3547	-	_	_
12-46	3547-3548	-	_	_
12-47	3548-3560	ranking\_file	_	_
12-48	3561-3562	<	_	_
12-49	3562-3581	dumped\_ranking\_file	_	_
12-50	3581-3582	>	_	_
12-51	3583-3584	`	_	_
12-52	3584-3585	`	_	_
12-53	3585-3586	`	_	_
12-54	3588-3589	\|	_	_
12-55	3590-3596	Method	_	_
12-56	3599-3600	\|	_	_
12-57	3601-3604	I2T	_	_
12-58	3605-3607	1K	_	_
12-59	3608-3612	PMRP	_	_
12-60	3613-3614	\|	_	_
12-61	3615-3618	I2T	_	_
12-62	3619-3621	1K	_	_
12-63	3622-3623	R	_	_
12-64	3623-3624	@	_	_
12-65	3624-3625	1	_	_
12-66	3626-3627	\|	_	_
12-67	3628-3631	I2T	_	_
12-68	3632-3636	ECCV	_	_
12-69	3637-3640	mAP	_	_
12-70	3640-3641	@	_	_
12-71	3641-3642	R	_	_
12-72	3643-3644	\|	_	_
12-73	3645-3648	T2I	_	_
12-74	3649-3651	1K	_	_
12-75	3652-3656	PMRP	_	_
12-76	3657-3658	\|	_	_
12-77	3659-3662	T2I	_	_
12-78	3663-3665	1K	_	_
12-79	3666-3667	R	_	_
12-80	3667-3668	@	_	_
12-81	3668-3669	1	_	_
12-82	3670-3671	\|	_	_
12-83	3672-3675	T2I	_	_
12-84	3676-3680	ECCV	_	_
12-85	3681-3684	mAP	_	_
12-86	3684-3685	@	_	_
12-87	3685-3686	R	_	_
12-88	3687-3688	\|	_	_
12-89	3689-3694	Model	_	_
12-90	3695-3699	file	_	_
12-91	3700-3701	\|	_	_
12-92	3702-3703	\|	_	_
12-93	3703-3704	-	_	_
12-94	3704-3705	-	_	_
12-95	3705-3706	-	_	_
12-96	3706-3707	-	_	_
12-97	3707-3708	-	_	_
12-98	3708-3709	-	_	_
12-99	3709-3710	-	_	_
12-100	3710-3711	-	_	_
12-101	3711-3712	-	_	_
12-102	3712-3713	-	_	_
12-103	3713-3714	\|	_	_
12-104	3714-3715	-	_	_
12-105	3715-3716	-	_	_
12-106	3716-3717	-	_	_
12-107	3717-3718	-	_	_
12-108	3718-3719	-	_	_
12-109	3719-3720	-	_	_
12-110	3720-3721	-	_	_
12-111	3721-3722	-	_	_
12-112	3722-3723	-	_	_
12-113	3723-3724	-	_	_
12-114	3724-3725	\|	_	_
12-115	3725-3726	-	_	_
12-116	3726-3727	-	_	_
12-117	3727-3728	-	_	_
12-118	3728-3729	-	_	_
12-119	3729-3730	-	_	_
12-120	3730-3731	-	_	_
12-121	3731-3732	-	_	_
12-122	3732-3733	-	_	_
12-123	3733-3734	-	_	_
12-124	3734-3735	\|	_	_
12-125	3735-3736	-	_	_
12-126	3736-3737	-	_	_
12-127	3737-3738	-	_	_
12-128	3738-3739	-	_	_
12-129	3739-3740	-	_	_
12-130	3740-3741	-	_	_
12-131	3741-3742	-	_	_
12-132	3742-3743	-	_	_
12-133	3743-3744	-	_	_
12-134	3744-3745	-	_	_
12-135	3745-3746	\|	_	_
12-136	3746-3747	-	_	_
12-137	3747-3748	-	_	_
12-138	3748-3749	-	_	_
12-139	3749-3750	-	_	_
12-140	3750-3751	-	_	_
12-141	3751-3752	-	_	_
12-142	3752-3753	-	_	_
12-143	3753-3754	-	_	_
12-144	3754-3755	-	_	_
12-145	3755-3756	-	_	_
12-146	3756-3757	\|	_	_
12-147	3757-3758	-	_	_
12-148	3758-3759	-	_	_
12-149	3759-3760	-	_	_
12-150	3760-3761	-	_	_
12-151	3761-3762	-	_	_
12-152	3762-3763	-	_	_
12-153	3763-3764	-	_	_
12-154	3764-3765	-	_	_
12-155	3765-3766	-	_	_
12-156	3766-3767	\|	_	_
12-157	3767-3768	-	_	_
12-158	3768-3769	-	_	_
12-159	3769-3770	-	_	_
12-160	3770-3771	-	_	_
12-161	3771-3772	-	_	_
12-162	3772-3773	-	_	_
12-163	3773-3774	-	_	_
12-164	3774-3775	-	_	_
12-165	3775-3776	-	_	_
12-166	3776-3777	-	_	_
12-167	3777-3778	\|	_	_
12-168	3778-3779	-	_	_
12-169	3779-3780	-	_	_
12-170	3780-3781	-	_	_
12-171	3781-3782	-	_	_
12-172	3782-3783	-	_	_
12-173	3783-3784	-	_	_
12-174	3784-3785	-	_	_
12-175	3785-3786	-	_	_
12-176	3786-3787	-	_	_
12-177	3787-3788	-	_	_
12-178	3788-3789	-	_	_
12-179	3789-3790	-	_	_
12-180	3790-3791	\|	_	_
12-181	3792-3793	\|	_	_
12-182	3794-3798	PCME	_	_
12-183	3803-3804	\|	_	_
12-184	3805-3809	45.0	_	_
12-185	3814-3815	\|	_	_
12-186	3816-3820	68.8	_	_
12-187	3824-3825	\|	_	_
12-188	3828-3832	26.2	_	_
12-189	3835-3836	\|	_	_
12-190	3837-3841	46.0	_	_
12-191	3846-3847	\|	_	_
12-192	3848-3852	54.6	_	_
12-193	3856-3857	\|	_	_
12-194	3860-3864	48.0	_	_
12-195	3867-3868	\|	_	_
12-196	3869-3870	\[	_	_
12-197	3870-3874	link	_	_
12-198	3874-3875	\]	_	_
12-199	3875-3876	(	_	_
12-200	3876-3881	https	_	_
12-201	3881-3882	:	_	_
12-202	3882-3883	/	_	_
12-203	3883-3884	/	_	_
12-204	3884-3894	github.com	_	_
12-205	3894-3895	/	_	_
12-206	3895-3903	naver-ai	_	_
12-207	3903-3904	/	_	_
12-208	3904-3908	pcme	_	_
12-209	3908-3909	/	_	_
12-210	3909-3917	releases	_	_
12-211	3917-3918	/	_	_
12-212	3918-3926	download	_	_
12-213	3926-3927	/	_	_
12-214	3927-3933	v1.0.0	_	_
12-215	3933-3934	/	_	_
12-216	3934-3947	pcme\_coco.pth	_	_
12-216	3939-3943	coco	_	_
12-217	3947-3948	)	_	_
12-218	3949-3950	\|	_	_
12-219	3951-3952	\|	_	_
12-220	3953-3957	PCME	_	_
12-221	3958-3959	(	_	_
12-222	3959-3976	CutMix-pretrained	_	_
12-223	3976-3977	)	_	_
12-224	3978-3979	\|	_	_
12-225	3980-3984	46.2	_	_
12-226	3985-3986	\|	_	_
12-227	3987-3991	68.3	_	_
12-228	3992-3993	\|	_	_
12-229	3994-3998	28.6	_	_
12-230	3999-4000	\|	_	_
12-231	4001-4005	47.1	_	_
12-232	4006-4007	\|	_	_
12-233	4008-4012	56.7	_	_
12-234	4013-4014	\|	_	_
12-235	4015-4019	54.9	_	_
12-236	4020-4021	\|	_	_
12-237	4022-4023	\[	_	_
12-238	4023-4027	link	_	_
12-239	4027-4028	\]	_	_
12-240	4028-4029	(	_	_
12-241	4029-4034	https	_	_
12-242	4034-4035	:	_	_
12-243	4035-4036	/	_	_
12-244	4036-4037	/	_	_
12-245	4037-4047	github.com	_	_
12-246	4047-4048	/	_	_
12-247	4048-4056	naver-ai	_	_
12-248	4056-4057	/	_	_
12-249	4057-4061	pcme	_	_
12-250	4061-4062	/	_	_
12-251	4062-4070	releases	_	_
12-252	4070-4071	/	_	_
12-253	4071-4079	download	_	_
12-254	4079-4080	/	_	_
12-255	4080-4086	v1.0.0	_	_
12-256	4086-4087	/	_	_
12-257	4087-4107	pcme\_cutmix\_coco.pth	_	_
12-257	4099-4103	coco	_	_
12-258	4107-4108	)	_	_
12-259	4109-4110	\|	_	_
12-260	4111-4112	\|	_	_
12-261	4113-4117	PVSE	_	_
12-262	4118-4119	K	_	_
12-263	4119-4120	=	_	_
12-264	4120-4121	1	_	_
12-265	4122-4123	\|	_	_
12-266	4124-4128	40.3	_	_
12-267	4133-4134	\|	_	_
12-268	4135-4139	66.7	_	_
12-269	4143-4144	\|	_	_
12-270	4147-4151	23.4	_	_
12-271	4154-4155	\|	_	_
12-272	4156-4160	41.8	_	_
12-273	4165-4166	\|	_	_
12-274	4167-4171	53.5	_	_
12-275	4175-4176	\|	_	_
12-276	4179-4183	44.6	_	_
12-277	4186-4187	\|	_	_
12-278	4188-4189	-	_	_
12-279	4199-4200	\|	_	_
12-280	4201-4202	\|	_	_
12-281	4203-4207	PVSE	_	_
12-282	4208-4209	K	_	_
12-283	4209-4210	=	_	_
12-284	4210-4211	2	_	_
12-285	4212-4213	\|	_	_
12-286	4214-4218	42.8	_	_
12-287	4223-4224	\|	_	_
12-288	4225-4229	69.2	_	_
12-289	4233-4234	\|	_	_
12-290	4237-4241	26.7	_	_
12-291	4244-4245	\|	_	_
12-292	4246-4250	43.6	_	_
12-293	4255-4256	\|	_	_
12-294	4257-4261	55.2	_	_
12-295	4265-4266	\|	_	_
12-296	4269-4273	53.8	_	_
12-297	4276-4277	\|	_	_
12-298	4278-4279	-	_	_
12-299	4289-4290	\|	_	_
12-300	4291-4292	\|	_	_
12-301	4293-4297	VSRN	_	_
12-302	4302-4303	\|	_	_
12-303	4304-4308	41.2	_	_
12-304	4313-4314	\|	_	_
12-305	4315-4319	76.2	_	_
12-306	4323-4324	\|	_	_
12-307	4327-4331	30.8	_	_
12-308	4334-4335	\|	_	_
12-309	4336-4340	42.4	_	_
12-310	4345-4346	\|	_	_
12-311	4347-4351	62.8	_	_
12-312	4355-4356	\|	_	_
12-313	4359-4363	53.8	_	_
12-314	4366-4367	\|	_	_
12-315	4368-4369	-	_	_
12-316	4379-4380	\|	_	_
12-317	4381-4382	\|	_	_
12-318	4383-4387	VSRN	_	_
12-319	4388-4389	+	_	_
12-320	4390-4393	AOQ	_	_
12-321	4394-4395	\|	_	_
12-322	4396-4400	44.7	_	_
12-323	4403-4404	\|	_	_
12-324	4405-4409	77.5	_	_
12-325	4413-4414	\|	_	_
12-326	4417-4421	30.7	_	_
12-327	4424-4425	\|	_	_
12-328	4426-4430	45.6	_	_
12-329	4435-4436	\|	_	_
12-330	4437-4441	63.5	_	_
12-331	4445-4446	\|	_	_
12-332	4449-4453	51.2	_	_
12-333	4456-4457	\|	_	_
12-334	4458-4459	-	_	_
12-335	4469-4470	\|	_	_
12-336	4472-4477	Check	_	_
12-337	4478-4479	\[	_	_
12-338	4479-4483	ECCV	_	_
12-339	4484-4491	Caption	_	_
12-340	4492-4499	dataset	_	_
12-341	4499-4500	\]	_	_
12-342	4500-4501	(	_	_
12-343	4501-4506	https	_	_
12-344	4506-4507	:	_	_
12-345	4507-4508	/	_	_
12-346	4508-4509	/	_	_
12-347	4509-4519	github.com	_	_
12-348	4519-4520	/	_	_
12-349	4520-4528	naver-ai	_	_
12-350	4528-4529	/	_	_
12-351	4529-4541	eccv-caption	_	_
12-352	4541-4542	)	_	_
12-353	4543-4546	for	_	_
12-354	4547-4551	more	_	_
12-355	4552-4559	details	_	_
12-356	4560-4562	of	_	_
12-357	4563-4564	"	_	_
12-358	4564-4568	ECCV	_	_
12-359	4569-4572	mAP	_	_
12-360	4572-4573	@	_	_
12-361	4573-4574	R	_	_
12-362	4574-4575	"	_	_
12-363	4575-4576	.	_	_
12-364	4577-4578	-	_	_
12-365	4579-4584	Paper	_	_
12-366	4584-4585	:	_	_
12-367	4586-4587	\[	_	_
12-368	4587-4591	ECCV	_	_
12-369	4592-4599	Caption	_	_
12-370	4599-4600	:	_	_
12-371	4601-4611	Correcting	_	_
12-372	4612-4617	False	_	_
12-373	4618-4627	Negatives	_	_
12-374	4628-4630	by	_	_
12-375	4631-4641	Collecting	_	_
12-376	4642-4668	Machine-and-Human-verified	_	_
12-377	4669-4682	Image-Caption	_	_
12-378	4683-4695	Associations	_	_
12-379	4696-4699	for	_	_
12-380	4700-4707	MS-COCO	_	_
12-381	4707-4708	\]	_	_
12-382	4708-4709	(	_	_
12-383	4709-4714	https	_	_
12-384	4714-4715	:	_	_
12-385	4715-4716	/	_	_
12-386	4716-4717	/	_	_
12-387	4717-4726	arxiv.org	_	_
12-388	4726-4727	/	_	_
12-389	4727-4730	abs	_	_
12-390	4730-4731	/	_	_
12-391	4731-4741	2204.03359	_	_
12-392	4741-4742	)	_	_
12-393	4743-4744	-	_	_
12-394	4745-4751	GitHub	_	_
12-395	4751-4752	:	_	_
12-396	4753-4754	\[	_	_
12-397	4754-4762	naver-ai	_	_
12-398	4762-4763	/	_	_
12-399	4763-4775	eccv-caption	_	_
12-400	4775-4776	\]	_	_
12-401	4776-4777	(	_	_
12-402	4777-4782	https	_	_
12-403	4782-4783	:	_	_
12-404	4783-4784	/	_	_
12-405	4784-4785	/	_	_
12-406	4785-4795	github.com	_	_
12-407	4795-4796	/	_	_
12-408	4796-4804	naver-ai	_	_
12-409	4804-4805	/	_	_
12-410	4805-4817	eccv-caption	_	_
12-411	4817-4818	)	_	_
12-412	4820-4821	#	_	_
12-413	4821-4822	#	_	_
12-414	4822-4823	#	_	_
12-415	4824-4827	CUB	_	_
12-416	4828-4835	Caption	_	_
12-417	4837-4838	`	_	_
12-418	4838-4839	`	_	_
12-419	4839-4840	`	_	_
12-420	4841-4847	python	_	_
12-421	4848-4863	evaluate\_cub.py	_	_
12-422	4864-4865	.	_	_

#Text=/config/cub/pcme\_cub.yaml \\     --dataset\_root <your\_dataset\_path> \\     --caption\_root <your\_caption\_path> \\     --model\_path model\_last.pth \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  NOTE: If you just download file from \[reedscot/cvpr2016\](https://github.com/reedscot/cvpr2016), then `caption\_root` will be `cvpr2016\_cub/text\_c10`  If you want to test other probabilistic distances, such as Wasserstein distance or KL-divergence, try the following command:  ``` python evaluate\_cub.py .
13-1	4865-4866	/	_	_
13-2	4866-4872	config	_	_
13-3	4872-4873	/	_	_
13-4	4873-4876	cub	_	_
13-5	4876-4877	/	_	_
13-6	4877-4890	pcme\_cub.yaml	_	_
13-7	4891-4892	\\	_	_
13-8	4897-4898	-	_	_
13-9	4898-4899	-	_	_
13-10	4899-4911	dataset\_root	_	_
13-11	4912-4913	<	_	_
13-12	4913-4930	your\_dataset\_path	_	_
13-13	4930-4931	>	_	_
13-14	4932-4933	\\	_	_
13-15	4938-4939	-	_	_
13-16	4939-4940	-	_	_
13-17	4940-4952	caption\_root	_	_
13-18	4953-4954	<	_	_
13-19	4954-4971	your\_caption\_path	_	_
13-20	4971-4972	>	_	_
13-21	4973-4974	\\	_	_
13-22	4979-4980	-	_	_
13-23	4980-4981	-	_	_
13-24	4981-4991	model\_path	_	_
13-25	4992-5006	model\_last.pth	_	_
13-26	5007-5008	\\	_	_
13-27	5013-5014	#	_	_
13-28	5015-5016	-	_	_
13-29	5016-5017	-	_	_
13-30	5017-5022	model	_	_
13-31	5022-5023	\_	_	_
13-32	5023-5024	\_	_	_
13-33	5024-5033	cache\_dir	_	_
13-34	5034-5035	/	_	_
13-35	5035-5047	vector\_cache	_	_
13-36	5048-5049	#	_	_
13-37	5050-5052	if	_	_
13-38	5053-5056	you	_	_
13-39	5057-5060	use	_	_
13-40	5061-5063	my	_	_
13-41	5064-5070	docker	_	_
13-42	5071-5076	image	_	_
13-43	5077-5078	`	_	_
13-44	5078-5079	`	_	_
13-45	5079-5080	`	_	_
13-46	5082-5086	NOTE	_	_
13-47	5086-5087	:	_	_
13-48	5088-5090	If	_	_
13-49	5091-5094	you	_	_
13-50	5095-5099	just	_	_
13-51	5100-5108	download	_	_
13-52	5109-5113	file	_	_
13-53	5114-5118	from	_	_
13-54	5119-5120	\[	_	_
13-55	5120-5128	reedscot	_	_
13-56	5128-5129	/	_	_
13-57	5129-5137	cvpr2016	_	_
13-58	5137-5138	\]	_	_
13-59	5138-5139	(	_	_
13-60	5139-5144	https	_	_
13-61	5144-5145	:	_	_
13-62	5145-5146	/	_	_
13-63	5146-5147	/	_	_
13-64	5147-5157	github.com	_	_
13-65	5157-5158	/	_	_
13-66	5158-5166	reedscot	_	_
13-67	5166-5167	/	_	_
13-68	5167-5175	cvpr2016	_	_
13-69	5175-5176	)	_	_
13-70	5176-5177	,	_	_
13-71	5178-5182	then	_	_
13-72	5183-5184	`	_	_
13-73	5184-5196	caption\_root	_	_
13-74	5196-5197	`	_	_
13-75	5198-5202	will	_	_
13-76	5203-5205	be	_	_
13-77	5206-5207	`	_	_
13-78	5207-5215	cvpr2016	_	_
13-79	5215-5216	\_	_	_
13-80	5216-5219	cub	_	_
13-81	5219-5220	/	_	_
13-82	5220-5228	text\_c10	_	_
13-83	5228-5229	`	_	_
13-84	5231-5233	If	_	_
13-85	5234-5237	you	_	_
13-86	5238-5242	want	_	_
13-87	5243-5245	to	_	_
13-88	5246-5250	test	_	_
13-89	5251-5256	other	_	_
13-90	5257-5270	probabilistic	_	_
13-91	5271-5280	distances	_	_
13-92	5280-5281	,	_	_
13-93	5282-5286	such	_	_
13-94	5287-5289	as	_	_
13-95	5290-5301	Wasserstein	_	_
13-96	5302-5310	distance	_	_
13-97	5311-5313	or	_	_
13-98	5314-5327	KL-divergence	_	_
13-99	5327-5328	,	_	_
13-100	5329-5332	try	_	_
13-101	5333-5336	the	_	_
13-102	5337-5346	following	_	_
13-103	5347-5354	command	_	_
13-104	5354-5355	:	_	_
13-105	5357-5358	`	_	_
13-106	5358-5359	`	_	_
13-107	5359-5360	`	_	_
13-108	5361-5367	python	_	_
13-109	5368-5383	evaluate\_cub.py	_	_
13-110	5384-5385	.	_	_

#Text=/config/cub/pcme\_cub.yaml \\     --dataset\_root <your\_dataset\_path> \\     --caption\_root <your\_caption\_path> \\     --model\_path model\_last.pth \\     --model\_\_eval\_method <distance\_method> \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  You can choose `distance\_method` in `\['elk', 'l2', 'min', 'max', 'wasserstein', 'kl', 'reverse\_kl', 'js', 'bhattacharyya', 'matmul', 'matching\_prob'\]`   ## How to train  NOTE: we train each model with mixed-precision training (O2) on a single V100.
14-1	5385-5386	/	_	_
14-2	5386-5392	config	_	_
14-3	5392-5393	/	_	_
14-4	5393-5396	cub	_	_
14-5	5396-5397	/	_	_
14-6	5397-5410	pcme\_cub.yaml	_	_
14-7	5411-5412	\\	_	_
14-8	5417-5418	-	_	_
14-9	5418-5419	-	_	_
14-10	5419-5431	dataset\_root	_	_
14-11	5432-5433	<	_	_
14-12	5433-5450	your\_dataset\_path	_	_
14-13	5450-5451	>	_	_
14-14	5452-5453	\\	_	_
14-15	5458-5459	-	_	_
14-16	5459-5460	-	_	_
14-17	5460-5472	caption\_root	_	_
14-18	5473-5474	<	_	_
14-19	5474-5491	your\_caption\_path	_	_
14-20	5491-5492	>	_	_
14-21	5493-5494	\\	_	_
14-22	5499-5500	-	_	_
14-23	5500-5501	-	_	_
14-24	5501-5511	model\_path	_	_
14-25	5512-5526	model\_last.pth	_	_
14-26	5527-5528	\\	_	_
14-27	5533-5534	-	_	_
14-28	5534-5535	-	_	_
14-29	5535-5540	model	_	_
14-30	5540-5541	\_	_	_
14-31	5541-5542	\_	_	_
14-32	5542-5553	eval\_method	_	_
14-33	5554-5555	<	_	_
14-34	5555-5570	distance\_method	_	_
14-35	5570-5571	>	_	_
14-36	5572-5573	\\	_	_
14-37	5578-5579	#	_	_
14-38	5580-5581	-	_	_
14-39	5581-5582	-	_	_
14-40	5582-5587	model	_	_
14-41	5587-5588	\_	_	_
14-42	5588-5589	\_	_	_
14-43	5589-5598	cache\_dir	_	_
14-44	5599-5600	/	_	_
14-45	5600-5612	vector\_cache	_	_
14-46	5613-5614	#	_	_
14-47	5615-5617	if	_	_
14-48	5618-5621	you	_	_
14-49	5622-5625	use	_	_
14-50	5626-5628	my	_	_
14-51	5629-5635	docker	_	_
14-52	5636-5641	image	_	_
14-53	5642-5643	`	_	_
14-54	5643-5644	`	_	_
14-55	5644-5645	`	_	_
14-56	5647-5650	You	_	_
14-57	5651-5654	can	_	_
14-58	5655-5661	choose	_	_
14-59	5662-5663	`	_	_
14-60	5663-5678	distance\_method	_	_
14-61	5678-5679	`	_	_
14-62	5680-5682	in	_	_
14-63	5683-5684	`	_	_
14-64	5684-5685	\[	_	_
14-65	5685-5686	'	_	_
14-66	5686-5689	elk	_	_
14-67	5689-5690	'	_	_
14-68	5690-5691	,	_	_
14-69	5692-5693	'	_	_
14-70	5693-5695	l2	_	_
14-71	5695-5696	'	_	_
14-72	5696-5697	,	_	_
14-73	5698-5699	'	_	_
14-74	5699-5702	min	_	_
14-75	5702-5703	'	_	_
14-76	5703-5704	,	_	_
14-77	5705-5706	'	_	_
14-78	5706-5709	max	_	_
14-79	5709-5710	'	_	_
14-80	5710-5711	,	_	_
14-81	5712-5713	'	_	_
14-82	5713-5724	wasserstein	_	_
14-83	5724-5725	'	_	_
14-84	5725-5726	,	_	_
14-85	5727-5728	'	_	_
14-86	5728-5730	kl	_	_
14-87	5730-5731	'	_	_
14-88	5731-5732	,	_	_
14-89	5733-5734	'	_	_
14-90	5734-5744	reverse\_kl	_	_
14-91	5744-5745	'	_	_
14-92	5745-5746	,	_	_
14-93	5747-5748	'	_	_
14-94	5748-5750	js	_	_
14-95	5750-5751	'	_	_
14-96	5751-5752	,	_	_
14-97	5753-5754	'	_	_
14-98	5754-5767	bhattacharyya	_	_
14-99	5767-5768	'	_	_
14-100	5768-5769	,	_	_
14-101	5770-5771	'	_	_
14-102	5771-5777	matmul	_	_
14-103	5777-5778	'	_	_
14-104	5778-5779	,	_	_
14-105	5780-5781	'	_	_
14-106	5781-5794	matching\_prob	_	_
14-107	5794-5795	'	_	_
14-108	5795-5796	\]	_	_
14-109	5796-5797	`	_	_
14-110	5800-5801	#	_	_
14-111	5801-5802	#	_	_
14-112	5803-5806	How	_	_
14-113	5807-5809	to	_	_
14-114	5810-5815	train	_	_
14-115	5817-5821	NOTE	_	_
14-116	5821-5822	:	_	_
14-117	5823-5825	we	_	_
14-118	5826-5831	train	_	_
14-119	5832-5836	each	_	_
14-120	5837-5842	model	_	_
14-121	5843-5847	with	_	_
14-122	5848-5863	mixed-precision	_	_
14-123	5864-5872	training	_	_
14-124	5873-5874	(	_	_
14-125	5874-5876	O2	_	_
14-126	5876-5877	)	_	_
14-127	5878-5880	on	_	_
14-128	5881-5882	a	_	_
14-129	5883-5889	single	_	_
14-130	5890-5894	V100	_	_
14-131	5894-5895	.	_	_

#Text=<br> Since, the current code does not support multi-gpu training, if you use different hardware, the batchsize should be reduced.
15-1	5895-5896	<	_	_
15-2	5896-5898	br	_	_
15-3	5898-5899	>	_	_
15-4	5900-5905	Since	_	_
15-5	5905-5906	,	_	_
15-6	5907-5910	the	_	_
15-7	5911-5918	current	_	_
15-8	5919-5923	code	_	_
15-9	5924-5928	does	_	_
15-10	5929-5932	not	_	_
15-11	5933-5940	support	_	_
15-12	5941-5950	multi-gpu	_	_
15-13	5951-5959	training	_	_
15-14	5959-5960	,	_	_
15-15	5961-5963	if	_	_
15-16	5964-5967	you	_	_
15-17	5968-5971	use	_	_
15-18	5972-5981	different	_	_
15-19	5982-5990	hardware	_	_
15-20	5990-5991	,	_	_
15-21	5992-5995	the	_	_
15-22	5996-6005	batchsize	_	_
15-23	6006-6012	should	_	_
15-24	6013-6015	be	_	_
15-25	6016-6023	reduced	_	_
15-26	6023-6024	.	_	_

#Text=<br> Please note that, hence, the results couldn't be reproduced if you use smaller hardware than V100.  ### COCO Caption  ``` python train\_coco.py .
16-1	6024-6025	<	_	_
16-2	6025-6027	br	_	_
16-3	6027-6028	>	_	_
16-4	6029-6035	Please	_	_
16-5	6036-6040	note	_	_
16-6	6041-6045	that	_	_
16-7	6045-6046	,	_	_
16-8	6047-6052	hence	_	_
16-9	6052-6053	,	_	_
16-10	6054-6057	the	_	_
16-11	6058-6065	results	_	_
16-12	6066-6074	couldn't	_	_
16-13	6075-6077	be	_	_
16-14	6078-6088	reproduced	_	_
16-15	6089-6091	if	_	_
16-16	6092-6095	you	_	_
16-17	6096-6099	use	_	_
16-18	6100-6107	smaller	_	_
16-19	6108-6116	hardware	_	_
16-20	6117-6121	than	_	_
16-21	6122-6126	V100	_	_
16-22	6126-6127	.	_	_
16-23	6129-6130	#	_	_
16-24	6130-6131	#	_	_
16-25	6131-6132	#	_	_
16-26	6133-6137	COCO	_	_
16-27	6138-6145	Caption	_	_
16-28	6147-6148	`	_	_
16-29	6148-6149	`	_	_
16-30	6149-6150	`	_	_
16-31	6151-6157	python	_	_
16-32	6158-6171	train\_coco.py	_	_
16-32	6164-6168	coco	_	_
16-33	6172-6173	.	_	_

#Text=/config/coco/pcme\_coco.yaml --dataset\_root <your\_dataset\_path> \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  It takes about 46 hours in a single V100 with mixed precision training.  ### CUB Caption  We use CUB Caption dataset \[(Reed, et al. 2016)\](https://openaccess.thecvf.com/content\_cvpr\_2016/papers/Reed\_Learning\_Deep\_Representations\_CVPR\_2016\_paper.pdf) as a new cross-modal retrieval benchmark.
17-1	6173-6174	/	_	_
17-2	6174-6180	config	_	_
17-3	6180-6181	/	_	_
17-4	6181-6185	coco	_	_
17-5	6185-6186	/	_	_
17-6	6186-6200	pcme\_coco.yaml	_	_
17-6	6191-6195	coco	_	_
17-7	6201-6202	-	_	_
17-8	6202-6203	-	_	_
17-9	6203-6215	dataset\_root	_	_
17-10	6216-6217	<	_	_
17-11	6217-6234	your\_dataset\_path	_	_
17-12	6234-6235	>	_	_
17-13	6236-6237	\\	_	_
17-14	6242-6243	#	_	_
17-15	6244-6245	-	_	_
17-16	6245-6246	-	_	_
17-17	6246-6251	model	_	_
17-18	6251-6252	\_	_	_
17-19	6252-6253	\_	_	_
17-20	6253-6262	cache\_dir	_	_
17-21	6263-6264	/	_	_
17-22	6264-6276	vector\_cache	_	_
17-23	6277-6278	#	_	_
17-24	6279-6281	if	_	_
17-25	6282-6285	you	_	_
17-26	6286-6289	use	_	_
17-27	6290-6292	my	_	_
17-28	6293-6299	docker	_	_
17-29	6300-6305	image	_	_
17-30	6306-6307	`	_	_
17-31	6307-6308	`	_	_
17-32	6308-6309	`	_	_
17-33	6311-6313	It	_	_
17-34	6314-6319	takes	_	_
17-35	6320-6325	about	_	_
17-36	6326-6328	46	_	_
17-37	6329-6334	hours	_	_
17-38	6335-6337	in	_	_
17-39	6338-6339	a	_	_
17-40	6340-6346	single	_	_
17-41	6347-6351	V100	_	_
17-42	6352-6356	with	_	_
17-43	6357-6362	mixed	_	_
17-44	6363-6372	precision	_	_
17-45	6373-6381	training	_	_
17-46	6381-6382	.	_	_
17-47	6384-6385	#	_	_
17-48	6385-6386	#	_	_
17-49	6386-6387	#	_	_
17-50	6388-6391	CUB	_	_
17-51	6392-6399	Caption	_	_
17-52	6401-6403	We	_	_
17-53	6404-6407	use	_	_
17-54	6408-6411	CUB	_	_
17-55	6412-6419	Caption	_	_
17-56	6420-6427	dataset	_	_
17-57	6428-6429	\[	_	_
17-58	6429-6430	(	_	_
17-59	6430-6434	Reed	_	_
17-60	6434-6435	,	_	_
17-61	6436-6438	et	_	_
17-62	6439-6441	al	_	_
17-63	6441-6442	.	_	_
17-64	6443-6447	2016	_	_
17-65	6447-6448	)	_	_
17-66	6448-6449	\]	_	_
17-67	6449-6450	(	_	_
17-68	6450-6455	https	_	_
17-69	6455-6456	:	_	_
17-70	6456-6457	/	_	_
17-71	6457-6458	/	_	_
17-72	6458-6479	openaccess.thecvf.com	_	_
17-73	6479-6480	/	_	_
17-74	6480-6492	content\_cvpr	_	_
17-74	6488-6492	cvpr	_	_
17-75	6492-6493	\_	_	_
17-76	6493-6497	2016	_	_
17-77	6497-6498	/	_	_
17-78	6498-6504	papers	_	_
17-79	6504-6505	/	_	_
17-80	6505-6544	Reed\_Learning\_Deep\_Representations\_CVPR	_	_
17-80	6540-6544	CVPR	_	_
17-81	6544-6545	\_	_	_
17-82	6545-6549	2016	_	_
17-83	6549-6550	\_	_	_
17-84	6550-6559	paper.pdf	_	_
17-85	6559-6560	)	_	_
17-86	6561-6563	as	_	_
17-87	6564-6565	a	_	_
17-88	6566-6569	new	_	_
17-89	6570-6581	cross-modal	_	_
17-90	6582-6591	retrieval	_	_
17-91	6592-6601	benchmark	_	_
17-92	6601-6602	.	_	_

#Text=Here, instead of matching the sparse paired image-caption pairs, we treat all image-caption pairs in the same class as \*\*positive\*\*.
18-1	6603-6607	Here	_	_
18-2	6607-6608	,	_	_
18-3	6609-6616	instead	_	_
18-4	6617-6619	of	_	_
18-5	6620-6628	matching	_	_
18-6	6629-6632	the	_	_
18-7	6633-6639	sparse	_	_
18-8	6640-6646	paired	_	_
18-9	6647-6660	image-caption	_	_
18-10	6661-6666	pairs	_	_
18-11	6666-6667	,	_	_
18-12	6668-6670	we	_	_
18-13	6671-6676	treat	_	_
18-14	6677-6680	all	_	_
18-15	6681-6694	image-caption	_	_
18-16	6695-6700	pairs	_	_
18-17	6701-6703	in	_	_
18-18	6704-6707	the	_	_
18-19	6708-6712	same	_	_
18-20	6713-6718	class	_	_
18-21	6719-6721	as	_	_
18-22	6722-6723	\*	_	_
18-23	6723-6724	\*	_	_
18-24	6724-6732	positive	_	_
18-25	6732-6733	\*	_	_
18-26	6733-6734	\*	_	_
18-27	6734-6735	.	_	_

#Text=Since our split is based on the zero-shot learning benchmark \[(Xian, et al. 2017)\](https://openaccess.thecvf.com/content\_cvpr\_2017/papers/Xian\_Zero-Shot\_Learning\_-\_CVPR\_2017\_paper.pdf), we leave out 50 classes from 200 bird classes for the evaluation
19-1	6736-6741	Since	_	_
19-2	6742-6745	our	_	_
19-3	6746-6751	split	_	_
19-4	6752-6754	is	_	_
19-5	6755-6760	based	_	_
19-6	6761-6763	on	_	_
19-7	6764-6767	the	_	_
19-8	6768-6777	zero-shot	_	_
19-9	6778-6786	learning	_	_
19-10	6787-6796	benchmark	_	_
19-11	6797-6798	\[	_	_
19-12	6798-6799	(	_	_
19-13	6799-6803	Xian	_	_
19-14	6803-6804	,	_	_
19-15	6805-6807	et	_	_
19-16	6808-6810	al	_	_
19-17	6810-6811	.	_	_
19-18	6812-6816	2017	_	_
19-19	6816-6817	)	_	_
19-20	6817-6818	\]	_	_
19-21	6818-6819	(	_	_
19-22	6819-6824	https	_	_
19-23	6824-6825	:	_	_
19-24	6825-6826	/	_	_
19-25	6826-6827	/	_	_
19-26	6827-6848	openaccess.thecvf.com	_	_
19-27	6848-6849	/	_	_
19-28	6849-6861	content\_cvpr	_	_
19-28	6857-6861	cvpr	_	_
19-29	6861-6862	\_	_	_
19-30	6862-6866	2017	_	_
19-31	6866-6867	/	_	_
19-32	6867-6873	papers	_	_
19-33	6873-6874	/	_	_
19-34	6874-6897	Xian\_Zero-Shot\_Learning	_	_
19-35	6897-6898	\_	_	_
19-36	6898-6899	-	_	_
19-37	6899-6900	\_	_	_
19-38	6900-6904	CVPR	_	_
19-39	6904-6905	\_	_	_
19-40	6905-6909	2017	_	_
19-41	6909-6910	\_	_	_
19-42	6910-6919	paper.pdf	_	_
19-43	6919-6920	)	_	_
19-44	6920-6921	,	_	_
19-45	6922-6924	we	_	_
19-46	6925-6930	leave	_	_
19-47	6931-6934	out	_	_
19-48	6935-6937	50	_	_
19-49	6938-6945	classes	_	_
19-50	6946-6950	from	_	_
19-51	6951-6954	200	_	_
19-52	6955-6959	bird	_	_
19-53	6960-6967	classes	_	_
19-54	6968-6971	for	_	_
19-55	6972-6975	the	_	_
19-56	6976-6986	evaluation	_	_

#Text=.
20-1	6986-6987	.	_	_

#Text=- Reed, Scott, et al.
21-1	6989-6990	-	_	_
21-2	6991-6995	Reed	_	_
21-3	6995-6996	,	_	_
21-4	6997-7002	Scott	_	_
21-5	7002-7003	,	_	_
21-6	7004-7006	et	_	_
21-7	7007-7009	al	_	_
21-8	7009-7010	.	_	_

#Text="Learning deep representations of fine-grained visual descriptions."
22-1	7011-7012	"	_	_
22-2	7012-7020	Learning	_	_
22-3	7021-7025	deep	_	_
22-4	7026-7041	representations	_	_
22-5	7042-7044	of	_	_
22-6	7045-7057	fine-grained	_	_
22-7	7058-7064	visual	_	_
22-8	7065-7077	descriptions	_	_
22-9	7077-7078	.	_	_
22-10	7078-7079	"	_	_

#Text=Proceedings of the IEEE conference on computer vision and pattern recognition. 2016. - Xian, Yongqin, Bernt Schiele, and Zeynep Akata.
23-1	7080-7091	Proceedings	_	_
23-2	7092-7094	of	_	_
23-3	7095-7098	the	_	_
23-4	7099-7103	IEEE	_	_
23-5	7104-7114	conference	_	_
23-6	7115-7117	on	_	_
23-7	7118-7126	computer	_	_
23-8	7127-7133	vision	_	_
23-9	7134-7137	and	_	_
23-10	7138-7145	pattern	_	_
23-11	7146-7157	recognition	_	_
23-12	7157-7158	.	_	_
23-13	7159-7163	2016	_	_
23-14	7163-7164	.	_	_
23-15	7165-7166	-	_	_
23-16	7167-7171	Xian	_	_
23-17	7171-7172	,	_	_
23-18	7173-7180	Yongqin	_	_
23-19	7180-7181	,	_	_
23-20	7182-7187	Bernt	_	_
23-21	7188-7195	Schiele	_	_
23-22	7195-7196	,	_	_
23-23	7197-7200	and	_	_
23-24	7201-7207	Zeynep	_	_
23-25	7208-7213	Akata	_	_
23-26	7213-7214	.	_	_

#Text="Zero-shot learning-the good, the bad and the ugly."
24-1	7215-7216	"	_	_
24-2	7216-7225	Zero-shot	_	_
24-3	7226-7238	learning-the	_	_
24-4	7239-7243	good	_	_
24-5	7243-7244	,	_	_
24-6	7245-7248	the	_	_
24-7	7249-7252	bad	_	_
24-8	7253-7256	and	_	_
24-9	7257-7260	the	_	_
24-10	7261-7265	ugly	_	_
24-11	7265-7266	.	_	_
24-12	7266-7267	"	_	_

#Text=Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2017.  #### hyperparameter search  We additionally use cross-validation splits by (Xian, et el. 2017), namely using 100 classes for training and 50 classes for validation.   ``` python train\_cub.py .
25-1	7268-7279	Proceedings	_	_
25-2	7280-7282	of	_	_
25-3	7283-7286	the	_	_
25-4	7287-7291	IEEE	_	_
25-5	7292-7302	Conference	_	_
25-6	7303-7305	on	_	_
25-7	7306-7314	Computer	_	_
25-8	7315-7321	Vision	_	_
25-9	7322-7325	and	_	_
25-10	7326-7333	Pattern	_	_
25-11	7334-7345	Recognition	_	_
25-12	7345-7346	.	_	_
25-13	7347-7351	2017	_	_
25-14	7351-7352	.	_	_
25-15	7354-7355	#	_	_
25-16	7355-7356	#	_	_
25-17	7356-7357	#	_	_
25-18	7357-7358	#	_	_
25-19	7359-7373	hyperparameter	_	_
25-20	7374-7380	search	_	_
25-21	7382-7384	We	_	_
25-22	7385-7397	additionally	_	_
25-23	7398-7401	use	_	_
25-24	7402-7418	cross-validation	_	_
25-25	7419-7425	splits	_	_
25-26	7426-7428	by	_	_
25-27	7429-7430	(	_	_
25-28	7430-7434	Xian	_	_
25-29	7434-7435	,	_	_
25-30	7436-7438	et	_	_
25-31	7439-7441	el	_	_
25-32	7441-7442	.	_	_
25-33	7443-7447	2017	_	_
25-34	7447-7448	)	_	_
25-35	7448-7449	,	_	_
25-36	7450-7456	namely	_	_
25-37	7457-7462	using	_	_
25-38	7463-7466	100	_	_
25-39	7467-7474	classes	_	_
25-40	7475-7478	for	_	_
25-41	7479-7487	training	_	_
25-42	7488-7491	and	_	_
25-43	7492-7494	50	_	_
25-44	7495-7502	classes	_	_
25-45	7503-7506	for	_	_
25-46	7507-7517	validation	_	_
25-47	7517-7518	.	_	_
25-48	7521-7522	`	_	_
25-49	7522-7523	`	_	_
25-50	7523-7524	`	_	_
25-51	7525-7531	python	_	_
25-52	7532-7544	train\_cub.py	_	_
25-52	7538-7541	cub	_	_
25-53	7545-7546	.	_	_

#Text=/config/cub/pcme\_cub.yaml \\     --dataset\_root <your\_dataset\_path> \\     --caption\_root <your\_caption\_path> \\     --dataset\_name cub\_trainval1 \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  Similarly, you can use `cub\_trainval2` and `cub\_trainval3` as well.  #### training with full training classes  ``` python train\_cub.py .
26-1	7546-7547	/	_	_
26-2	7547-7553	config	_	_
26-3	7553-7554	/	_	_
26-4	7554-7557	cub	_	_
26-5	7557-7558	/	_	_
26-6	7558-7571	pcme\_cub.yaml	_	_
26-6	7563-7566	cub	_	_
26-7	7572-7573	\\	_	_
26-8	7578-7579	-	_	_
26-9	7579-7580	-	_	_
26-10	7580-7592	dataset\_root	_	_
26-11	7593-7594	<	_	_
26-12	7594-7611	your\_dataset\_path	_	_
26-13	7611-7612	>	_	_
26-14	7613-7614	\\	_	_
26-15	7619-7620	-	_	_
26-16	7620-7621	-	_	_
26-17	7621-7633	caption\_root	_	_
26-18	7634-7635	<	_	_
26-19	7635-7652	your\_caption\_path	_	_
26-20	7652-7653	>	_	_
26-21	7654-7655	\\	_	_
26-22	7660-7661	-	_	_
26-23	7661-7662	-	_	_
26-24	7662-7674	dataset\_name	_	_
26-25	7675-7688	cub\_trainval1	_	_
26-25	7675-7678	cub	_	_
26-26	7689-7690	\\	_	_
26-27	7695-7696	#	_	_
26-28	7697-7698	-	_	_
26-29	7698-7699	-	_	_
26-30	7699-7704	model	_	_
26-31	7704-7705	\_	_	_
26-32	7705-7706	\_	_	_
26-33	7706-7715	cache\_dir	_	_
26-34	7716-7717	/	_	_
26-35	7717-7729	vector\_cache	_	_
26-36	7730-7731	#	_	_
26-37	7732-7734	if	_	_
26-38	7735-7738	you	_	_
26-39	7739-7742	use	_	_
26-40	7743-7745	my	_	_
26-41	7746-7752	docker	_	_
26-42	7753-7758	image	_	_
26-43	7759-7760	`	_	_
26-44	7760-7761	`	_	_
26-45	7761-7762	`	_	_
26-46	7764-7773	Similarly	_	_
26-47	7773-7774	,	_	_
26-48	7775-7778	you	_	_
26-49	7779-7782	can	_	_
26-50	7783-7786	use	_	_
26-51	7787-7788	`	_	_
26-52	7788-7801	cub\_trainval2	_	_
26-52	7788-7791	cub	_	_
26-53	7801-7802	`	_	_
26-54	7803-7806	and	_	_
26-55	7807-7808	`	_	_
26-56	7808-7821	cub\_trainval3	_	_
26-56	7808-7811	cub	_	_
26-57	7821-7822	`	_	_
26-58	7823-7825	as	_	_
26-59	7826-7830	well	_	_
26-60	7830-7831	.	_	_
26-61	7833-7834	#	_	_
26-62	7834-7835	#	_	_
26-63	7835-7836	#	_	_
26-64	7836-7837	#	_	_
26-65	7838-7846	training	_	_
26-66	7847-7851	with	_	_
26-67	7852-7856	full	_	_
26-68	7857-7865	training	_	_
26-69	7866-7873	classes	_	_
26-70	7875-7876	`	_	_
26-71	7876-7877	`	_	_
26-72	7877-7878	`	_	_
26-73	7879-7885	python	_	_
26-74	7886-7898	train\_cub.py	_	_
26-74	7892-7895	cub	_	_
26-75	7899-7900	.	_	_

#Text=/config/cub/pcme\_cub.yaml \\     --dataset\_root <your\_dataset\_path> \\     --caption\_root <your\_caption\_path> \\     # --model\_\_cache\_dir /vector\_cache # if you use my docker image ```  It takes about 4 hours in a single V100 with mixed precision training.  ## How to cite  ``` @inproceedings{chun2021pcme,     title={Probabilistic Embeddings for Cross-Modal Retrieval},     author={Chun, Sanghyuk and Oh, Seong Joon and De Rezende, Rafael Sampaio and Kalantidis, Yannis and Larlus, Diane},     year={2021},     booktitle={Conference on Computer Vision and Pattern Recognition (CVPR)}, } ```  I would like to suggest citing \[ECCV Caption\](https://github.com/naver-ai/eccv-caption) and \[PCME++\](https://github.com/naver-ai/pcmepp), too. ``` @inproceedings{chun2022eccv\_caption,     title={ECCV Caption: Correcting False Negatives by Collecting Machine-and-Human-verified Image-Caption Associations for MS-COCO},      author={Chun, Sanghyuk and Kim, Wonjae and Park, Song and Chang, Minsuk Chang and Oh, Seong Joon},     year={2022},     booktitle={European Conference on Computer Vision (ECCV)}, }  @inproceedings{chun2024pcmepp,     title={Improved Probabilistic Image-Text Representations},     author={Chun, Sanghyuk},     year={2024},     booktitle={International Conference on Learning Representations (ICLR)}, } ```  ## License  ``` MIT License  Copyright (c) 2021-present NAVER Corp.
27-1	7900-7901	/	_	_
27-2	7901-7907	config	_	_
27-3	7907-7908	/	_	_
27-4	7908-7911	cub	_	_
27-5	7911-7912	/	_	_
27-6	7912-7925	pcme\_cub.yaml	_	_
27-6	7917-7920	cub	_	_
27-7	7926-7927	\\	_	_
27-8	7932-7933	-	_	_
27-9	7933-7934	-	_	_
27-10	7934-7946	dataset\_root	_	_
27-11	7947-7948	<	_	_
27-12	7948-7965	your\_dataset\_path	_	_
27-13	7965-7966	>	_	_
27-14	7967-7968	\\	_	_
27-15	7973-7974	-	_	_
27-16	7974-7975	-	_	_
27-17	7975-7987	caption\_root	_	_
27-18	7988-7989	<	_	_
27-19	7989-8006	your\_caption\_path	_	_
27-20	8006-8007	>	_	_
27-21	8008-8009	\\	_	_
27-22	8014-8015	#	_	_
27-23	8016-8017	-	_	_
27-24	8017-8018	-	_	_
27-25	8018-8023	model	_	_
27-26	8023-8024	\_	_	_
27-27	8024-8025	\_	_	_
27-28	8025-8034	cache\_dir	_	_
27-29	8035-8036	/	_	_
27-30	8036-8048	vector\_cache	_	_
27-31	8049-8050	#	_	_
27-32	8051-8053	if	_	_
27-33	8054-8057	you	_	_
27-34	8058-8061	use	_	_
27-35	8062-8064	my	_	_
27-36	8065-8071	docker	_	_
27-37	8072-8077	image	_	_
27-38	8078-8079	`	_	_
27-39	8079-8080	`	_	_
27-40	8080-8081	`	_	_
27-41	8083-8085	It	_	_
27-42	8086-8091	takes	_	_
27-43	8092-8097	about	_	_
27-44	8098-8099	4	_	_
27-45	8100-8105	hours	_	_
27-46	8106-8108	in	_	_
27-47	8109-8110	a	_	_
27-48	8111-8117	single	_	_
27-49	8118-8122	V100	_	_
27-50	8123-8127	with	_	_
27-51	8128-8133	mixed	_	_
27-52	8134-8143	precision	_	_
27-53	8144-8152	training	_	_
27-54	8152-8153	.	_	_
27-55	8155-8156	#	_	_
27-56	8156-8157	#	_	_
27-57	8158-8161	How	_	_
27-58	8162-8164	to	_	_
27-59	8165-8169	cite	_	_
27-60	8171-8172	`	_	_
27-61	8172-8173	`	_	_
27-62	8173-8174	`	_	_
27-63	8175-8176	@	_	_
27-64	8176-8189	inproceedings	_	_
27-65	8189-8190	{	_	_
27-66	8190-8202	chun2021pcme	_	_
27-67	8202-8203	,	_	_
27-68	8208-8213	title	_	_
27-69	8213-8214	=	_	_
27-70	8214-8215	{	_	_
27-71	8215-8228	Probabilistic	_	_
27-72	8229-8239	Embeddings	_	_
27-73	8240-8243	for	_	_
27-74	8244-8255	Cross-Modal	_	_
27-75	8256-8265	Retrieval	_	_
27-76	8265-8266	}	_	_
27-77	8266-8267	,	_	_
27-78	8272-8278	author	_	_
27-79	8278-8279	=	_	_
27-80	8279-8280	{	_	_
27-81	8280-8284	Chun	_	_
27-82	8284-8285	,	_	_
27-83	8286-8294	Sanghyuk	_	_
27-84	8295-8298	and	_	_
27-85	8299-8301	Oh	_	_
27-86	8301-8302	,	_	_
27-87	8303-8308	Seong	_	_
27-88	8309-8313	Joon	_	_
27-89	8314-8317	and	_	_
27-90	8318-8320	De	_	_
27-91	8321-8328	Rezende	_	_
27-92	8328-8329	,	_	_
27-93	8330-8336	Rafael	_	_
27-94	8337-8344	Sampaio	_	_
27-95	8345-8348	and	_	_
27-96	8349-8359	Kalantidis	_	_
27-97	8359-8360	,	_	_
27-98	8361-8367	Yannis	_	_
27-99	8368-8371	and	_	_
27-100	8372-8378	Larlus	_	_
27-101	8378-8379	,	_	_
27-102	8380-8385	Diane	_	_
27-103	8385-8386	}	_	_
27-104	8386-8387	,	_	_
27-105	8392-8396	year	_	_
27-106	8396-8397	=	_	_
27-107	8397-8398	{	_	_
27-108	8398-8402	2021	_	_
27-109	8402-8403	}	_	_
27-110	8403-8404	,	_	_
27-111	8409-8418	booktitle	_	_
27-112	8418-8419	=	_	_
27-113	8419-8420	{	_	_
27-114	8420-8430	Conference	_	_
27-115	8431-8433	on	_	_
27-116	8434-8442	Computer	_	_
27-117	8443-8449	Vision	_	_
27-118	8450-8453	and	_	_
27-119	8454-8461	Pattern	_	_
27-120	8462-8473	Recognition	_	_
27-121	8474-8475	(	_	_
27-122	8475-8479	CVPR	_	_
27-123	8479-8480	)	_	_
27-124	8480-8481	}	_	_
27-125	8481-8482	,	_	_
27-126	8483-8484	}	_	_
27-127	8485-8486	`	_	_
27-128	8486-8487	`	_	_
27-129	8487-8488	`	_	_
27-130	8490-8491	I	_	_
27-131	8492-8497	would	_	_
27-132	8498-8502	like	_	_
27-133	8503-8505	to	_	_
27-134	8506-8513	suggest	_	_
27-135	8514-8520	citing	_	_
27-136	8521-8522	\[	_	_
27-137	8522-8526	ECCV	_	_
27-138	8527-8534	Caption	_	_
27-139	8534-8535	\]	_	_
27-140	8535-8536	(	_	_
27-141	8536-8541	https	_	_
27-142	8541-8542	:	_	_
27-143	8542-8543	/	_	_
27-144	8543-8544	/	_	_
27-145	8544-8554	github.com	_	_
27-146	8554-8555	/	_	_
27-147	8555-8563	naver-ai	_	_
27-148	8563-8564	/	_	_
27-149	8564-8576	eccv-caption	_	_
27-150	8576-8577	)	_	_
27-151	8578-8581	and	_	_
27-152	8582-8583	\[	_	_
27-153	8583-8587	PCME	_	_
27-154	8587-8588	+	_	_
27-155	8588-8589	+	_	_
27-156	8589-8590	\]	_	_
27-157	8590-8591	(	_	_
27-158	8591-8596	https	_	_
27-159	8596-8597	:	_	_
27-160	8597-8598	/	_	_
27-161	8598-8599	/	_	_
27-162	8599-8609	github.com	_	_
27-163	8609-8610	/	_	_
27-164	8610-8618	naver-ai	_	_
27-165	8618-8619	/	_	_
27-166	8619-8625	pcmepp	_	_
27-167	8625-8626	)	_	_
27-168	8626-8627	,	_	_
27-169	8628-8631	too	_	_
27-170	8631-8632	.	_	_
27-171	8633-8634	`	_	_
27-172	8634-8635	`	_	_
27-173	8635-8636	`	_	_
27-174	8637-8638	@	_	_
27-175	8638-8651	inproceedings	_	_
27-176	8651-8652	{	_	_
27-177	8652-8672	chun2022eccv\_caption	_	_
27-177	8660-8672	eccv\_caption	_	_
27-178	8672-8673	,	_	_
27-179	8678-8683	title	_	_
27-180	8683-8684	=	_	_
27-181	8684-8685	{	_	_
27-182	8685-8689	ECCV	_	_
27-183	8690-8697	Caption	_	_
27-184	8697-8698	:	_	_
27-185	8699-8709	Correcting	_	_
27-186	8710-8715	False	_	_
27-187	8716-8725	Negatives	_	_
27-188	8726-8728	by	_	_
27-189	8729-8739	Collecting	_	_
27-190	8740-8766	Machine-and-Human-verified	_	_
27-191	8767-8780	Image-Caption	_	_
27-192	8781-8793	Associations	_	_
27-193	8794-8797	for	_	_
27-194	8798-8805	MS-COCO	_	_
27-195	8805-8806	}	_	_
27-196	8806-8807	,	_	_
27-197	8813-8819	author	_	_
27-198	8819-8820	=	_	_
27-199	8820-8821	{	_	_
27-200	8821-8825	Chun	_	_
27-201	8825-8826	,	_	_
27-202	8827-8835	Sanghyuk	_	_
27-203	8836-8839	and	_	_
27-204	8840-8843	Kim	_	_
27-205	8843-8844	,	_	_
27-206	8845-8851	Wonjae	_	_
27-207	8852-8855	and	_	_
27-208	8856-8860	Park	_	_
27-209	8860-8861	,	_	_
27-210	8862-8866	Song	_	_
27-211	8867-8870	and	_	_
27-212	8871-8876	Chang	_	_
27-213	8876-8877	,	_	_
27-214	8878-8884	Minsuk	_	_
27-215	8885-8890	Chang	_	_
27-216	8891-8894	and	_	_
27-217	8895-8897	Oh	_	_
27-218	8897-8898	,	_	_
27-219	8899-8904	Seong	_	_
27-220	8905-8909	Joon	_	_
27-221	8909-8910	}	_	_
27-222	8910-8911	,	_	_
27-223	8916-8920	year	_	_
27-224	8920-8921	=	_	_
27-225	8921-8922	{	_	_
27-226	8922-8926	2022	_	_
27-227	8926-8927	}	_	_
27-228	8927-8928	,	_	_
27-229	8933-8942	booktitle	_	_
27-230	8942-8943	=	_	_
27-231	8943-8944	{	_	_
27-232	8944-8952	European	_	_
27-233	8953-8963	Conference	_	_
27-234	8964-8966	on	_	_
27-235	8967-8975	Computer	_	_
27-236	8976-8982	Vision	_	_
27-237	8983-8984	(	_	_
27-238	8984-8988	ECCV	_	_
27-239	8988-8989	)	_	_
27-240	8989-8990	}	_	_
27-241	8990-8991	,	_	_
27-242	8992-8993	}	_	_
27-243	8995-8996	@	_	_
27-244	8996-9009	inproceedings	_	_
27-245	9009-9010	{	_	_
27-246	9010-9024	chun2024pcmepp	_	_
27-247	9024-9025	,	_	_
27-248	9030-9035	title	_	_
27-249	9035-9036	=	_	_
27-250	9036-9037	{	_	_
27-251	9037-9045	Improved	_	_
27-252	9046-9059	Probabilistic	_	_
27-253	9060-9070	Image-Text	_	_
27-254	9071-9086	Representations	_	_
27-255	9086-9087	}	_	_
27-256	9087-9088	,	_	_
27-257	9093-9099	author	_	_
27-258	9099-9100	=	_	_
27-259	9100-9101	{	_	_
27-260	9101-9105	Chun	_	_
27-261	9105-9106	,	_	_
27-262	9107-9115	Sanghyuk	_	_
27-263	9115-9116	}	_	_
27-264	9116-9117	,	_	_
27-265	9122-9126	year	_	_
27-266	9126-9127	=	_	_
27-267	9127-9128	{	_	_
27-268	9128-9132	2024	_	_
27-269	9132-9133	}	_	_
27-270	9133-9134	,	_	_
27-271	9139-9148	booktitle	_	_
27-272	9148-9149	=	_	_
27-273	9149-9150	{	_	_
27-274	9150-9163	International	_	_
27-275	9164-9174	Conference	_	_
27-276	9175-9177	on	_	_
27-277	9178-9186	Learning	_	_
27-278	9187-9202	Representations	_	_
27-279	9203-9204	(	_	_
27-280	9204-9208	ICLR	_	_
27-281	9208-9209	)	_	_
27-282	9209-9210	}	_	_
27-283	9210-9211	,	_	_
27-284	9212-9213	}	_	_
27-285	9214-9215	`	_	_
27-286	9215-9216	`	_	_
27-287	9216-9217	`	_	_
27-288	9219-9220	#	_	_
27-289	9220-9221	#	_	_
27-290	9222-9229	License	_	_
27-291	9231-9232	`	_	_
27-292	9232-9233	`	_	_
27-293	9233-9234	`	_	_
27-294	9235-9238	MIT	_	_
27-295	9239-9246	License	_	_
27-296	9248-9257	Copyright	_	_
27-297	9258-9259	(	_	_
27-298	9259-9260	c	_	_
27-299	9260-9261	)	_	_
27-300	9262-9266	2021	_	_
27-301	9266-9267	-	_	_
27-302	9267-9274	present	_	_
27-303	9275-9280	NAVER	_	_
27-304	9281-9285	Corp	_	_
27-305	9285-9286	.	_	_

#Text=Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
28-1	9288-9298	Permission	_	_
28-2	9299-9301	is	_	_
28-3	9302-9308	hereby	_	_
28-4	9309-9316	granted	_	_
28-5	9316-9317	,	_	_
28-6	9318-9322	free	_	_
28-7	9323-9325	of	_	_
28-8	9326-9332	charge	_	_
28-9	9332-9333	,	_	_
28-10	9334-9336	to	_	_
28-11	9337-9340	any	_	_
28-12	9341-9347	person	_	_
28-13	9348-9357	obtaining	_	_
28-14	9358-9359	a	_	_
28-15	9360-9364	copy	_	_
28-16	9365-9367	of	_	_
28-17	9368-9372	this	_	_
28-18	9373-9381	software	_	_
28-19	9382-9385	and	_	_
28-20	9386-9396	associated	_	_
28-21	9397-9410	documentation	_	_
28-22	9411-9416	files	_	_
28-23	9417-9418	(	_	_
28-24	9418-9421	the	_	_
28-25	9422-9423	"	_	_
28-26	9423-9431	Software	_	_
28-27	9431-9432	"	_	_
28-28	9432-9433	)	_	_
28-29	9433-9434	,	_	_
28-30	9435-9437	to	_	_
28-31	9438-9442	deal	_	_
28-32	9443-9445	in	_	_
28-33	9446-9449	the	_	_
28-34	9450-9458	Software	_	_
28-35	9459-9466	without	_	_
28-36	9467-9478	restriction	_	_
28-37	9478-9479	,	_	_
28-38	9480-9489	including	_	_
28-39	9490-9497	without	_	_
28-40	9498-9508	limitation	_	_
28-41	9509-9512	the	_	_
28-42	9513-9519	rights	_	_
28-43	9520-9522	to	_	_
28-44	9523-9526	use	_	_
28-45	9526-9527	,	_	_
28-46	9528-9532	copy	_	_
28-47	9532-9533	,	_	_
28-48	9534-9540	modify	_	_
28-49	9540-9541	,	_	_
28-50	9542-9547	merge	_	_
28-51	9547-9548	,	_	_
28-52	9549-9556	publish	_	_
28-53	9556-9557	,	_	_
28-54	9558-9568	distribute	_	_
28-55	9568-9569	,	_	_
28-56	9570-9580	sublicense	_	_
28-57	9580-9581	,	_	_
28-58	9582-9585	and	_	_
28-59	9585-9586	/	_	_
28-60	9586-9588	or	_	_
28-61	9589-9593	sell	_	_
28-62	9594-9600	copies	_	_
28-63	9601-9603	of	_	_
28-64	9604-9607	the	_	_
28-65	9608-9616	Software	_	_
28-66	9616-9617	,	_	_
28-67	9618-9621	and	_	_
28-68	9622-9624	to	_	_
28-69	9625-9631	permit	_	_
28-70	9632-9639	persons	_	_
28-71	9640-9642	to	_	_
28-72	9643-9647	whom	_	_
28-73	9648-9651	the	_	_
28-74	9652-9660	Software	_	_
28-75	9661-9663	is	_	_
28-76	9664-9673	furnished	_	_
28-77	9674-9676	to	_	_
28-78	9677-9679	do	_	_
28-79	9680-9682	so	_	_
28-80	9682-9683	,	_	_
28-81	9684-9691	subject	_	_
28-82	9692-9694	to	_	_
28-83	9695-9698	the	_	_
28-84	9699-9708	following	_	_
28-85	9709-9719	conditions	_	_
28-86	9719-9720	:	_	_
28-87	9722-9725	The	_	_
28-88	9726-9731	above	_	_
28-89	9732-9741	copyright	_	_
28-90	9742-9748	notice	_	_
28-91	9749-9752	and	_	_
28-92	9753-9757	this	_	_
28-93	9758-9768	permission	_	_
28-94	9769-9775	notice	_	_
28-95	9776-9781	shall	_	_
28-96	9782-9784	be	_	_
28-97	9785-9793	included	_	_
28-98	9794-9796	in	_	_
28-99	9797-9800	all	_	_
28-100	9801-9807	copies	_	_
28-101	9808-9810	or	_	_
28-102	9811-9822	substantial	_	_
28-103	9823-9831	portions	_	_
28-104	9832-9834	of	_	_
28-105	9835-9838	the	_	_
28-106	9839-9847	Software	_	_
28-107	9847-9848	.	_	_

#Text=THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
29-1	9850-9853	THE	_	_
29-2	9854-9862	SOFTWARE	_	_
29-3	9863-9865	IS	_	_
29-4	9866-9874	PROVIDED	_	_
29-5	9875-9876	"	_	_
29-6	9876-9878	AS	_	_
29-7	9879-9881	IS	_	_
29-8	9881-9882	"	_	_
29-9	9882-9883	,	_	_
29-10	9884-9891	WITHOUT	_	_
29-11	9892-9900	WARRANTY	_	_
29-12	9901-9903	OF	_	_
29-13	9904-9907	ANY	_	_
29-14	9908-9912	KIND	_	_
29-15	9912-9913	,	_	_
29-16	9914-9921	EXPRESS	_	_
29-17	9922-9924	OR	_	_
29-18	9925-9932	IMPLIED	_	_
29-19	9932-9933	,	_	_
29-20	9934-9943	INCLUDING	_	_
29-21	9944-9947	BUT	_	_
29-22	9948-9951	NOT	_	_
29-23	9952-9959	LIMITED	_	_
29-24	9960-9962	TO	_	_
29-25	9963-9966	THE	_	_
29-26	9967-9977	WARRANTIES	_	_
29-27	9978-9980	OF	_	_
29-28	9981-9996	MERCHANTABILITY	_	_
29-29	9996-9997	,	_	_
29-30	9998-10005	FITNESS	_	_
29-31	10006-10009	FOR	_	_
29-32	10010-10011	A	_	_
29-33	10012-10022	PARTICULAR	_	_
29-34	10023-10030	PURPOSE	_	_
29-35	10031-10034	AND	_	_
29-36	10035-10050	NONINFRINGEMENT	_	_
29-37	10050-10051	.	_	_

#Text=IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ```
30-1	10053-10055	IN	_	_
30-2	10056-10058	NO	_	_
30-3	10059-10064	EVENT	_	_
30-4	10065-10070	SHALL	_	_
30-5	10071-10074	THE	_	_
30-6	10075-10082	AUTHORS	_	_
30-7	10083-10085	OR	_	_
30-8	10086-10095	COPYRIGHT	_	_
30-9	10096-10103	HOLDERS	_	_
30-10	10104-10106	BE	_	_
30-11	10107-10113	LIABLE	_	_
30-12	10114-10117	FOR	_	_
30-13	10118-10121	ANY	_	_
30-14	10122-10127	CLAIM	_	_
30-15	10127-10128	,	_	_
30-16	10129-10136	DAMAGES	_	_
30-17	10137-10139	OR	_	_
30-18	10140-10145	OTHER	_	_
30-19	10146-10155	LIABILITY	_	_
30-20	10155-10156	,	_	_
30-21	10157-10164	WHETHER	_	_
30-22	10165-10167	IN	_	_
30-23	10168-10170	AN	_	_
30-24	10171-10177	ACTION	_	_
30-25	10178-10180	OF	_	_
30-26	10181-10189	CONTRACT	_	_
30-27	10189-10190	,	_	_
30-28	10191-10195	TORT	_	_
30-29	10196-10198	OR	_	_
30-30	10199-10208	OTHERWISE	_	_
30-31	10208-10209	,	_	_
30-32	10210-10217	ARISING	_	_
30-33	10218-10222	FROM	_	_
30-34	10222-10223	,	_	_
30-35	10224-10227	OUT	_	_
30-36	10228-10230	OF	_	_
30-37	10231-10233	OR	_	_
30-38	10234-10236	IN	_	_
30-39	10237-10247	CONNECTION	_	_
30-40	10248-10252	WITH	_	_
30-41	10253-10256	THE	_	_
30-42	10257-10265	SOFTWARE	_	_
30-43	10266-10268	OR	_	_
30-44	10269-10272	THE	_	_
30-45	10273-10276	USE	_	_
30-46	10277-10279	OR	_	_
30-47	10280-10285	OTHER	_	_
30-48	10286-10294	DEALINGS	_	_
30-49	10295-10297	IN	_	_
30-50	10298-10301	THE	_	_
30-51	10302-10310	SOFTWARE	_	_
30-52	10310-10311	.	_	_
30-53	10312-10313	`	_	_
30-54	10313-10314	`	_	_
30-55	10314-10315	`	_	_