```markdown
Clone the repo:  ``` git clone https://github.com/<SOFTWARE>ml-jku/vnegnn</SOFTWARE> ```  Setup dependencies:  ``` conda create --name vnegnn <PROGLANG>python</PROGLANG>=3.9 conda activate vnegnn conda install <SOFTWARE>pytorch</SOFTWARE>==2.1.2 <SOFTWARE>torchvision</SOFTWARE>==0.16.2 <SOFTWARE>torchaudio</SOFTWARE>==2.1.2 <SOFTWARE>pytorch-cuda</SOFTWARE>=12.1 -c pytorch -c nvidia conda install <SOFTWARE>pyg</SOFTWARE>==2.4.0 -c pyg conda env update --name vnegnn --file environment.yaml ```  Activate the environment:  ``` conda activate vnegnn ```  ## Usage Examples  Following commands can be executed in the directory of the cloned repository.  ### Predict  Provide your protein in `.pdb` format.  ``` <PROGLANG>python</PROGLANG> predict.py -i protein.pdb -o output -c model.ckpt -d cuda:0               # run prediction on GPU  <PROGLANG>python</PROGLANG> predict.py -i protein.pdb -o output -c model.ckpt -d cuda:0 -v            # run prediction on GPU and create visualization ```  #### Predict Output  The model outputs:  - `prediction.csv`: holding the predicted positions (x,y,z) of the virtual nodes and the corresponding ranks - `visualization.pse`: <SOFTWARE>PyMOL</SOFTWARE> session file containing the protein structure with the predicted virtual node positions, only created if the `-v` flag is used.a  ## Data  In our training and evaluation process, we adopted the methodology outlined in [<PUBLICATION>Equipocket</PUBLICATION>](https://arxiv.org/abs/2302.12177) with a modification: we utilized a single validation set in place of the 5-fold cross-validation, due to computational limitations.
```