```markdown
An example is:  ```<PROGLANG>python</PROGLANG> from <SOFTWARE>wildlifeml.training.evaluator</SOFTWARE> import <SOFTWARE>Evaluator</SOFTWARE>  evaluator = <SOFTWARE>Evaluator</SOFTWARE>(     detector_file_path='<path_to_images_megadetector.json>',     label_file_path='<path_to_labels.csv>',     dataset=training_dataset,     num_classes=10,     conf_threshold=0.1,     empty_class_id=99 ) ```  For a trained model, which is contained in a `<SOFTWARE>WildlifeTrainer</SOFTWARE>`, the `<EVALMETRIC>accuracy</EVALMETRIC>`, `<EVALMETRIC>precision</EVALMETRIC>`, `<EVALMETRIC>recall</EVALMETRIC>` and `<EVALMETRIC>f1 score</EVALMETRIC>` is computed as:  ```<PROGLANG>python</PROGLANG> evaluator.evaluate(trainer) metrics = evaluator.compute_metrics() ```  If you wish to extract the predictions and ground-truth labels for all individual observations, use `<SOFTWARE>evaluator.get_details()</SOFTWARE>`.  ### 06: Active Learning  Apart from fitting a model in a fully supervised way, we offer an active learning pipeline.
```