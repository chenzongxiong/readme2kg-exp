```java LoadingCache<Key, Graph> graphs = <PROGLANG>Caffeine</PROGLANG>.newBuilder()     .maximumSize(10_000)     .expireAfterWrite(Duration.ofMinutes(5))     .refreshAfterWrite(Duration.ofMinutes(1))     .build(key -> createExpensiveGraph(key)); ```  #### Features at a Glance  <PROGLANG>Caffeine</PROGLANG> provides flexible construction to create a cache with a combination of the following features:  * [automatic loading of entries][population] into the cache, optionally asynchronously  * [size-based eviction][size] when a maximum is exceeded based on [frequency and recency][efficiency]  * [time-based expiration][time] of entries, measured since last access or last write  * [asynchronously refresh][refresh] when the first stale request for an entry occurs  * keys automatically wrapped in [weak references][reference]  * values automatically wrapped in [weak or soft references][reference]  * [notification][listener] of evicted (or otherwise removed) entries  * [writes propagated][compute] to an external resource  * accumulation of cache access [statistics][statistics]  In addition, <PROGLANG>Caffeine</PROGLANG> offers the following extensions:  * [<SOFTWARE>JSR-107 JCache</SOFTWARE>][jsr107]  * [<SOFTWARE>Guava adapters</SOFTWARE>][guava-adapter]  * [<SOFTWARE>Simulation</SOFTWARE>][simulator]  Use <PROGLANG>Caffeine</PROGLANG> in a community provided integration:  * [<SOFTWARE>Play Framework</SOFTWARE>][play]: High velocity web framework  * [<SOFTWARE>Micronaut</SOFTWARE>][micronaut]: A modern, full-stack framework  * [<SOFTWARE>Spring Cache</SOFTWARE>][spring]: As of Spring 4.3 & Boot 1.4  * [<SOFTWARE>Akka</SOFTWARE>][akka-http]: Build reactive applications easily  * [<SOFTWARE>Quarkus</SOFTWARE>][quarkus]: Supersonic Subatomic Java  * [<SOFTWARE>Scaffeine</SOFTWARE>][scaffeine]: Scala wrapper for <PROGLANG>Caffeine</PROGLANG>  * [<SOFTWARE>ScalaCache</SOFTWARE>][scala-cache]: Simple caching in <PROGLANG>Scala</PROGLANG>  * [<SOFTWARE>Camel</SOFTWARE>][camel]: Routing and mediation engine  * [<SOFTWARE>JHipster</SOFTWARE>][jhipster]: Generate, develop, deploy  Powering infrastructure near you:  * [<SOFTWARE>Dropwizard</SOFTWARE>][dropwizard]: Ops-friendly, high-performance, RESTful APIs  * [<SOFTWARE>Cassandra</SOFTWARE>][cassandra]: Manage massive amounts of data, fast  * [<SOFTWARE>Accumulo</SOFTWARE>][accumulo]: A sorted, distributed key/value store  * [<SOFTWARE>HBase</SOFTWARE>][hbase]: A distributed, scalable, big data store  * [<SOFTWARE>Apache Solr</SOFTWARE>][solr]: Blazingly fast enterprise search  * [<SOFTWARE>Infinispan</SOFTWARE>][infinispan]: Distributed in-memory data grid  * [<SOFTWARE>Redisson</SOFTWARE>][redisson]: Ultra-fast in-memory data grid  * [<SOFTWARE>OpenWhisk</SOFTWARE>][open-whisk]: Serverless cloud platform  * [<SOFTWARE>Corfu</SOFTWARE>][corfu]: A cluster consistency platform  * [<SOFTWARE>Grails</SOFTWARE>][grails]: Groovy-based web framework  * [<SOFTWARE>Finagle</SOFTWARE>][finagle]: Extensible RPC system  * [<SOFTWARE>Neo4j</SOFTWARE>][neo4j]: Graphs for Everyone  * [<SOFTWARE>Druid</SOFTWARE>][druid]: Real-time analytics  ### In the News   * An in-depth description of <PROGLANG>Caffeine</PROGLANG>'s architecture
```