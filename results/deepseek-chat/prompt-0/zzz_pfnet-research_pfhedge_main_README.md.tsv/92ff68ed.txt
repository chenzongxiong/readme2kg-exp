```py import <PROGLANG>pfhedge</PROGLANG>.autogreek as autogreek from <PROGLANG>pfhedge</PROGLANG>.instruments import BrownianStock from <PROGLANG>pfhedge</PROGLANG>.instruments import EuropeanOption from <PROGLANG>pfhedge</PROGLANG>.nn import Hedger from <PROGLANG>pfhedge</PROGLANG>.nn import WhalleyWilmott  derivative = EuropeanOption(BrownianStock(cost=1e-4))  model = WhalleyWilmott(derivative) hedger = Hedger(model, inputs=model.inputs())  def pricer(spot):     return hedger.price(derivative, init_state=(spot,), enable_grad=True)  delta = autogreek.delta(pricer, spot=torch.tensor(1.0)) # tensor(0.5092) gamma = autogreek.gamma(pricer, spot=torch.tensor(1.0)) # tensor(0.0885) ```  ## Contribution  Any contributions to <PROJECT>PFHedge</PROJECT> are more than welcome!
```