```markdown
For performing/evaluating the validation (based on 5 runs) use the function-call: ``` # ------------ validation of <DATASET>physionet</DATASET> training ------------- get_training_overview(     path='{}saved_models_<DATASET>physionet</DATASET>_comparison/'.format(train.data_path),     params_extract_desc=('<DATASET>dataset</DATASET>', 'network_size', 'dropout_rate',                          'hidden_size', 'data_index'),     val_test_params_extract=(("max", "epoch", "epoch", "epochs_trained"),                              ("min", "<EVALMETRIC>eval_metric</EVALMETRIC>",                               "<EVALMETRIC>eval_metric</EVALMETRIC>", "<EVALMETRIC>eval_metric_min</EVALMETRIC>"),                              ("min", "<EVALMETRIC>eval_metric_2</EVALMETRIC>",                               "<EVALMETRIC>eval_metric_2</EVALMETRIC>", "<EVALMETRIC>eval_metric_2_min</EVALMETRIC>"),                              ) )  get_cross_validation(     path='{}saved_models_<DATASET>physionet</DATASET>_comparison/'.format(train.data_path),     save_path='{}saved_models_<DATASET>physionet</DATASET>_comparison/'               'cross_val.csv'.format(train.data_path),     param_combinations=({'network_size': 50},                         {'network_size': 200},                         {'network_size': 400}),     val_test_params_extract=(("max", "epoch", "epoch", "epochs_trained"),                              ("min", "<EVALMETRIC>eval_metric</EVALMETRIC>",                               "<EVALMETRIC>eval_metric</EVALMETRIC>", "<EVALMETRIC>eval_metric_min</EVALMETRIC>"),                              ("min", "<EVALMETRIC>eval_metric_2</EVALMETRIC>",                               "<EVALMETRIC>eval_metric_2</EVALMETRIC>", "<EVALMETRIC>eval_metric_2_min</EVALMETRIC>"),                              ("last", "<EVALMETRIC>eval_metric_2</EVALMETRIC>",                               "<EVALMETRIC>eval_metric_2</EVALMETRIC>", "<EVALMETRIC>eval_metric_2_last</EVALMETRIC>"),                              ("min", "train_loss",                               "<EVALMETRIC>eval_metric_2</EVALMETRIC>", "<EVALMETRIC>eval_metric_2_eval_min</EVALMETRIC>"),                              ),     target_col=('<EVALMETRIC>eval_metric_min</EVALMETRIC>', '<EVALMETRIC>eval_metric_2_min</EVALMETRIC>',                 '<EVALMETRIC>eval_metric_2_last</EVALMETRIC>', '<EVALMETRIC>eval_metric_2_eval_min</EVALMETRIC>') ) ```  in extras.py.       ## Results  ### Evolution of model predictions during training Evolution of the model output (with old name "controlled ODE-RNN") on sample test paths  during training (i.e. increasing umber of epochs) for the 3 synthetic <DATASET>datasets</DATASET>.
```