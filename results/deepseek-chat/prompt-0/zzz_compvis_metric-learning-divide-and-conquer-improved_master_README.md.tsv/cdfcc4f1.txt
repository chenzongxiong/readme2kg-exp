```markdown
Some deviations in results based on different <SOFTWARE>PyTorch</SOFTWARE>/<SOFTWARE>Cuda</SOFTWARE>/<SOFTWARE>Faiss</SOFTWARE> versions and hardware (e.g. between <SOFTWARE>P100</SOFTWARE> and <SOFTWARE>RTX GPUs</SOFTWARE>) are to be expected._   ## Related Repos  * <PROJECT>Divide and Conquer the Embedding Space for Metric Learning</PROJECT> (our previous paper on <CONFERENCE>CVPR 2019</CONFERENCE>):  https://github.com/CompVis/metric-learning-divide-and-conquer * An easy-to-use repo to start your <PROJECT>DML</PROJECT> research, containing collections of models, losses, and samplers implemented in <SOFTWARE>PyTorch</SOFTWARE>: https://github.com/Confusezius/Revisiting_Deep_Metric_Learning_PyTorch  ## BibTex If you use this code in your research, please cite the following papers:  ``` @InProceedings{dcesml,   title={<PUBLICATION>Divide and Conquer the Embedding Space for Metric Learning</PUBLICATION>},   author={Sanakoyeu, Artsiom and Tschernezki, Vadim and B\"uchler, Uta and Ommer, Bj\"orn},   booktitle={<PUBLICATION>Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</PUBLICATION>},   year={2019} }  @article{sanakoyeu2021improving,   title={<PUBLICATION>Improving Deep Metric Learning by Divide and Conquer</PUBLICATION>},    author={Artsiom Sanakoyeu and Pingchuan Ma and Vadim Tschernezki and Bj√∂rn Ommer},   journal={<PUBLICATION>IEEE Transactions on pattern analysis and machine intelligence</PUBLICATION>},   year={2021},   publisher={<PUBLICATION>IEEE</PUBLICATION>} } ```
```