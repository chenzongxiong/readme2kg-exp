Some deviations in results based on different <PROGLANG>PyTorch</PROGLANG>/Cuda/<SOFTWARE>Faiss</SOFTWARE> versions and hardware (e.g. between P100 and RTX GPUs) are to be expected._ ## Related Repos * Divide and Conquer the Embedding Space for Metric Learning (our previous paper on <CONFERENCE>CVPR 2019</CONFERENCE>): https://github.com/CompVis/metric-learning-divide-and-conquer * An easy-to-use repo to start your DML research, containing collections of models, losses, and samplers implemented in <PROGLANG>PyTorch</PROGLANG>: https://github.com/Confusezius/Revisiting_Deep_Metric_Learning_<PROGLANG>PyTorch</PROGLANG> ## BibTex If you use this code in your research, please cite the following papers: ``` @InProceedings{dcesml, title={Divide and Conquer the Embedding Space for Metric Learning}, author={Sanakoyeu, Artsiom and Tschernezki, Vadim and B\"uchler, Uta and Ommer, Bj\"orn}, booktitle={<PUBLICATION>Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition</PUBLICATION>}, year={2019} } @article{sanakoyeu2021improving, title={Improving Deep Metric Learning by Divide and Conquer}, author={Artsiom Sanakoyeu and Pingchuan Ma and Vadim Tschernezki and Bj√∂rn Ommer}, journal={<PUBLICATION>IEEE Transactions on pattern analysis and machine intelligence</PUBLICATION>}, year={2021}, publisher={IEEE} } ```
