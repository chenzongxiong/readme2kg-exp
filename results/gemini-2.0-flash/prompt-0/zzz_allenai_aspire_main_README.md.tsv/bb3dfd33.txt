/aspire-biencoder-compsci-spec-full' # Load hyperparameters from disk. with codecs.open(os.path.join(model_path, 'run_info.json'), 'r') as fp: hparams = json.load(fp) model_hparams = hparams['all_hparams'] # Initialize the tokenizer and model. aspire_tok = AutoTokenizer.from_pretrained(model_hparams['base-pt-layer']) aspire_bienc = AspireBiEnc(model_hparams) # Load model parameters from disk. model_fname = os.path.join(model_path, 'model_cur_best.pt') aspire_bienc.load_state_dict(torch.load(model_fname)) # Encode example input. title = "Multi-Vector Models with Textual Guidance for Fine-Grained Scientific " "Document Similarity" abstract = "We present a new scientific document similarity model based on matching " "fine-grained aspects of texts." d = [title + aspire_tok.sep_token + abstract] inputs = aspire_tok(d, padding=True, truncation=True, return_tensors="pt", max_length=512) clsrep = aspire_bienc.forward(inputs) ``` #### Evaluation Datasets <a name="evaldata"></a> The paper uses the following evaluation datasets: - <DATASET>RELISH</DATASET> was created in [Brown et al. 2019](https://academic.oup.com/database/article/doi/10.1093/database/baz085/5608006?
