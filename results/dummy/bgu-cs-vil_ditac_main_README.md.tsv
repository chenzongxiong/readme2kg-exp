#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Trainable Highly-expressive Activation Functions \[ECCV 2024\]  \[Irit Chelly\*\](https://irita42.wixsite.com/mysite), \[Shahaf E.
1-1	0-1	#	_	_
1-2	2-11	Trainable	_	_
1-3	12-29	Highly-expressive	_	_
1-4	30-40	Activation	_	_
1-5	41-50	Functions	*[485]	SOFTWARE[485]
1-6	51-52	\[	*[485]	SOFTWARE[485]
1-7	52-56	ECCV	*[485]	SOFTWARE[485]
1-8	57-61	2024	*[485]	SOFTWARE[485]
1-9	61-62	\]	*[485]	SOFTWARE[485]
1-10	64-65	\[	*[485]	SOFTWARE[485]
1-11	65-69	Irit	*[485]	SOFTWARE[485]
1-12	70-76	Chelly	*[485]	SOFTWARE[485]
1-13	76-77	\*	*[485]	SOFTWARE[485]
1-14	77-78	\]	*[485]	SOFTWARE[485]
1-15	78-79	(	*[485]	SOFTWARE[485]
1-16	79-84	https	*[485]	SOFTWARE[485]
1-17	84-85	:	*[485]	SOFTWARE[485]
1-18	85-86	/	*[485]	SOFTWARE[485]
1-19	86-87	/	*[485]	SOFTWARE[485]
1-20	87-94	irita42	*[485]	SOFTWARE[485]
1-21	94-95	.	*[485]	SOFTWARE[485]
1-22	95-106	wixsite.com	_	_
1-23	106-107	/	_	_
1-24	107-113	mysite	_	_
1-25	113-114	)	_	_
1-26	114-115	,	_	_
1-27	116-117	\[	_	_
1-28	117-123	Shahaf	_	_
1-29	124-125	E	_	_
1-30	125-126	.	_	_

#Text=Finder\*\](https://shahaffind.github.io/), \[Shira Ifergane\](https://www.linkedin.com/in/shira-ifergane/), and \[Oren Freifeld\](https://www.cs.bgu.ac.il/~orenfr/)
2-1	127-133	Finder	_	_
2-2	133-134	\*	_	_
2-3	134-135	\]	_	_
2-4	135-136	(	_	_
2-5	136-141	https	_	_
2-6	141-142	:	_	_
2-7	142-143	/	_	_
2-8	143-144	/	_	_
2-9	144-164	shahaffind.github.io	_	_
2-10	164-165	/	_	_
2-11	165-166	)	_	_
2-12	166-167	,	_	_
2-13	168-169	\[	_	_
2-14	169-174	Shira	_	_
2-15	175-183	Ifergane	_	_
2-16	183-184	\]	_	_
2-17	184-185	(	_	_
2-18	185-190	https	_	_
2-19	190-191	:	_	_
2-20	191-192	/	_	_
2-21	192-193	/	_	_
2-22	193-209	www.linkedin.com	_	_
2-23	209-210	/	_	_
2-24	210-212	in	_	_
2-25	212-213	/	_	_
2-26	213-227	shira-ifergane	_	_
2-27	227-228	/	_	_
2-28	228-229	)	_	_
2-29	229-230	,	_	_
2-30	231-234	and	_	_
2-31	235-236	\[	_	_
2-32	236-240	Oren	_	_
2-33	241-249	Freifeld	_	_
2-34	249-250	\]	*[445]	CONFERENCE[445]
2-35	250-251	(	_	_
2-36	251-256	https	_	_
2-37	256-257	:	_	_
2-38	257-258	/	_	_
2-39	258-259	/	_	_
2-40	259-275	www.cs.bgu.ac.il	_	_
2-41	275-276	/	_	_
2-42	276-277	~	_	_
2-43	277-283	orenfr	_	_
2-44	283-284	/	_	_
2-45	284-285	)	_	_

#Text=.
3-1	285-286	.	_	_

#Text=\[!
4-1	288-289	\[	_	_
4-2	289-290	!	_	_

#Text=\[arXiv\](https://img.shields.io/badge/arXiv-2407.07564-b31b1b.svg?
5-1	290-291	\[	_	_
5-2	291-296	arXiv	_	_
5-3	296-297	\]	_	_
5-4	297-298	(	_	_
5-5	298-303	https	_	_
5-6	303-304	:	_	_
5-7	304-305	/	_	_
5-8	305-306	/	_	_
5-9	306-320	img.shields.io	_	_
5-10	320-321	/	_	_
5-11	321-326	badge	_	_
5-12	326-327	/	_	_
5-13	327-332	arXiv	_	_
5-14	332-333	-	_	_
5-15	333-343	2407.07564	_	_
5-16	343-344	-	_	_
5-17	344-354	b31b1b.svg	_	_
5-18	354-355	?	_	_

#Text=style=flat)\](https://arxiv.org/abs/2407.07564)  ### Requirements - python 3.12 - torch 2.2.2  - difw 0.0.29 - scikit-learn 1.5.1  `difw` can be fragile, make sure that it compiles successfully.
6-1	355-360	style	_	_
6-2	360-361	=	_	_
6-3	361-365	flat	_	_
6-4	365-366	)	_	_
6-5	366-367	\]	_	_
6-6	367-368	(	_	_
6-7	368-373	https	_	_
6-8	373-374	:	_	_
6-9	374-375	/	_	_
6-10	375-376	/	_	_
6-11	376-385	arxiv.org	_	_
6-12	385-386	/	_	_
6-13	386-389	abs	_	_
6-14	389-390	/	_	_
6-15	390-400	2407.07564	_	_
6-16	400-401	)	_	_
6-17	403-404	#	_	_
6-18	404-405	#	_	_
6-19	405-406	#	_	_
6-20	407-419	Requirements	_	_
6-21	420-421	-	_	_
6-22	422-428	python	_	_
6-23	429-433	3.12	_	_
6-24	434-435	-	_	_
6-25	436-441	torch	_	_
6-26	442-447	2.2.2	_	_
6-27	449-450	-	_	_
6-28	451-455	difw	_	_
6-29	456-462	0.0.29	_	_
6-30	463-464	-	_	_
6-31	465-477	scikit-learn	*[426]	ONTOLOGY[426]
6-32	478-483	1.5.1	*[426]	ONTOLOGY[426]
6-33	485-486	`	*[426]	ONTOLOGY[426]
6-34	486-490	difw	*[426]	ONTOLOGY[426]
6-35	490-491	`	*[426]	ONTOLOGY[426]
6-36	492-495	can	*[426]	ONTOLOGY[426]
6-37	496-498	be	*[426]	ONTOLOGY[426]
6-38	499-506	fragile	*[426]	ONTOLOGY[426]
6-39	506-507	,	*[426]	ONTOLOGY[426]
6-40	508-512	make	*[426]	ONTOLOGY[426]
6-41	513-517	sure	*[426]	ONTOLOGY[426]
6-42	518-522	that	*[426]	ONTOLOGY[426]
6-43	523-525	it	*[426]	ONTOLOGY[426]
6-44	526-534	compiles	*[426]	ONTOLOGY[426]
6-45	535-547	successfully	_	_
6-46	547-548	.	_	_

#Text=We've successfully compiled it with cuda version 12.2.
7-1	549-554	We've	_	_
7-2	555-567	successfully	*[436]	DATASET[436]
7-3	568-576	compiled	*[436]	DATASET[436]
7-4	577-579	it	*[436]	DATASET[436]
7-5	580-584	with	*[436]	DATASET[436]
7-6	585-589	cuda	*[436]	DATASET[436]
7-7	590-597	version	*[436]	DATASET[436]
7-8	598-602	12.2	_	_
7-9	602-603	.	_	_

#Text=Note that you might have to update c++ compiler and/or paths, e.g.: ```sh conda install cxx-compiler -c conda-forge export CPATH=/usr/local/cuda-12/targets/x86\_64-linux/include:$CPATH export LD\_LIBRARY\_PATH=/usr/local/cuda-12/targets/x86\_64-linux/lib:$LD\_LIBRARY\_PATH export PATH=/usr/local/cuda-12/bin:$PATH ```  ### How to use You can import the activation layer and use it within your network.
8-1	606-610	Note	_	_
8-2	611-615	that	_	_
8-3	616-619	you	_	_
8-4	620-625	might	_	_
8-5	626-630	have	_	_
8-6	631-633	to	_	_
8-7	634-640	update	_	_
8-8	641-642	c	_	_
8-9	642-643	+	_	_
8-10	643-644	+	_	_
8-11	645-653	compiler	_	_
8-12	654-657	and	_	_
8-13	657-658	/	_	_
8-14	658-660	or	_	_
8-15	661-666	paths	_	_
8-16	666-667	,	*[483]	EVALMETRIC[483]
8-17	668-671	e.g	*[483]	EVALMETRIC[483]
8-18	671-672	.	*[483]	EVALMETRIC[483]
8-19	672-673	:	*[483]	EVALMETRIC[483]
8-20	674-675	`	*[483]	EVALMETRIC[483]
8-21	675-676	`	*[483]	EVALMETRIC[483]
8-22	676-677	`	*[483]	EVALMETRIC[483]
8-23	677-679	sh	*[483]	EVALMETRIC[483]
8-24	680-685	conda	*[483]	EVALMETRIC[483]
8-25	686-693	install	*[483]	EVALMETRIC[483]
8-26	694-706	cxx-compiler	*[483]	EVALMETRIC[483]
8-27	707-708	-	*[483]	EVALMETRIC[483]
8-28	708-709	c	*[483]	EVALMETRIC[483]
8-29	710-721	conda-forge	*[483]	EVALMETRIC[483]
8-30	722-728	export	*[483]	EVALMETRIC[483]
8-31	729-734	CPATH	*[483]	EVALMETRIC[483]
8-32	734-735	=	*[483]	EVALMETRIC[483]
8-33	735-736	/	*[483]	EVALMETRIC[483]
8-34	736-739	usr	*[483]	EVALMETRIC[483]
8-35	739-740	/	*[483]	EVALMETRIC[483]
8-36	740-745	local	*[483]	EVALMETRIC[483]
8-37	745-746	/	*[483]	EVALMETRIC[483]
8-38	746-750	cuda	*[483]	EVALMETRIC[483]
8-39	750-751	-	*[483]	EVALMETRIC[483]
8-40	751-753	12	*[483]	EVALMETRIC[483]
8-41	753-754	/	*[483]	EVALMETRIC[483]
8-42	754-761	targets	*[483]	EVALMETRIC[483]
8-43	761-762	/	*[483]	EVALMETRIC[483]
8-44	762-765	x86	*[483]	EVALMETRIC[483]
8-45	765-766	\_	*[483]	EVALMETRIC[483]
8-46	766-768	64	*[483]	EVALMETRIC[483]
8-47	768-769	-	*[483]	EVALMETRIC[483]
8-48	769-774	linux	*[483]	EVALMETRIC[483]
8-49	774-775	/	*[483]	EVALMETRIC[483]
8-50	775-782	include	*[483]	EVALMETRIC[483]
8-51	782-783	:	*[483]	EVALMETRIC[483]
8-52	783-784	$	*[483]	EVALMETRIC[483]
8-53	784-789	CPATH	*[483]	EVALMETRIC[483]
8-54	790-796	export	*[483]	EVALMETRIC[483]
8-55	797-812	LD\_LIBRARY\_PATH	*[483]	EVALMETRIC[483]
8-56	812-813	=	*[483]	EVALMETRIC[483]
8-57	813-814	/	*[483]	EVALMETRIC[483]
8-58	814-817	usr	*[483]	EVALMETRIC[483]
8-59	817-818	/	_	_
8-60	818-823	local	_	_
8-61	823-824	/	_	_
8-62	824-828	cuda	_	_
8-63	828-829	-	_	_
8-64	829-831	12	_	_
8-65	831-832	/	_	_
8-66	832-839	targets	_	_
8-67	839-840	/	_	_
8-68	840-843	x86	_	_
8-69	843-844	\_	_	_
8-70	844-846	64	_	_
8-71	846-847	-	_	_
8-72	847-852	linux	_	_
8-73	852-853	/	_	_
8-74	853-856	lib	_	_
8-75	856-857	:	_	_
8-76	857-858	$	_	_
8-77	858-873	LD\_LIBRARY\_PATH	_	_
8-78	874-880	export	_	_
8-79	881-885	PATH	_	_
8-80	885-886	=	_	_
8-81	886-887	/	_	_
8-82	887-890	usr	_	_
8-83	890-891	/	_	_
8-84	891-896	local	_	_
8-85	896-897	/	_	_
8-86	897-901	cuda	_	_
8-87	901-902	-	_	_
8-88	902-904	12	_	_
8-89	904-905	/	_	_
8-90	905-908	bin	_	_
8-91	908-909	:	_	_
8-92	909-910	$	_	_
8-93	910-914	PATH	_	_
8-94	915-916	`	_	_
8-95	916-917	`	_	_
8-96	917-918	`	_	_
8-97	920-921	#	_	_
8-98	921-922	#	_	_
8-99	922-923	#	_	_
8-100	924-927	How	_	_
8-101	928-930	to	_	_
8-102	931-934	use	_	_
8-103	935-938	You	_	_
8-104	939-942	can	_	_
8-105	943-949	import	_	_
8-106	950-953	the	_	_
8-107	954-964	activation	_	_
8-108	965-970	layer	_	_
8-109	971-974	and	_	_
8-110	975-978	use	_	_
8-111	979-981	it	_	_
8-112	982-988	within	_	_
8-113	989-993	your	_	_
8-114	994-1001	network	_	_
8-115	1001-1002	.	_	_

#Text=```python import torch from ditac import DiTAC  act = DiTAC() x = torch.randn(8,32,20,20).to('cuda')  act(x) ```  You can recreate Fig. 1 using the sample code: ```sh python run\_regression.py ```  \*\*Other experiments' code will be uploaded soon\*\*  ## License This project is released under the MIT license.
9-1	1003-1004	`	_	_
9-2	1004-1005	`	_	_
9-3	1005-1006	`	_	_
9-4	1006-1012	python	_	_
9-5	1013-1019	import	_	_
9-6	1020-1025	torch	_	_
9-7	1026-1030	from	_	_
9-8	1031-1036	ditac	_	_
9-9	1037-1043	import	_	_
9-10	1044-1049	DiTAC	_	_
9-11	1051-1054	act	_	_
9-12	1055-1056	=	_	_
9-13	1057-1062	DiTAC	_	_
9-14	1062-1063	(	_	_
9-15	1063-1064	)	_	_
9-16	1065-1066	x	_	_
9-17	1067-1068	=	_	_
9-18	1069-1080	torch.randn	_	_
9-18	1069-1074	torch	_	_
9-19	1080-1081	(	_	_
9-20	1081-1091	8,32,20,20	_	_
9-21	1091-1092	)	_	_
9-22	1092-1093	.	_	_
9-23	1093-1095	to	_	_
9-24	1095-1096	(	_	_
9-25	1096-1097	'	_	_
9-26	1097-1101	cuda	_	_
9-27	1101-1102	'	_	_
9-28	1102-1103	)	_	_
9-29	1105-1108	act	_	_
9-30	1108-1109	(	_	_
9-31	1109-1110	x	_	_
9-32	1110-1111	)	_	_
9-33	1112-1113	`	_	_
9-34	1113-1114	`	_	_
9-35	1114-1115	`	_	_
9-36	1117-1120	You	_	_
9-37	1121-1124	can	_	_
9-38	1125-1133	recreate	_	_
9-39	1134-1137	Fig	_	_
9-40	1137-1138	.	*[437]	DATASET[437]
9-41	1139-1140	1	*[437]	DATASET[437]
9-42	1141-1146	using	*[437]	DATASET[437]
9-43	1147-1150	the	*[437]	DATASET[437]
9-44	1151-1157	sample	*[437]	DATASET[437]
9-45	1158-1162	code	*[437]	DATASET[437]
9-46	1162-1163	:	*[437]	DATASET[437]
9-47	1164-1165	`	*[437]	DATASET[437]
9-48	1165-1166	`	*[437]	DATASET[437]
9-49	1166-1167	`	*[437]	DATASET[437]
9-50	1167-1169	sh	*[437]	DATASET[437]
9-51	1170-1176	python	_	_
9-52	1177-1194	run\_regression.py	_	_
9-53	1195-1196	`	_	_
9-54	1196-1197	`	_	_
9-55	1197-1198	`	_	_
9-56	1200-1201	\*	_	_
9-57	1201-1202	\*	_	_
9-58	1202-1207	Other	_	_
9-59	1208-1219	experiments	_	_
9-60	1219-1220	'	_	_
9-61	1221-1225	code	_	_
9-62	1226-1230	will	_	_
9-63	1231-1233	be	_	_
9-64	1234-1242	uploaded	_	_
9-65	1243-1247	soon	_	_
9-66	1247-1248	\*	_	_
9-67	1248-1249	\*	_	_
9-68	1251-1252	#	_	_
9-69	1252-1253	#	_	_
9-70	1254-1261	License	_	_
9-71	1262-1266	This	_	_
9-72	1267-1274	project	_	_
9-73	1275-1277	is	_	_
9-74	1278-1286	released	_	_
9-75	1287-1292	under	_	_
9-76	1293-1296	the	_	_
9-77	1297-1300	MIT	_	_
9-78	1301-1308	license	_	_
9-79	1308-1309	.	_	_

#Text=Please see the \[LICENSE\](LICENSE) file for more information.   ## Citation If you find this repository helpful, please consider citing our paper: ``` @inproceedings{Chelly:ECCV:2024DiTAC,   title     = {Trainable Highly-expressive Activation Functions},   author    = {Chelly, Irit and Finder, Shahaf E and Ifergane, Shira and Freifeld, Oren},   booktitle = {European Conference on Computer Vision},   year      = {2024}, } ``` Please also consider citing previous works: ``` @inproceedings{martinez2022closed,   title={Closed-form diffeomorphic transformations for time series alignment},   author={Martinez, I{\\~n}igo and Viles, Elisabeth and Olaizola, Igor G},   booktitle={International Conference on Machine Learning},   pages={15122--15158},   year={2022},   organization={PMLR} }  @article{freifeld2017transformations,   title={Transformations based on continuous piecewise-affine velocity fields},   author={Freifeld, Oren and Hauberg, S{\\o}ren and Batmanghelich, Kayhan and Fisher, Jonn W},   journal={IEEE transactions on pattern analysis and machine intelligence},   volume={39},   number={12},   pages={2496--2509},   year={2017},   publisher={IEEE} } ```
10-1	1310-1316	Please	_	_
10-2	1317-1320	see	_	_
10-3	1321-1324	the	_	_
10-4	1325-1326	\[	_	_
10-5	1326-1333	LICENSE	_	_
10-6	1333-1334	\]	_	_
10-7	1334-1335	(	_	_
10-8	1335-1342	LICENSE	_	_
10-9	1342-1343	)	_	_
10-10	1344-1348	file	_	_
10-11	1349-1352	for	_	_
10-12	1353-1357	more	_	_
10-13	1358-1369	information	_	_
10-14	1369-1370	.	_	_
10-15	1373-1374	#	_	_
10-16	1374-1375	#	_	_
10-17	1376-1384	Citation	_	_
10-18	1385-1387	If	_	_
10-19	1388-1391	you	_	_
10-20	1392-1396	find	_	_
10-21	1397-1401	this	_	_
10-22	1402-1412	repository	_	_
10-23	1413-1420	helpful	_	_
10-24	1420-1421	,	_	_
10-25	1422-1428	please	_	_
10-26	1429-1437	consider	_	_
10-27	1438-1444	citing	_	_
10-28	1445-1448	our	_	_
10-29	1449-1454	paper	_	_
10-30	1454-1455	:	_	_
10-31	1456-1457	`	_	_
10-32	1457-1458	`	_	_
10-33	1458-1459	`	_	_
10-34	1460-1461	@	_	_
10-35	1461-1474	inproceedings	_	_
10-36	1474-1475	{	_	_
10-37	1475-1481	Chelly	_	_
10-38	1481-1482	:	_	_
10-39	1482-1486	ECCV	_	_
10-40	1486-1487	:	_	_
10-41	1487-1496	2024DiTAC	_	_
10-42	1496-1497	,	_	_
10-43	1500-1505	title	_	_
10-44	1510-1511	=	_	_
10-45	1512-1513	{	_	_
10-46	1513-1522	Trainable	_	_
10-47	1523-1540	Highly-expressive	_	_
10-48	1541-1551	Activation	_	_
10-49	1552-1561	Functions	_	_
10-50	1561-1562	}	_	_
10-51	1562-1563	,	_	_
10-52	1566-1572	author	_	_
10-53	1576-1577	=	_	_
10-54	1578-1579	{	_	_
10-55	1579-1585	Chelly	_	_
10-56	1585-1586	,	_	_
10-57	1587-1591	Irit	_	_
10-58	1592-1595	and	_	_
10-59	1596-1602	Finder	_	_
10-60	1602-1603	,	_	_
10-61	1604-1610	Shahaf	_	_
10-62	1611-1612	E	_	_
10-63	1613-1616	and	_	_
10-64	1617-1625	Ifergane	_	_
10-65	1625-1626	,	_	_
10-66	1627-1632	Shira	_	_
10-67	1633-1636	and	_	_
10-68	1637-1645	Freifeld	_	_
10-69	1645-1646	,	_	_
10-70	1647-1651	Oren	_	_
10-71	1651-1652	}	_	_
10-72	1652-1653	,	_	_
10-73	1656-1665	booktitle	_	_
10-74	1666-1667	=	_	_
10-75	1668-1669	{	_	_
10-76	1669-1677	European	_	_
10-77	1678-1688	Conference	_	_
10-78	1689-1691	on	_	_
10-79	1692-1700	Computer	_	_
10-80	1701-1707	Vision	_	_
10-81	1707-1708	}	_	_
10-82	1708-1709	,	_	_
10-83	1712-1716	year	_	_
10-84	1722-1723	=	_	_
10-85	1724-1725	{	_	_
10-86	1725-1729	2024	_	_
10-87	1729-1730	}	_	_
10-88	1730-1731	,	_	_
10-89	1732-1733	}	_	_
10-90	1734-1735	`	_	_
10-91	1735-1736	`	_	_
10-92	1736-1737	`	_	_
10-93	1738-1744	Please	_	_
10-94	1745-1749	also	_	_
10-95	1750-1758	consider	_	_
10-96	1759-1765	citing	_	_
10-97	1766-1774	previous	_	_
10-98	1775-1780	works	_	_
10-99	1780-1781	:	_	_
10-100	1782-1783	`	_	_
10-101	1783-1784	`	_	_
10-102	1784-1785	`	_	_
10-103	1786-1787	@	_	_
10-104	1787-1800	inproceedings	_	_
10-105	1800-1801	{	_	_
10-106	1801-1819	martinez2022closed	_	_
10-107	1819-1820	,	_	_
10-108	1823-1828	title	_	_
10-109	1828-1829	=	_	_
10-110	1829-1830	{	_	_
10-111	1830-1841	Closed-form	_	_
10-112	1842-1855	diffeomorphic	_	_
10-113	1856-1871	transformations	_	_
10-114	1872-1875	for	_	_
10-115	1876-1880	time	_	_
10-116	1881-1887	series	_	_
10-117	1888-1897	alignment	_	_
10-118	1897-1898	}	_	_
10-119	1898-1899	,	_	_
10-120	1902-1908	author	_	_
10-121	1908-1909	=	_	_
10-122	1909-1910	{	_	_
10-123	1910-1918	Martinez	_	_
10-124	1918-1919	,	_	_
10-125	1920-1921	I	_	_
10-126	1921-1922	{	_	_
10-127	1922-1923	\\	_	_
10-128	1923-1924	~	_	_
10-129	1924-1925	n	_	_
10-130	1925-1926	}	_	_
10-131	1926-1929	igo	_	_
10-132	1930-1933	and	_	_
10-133	1934-1939	Viles	_	_
10-134	1939-1940	,	_	_
10-135	1941-1950	Elisabeth	_	_
10-136	1951-1954	and	_	_
10-137	1955-1963	Olaizola	_	_
10-138	1963-1964	,	_	_
10-139	1965-1969	Igor	_	_
10-140	1970-1971	G	_	_
10-141	1971-1972	}	_	_
10-142	1972-1973	,	_	_
10-143	1976-1985	booktitle	_	_
10-144	1985-1986	=	_	_
10-145	1986-1987	{	_	_
10-146	1987-2000	International	_	_
10-147	2001-2011	Conference	_	_
10-148	2012-2014	on	_	_
10-149	2015-2022	Machine	_	_
10-150	2023-2031	Learning	_	_
10-151	2031-2032	}	_	_
10-152	2032-2033	,	_	_
10-153	2036-2041	pages	_	_
10-154	2041-2042	=	_	_
10-155	2042-2043	{	_	_
10-156	2043-2048	15122	_	_
10-157	2048-2049	-	_	_
10-158	2049-2050	-	_	_
10-159	2050-2055	15158	_	_
10-160	2055-2056	}	_	_
10-161	2056-2057	,	_	_
10-162	2060-2064	year	_	_
10-163	2064-2065	=	_	_
10-164	2065-2066	{	_	_
10-165	2066-2070	2022	_	_
10-166	2070-2071	}	_	_
10-167	2071-2072	,	_	_
10-168	2075-2087	organization	_	_
10-169	2087-2088	=	_	_
10-170	2088-2089	{	_	_
10-171	2089-2093	PMLR	_	_
10-172	2093-2094	}	_	_
10-173	2095-2096	}	_	_
10-174	2098-2099	@	_	_
10-175	2099-2106	article	_	_
10-176	2106-2107	{	_	_
10-177	2107-2134	freifeld2017transformations	_	_
10-178	2134-2135	,	_	_
10-179	2138-2143	title	_	_
10-180	2143-2144	=	_	_
10-181	2144-2145	{	_	_
10-182	2145-2160	Transformations	_	_
10-183	2161-2166	based	_	_
10-184	2167-2169	on	*[446]	CONFERENCE[446]
10-185	2170-2180	continuous	*[446]	CONFERENCE[446]
10-186	2181-2197	piecewise-affine	*[446]	CONFERENCE[446]
10-187	2198-2206	velocity	*[446]	CONFERENCE[446]
10-188	2207-2213	fields	*[446]	CONFERENCE[446]
10-189	2213-2214	}	*[446]	CONFERENCE[446]
10-190	2214-2215	,	*[446]	CONFERENCE[446]
10-191	2218-2224	author	*[446]	CONFERENCE[446]
10-192	2224-2225	=	*[446]	CONFERENCE[446]
10-193	2225-2226	{	*[446]	CONFERENCE[446]
10-194	2226-2234	Freifeld	*[446]	CONFERENCE[446]
10-195	2234-2235	,	*[446]	CONFERENCE[446]
10-196	2236-2240	Oren	*[446]	CONFERENCE[446]
10-197	2241-2244	and	*[446]	CONFERENCE[446]
10-198	2245-2252	Hauberg	*[446]	CONFERENCE[446]
10-199	2252-2253	,	*[446]	CONFERENCE[446]
10-200	2254-2255	S	*[446]	CONFERENCE[446]
10-201	2255-2256	{	*[446]	CONFERENCE[446]
10-202	2256-2257	\\	*[446]	CONFERENCE[446]
10-203	2257-2258	o	*[446]	CONFERENCE[446]
10-204	2258-2259	}	*[446]	CONFERENCE[446]
10-205	2259-2262	ren	*[446]	CONFERENCE[446]
10-206	2263-2266	and	*[446]	CONFERENCE[446]
10-207	2267-2280	Batmanghelich	*[446]	CONFERENCE[446]
10-208	2280-2281	,	*[446]	CONFERENCE[446]
10-209	2282-2288	Kayhan	*[446]	CONFERENCE[446]
10-210	2289-2292	and	*[446]	CONFERENCE[446]
10-211	2293-2299	Fisher	*[446]	CONFERENCE[446]
10-212	2299-2300	,	*[446]	CONFERENCE[446]
10-213	2301-2305	Jonn	*[446]	CONFERENCE[446]
10-214	2306-2307	W	*[446]	CONFERENCE[446]
10-215	2307-2308	}	*[446]	CONFERENCE[446]
10-216	2308-2309	,	*[446]	CONFERENCE[446]
10-217	2312-2319	journal	*[446]	CONFERENCE[446]
10-218	2319-2320	=	*[446]	CONFERENCE[446]
10-219	2320-2321	{	*[446]	CONFERENCE[446]
10-220	2321-2325	IEEE	*[446]	CONFERENCE[446]
10-221	2326-2338	transactions	*[446]	CONFERENCE[446]
10-222	2339-2341	on	*[446]	CONFERENCE[446]
10-223	2342-2349	pattern	*[446]	CONFERENCE[446]
10-224	2350-2358	analysis	*[446]	CONFERENCE[446]
10-225	2359-2362	and	*[446]	CONFERENCE[446]
10-226	2363-2370	machine	*[446]	CONFERENCE[446]
10-227	2371-2383	intelligence	*[446]	CONFERENCE[446]
10-228	2383-2384	}	*[446]	CONFERENCE[446]
10-229	2384-2385	,	*[446]	CONFERENCE[446]
10-230	2388-2394	volume	*[446]	CONFERENCE[446]
10-231	2394-2395	=	*[446]	CONFERENCE[446]
10-232	2395-2396	{	*[446]	CONFERENCE[446]
10-233	2396-2398	39	*[446]	CONFERENCE[446]
10-234	2398-2399	}	*[446]	CONFERENCE[446]
10-235	2399-2400	,	*[446]	CONFERENCE[446]
10-236	2403-2409	number	*[446]	CONFERENCE[446]
10-237	2409-2410	=	*[446]	CONFERENCE[446]
10-238	2410-2411	{	*[446]	CONFERENCE[446]
10-239	2411-2413	12	*[446]	CONFERENCE[446]
10-240	2413-2414	}	*[446]	CONFERENCE[446]
10-241	2414-2415	,	*[446]	CONFERENCE[446]
10-242	2418-2423	pages	*[446]	CONFERENCE[446]
10-243	2423-2424	=	*[446]	CONFERENCE[446]
10-244	2424-2425	{	*[446]	CONFERENCE[446]
10-245	2425-2429	2496	*[446]	CONFERENCE[446]
10-246	2429-2430	-	*[446]	CONFERENCE[446]
10-247	2430-2431	-	*[446]	CONFERENCE[446]
10-248	2431-2435	2509	*[446]	CONFERENCE[446]
10-249	2435-2436	}	*[446]	CONFERENCE[446]
10-250	2436-2437	,	*[446]	CONFERENCE[446]
10-251	2440-2444	year	*[446]	CONFERENCE[446]
10-252	2444-2445	=	*[446]	CONFERENCE[446]
10-253	2445-2446	{	*[446]	CONFERENCE[446]
10-254	2446-2450	2017	*[446]	CONFERENCE[446]
10-255	2450-2451	}	*[446]	CONFERENCE[446]
10-256	2451-2452	,	*[446]	CONFERENCE[446]
10-257	2455-2464	publisher	*[446]	CONFERENCE[446]
10-258	2464-2465	=	*[446]	CONFERENCE[446]
10-259	2465-2466	{	*[446]	CONFERENCE[446]
10-260	2466-2470	IEEE	*[446]	CONFERENCE[446]
10-261	2470-2471	}	_	_
10-262	2472-2473	}	_	_
10-263	2474-2475	`	_	_
10-264	2475-2476	`	_	_
10-265	2476-2477	`	_	_