#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Contextual decomposition  Demonstration of the methods introduced in "Beyond Word Importance:  Contextual Decomposition to Extract Interactions from LSTMs" (\[ICLR 2018 Oral\](https://arxiv.org/abs/1801.05453))     !
1-1	0-1	#	_	_
1-2	2-12	Contextual	_	_
1-3	13-26	decomposition	_	_
1-4	28-41	Demonstration	_	_
1-5	42-44	of	_	_
1-6	45-48	the	*[342]	PROGLANG[342]
1-7	49-56	methods	*[342]	PROGLANG[342]
1-8	57-67	introduced	*[342]	PROGLANG[342]
1-9	68-70	in	*[342]	PROGLANG[342]
1-10	71-72	"	*[342]	PROGLANG[342]
1-11	72-78	Beyond	*[342]	PROGLANG[342]
1-12	79-83	Word	*[342]	PROGLANG[342]
1-13	84-94	Importance	*[342]	PROGLANG[342]
1-14	94-95	:	*[342]	PROGLANG[342]
1-15	97-107	Contextual	*[342]	PROGLANG[342]
1-16	108-121	Decomposition	*[342]	PROGLANG[342]
1-17	122-124	to	*[342]	PROGLANG[342]
1-18	125-132	Extract	*[342]	PROGLANG[342]
1-19	133-145	Interactions	*[342]	PROGLANG[342]
1-20	146-150	from	*[342]	PROGLANG[342]
1-21	151-156	LSTMs	*[342]	PROGLANG[342]
1-22	156-157	"	_	_
1-23	158-159	(	_	_
1-24	159-160	\[	_	_
1-25	160-164	ICLR	_	_
1-26	165-169	2018	_	_
1-27	170-174	Oral	_	_
1-28	174-175	\]	_	_
1-29	175-176	(	_	_
1-30	176-181	https	_	_
1-31	181-182	:	_	_
1-32	182-183	/	_	_
1-33	183-184	/	_	_
1-34	184-193	arxiv.org	_	_
1-35	193-194	/	_	_
1-36	194-197	abs	_	_
1-37	197-198	/	_	_
1-38	198-208	1801.05453	_	_
1-39	208-209	)	_	_
1-40	209-210	)	_	_
1-41	215-216	!	_	_

#Text=\[example\](example.png)  # Follow-up work  This repo is no longer actively maintained, but some of these related works are actively maintaining / extending the ideas here
2-1	216-217	\[	_	_
2-2	217-224	example	_	_
2-3	224-225	\]	*[315]	DATASET[315]
2-4	225-226	(	*[315]	DATASET[315]
2-5	226-237	example.png	*[315]	DATASET[315]
2-6	237-238	)	*[315]	DATASET[315]
2-7	240-241	#	*[315]	DATASET[315]
2-8	242-251	Follow-up	_	_
2-9	252-256	work	_	_
2-10	258-262	This	_	_
2-11	263-267	repo	_	_
2-12	268-270	is	_	_
2-13	271-273	no	_	_
2-14	274-280	longer	_	_
2-15	281-289	actively	_	_
2-16	290-300	maintained	_	_
2-17	300-301	,	_	_
2-18	302-305	but	_	_
2-19	306-310	some	_	_
2-20	311-313	of	_	_
2-21	314-319	these	_	_
2-22	320-327	related	_	_
2-23	328-333	works	_	_
2-24	334-337	are	_	_
2-25	338-346	actively	_	_
2-26	347-358	maintaining	_	_
2-27	359-360	/	_	_
2-28	361-370	extending	_	_
2-29	371-374	the	_	_
2-30	375-380	ideas	_	_
2-31	381-385	here	_	_

#Text=.
3-1	385-386	.	_	_

#Text=- ACD (ICLR 2019 \[pdf\](https://openreview.net/pdf?
4-1	388-389	-	_	_
4-2	390-393	ACD	_	_
4-3	394-395	(	_	_
4-4	395-399	ICLR	_	_
4-5	400-404	2019	_	_
4-6	405-406	\[	_	_
4-7	406-409	pdf	_	_
4-8	409-410	\]	_	_
4-9	410-411	(	_	_
4-10	411-416	https	_	_
4-11	416-417	:	_	_
4-12	417-418	/	_	_
4-13	418-419	/	_	_
4-14	419-433	openreview.net	_	_
4-15	433-434	/	_	_
4-16	434-437	pdf	_	_
4-17	437-438	?	_	_

#Text=id=SkEqro0ctQ), \[github\](https://github.com/csinva/hierarchical-dnn-interpretations)) - extends CD to CNNs / arbitrary DNNs, and aggregates explanations into a hierarchy - CDEP (ICML 2020 \[pdf\](https://arxiv.org/abs/1909.13584), \[github\](https://github.com/laura-rieger/deep-explanation-penalization)) - penalizes CD / ACD scores during training to make models generalize better - TRIM (ICLR 2020 workshop \[pdf\](https://arxiv.org/abs/2003.01926), \[github\](https://github.com/csinva/transformation-importance)) - using simple reparameterizations, allows for calculating disentangled importances to transformations of the input (e.g. assigning importances to different frequencies) - DAC (arXiv 2019 \[pdf\](https://arxiv.org/abs/1905.07631), \[github\](https://github.com/csinva/disentangled-attribution-curves)) - finds disentangled interpretations for random forests - PDR framework (PNAS 2019 \[pdf\](https://arxiv.org/abs/1901.04592)) - an overarching framewwork for guiding and framing interpretable machine learning   # Reference  - feel free to use/share this code openly!
5-1	438-440	id	_	_
5-2	440-441	=	_	_
5-3	441-451	SkEqro0ctQ	_	_
5-4	451-452	)	_	_
5-5	452-453	,	_	_
5-6	454-455	\[	_	_
5-7	455-461	github	_	_
5-8	461-462	\]	_	_
5-9	462-463	(	_	_
5-10	463-468	https	_	_
5-11	468-469	:	_	_
5-12	469-470	/	_	_
5-13	470-471	/	_	_
5-14	471-481	github.com	_	_
5-15	481-482	/	_	_
5-16	482-488	csinva	_	_
5-17	488-489	/	_	_
5-18	489-521	hierarchical-dnn-interpretations	_	_
5-19	521-522	)	_	_
5-20	522-523	)	_	_
5-21	524-525	-	_	_
5-22	526-533	extends	_	_
5-23	534-536	CD	_	_
5-24	537-539	to	_	_
5-25	540-544	CNNs	_	_
5-26	545-546	/	_	_
5-27	547-556	arbitrary	_	_
5-28	557-561	DNNs	_	_
5-29	561-562	,	_	_
5-30	563-566	and	_	_
5-31	567-577	aggregates	_	_
5-32	578-590	explanations	_	_
5-33	591-595	into	_	_
5-34	596-597	a	_	_
5-35	598-607	hierarchy	_	_
5-36	608-609	-	_	_
5-37	610-614	CDEP	_	_
5-38	615-616	(	_	_
5-39	616-620	ICML	_	_
5-40	621-625	2020	_	_
5-41	626-627	\[	_	_
5-42	627-630	pdf	_	_
5-43	630-631	\]	_	_
5-44	631-632	(	_	_
5-45	632-637	https	_	_
5-46	637-638	:	_	_
5-47	638-639	/	_	_
5-48	639-640	/	_	_
5-49	640-649	arxiv.org	_	_
5-50	649-650	/	_	_
5-51	650-653	abs	_	_
5-52	653-654	/	_	_
5-53	654-664	1909.13584	_	_
5-54	664-665	)	_	_
5-55	665-666	,	_	_
5-56	667-668	\[	_	_
5-57	668-674	github	_	_
5-58	674-675	\]	_	_
5-59	675-676	(	_	_
5-60	676-681	https	_	_
5-61	681-682	:	_	_
5-62	682-683	/	_	_
5-63	683-684	/	_	_
5-64	684-694	github.com	_	_
5-65	694-695	/	_	_
5-66	695-707	laura-rieger	_	_
5-67	707-708	/	_	_
5-68	708-737	deep-explanation-penalization	_	_
5-69	737-738	)	_	_
5-70	738-739	)	_	_
5-71	740-741	-	_	_
5-72	742-751	penalizes	_	_
5-73	752-754	CD	_	_
5-74	755-756	/	_	_
5-75	757-760	ACD	_	_
5-76	761-767	scores	_	_
5-77	768-774	during	_	_
5-78	775-783	training	_	_
5-79	784-786	to	_	_
5-80	787-791	make	_	_
5-81	792-798	models	*[343]	PROGLANG[343]
5-82	799-809	generalize	*[343]	PROGLANG[343]
5-83	810-816	better	*[343]	PROGLANG[343]
5-84	817-818	-	*[343]	PROGLANG[343]
5-85	819-823	TRIM	*[343]	PROGLANG[343]
5-86	824-825	(	*[343]	PROGLANG[343]
5-87	825-829	ICLR	*[343]	PROGLANG[343]
5-88	830-834	2020	*[343]	PROGLANG[343]
5-89	835-843	workshop	*[343]	PROGLANG[343]
5-90	844-845	\[	*[343]	PROGLANG[343]
5-91	845-848	pdf	*[343]	PROGLANG[343]
5-92	848-849	\]	*[343]	PROGLANG[343]
5-93	849-850	(	*[343]	PROGLANG[343]
5-94	850-855	https	*[343]	PROGLANG[343]
5-95	855-856	:	*[343]	PROGLANG[343]
5-96	856-857	/	*[343]	PROGLANG[343]
5-97	857-858	/	*[343]	PROGLANG[343]
5-98	858-867	arxiv.org	*[343]	PROGLANG[343]
5-99	867-868	/	*[343]	PROGLANG[343]
5-100	868-871	abs	*[343]	PROGLANG[343]
5-101	871-872	/	*[343]	PROGLANG[343]
5-102	872-882	2003.01926	*[343]	PROGLANG[343]
5-103	882-883	)	*[343]	PROGLANG[343]
5-104	883-884	,	*[343]	PROGLANG[343]
5-105	885-886	\[	*[343]	PROGLANG[343]
5-106	886-892	github	*[343]	PROGLANG[343]
5-107	892-893	\]	*[343]	PROGLANG[343]
5-108	893-894	(	*[343]	PROGLANG[343]
5-109	894-899	https	*[343]	PROGLANG[343]
5-110	899-900	:	*[343]	PROGLANG[343]
5-111	900-901	/	*[343]	PROGLANG[343]
5-112	901-902	/	*[343]	PROGLANG[343]
5-113	902-912	github.com	*[343]	PROGLANG[343]
5-114	912-913	/	*[343]	PROGLANG[343]
5-115	913-919	csinva	*[343]	PROGLANG[343]
5-116	919-920	/	*[343]	PROGLANG[343]
5-117	920-945	transformation-importance	*[343]	PROGLANG[343]
5-118	945-946	)	*[343]	PROGLANG[343]
5-119	946-947	)	*[343]	PROGLANG[343]
5-120	948-949	-	*[343]	PROGLANG[343]
5-121	950-955	using	*[343]	PROGLANG[343]
5-122	956-962	simple	*[343]	PROGLANG[343]
5-123	963-982	reparameterizations	*[343]	PROGLANG[343]
5-124	982-983	,	*[343]	PROGLANG[343]
5-125	984-990	allows	*[343]	PROGLANG[343]
5-126	991-994	for	*[343]	PROGLANG[343]
5-127	995-1006	calculating	*[343]	PROGLANG[343]
5-128	1007-1019	disentangled	*[343]	PROGLANG[343]
5-129	1020-1031	importances	*[343]	PROGLANG[343]
5-130	1032-1034	to	*[343]	PROGLANG[343]
5-131	1035-1050	transformations	*[343]	PROGLANG[343]
5-132	1051-1053	of	*[343]	PROGLANG[343]
5-133	1054-1057	the	*[343]	PROGLANG[343]
5-134	1058-1063	input	*[343]	PROGLANG[343]
5-135	1064-1065	(	*[343]	PROGLANG[343]
5-136	1065-1068	e.g	*[343]	PROGLANG[343]
5-137	1068-1069	.	*[343]	PROGLANG[343]
5-138	1070-1079	assigning	*[343]	PROGLANG[343]
5-139	1080-1091	importances	*[343]	PROGLANG[343]
5-140	1092-1094	to	*[343]	PROGLANG[343]
5-141	1095-1104	different	*[343]	PROGLANG[343]
5-142	1105-1116	frequencies	*[343]	PROGLANG[343]
5-143	1116-1117	)	*[343]	PROGLANG[343]
5-144	1118-1119	-	*[343]	PROGLANG[343]
5-145	1120-1123	DAC	*[343]	PROGLANG[343]
5-146	1124-1125	(	*[343]	PROGLANG[343]
5-147	1125-1130	arXiv	*[343]	PROGLANG[343]
5-148	1131-1135	2019	*[343]	PROGLANG[343]
5-149	1136-1137	\[	*[343]	PROGLANG[343]
5-150	1137-1140	pdf	*[343]	PROGLANG[343]
5-151	1140-1141	\]	*[343]	PROGLANG[343]
5-152	1141-1142	(	*[343]	PROGLANG[343]
5-153	1142-1147	https	*[343]	PROGLANG[343]
5-154	1147-1148	:	*[343]	PROGLANG[343]
5-155	1148-1149	/	*[343]	PROGLANG[343]
5-156	1149-1150	/	*[343]	PROGLANG[343]
5-157	1150-1159	arxiv.org	*[343]	PROGLANG[343]
5-158	1159-1160	/	*[343]	PROGLANG[343]
5-159	1160-1163	abs	*[343]	PROGLANG[343]
5-160	1163-1164	/	*[343]	PROGLANG[343]
5-161	1164-1174	1905.07631	*[343]	PROGLANG[343]
5-162	1174-1175	)	*[343]	PROGLANG[343]
5-163	1175-1176	,	*[343]	PROGLANG[343]
5-164	1177-1178	\[	*[343]	PROGLANG[343]
5-165	1178-1184	github	*[343]	PROGLANG[343]
5-166	1184-1185	\]	*[343]	PROGLANG[343]
5-167	1185-1186	(	*[343]	PROGLANG[343]
5-168	1186-1191	https	*[343]	PROGLANG[343]
5-169	1191-1192	:	*[343]	PROGLANG[343]
5-170	1192-1193	/	*[343]	PROGLANG[343]
5-171	1193-1194	/	*[343]	PROGLANG[343]
5-172	1194-1204	github.com	*[343]	PROGLANG[343]
5-173	1204-1205	/	*[343]	PROGLANG[343]
5-174	1205-1211	csinva	*[343]	PROGLANG[343]
5-175	1211-1212	/	*[343]	PROGLANG[343]
5-176	1212-1243	disentangled-attribution-curves	*[343]	PROGLANG[343]
5-177	1243-1244	)	*[343]	PROGLANG[343]
5-178	1244-1245	)	*[343]	PROGLANG[343]
5-179	1246-1247	-	*[343]	PROGLANG[343]
5-180	1248-1253	finds	*[343]	PROGLANG[343]
5-181	1254-1266	disentangled	*[343]	PROGLANG[343]
5-182	1267-1282	interpretations	*[343]	PROGLANG[343]
5-183	1283-1286	for	*[343]	PROGLANG[343]
5-184	1287-1293	random	*[343]	PROGLANG[343]
5-185	1294-1301	forests	*[343]	PROGLANG[343]
5-186	1302-1303	-	*[343]	PROGLANG[343]
5-187	1304-1307	PDR	*[343]	PROGLANG[343]
5-188	1308-1317	framework	*[343]	PROGLANG[343]
5-189	1318-1319	(	*[343]	PROGLANG[343]
5-190	1319-1323	PNAS	*[343]	PROGLANG[343]
5-191	1324-1328	2019	*[343]	PROGLANG[343]
5-192	1329-1330	\[	*[343]	PROGLANG[343]
5-193	1330-1333	pdf	*[343]	PROGLANG[343]
5-194	1333-1334	\]	*[343]	PROGLANG[343]
5-195	1334-1335	(	*[343]	PROGLANG[343]
5-196	1335-1340	https	*[343]	PROGLANG[343]
5-197	1340-1341	:	*[343]	PROGLANG[343]
5-198	1341-1342	/	*[343]	PROGLANG[343]
5-199	1342-1343	/	*[343]	PROGLANG[343]
5-200	1343-1352	arxiv.org	*[343]	PROGLANG[343]
5-201	1352-1353	/	*[343]	PROGLANG[343]
5-202	1353-1356	abs	*[343]	PROGLANG[343]
5-203	1356-1357	/	*[343]	PROGLANG[343]
5-204	1357-1367	1901.04592	_	_
5-205	1367-1368	)	_	_
5-206	1368-1369	)	_	_
5-207	1370-1371	-	_	_
5-208	1372-1374	an	_	_
5-209	1375-1386	overarching	_	_
5-210	1387-1397	framewwork	_	_
5-211	1398-1401	for	_	_
5-212	1402-1409	guiding	_	_
5-213	1410-1413	and	_	_
5-214	1414-1421	framing	_	_
5-215	1422-1435	interpretable	_	_
5-216	1436-1443	machine	_	_
5-217	1444-1452	learning	_	_
5-218	1455-1456	#	_	_
5-219	1457-1466	Reference	_	_
5-220	1468-1469	-	_	_
5-221	1470-1474	feel	_	_
5-222	1475-1479	free	_	_
5-223	1480-1482	to	_	_
5-224	1483-1486	use	_	_
5-225	1486-1487	/	_	_
5-226	1487-1492	share	_	_
5-227	1493-1497	this	_	_
5-228	1498-1502	code	_	_
5-229	1503-1509	openly	_	_
5-230	1509-1510	!	_	_