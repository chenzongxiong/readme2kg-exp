#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# \*\*Novel Class Discovery for 3D Point Cloud Semantic Segmentation \[CVPR 2023\]\*\* The official implementation of our work "Novel Class Discovery for 3D Point Cloud Semantic Segmentation".  !
1-1	0-1	#	_	_
1-2	2-3	\*	_	_
1-3	3-4	\*	_	_
1-4	4-9	Novel	_	_
1-5	10-15	Class	_	_
1-6	16-25	Discovery	_	_
1-7	26-29	for	_	_
1-8	30-32	3D	_	_
1-9	33-38	Point	_	_
1-10	39-44	Cloud	_	_
1-11	45-53	Semantic	_	_
1-12	54-66	Segmentation	_	_
1-13	67-68	\[	_	_
1-14	68-72	CVPR	_	_
1-15	73-77	2023	*[337]	EVALMETRIC[337]
1-16	77-78	\]	*[337]	EVALMETRIC[337]
1-17	78-79	\*	*[337]	EVALMETRIC[337]
1-18	79-80	\*	*[337]	EVALMETRIC[337]
1-19	81-84	The	*[337]	EVALMETRIC[337]
1-20	85-93	official	*[337]	EVALMETRIC[337]
1-21	94-108	implementation	*[337]	EVALMETRIC[337]
1-22	109-111	of	*[337]	EVALMETRIC[337]
1-23	112-115	our	*[337]	EVALMETRIC[337]
1-24	116-120	work	*[337]	EVALMETRIC[337]
1-25	121-122	"	*[337]	EVALMETRIC[337]
1-26	122-127	Novel	*[337]	EVALMETRIC[337]
1-27	128-133	Class	*[337]	EVALMETRIC[337]
1-28	134-143	Discovery	*[337]	EVALMETRIC[337]
1-29	144-147	for	*[337]	EVALMETRIC[337]
1-30	148-150	3D	_	_
1-31	151-156	Point	_	_
1-32	157-162	Cloud	_	_
1-33	163-171	Semantic	_	_
1-34	172-184	Segmentation	_	_
1-35	184-185	"	_	_
1-36	185-186	.	_	_
1-37	188-189	!	_	_

#Text=\[teaser\](assets/NOPS\_teaser.jpg)  ## Introduction Novel class discovery (NCD) for semantic segmentation is the problem of learning a model that is capable of segmenting unlabelled (novel) classes by using only the supervision from labelled (base) classes.
2-1	189-190	\[	_	_
2-2	190-196	teaser	_	_
2-3	196-197	\]	_	_
2-4	197-198	(	_	_
2-5	198-204	assets	_	_
2-6	204-205	/	_	_
2-7	205-220	NOPS\_teaser.jpg	_	_
2-8	220-221	)	_	_
2-9	223-224	#	_	_
2-10	224-225	#	_	_
2-11	226-238	Introduction	_	_
2-12	239-244	Novel	_	_
2-13	245-250	class	_	_
2-14	251-260	discovery	*[318]	PROJECT[318]
2-15	261-262	(	*[318]	PROJECT[318]
2-16	262-265	NCD	*[318]	PROJECT[318]
2-17	265-266	)	*[318]	PROJECT[318]
2-18	267-270	for	*[318]	PROJECT[318]
2-19	271-279	semantic	*[318]	PROJECT[318]
2-20	280-292	segmentation	*[318]	PROJECT[318]
2-21	293-295	is	*[318]	PROJECT[318]
2-22	296-299	the	*[318]	PROJECT[318]
2-23	300-307	problem	*[318]	PROJECT[318]
2-24	308-310	of	_	_
2-25	311-319	learning	_	_
2-26	320-321	a	_	_
2-27	322-327	model	_	_
2-28	328-332	that	_	_
2-29	333-335	is	_	_
2-30	336-343	capable	_	_
2-31	344-346	of	_	_
2-32	347-357	segmenting	_	_
2-33	358-368	unlabelled	_	_
2-34	369-370	(	_	_
2-35	370-375	novel	_	_
2-36	375-376	)	_	_
2-37	377-384	classes	_	_
2-38	385-387	by	_	_
2-39	388-393	using	_	_
2-40	394-398	only	_	_
2-41	399-402	the	_	_
2-42	403-414	supervision	_	_
2-43	415-419	from	_	_
2-44	420-428	labelled	_	_
2-45	429-430	(	_	_
2-46	430-434	base	_	_
2-47	434-435	)	_	_
2-48	436-443	classes	_	_
2-49	443-444	.	_	_

#Text=This problem has been recently pioneered for 2D image data, but no work exists for 3D point cloud data.
3-1	445-449	This	_	_
3-2	450-457	problem	*[307]	PUBLICATION[307]
3-3	458-461	has	*[307]	PUBLICATION[307]
3-4	462-466	been	*[307]	PUBLICATION[307]
3-5	467-475	recently	*[307]	PUBLICATION[307]
3-6	476-485	pioneered	*[307]	PUBLICATION[307]
3-7	486-489	for	*[307]	PUBLICATION[307]
3-8	490-492	2D	*[307]	PUBLICATION[307]
3-9	493-498	image	*[307]	PUBLICATION[307]
3-10	499-503	data	*[307]	PUBLICATION[307]
3-11	503-504	,	*[307]	PUBLICATION[307]
3-12	505-508	but	*[307]	PUBLICATION[307]
3-13	509-511	no	*[307]	PUBLICATION[307]
3-14	512-516	work	*[307]	PUBLICATION[307]
3-15	517-523	exists	*[307]	PUBLICATION[307]
3-16	524-527	for	*[307]	PUBLICATION[307]
3-17	528-530	3D	*[307]	PUBLICATION[307]
3-18	531-536	point	*[307]	PUBLICATION[307]
3-19	537-542	cloud	_	_
3-20	543-547	data	_	_
3-21	547-548	.	_	_

#Text=In fact, assumptions made for 2D are loosely applicable to 3D in this case.
4-1	549-551	In	_	_
4-2	552-556	fact	_	_
4-3	556-557	,	_	_
4-4	558-569	assumptions	_	_
4-5	570-574	made	_	_
4-6	575-578	for	_	_
4-7	579-581	2D	_	_
4-8	582-585	are	_	_
4-9	586-593	loosely	_	_
4-10	594-604	applicable	_	_
4-11	605-607	to	_	_
4-12	608-610	3D	_	_
4-13	611-613	in	_	_
4-14	614-618	this	_	_
4-15	619-623	case	_	_
4-16	623-624	.	_	_

#Text=This paper is thus presented to advance the state of the art on point cloud data analysis in four directions.
5-1	625-629	This	_	_
5-2	630-635	paper	_	_
5-3	636-638	is	_	_
5-4	639-643	thus	_	_
5-5	644-653	presented	_	_
5-6	654-656	to	_	_
5-7	657-664	advance	_	_
5-8	665-668	the	_	_
5-9	669-674	state	_	_
5-10	675-677	of	_	_
5-11	678-681	the	_	_
5-12	682-685	art	_	_
5-13	686-688	on	*[325]	CONFERENCE[325]
5-14	689-694	point	*[325]	CONFERENCE[325]
5-15	695-700	cloud	*[325]	CONFERENCE[325]
5-16	701-705	data	*[325]	CONFERENCE[325]
5-17	706-714	analysis	*[325]	CONFERENCE[325]
5-18	715-717	in	*[325]	CONFERENCE[325]
5-19	718-722	four	*[325]	CONFERENCE[325]
5-20	723-733	directions	_	_
5-21	733-734	.	_	_

#Text=Firstly, we address the new problem of NCD for point cloud semantic segmentation.
6-1	735-742	Firstly	_	_
6-2	742-743	,	_	_
6-3	744-746	we	_	_
6-4	747-754	address	_	_
6-5	755-758	the	_	_
6-6	759-762	new	_	_
6-7	763-770	problem	_	_
6-8	771-773	of	_	_
6-9	774-777	NCD	_	_
6-10	778-781	for	_	_
6-11	782-787	point	_	_
6-12	788-793	cloud	_	_
6-13	794-802	semantic	*[318]	ONTOLOGY[318]
6-14	803-815	segmentation	_	_
6-15	815-816	.	_	_

#Text=Secondly, we show that the transposition of the only existing NCD method for 2D semantic segmentation to 3D data is suboptimal.
7-1	817-825	Secondly	_	_
7-2	825-826	,	_	_
7-3	827-829	we	_	_
7-4	830-834	show	_	_
7-5	835-839	that	_	_
7-6	840-843	the	_	_
7-7	844-857	transposition	_	_
7-8	858-860	of	_	_
7-9	861-864	the	_	_
7-10	865-869	only	_	_
7-11	870-878	existing	_	_
7-12	879-882	NCD	_	_
7-13	883-889	method	_	_
7-14	890-893	for	_	_
7-15	894-896	2D	_	_
7-16	897-905	semantic	_	_
7-17	906-918	segmentation	_	_
7-18	919-921	to	_	_
7-19	922-924	3D	_	_
7-20	925-929	data	_	_
7-21	930-932	is	_	_
7-22	933-943	suboptimal	_	_
7-23	943-944	.	_	_

#Text=Thirdly, we present a new method for NCD based on online clustering that exploits uncertainty quantification to produce prototypes for pseudo-labelling the points of the novel classes.
8-1	945-952	Thirdly	_	_
8-2	952-953	,	_	_
8-3	954-956	we	_	_
8-4	957-964	present	_	_
8-5	965-966	a	_	_
8-6	967-970	new	_	_
8-7	971-977	method	_	_
8-8	978-981	for	_	_
8-9	982-985	NCD	_	_
8-10	986-991	based	_	_
8-11	992-994	on	_	_
8-12	995-1001	online	_	_
8-13	1002-1012	clustering	_	_
8-14	1013-1017	that	_	_
8-15	1018-1026	exploits	_	_
8-16	1027-1038	uncertainty	_	_
8-17	1039-1053	quantification	_	_
8-18	1054-1056	to	_	_
8-19	1057-1064	produce	_	_
8-20	1065-1075	prototypes	_	_
8-21	1076-1079	for	_	_
8-22	1080-1096	pseudo-labelling	_	_
8-23	1097-1100	the	_	_
8-24	1101-1107	points	_	_
8-25	1108-1110	of	_	_
8-26	1111-1114	the	_	_
8-27	1115-1120	novel	_	_
8-28	1121-1128	classes	_	_
8-29	1128-1129	.	_	_

#Text=Lastly, we introduce a new evaluation protocol to assess the performance of NCD for point cloud semantic segmentation.
9-1	1130-1136	Lastly	_	_
9-2	1136-1137	,	_	_
9-3	1138-1140	we	_	_
9-4	1141-1150	introduce	_	_
9-5	1151-1152	a	_	_
9-6	1153-1156	new	_	_
9-7	1157-1167	evaluation	_	_
9-8	1168-1176	protocol	_	_
9-9	1177-1179	to	_	_
9-10	1180-1186	assess	_	_
9-11	1187-1190	the	*[338]	EVALMETRIC[338]
9-12	1191-1202	performance	*[338]	EVALMETRIC[338]
9-13	1203-1205	of	*[338]	EVALMETRIC[338]
9-14	1206-1209	NCD	*[338]	EVALMETRIC[338]
9-15	1210-1213	for	*[338]	EVALMETRIC[338]
9-16	1214-1219	point	*[338]	EVALMETRIC[338]
9-17	1220-1225	cloud	*[338]	EVALMETRIC[338]
9-18	1226-1234	semantic	_	_
9-19	1235-1247	segmentation	_	_
9-20	1247-1248	.	_	_

#Text=We thoroughly evaluate our method on SemanticKITTI and SemanticPOSS datasets, showing that it can significantly outperform the baseline.
10-1	1249-1251	We	_	_
10-2	1252-1262	thoroughly	_	_
10-3	1263-1271	evaluate	_	_
10-4	1272-1275	our	_	_
10-5	1276-1282	method	_	_
10-6	1283-1285	on	_	_
10-7	1286-1299	SemanticKITTI	_	_
10-8	1300-1303	and	_	_
10-9	1304-1316	SemanticPOSS	_	_
10-10	1317-1325	datasets	_	_
10-11	1325-1326	,	_	_
10-12	1327-1334	showing	_	_
10-13	1335-1339	that	_	_
10-14	1340-1342	it	_	_
10-15	1343-1346	can	_	_
10-16	1347-1360	significantly	_	_
10-17	1361-1371	outperform	_	_
10-18	1372-1375	the	_	_
10-19	1376-1384	baseline	_	_
10-20	1384-1385	.	_	_

#Text=:fire: For more information have a look at our \[PAPER\](https://arxiv.org/pdf/2303.11610)!
11-1	1387-1388	:	_	_
11-2	1388-1392	fire	_	_
11-3	1392-1393	:	_	_
11-4	1394-1397	For	_	_
11-5	1398-1402	more	_	_
11-6	1403-1414	information	_	_
11-7	1415-1419	have	_	_
11-8	1420-1421	a	_	_
11-9	1422-1426	look	*[333]	WORKSHOP[333]
11-10	1427-1429	at	*[333]	WORKSHOP[333]
11-11	1430-1433	our	*[333]	WORKSHOP[333]
11-12	1434-1435	\[	*[333]	WORKSHOP[333]
11-13	1435-1440	PAPER	*[333]	WORKSHOP[333]
11-14	1440-1441	\]	*[333]	WORKSHOP[333]
11-15	1441-1442	(	*[333]	WORKSHOP[333]
11-16	1442-1447	https	_	_
11-17	1447-1448	:	_	_
11-18	1448-1449	/	_	_
11-19	1449-1450	/	_	_
11-20	1450-1459	arxiv.org	_	_
11-21	1459-1460	/	_	_
11-22	1460-1463	pdf	_	_
11-23	1463-1464	/	_	_
11-24	1464-1474	2303.11610	_	_
11-25	1474-1475	)	_	_
11-26	1475-1476	!	_	_

#Text=:fire:  Authors:          \[Luigi Riz\](https://scholar.google.com/citations?
12-1	1477-1478	:	_	_
12-2	1478-1482	fire	_	_
12-3	1482-1483	:	_	_
12-4	1485-1492	Authors	_	_
12-5	1492-1493	:	_	_
12-6	1503-1504	\[	_	_
12-7	1504-1509	Luigi	_	_
12-8	1510-1513	Riz	_	_
12-9	1513-1514	\]	*[319]	PROJECT[319]
12-10	1514-1515	(	*[319]	PROJECT[319]
12-11	1515-1520	https	*[319]	PROJECT[319]
12-12	1520-1521	:	*[319]	PROJECT[319]
12-13	1521-1522	/	*[319]	PROJECT[319]
12-14	1522-1523	/	*[319]	PROJECT[319]
12-15	1523-1541	scholar.google.com	*[319]	PROJECT[319]
12-16	1541-1542	/	*[319]	PROJECT[319]
12-17	1542-1551	citations	_	_
12-18	1551-1552	?	_	_

#Text=user=djO2pVUAAAAJ&hl),         \[Cristiano Saltori\](https://scholar.google.com/citations?
13-1	1552-1556	user	_	_
13-2	1556-1557	=	_	_
13-3	1557-1569	djO2pVUAAAAJ	_	_
13-4	1569-1570	&	_	_
13-5	1570-1572	hl	_	_
13-6	1572-1573	)	_	_
13-7	1573-1574	,	_	_
13-8	1583-1584	\[	_	_
13-9	1584-1593	Cristiano	_	_
13-10	1594-1601	Saltori	_	_
13-11	1601-1602	\]	_	_
13-12	1602-1603	(	_	_
13-13	1603-1608	https	_	_
13-14	1608-1609	:	_	_
13-15	1609-1610	/	_	_
13-16	1610-1611	/	_	_
13-17	1611-1629	scholar.google.com	_	_
13-18	1629-1630	/	*[319]	ONTOLOGY[319]
13-19	1630-1639	citations	*[319]	ONTOLOGY[319]
13-20	1639-1640	?	_	_

#Text=user=PID7Z4oAAAAJ&hl),         \[Elisa Ricci\](https://scholar.google.ca/citations?
14-1	1640-1644	user	_	_
14-2	1644-1645	=	_	_
14-3	1645-1657	PID7Z4oAAAAJ	_	_
14-4	1657-1658	&	_	_
14-5	1658-1660	hl	_	_
14-6	1660-1661	)	_	_
14-7	1661-1662	,	_	_
14-8	1671-1672	\[	_	_
14-9	1672-1677	Elisa	_	_
14-10	1678-1683	Ricci	_	_
14-11	1683-1684	\]	_	_
14-12	1684-1685	(	_	_
14-13	1685-1690	https	_	_
14-14	1690-1691	:	_	_
14-15	1691-1692	/	_	_
14-16	1692-1693	/	_	_
14-17	1693-1710	scholar.google.ca	_	_
14-18	1710-1711	/	_	_
14-19	1711-1720	citations	_	_
14-20	1720-1721	?	_	_

#Text=user=xf1T870AAAAJ&hl),         \[Fabio Poiesi\](https://scholar.google.co.uk/citations?
15-1	1721-1725	user	_	_
15-2	1725-1726	=	_	_
15-3	1726-1738	xf1T870AAAAJ	_	_
15-4	1738-1739	&	_	_
15-5	1739-1741	hl	_	_
15-6	1741-1742	)	_	_
15-7	1742-1743	,	_	_
15-8	1752-1753	\[	_	_
15-9	1753-1758	Fabio	_	_
15-10	1759-1765	Poiesi	_	_
15-11	1765-1766	\]	_	_
15-12	1766-1767	(	_	_
15-13	1767-1772	https	_	_
15-14	1772-1773	:	_	_
15-15	1773-1774	/	_	_
15-16	1774-1775	/	_	_
15-17	1775-1795	scholar.google.co.uk	_	_
15-18	1795-1796	/	_	_
15-19	1796-1805	citations	_	_
15-20	1805-1806	?	_	_

#Text=user=BQ7li6AAAAAJ&hl)  ## News :new: - 3/2023: NOPS code is \*\*OUT\*\*!
16-1	1806-1810	user	_	_
16-2	1810-1811	=	_	_
16-3	1811-1823	BQ7li6AAAAAJ	_	_
16-4	1823-1824	&	_	_
16-5	1824-1826	hl	_	_
16-6	1826-1827	)	_	_
16-7	1829-1830	#	_	_
16-8	1830-1831	#	_	_
16-9	1832-1836	News	_	_
16-10	1837-1838	:	*[320]	PROJECT[320]
16-11	1838-1841	new	*[320]	PROJECT[320]
16-12	1841-1842	:	*[320]	PROJECT[320]
16-13	1843-1844	-	*[320]	PROJECT[320]
16-14	1845-1846	3	*[320]	PROJECT[320]
16-15	1846-1847	/	*[320]	PROJECT[320]
16-16	1847-1851	2023	*[320]	PROJECT[320]
16-17	1851-1852	:	*[320]	PROJECT[320]
16-18	1853-1857	NOPS	*[320]	PROJECT[320]
16-19	1858-1862	code	*[320]	PROJECT[320]
16-20	1863-1865	is	*[320]	PROJECT[320]
16-21	1866-1867	\*	_	_
16-22	1867-1868	\*	_	_
16-23	1868-1871	OUT	_	_
16-24	1871-1872	\*	_	_
16-25	1872-1873	\*	_	_
16-26	1873-1874	!	_	_

#Text=:fire: - 3/2023: NOPS is accepted to CVPR 2023!
17-1	1874-1875	:	_	_
17-2	1875-1879	fire	_	_
17-3	1879-1880	:	_	_
17-4	1881-1882	-	_	_
17-5	1883-1884	3	_	_
17-6	1884-1885	/	_	_
17-7	1885-1889	2023	*[334]	WORKSHOP[334]
17-8	1889-1890	:	*[334]	WORKSHOP[334]
17-9	1891-1895	NOPS	*[334]	WORKSHOP[334]
17-10	1896-1898	is	_	_
17-11	1899-1907	accepted	_	_
17-12	1908-1910	to	_	_
17-13	1911-1915	CVPR	_	_
17-14	1916-1920	2023	_	_
17-15	1920-1921	!	_	_

#Text=:fire: Our work is the first allowing the segmentation of known and unknown classes in 3D Lidar scans!
18-1	1921-1922	:	_	_
18-2	1922-1926	fire	_	_
18-3	1926-1927	:	_	_
18-4	1928-1931	Our	_	_
18-5	1932-1936	work	_	_
18-6	1937-1939	is	_	_
18-7	1940-1943	the	_	_
18-8	1944-1949	first	_	_
18-9	1950-1958	allowing	_	_
18-10	1959-1962	the	_	_
18-11	1963-1975	segmentation	_	_
18-12	1976-1978	of	_	_
18-13	1979-1984	known	_	_
18-14	1985-1988	and	_	_
18-15	1989-1996	unknown	_	_
18-16	1997-2004	classes	_	_
18-17	2005-2007	in	_	_
18-18	2008-2010	3D	_	_
18-19	2011-2016	Lidar	_	_
18-20	2017-2022	scans	_	_
18-21	2022-2023	!	_	_

#Text=## Installation  The code has been tested with Python 3.8, CUDA 11.3, pytorch 1.10.1 and pytorch-lighting 1.4.8.
19-1	2025-2026	#	_	_
19-2	2026-2027	#	_	_
19-3	2028-2040	Installation	_	_
19-4	2042-2045	The	_	_
19-5	2046-2050	code	_	_
19-6	2051-2054	has	_	_
19-7	2055-2059	been	_	_
19-8	2060-2066	tested	_	_
19-9	2067-2071	with	_	_
19-10	2072-2078	Python	_	_
19-11	2079-2082	3.8	_	_
19-12	2082-2083	,	_	_
19-13	2084-2088	CUDA	_	_
19-14	2089-2093	11.3	_	_
19-15	2093-2094	,	*[326]	CONFERENCE[326]
19-16	2095-2102	pytorch	*[326]	CONFERENCE[326]
19-17	2103-2109	1.10.1	*[326]	CONFERENCE[326]
19-18	2110-2113	and	*[326]	CONFERENCE[326]
19-19	2114-2130	pytorch-lighting	_	_
19-20	2131-2136	1.4.8	_	_
19-21	2136-2137	.	_	_

#Text=Any other version may require to update the code for compatibility.  ### Conda To run the code, you need to install: - \[Pytorch 1.10.1\](https://pytorch.org/get-started/previous-versions/) - \[Minkowski Engine\](https://github.com/NVIDIA/MinkowskiEngine) - \[Pytorch-Lighting 1.4.8\](https://www.pytorchlightning.ai) (be sure to install torchmetrics=0.7.2) - \[Scipy 1.7.3\](https://scipy.org/install/) - \[Wandb\](https://docs.wandb.ai/quickstart)  ## Data preparation To download the data follow the instructions provided by \[SemanticKITTI\](http://www.semantic-kitti.org) and \[SemanticPOSS\](http://www.poss.pku.edu.cn/semanticposs.html).
20-1	2138-2141	Any	_	_
20-2	2142-2147	other	_	_
20-3	2148-2155	version	_	_
20-4	2156-2159	may	_	_
20-5	2160-2167	require	_	_
20-6	2168-2170	to	_	_
20-7	2171-2177	update	_	_
20-8	2178-2181	the	_	_
20-9	2182-2186	code	_	_
20-10	2187-2190	for	_	_
20-11	2191-2204	compatibility	_	_
20-12	2204-2205	.	_	_
20-13	2207-2208	#	_	_
20-14	2208-2209	#	_	_
20-15	2209-2210	#	_	_
20-16	2211-2216	Conda	_	_
20-17	2217-2219	To	_	_
20-18	2220-2223	run	_	_
20-19	2224-2227	the	_	_
20-20	2228-2232	code	_	_
20-21	2232-2233	,	_	_
20-22	2234-2237	you	_	_
20-23	2238-2242	need	_	_
20-24	2243-2245	to	_	_
20-25	2246-2253	install	_	_
20-26	2253-2254	:	_	_
20-27	2255-2256	-	_	_
20-28	2257-2258	\[	_	_
20-29	2258-2265	Pytorch	_	_
20-30	2266-2272	1.10.1	_	_
20-31	2272-2273	\]	_	_
20-32	2273-2274	(	_	_
20-33	2274-2279	https	_	_
20-34	2279-2280	:	_	_
20-35	2280-2281	/	_	_
20-36	2281-2282	/	_	_
20-37	2282-2293	pytorch.org	_	_
20-37	2282-2289	pytorch	_	_
20-38	2293-2294	/	_	_
20-39	2294-2305	get-started	_	_
20-40	2305-2306	/	_	_
20-41	2306-2323	previous-versions	_	_
20-42	2323-2324	/	_	_
20-43	2324-2325	)	_	_
20-44	2326-2327	-	_	_
20-45	2328-2329	\[	_	_
20-46	2329-2338	Minkowski	_	_
20-47	2339-2345	Engine	_	_
20-48	2345-2346	\]	_	_
20-49	2346-2347	(	_	_
20-50	2347-2352	https	_	_
20-51	2352-2353	:	_	_
20-52	2353-2354	/	_	_
20-53	2354-2355	/	_	_
20-54	2355-2365	github.com	_	_
20-55	2365-2366	/	_	_
20-56	2366-2372	NVIDIA	_	_
20-57	2372-2373	/	_	_
20-58	2373-2388	MinkowskiEngine	_	_
20-59	2388-2389	)	_	_
20-60	2390-2391	-	_	_
20-61	2392-2393	\[	_	_
20-62	2393-2409	Pytorch-Lighting	_	_
20-63	2410-2415	1.4.8	_	_
20-64	2415-2416	\]	_	_
20-65	2416-2417	(	_	_
20-66	2417-2422	https	_	_
20-67	2422-2423	:	_	_
20-68	2423-2424	/	_	_
20-69	2424-2425	/	_	_
20-70	2425-2448	www.pytorchlightning.ai	_	_
20-70	2429-2445	pytorchlightning	_	_
20-71	2448-2449	)	_	_
20-72	2450-2451	(	_	_
20-73	2451-2453	be	_	_
20-74	2454-2458	sure	_	_
20-75	2459-2461	to	_	_
20-76	2462-2469	install	_	_
20-77	2470-2482	torchmetrics	_	_
20-78	2482-2483	=	_	_
20-79	2483-2488	0.7.2	_	_
20-80	2488-2489	)	_	_
20-81	2490-2491	-	_	_
20-82	2492-2493	\[	_	_
20-83	2493-2498	Scipy	_	_
20-84	2499-2504	1.7.3	_	_
20-85	2504-2505	\]	_	_
20-86	2505-2506	(	_	_
20-87	2506-2511	https	_	_
20-88	2511-2512	:	_	_
20-89	2512-2513	/	_	_
20-90	2513-2514	/	_	_
20-91	2514-2523	scipy.org	_	_
20-91	2514-2519	scipy	_	_
20-92	2523-2524	/	_	_
20-93	2524-2531	install	_	_
20-94	2531-2532	/	_	_
20-95	2532-2533	)	_	_
20-96	2534-2535	-	_	_
20-97	2536-2537	\[	_	_
20-98	2537-2542	Wandb	_	_
20-99	2542-2543	\]	_	_
20-100	2543-2544	(	_	_
20-101	2544-2549	https	_	_
20-102	2549-2550	:	_	_
20-103	2550-2551	/	_	_
20-104	2551-2552	/	_	_
20-105	2552-2565	docs.wandb.ai	_	_
20-105	2557-2562	wandb	_	_
20-106	2565-2566	/	_	_
20-107	2566-2576	quickstart	_	_
20-108	2576-2577	)	_	_
20-109	2579-2580	#	_	_
20-110	2580-2581	#	_	_
20-111	2582-2586	Data	_	_
20-112	2587-2598	preparation	_	_
20-113	2599-2601	To	_	_
20-114	2602-2610	download	_	_
20-115	2611-2614	the	_	_
20-116	2615-2619	data	_	_
20-117	2620-2626	follow	_	_
20-118	2627-2630	the	_	_
20-119	2631-2643	instructions	_	_
20-120	2644-2652	provided	_	_
20-121	2653-2655	by	_	_
20-122	2656-2657	\[	_	_
20-123	2657-2670	SemanticKITTI	_	_
20-124	2670-2671	\]	_	_
20-125	2671-2672	(	_	_
20-126	2672-2676	http	_	_
20-127	2676-2677	:	_	_
20-128	2677-2678	/	_	_
20-129	2678-2679	/	_	_
20-130	2679-2701	www.semantic-kitti.org	_	_
20-130	2683-2697	semantic-kitti	*[335]	WORKSHOP[335]
20-131	2701-2702	)	*[335]	WORKSHOP[335]
20-132	2703-2706	and	*[335]	WORKSHOP[335]
20-133	2707-2708	\[	*[335]	WORKSHOP[335]
20-134	2708-2720	SemanticPOSS	*[335]	WORKSHOP[335]
20-135	2720-2721	\]	*[335]	WORKSHOP[335]
20-136	2721-2722	(	*[335]	WORKSHOP[335]
20-137	2722-2726	http	*[335]	WORKSHOP[335]
20-138	2726-2727	:	*[335]	WORKSHOP[335]
20-139	2727-2728	/	*[335]	WORKSHOP[335]
20-140	2728-2729	/	*[335]	WORKSHOP[335]
20-141	2729-2748	www.poss.pku.edu.cn	*[335]	WORKSHOP[335]
20-142	2748-2749	/	*[335]	WORKSHOP[335]
20-143	2749-2766	semanticposs.html	*[335]	WORKSHOP[335]
20-143	2749-2761	semanticposs	_	_
20-144	2766-2767	)	_	_
20-145	2767-2768	.	_	_

#Text=Then, use this structure of the folders: ``` ./ ├──  ├── ... └── path\_to\_data\_shown\_in\_yaml\_config/       └── sequences             ├── 00/                        │   ├── velodyne/              \|   \|    ├── 000000.bin             \|   \|    ├── 000001.bin             \|   \|    └──
21-1	2769-2773	Then	_	_
21-2	2773-2774	,	_	_
21-3	2775-2778	use	_	_
21-4	2779-2783	this	_	_
21-5	2784-2793	structure	_	_
21-6	2794-2796	of	_	_
21-7	2797-2800	the	_	_
21-8	2801-2808	folders	_	_
21-9	2808-2809	:	_	_
21-10	2810-2811	`	_	_
21-11	2811-2812	`	_	_
21-12	2812-2813	`	_	_
21-13	2814-2815	.	_	_
21-14	2815-2816	/	_	_
21-15	2817-2818	├	_	_
21-16	2818-2819	─	_	_
21-17	2819-2820	─	_	_
21-18	2822-2823	├	_	_
21-19	2823-2824	─	_	_
21-20	2824-2825	─	_	_
21-21	2826-2827	.	_	_
21-22	2827-2828	.	_	_
21-23	2828-2829	.	_	_
21-24	2830-2831	└	_	_
21-25	2831-2832	─	_	_
21-26	2832-2833	─	_	_
21-27	2834-2867	path\_to\_data\_shown\_in\_yaml\_config	_	_
21-28	2867-2868	/	*[327]	CONFERENCE[327]
21-29	2875-2876	└	*[327]	CONFERENCE[327]
21-30	2876-2877	─	*[327]	CONFERENCE[327]
21-31	2877-2878	─	*[327]	CONFERENCE[327]
21-32	2879-2888	sequences	_	_
21-33	2901-2902	├	_	_
21-34	2902-2903	─	_	_
21-35	2903-2904	─	_	_
21-36	2905-2907	00	_	_
21-37	2907-2908	/	_	_
21-38	2932-2933	│	_	_
21-39	2936-2937	├	_	_
21-40	2937-2938	─	_	_
21-41	2938-2939	─	_	_
21-42	2940-2948	velodyne	_	_
21-43	2948-2949	/	_	_
21-44	2963-2964	\|	_	_
21-45	2967-2968	\|	_	_
21-46	2972-2973	├	_	_
21-47	2973-2974	─	_	_
21-48	2974-2975	─	_	_
21-49	2976-2982	000000	_	_
21-50	2982-2983	.	_	_
21-51	2983-2986	bin	_	_
21-52	2999-3000	\|	_	_
21-53	3003-3004	\|	_	_
21-54	3008-3009	├	_	_
21-55	3009-3010	─	_	_
21-56	3010-3011	─	_	_
21-57	3012-3018	000001	_	_
21-58	3018-3019	.	_	_
21-59	3019-3022	bin	_	_
21-60	3035-3036	\|	_	_
21-61	3039-3040	\|	_	_
21-62	3044-3045	└	_	_
21-63	3045-3046	─	_	_
21-64	3046-3047	─	_	_

#Text=.
22-1	3048-3049	.	_	_

#Text=.
23-1	3049-3050	.	_	_

#Text=.
24-1	3050-3051	.	_	_

#Text=│   └── labels/              \|          ├── 000000.label             \|          ├── 000001.label             \|          └── ...             └── ... ```  ## Commands ### Pretraining To run the pretraining: ``` python main\_pretrain.py -s \[SPLIT NUMBER\] --dataset \[SemanticPOSS, SemanticKITTI\] ``` For additional command line arguments, run: ``` python main\_pretrain.py -h ```  ### Discovery To run the discovery step (pretraining is not mandatory): ``` python main\_discover.py -s \[SPLIT NUMBER\] --dataset \[SemanticPOSS, SemanticKITTI\] ``` For additional command line arguments, run: ``` python main\_discover.py -h ``` To reproduce the paper results run: ``` python main\_discover.py -s \[SPLIT NUMBER\] --dataset SemanticPOSS --dataset\_config \[CONFIG\_PATH\] --num\_heads=5 --overcluster\_factor=3 --use\_scheduler --adapting\_epsilon\_sk --use\_uncertainty\_queue --use\_uncertainty\_loss --uncertainty\_percentile=0.3 ``` ``` python main\_discover.py -s \[SPLIT NUMBER\] --dataset SemanticKITTI --dataset\_config \[CONFIG\_PATH\] --num\_heads=5 --overcluster\_factor=3 --use\_scheduler --adapting\_epsilon\_sk --use\_uncertainty\_queue --use\_uncertainty\_loss --uncertainty\_percentile=0.5 ```  To test with a checkpoint, run: ``` python main\_discover\_test.py -s \[SPLIT NUMBER\] --checkpoint=\[PATH TO LIGHTNING CHECKPOINT\] ```  ## Citing our work  Please cite the following paper if you use our code:  ```latex @inproceedings{riz2023novel,   author={Riz, Luigi and Saltori, Cristiano and Ricci, Elisa and Poiesi, Fabio},   booktitle={2023 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)},    title={Novel Class Discovery for 3D Point Cloud Semantic Segmentation},    year={2023},   volume={},   number={},   pages={9393-9402},   doi={10.1109/CVPR52729.2023.00906}} ```  ## Acknowledgements  This project has received funding from the European Union’s Horizon Europe research and innovation programme under grant agreement No 101058589.
25-1	3064-3065	│	_	_
25-2	3068-3069	└	_	_
25-3	3069-3070	─	_	_
25-4	3070-3071	─	_	_
25-5	3072-3078	labels	_	_
25-6	3078-3079	/	_	_
25-7	3093-3094	\|	_	_
25-8	3104-3105	├	_	_
25-9	3105-3106	─	_	_
25-10	3106-3107	─	_	_
25-11	3108-3114	000000	_	_
25-12	3114-3115	.	_	_
25-13	3115-3120	label	_	_
25-14	3133-3134	\|	_	_
25-15	3144-3145	├	_	_
25-16	3145-3146	─	_	_
25-17	3146-3147	─	_	_
25-18	3148-3154	000001	_	_
25-19	3154-3155	.	_	_
25-20	3155-3160	label	_	_
25-21	3173-3174	\|	_	_
25-22	3184-3185	└	_	_
25-23	3185-3186	─	_	_
25-24	3186-3187	─	_	_
25-25	3188-3189	.	_	_
25-26	3189-3190	.	_	_
25-27	3190-3191	.	_	_
25-28	3204-3205	└	_	_
25-29	3205-3206	─	_	_
25-30	3206-3207	─	_	_
25-31	3208-3209	.	_	_
25-32	3209-3210	.	_	_
25-33	3210-3211	.	_	_
25-34	3212-3213	`	_	_
25-35	3213-3214	`	_	_
25-36	3214-3215	`	_	_
25-37	3217-3218	#	_	_
25-38	3218-3219	#	_	_
25-39	3220-3228	Commands	_	_
25-40	3229-3230	#	_	_
25-41	3230-3231	#	_	_
25-42	3231-3232	#	_	_
25-43	3233-3244	Pretraining	_	_
25-44	3245-3247	To	_	_
25-45	3248-3251	run	_	_
25-46	3252-3255	the	_	_
25-47	3256-3267	pretraining	_	_
25-48	3267-3268	:	_	_
25-49	3269-3270	`	_	_
25-50	3270-3271	`	_	_
25-51	3271-3272	`	_	_
25-52	3273-3279	python	_	_
25-53	3280-3296	main\_pretrain.py	_	_
25-54	3297-3298	-	_	_
25-55	3298-3299	s	_	_
25-56	3300-3301	\[	_	_
25-57	3301-3306	SPLIT	_	_
25-58	3307-3313	NUMBER	_	_
25-59	3313-3314	\]	_	_
25-60	3315-3316	-	_	_
25-61	3316-3317	-	_	_
25-62	3317-3324	dataset	_	_
25-63	3325-3326	\[	_	_
25-64	3326-3338	SemanticPOSS	_	_
25-65	3338-3339	,	_	_
25-66	3340-3353	SemanticKITTI	_	_
25-67	3353-3354	\]	_	_
25-68	3355-3356	`	_	_
25-69	3356-3357	`	_	_
25-70	3357-3358	`	_	_
25-71	3359-3362	For	_	_
25-72	3363-3373	additional	_	_
25-73	3374-3381	command	_	_
25-74	3382-3386	line	_	_
25-75	3387-3396	arguments	_	_
25-76	3396-3397	,	_	_
25-77	3398-3401	run	_	_
25-78	3401-3402	:	_	_
25-79	3403-3404	`	_	_
25-80	3404-3405	`	_	_
25-81	3405-3406	`	_	_
25-82	3407-3413	python	_	_
25-83	3414-3430	main\_pretrain.py	_	_
25-84	3431-3432	-	_	_
25-85	3432-3433	h	_	_
25-86	3434-3435	`	_	_
25-87	3435-3436	`	_	_
25-88	3436-3437	`	_	_
25-89	3439-3440	#	_	_
25-90	3440-3441	#	_	_
25-91	3441-3442	#	_	_
25-92	3443-3452	Discovery	_	_
25-93	3453-3455	To	_	_
25-94	3456-3459	run	_	_
25-95	3460-3463	the	_	_
25-96	3464-3473	discovery	_	_
25-97	3474-3478	step	_	_
25-98	3479-3480	(	_	_
25-99	3480-3491	pretraining	_	_
25-100	3492-3494	is	_	_
25-101	3495-3498	not	_	_
25-102	3499-3508	mandatory	_	_
25-103	3508-3509	)	_	_
25-104	3509-3510	:	_	_
25-105	3511-3512	`	_	_
25-106	3512-3513	`	_	_
25-107	3513-3514	`	_	_
25-108	3515-3521	python	_	_
25-109	3522-3538	main\_discover.py	_	_
25-110	3539-3540	-	_	_
25-111	3540-3541	s	_	_
25-112	3542-3543	\[	_	_
25-113	3543-3548	SPLIT	_	_
25-114	3549-3555	NUMBER	_	_
25-115	3555-3556	\]	_	_
25-116	3557-3558	-	_	_
25-117	3558-3559	-	_	_
25-118	3559-3566	dataset	_	_
25-119	3567-3568	\[	_	_
25-120	3568-3580	SemanticPOSS	_	_
25-121	3580-3581	,	_	_
25-122	3582-3595	SemanticKITTI	_	_
25-123	3595-3596	\]	_	_
25-124	3597-3598	`	_	_
25-125	3598-3599	`	_	_
25-126	3599-3600	`	_	_
25-127	3601-3604	For	_	_
25-128	3605-3615	additional	_	_
25-129	3616-3623	command	_	_
25-130	3624-3628	line	_	_
25-131	3629-3638	arguments	_	_
25-132	3638-3639	,	_	_
25-133	3640-3643	run	_	_
25-134	3643-3644	:	_	_
25-135	3645-3646	`	_	_
25-136	3646-3647	`	_	_
25-137	3647-3648	`	_	_
25-138	3649-3655	python	_	_
25-139	3656-3672	main\_discover.py	_	_
25-140	3673-3674	-	_	_
25-141	3674-3675	h	_	_
25-142	3676-3677	`	_	_
25-143	3677-3678	`	_	_
25-144	3678-3679	`	_	_
25-145	3680-3682	To	_	_
25-146	3683-3692	reproduce	_	_
25-147	3693-3696	the	_	_
25-148	3697-3702	paper	_	_
25-149	3703-3710	results	_	_
25-150	3711-3714	run	_	_
25-151	3714-3715	:	_	_
25-152	3716-3717	`	_	_
25-153	3717-3718	`	_	_
25-154	3718-3719	`	_	_
25-155	3720-3726	python	_	_
25-156	3727-3743	main\_discover.py	_	_
25-157	3744-3745	-	_	_
25-158	3745-3746	s	_	_
25-159	3747-3748	\[	_	_
25-160	3748-3753	SPLIT	_	_
25-161	3754-3760	NUMBER	_	_
25-162	3760-3761	\]	_	_
25-163	3762-3763	-	_	_
25-164	3763-3764	-	_	_
25-165	3764-3771	dataset	_	_
25-166	3772-3784	SemanticPOSS	_	_
25-167	3785-3786	-	_	_
25-168	3786-3787	-	_	_
25-169	3787-3801	dataset\_config	_	_
25-170	3802-3803	\[	_	_
25-171	3803-3814	CONFIG\_PATH	_	_
25-172	3814-3815	\]	_	_
25-173	3816-3817	-	_	_
25-174	3817-3818	-	_	_
25-175	3818-3827	num\_heads	_	_
25-176	3827-3828	=	_	_
25-177	3828-3829	5	_	_
25-178	3830-3831	-	_	_
25-179	3831-3832	-	_	_
25-180	3832-3850	overcluster\_factor	_	_
25-181	3850-3851	=	_	_
25-182	3851-3852	3	_	_
25-183	3853-3854	-	_	_
25-184	3854-3855	-	_	_
25-185	3855-3868	use\_scheduler	_	_
25-186	3869-3870	-	_	_
25-187	3870-3871	-	_	_
25-188	3871-3890	adapting\_epsilon\_sk	_	_
25-189	3891-3892	-	_	_
25-190	3892-3893	-	_	_
25-191	3893-3914	use\_uncertainty\_queue	_	_
25-192	3915-3916	-	_	_
25-193	3916-3917	-	_	_
25-194	3917-3937	use\_uncertainty\_loss	_	_
25-195	3938-3939	-	_	_
25-196	3939-3940	-	_	_
25-197	3940-3962	uncertainty\_percentile	_	_
25-198	3962-3963	=	_	_
25-199	3963-3966	0.3	_	_
25-200	3967-3968	`	_	_
25-201	3968-3969	`	_	_
25-202	3969-3970	`	_	_
25-203	3971-3972	`	_	_
25-204	3972-3973	`	_	_
25-205	3973-3974	`	_	_
25-206	3975-3981	python	_	_
25-207	3982-3998	main\_discover.py	_	_
25-208	3999-4000	-	_	_
25-209	4000-4001	s	_	_
25-210	4002-4003	\[	_	_
25-211	4003-4008	SPLIT	_	_
25-212	4009-4015	NUMBER	_	_
25-213	4015-4016	\]	_	_
25-214	4017-4018	-	_	_
25-215	4018-4019	-	_	_
25-216	4019-4026	dataset	_	_
25-217	4027-4040	SemanticKITTI	_	_
25-218	4041-4042	-	_	_
25-219	4042-4043	-	_	_
25-220	4043-4057	dataset\_config	_	_
25-221	4058-4059	\[	_	_
25-222	4059-4070	CONFIG\_PATH	_	_
25-223	4070-4071	\]	_	_
25-224	4072-4073	-	_	_
25-225	4073-4074	-	_	_
25-226	4074-4083	num\_heads	_	_
25-227	4083-4084	=	_	_
25-228	4084-4085	5	_	_
25-229	4086-4087	-	_	_
25-230	4087-4088	-	_	_
25-231	4088-4106	overcluster\_factor	_	_
25-232	4106-4107	=	_	_
25-233	4107-4108	3	_	_
25-234	4109-4110	-	_	_
25-235	4110-4111	-	_	_
25-236	4111-4124	use\_scheduler	_	_
25-237	4125-4126	-	_	_
25-238	4126-4127	-	_	_
25-239	4127-4146	adapting\_epsilon\_sk	_	_
25-240	4147-4148	-	_	_
25-241	4148-4149	-	_	_
25-242	4149-4170	use\_uncertainty\_queue	_	_
25-243	4171-4172	-	_	_
25-244	4172-4173	-	_	_
25-245	4173-4193	use\_uncertainty\_loss	_	_
25-246	4194-4195	-	_	_
25-247	4195-4196	-	_	_
25-248	4196-4218	uncertainty\_percentile	_	_
25-249	4218-4219	=	_	_
25-250	4219-4222	0.5	_	_
25-251	4223-4224	`	_	_
25-252	4224-4225	`	_	_
25-253	4225-4226	`	_	_
25-254	4228-4230	To	_	_
25-255	4231-4235	test	_	_
25-256	4236-4240	with	_	_
25-257	4241-4242	a	_	_
25-258	4243-4253	checkpoint	_	_
25-259	4253-4254	,	_	_
25-260	4255-4258	run	_	_
25-261	4258-4259	:	_	_
25-262	4260-4261	`	_	_
25-263	4261-4262	`	_	_
25-264	4262-4263	`	_	_
25-265	4264-4270	python	_	_
25-266	4271-4292	main\_discover\_test.py	_	_
25-267	4293-4294	-	_	_
25-268	4294-4295	s	_	_
25-269	4296-4297	\[	_	_
25-270	4297-4302	SPLIT	_	_
25-271	4303-4309	NUMBER	_	_
25-272	4309-4310	\]	_	_
25-273	4311-4312	-	_	_
25-274	4312-4313	-	_	_
25-275	4313-4323	checkpoint	_	_
25-276	4323-4324	=	_	_
25-277	4324-4325	\[	_	_
25-278	4325-4329	PATH	_	_
25-279	4330-4332	TO	_	_
25-280	4333-4342	LIGHTNING	_	_
25-281	4343-4353	CHECKPOINT	_	_
25-282	4353-4354	\]	*[339]	EVALMETRIC[339]
25-283	4355-4356	`	*[339]	EVALMETRIC[339]
25-284	4356-4357	`	*[339]	EVALMETRIC[339]
25-285	4357-4358	`	*[339]	EVALMETRIC[339]
25-286	4360-4361	#	*[339]	EVALMETRIC[339]
25-287	4361-4362	#	*[339]	EVALMETRIC[339]
25-288	4363-4369	Citing	*[339]	EVALMETRIC[339]
25-289	4370-4373	our	*[339]	EVALMETRIC[339]
25-290	4374-4378	work	*[339]	EVALMETRIC[339]
25-291	4380-4386	Please	*[339]	EVALMETRIC[339]
25-292	4387-4391	cite	*[339]	EVALMETRIC[339]
25-293	4392-4395	the	*[339]	EVALMETRIC[339]
25-294	4396-4405	following	*[339]	EVALMETRIC[339]
25-295	4406-4411	paper	*[339]	EVALMETRIC[339]
25-296	4412-4414	if	*[339]	EVALMETRIC[339]
25-297	4415-4418	you	*[339]	EVALMETRIC[339]
25-298	4419-4422	use	*[339]	EVALMETRIC[339]
25-299	4423-4426	our	*[339]	EVALMETRIC[339]
25-300	4427-4431	code	*[339]	EVALMETRIC[339]
25-301	4431-4432	:	*[339]	EVALMETRIC[339]
25-302	4434-4435	`	*[339]	EVALMETRIC[339]
25-303	4435-4436	`	*[339]	EVALMETRIC[339]
25-304	4436-4437	`	*[339]	EVALMETRIC[339]
25-305	4437-4442	latex	*[339]	EVALMETRIC[339]
25-306	4443-4444	@	*[339]	EVALMETRIC[339]
25-307	4444-4457	inproceedings	*[339]	EVALMETRIC[339]
25-308	4457-4458	{	*[339]	EVALMETRIC[339]
25-309	4458-4470	riz2023novel	*[339]	EVALMETRIC[339]
25-310	4470-4471	,	*[339]	EVALMETRIC[339]
25-311	4474-4480	author	*[339]	EVALMETRIC[339]
25-312	4480-4481	=	*[339]	EVALMETRIC[339]
25-313	4481-4482	{	*[339]	EVALMETRIC[339]
25-314	4482-4485	Riz	*[339]	EVALMETRIC[339]
25-315	4485-4486	,	*[339]	EVALMETRIC[339]
25-316	4487-4492	Luigi	*[339]	EVALMETRIC[339]
25-317	4493-4496	and	*[339]	EVALMETRIC[339]
25-318	4497-4504	Saltori	*[339]	EVALMETRIC[339]
25-319	4504-4505	,	*[339]	EVALMETRIC[339]
25-320	4506-4515	Cristiano	*[339]	EVALMETRIC[339]
25-321	4516-4519	and	*[339]	EVALMETRIC[339]
25-322	4520-4525	Ricci	*[339]	EVALMETRIC[339]
25-323	4525-4526	,	*[339]	EVALMETRIC[339]
25-324	4527-4532	Elisa	*[339]	EVALMETRIC[339]
25-325	4533-4536	and	*[339]	EVALMETRIC[339]
25-326	4537-4543	Poiesi	*[339]	EVALMETRIC[339]
25-327	4543-4544	,	*[339]	EVALMETRIC[339]
25-328	4545-4550	Fabio	*[339]	EVALMETRIC[339]
25-329	4550-4551	}	*[339]	EVALMETRIC[339]
25-330	4551-4552	,	*[339]	EVALMETRIC[339]
25-331	4555-4564	booktitle	*[339]	EVALMETRIC[339]
25-332	4564-4565	=	*[339]	EVALMETRIC[339]
25-333	4565-4566	{	*[339]	EVALMETRIC[339]
25-334	4566-4570	2023	*[339]	EVALMETRIC[339]
25-335	4571-4575	IEEE	*[339]	EVALMETRIC[339]
25-336	4575-4576	/	*[339]	EVALMETRIC[339]
25-337	4576-4579	CVF	*[339]	EVALMETRIC[339]
25-338	4580-4590	Conference	*[339]	EVALMETRIC[339]
25-339	4591-4593	on	*[339]	EVALMETRIC[339]
25-340	4594-4602	Computer	*[339]	EVALMETRIC[339]
25-341	4603-4609	Vision	*[339]	EVALMETRIC[339]
25-342	4610-4613	and	*[339]	EVALMETRIC[339]
25-343	4614-4621	Pattern	*[339]	EVALMETRIC[339]
25-344	4622-4633	Recognition	*[339]	EVALMETRIC[339]
25-345	4634-4635	(	*[339]	EVALMETRIC[339]
25-346	4635-4639	CVPR	*[339]	EVALMETRIC[339]
25-347	4639-4640	)	*[339]	EVALMETRIC[339]
25-348	4640-4641	}	*[339]	EVALMETRIC[339]
25-349	4641-4642	,	*[339]	EVALMETRIC[339]
25-350	4646-4651	title	*[339]	EVALMETRIC[339]
25-351	4651-4652	=	*[339]	EVALMETRIC[339]
25-352	4652-4653	{	*[339]	EVALMETRIC[339]
25-353	4653-4658	Novel	*[339]	EVALMETRIC[339]
25-354	4659-4664	Class	*[339]	EVALMETRIC[339]
25-355	4665-4674	Discovery	*[339]	EVALMETRIC[339]
25-356	4675-4678	for	*[339]	EVALMETRIC[339]
25-357	4679-4681	3D	*[339]	EVALMETRIC[339]
25-358	4682-4687	Point	*[339]	EVALMETRIC[339]
25-359	4688-4693	Cloud	*[339]	EVALMETRIC[339]
25-360	4694-4702	Semantic	*[339]	EVALMETRIC[339]
25-361	4703-4715	Segmentation	*[339]	EVALMETRIC[339]
25-362	4715-4716	}	*[339]	EVALMETRIC[339]
25-363	4716-4717	,	*[339]	EVALMETRIC[339]
25-364	4721-4725	year	*[339]	EVALMETRIC[339]
25-365	4725-4726	=	*[339]	EVALMETRIC[339]
25-366	4726-4727	{	*[339]	EVALMETRIC[339]
25-367	4727-4731	2023	*[339]	EVALMETRIC[339]
25-368	4731-4732	}	*[339]	EVALMETRIC[339]
25-369	4732-4733	,	*[339]	EVALMETRIC[339]
25-370	4736-4742	volume	*[339]	EVALMETRIC[339]
25-371	4742-4743	=	*[339]	EVALMETRIC[339]
25-372	4743-4744	{	*[339]	EVALMETRIC[339]
25-373	4744-4745	}	*[339]	EVALMETRIC[339]
25-374	4745-4746	,	*[339]	EVALMETRIC[339]
25-375	4749-4755	number	*[339]	EVALMETRIC[339]
25-376	4755-4756	=	*[339]	EVALMETRIC[339]
25-377	4756-4757	{	*[339]	EVALMETRIC[339]
25-378	4757-4758	}	*[339]	EVALMETRIC[339]
25-379	4758-4759	,	*[339]	EVALMETRIC[339]
25-380	4762-4767	pages	*[339]	EVALMETRIC[339]
25-381	4767-4768	=	*[339]	EVALMETRIC[339]
25-382	4768-4769	{	*[339]	EVALMETRIC[339]
25-383	4769-4773	9393	*[339]	EVALMETRIC[339]
25-384	4773-4774	-	*[339]	EVALMETRIC[339]
25-385	4774-4778	9402	*[339]	EVALMETRIC[339]
25-386	4778-4779	}	*[339]	EVALMETRIC[339]
25-387	4779-4780	,	*[339]	EVALMETRIC[339]
25-388	4783-4786	doi	*[339]	EVALMETRIC[339]
25-389	4786-4787	=	*[339]	EVALMETRIC[339]
25-390	4787-4788	{	*[339]	EVALMETRIC[339]
25-391	4788-4795	10.1109	*[339]	EVALMETRIC[339]
25-392	4795-4796	/	*[339]	EVALMETRIC[339]
25-393	4796-4816	CVPR52729.2023.00906	*[339]	EVALMETRIC[339]
25-393	4796-4800	CVPR	*[339]	EVALMETRIC[339]
25-394	4816-4817	}	*[339]	EVALMETRIC[339]
25-395	4817-4818	}	*[339]	EVALMETRIC[339]
25-396	4819-4820	`	*[339]	EVALMETRIC[339]
25-397	4820-4821	`	*[339]	EVALMETRIC[339]
25-398	4821-4822	`	*[339]	EVALMETRIC[339]
25-399	4824-4825	#	*[339]	EVALMETRIC[339]
25-400	4825-4826	#	*[339]	EVALMETRIC[339]
25-401	4827-4843	Acknowledgements	*[339]	EVALMETRIC[339]
25-402	4845-4849	This	*[339]	EVALMETRIC[339]
25-403	4850-4857	project	*[339]	EVALMETRIC[339]
25-404	4858-4861	has	*[339]	EVALMETRIC[339]
25-405	4862-4870	received	*[339]	EVALMETRIC[339]
25-406	4871-4878	funding	*[339]	EVALMETRIC[339]
25-407	4879-4883	from	*[339]	EVALMETRIC[339]
25-408	4884-4887	the	*[339]	EVALMETRIC[339]
25-409	4888-4896	European	*[339]	EVALMETRIC[339]
25-410	4897-4902	Union	*[339]	EVALMETRIC[339]
25-411	4902-4903	’	*[339]	EVALMETRIC[339]
25-412	4903-4904	s	*[339]	EVALMETRIC[339]
25-413	4905-4912	Horizon	*[339]	EVALMETRIC[339]
25-414	4913-4919	Europe	*[339]	EVALMETRIC[339]
25-415	4920-4928	research	*[339]	EVALMETRIC[339]
25-416	4929-4932	and	*[339]	EVALMETRIC[339]
25-417	4933-4943	innovation	*[339]	EVALMETRIC[339]
25-418	4944-4953	programme	_	_
25-419	4954-4959	under	_	_
25-420	4960-4965	grant	_	_
25-421	4966-4975	agreement	_	_
25-422	4976-4978	No	_	_
25-423	4979-4988	101058589	_	_
25-424	4988-4989	.	_	_

#Text=This work was also partially supported by the PRIN project LEGO-AI (Prot. 2020TA3K9N), the EU ISFP PROTECTOR (101034216) project and the EU H2020 MARVEL (957337) project and, it was carried out in the Vision and Learning joint laboratory of Fondazione Bruno Kessler and UNITN.  ## TODOS :soon: - Add code for $\\text{EUMS}^\\dagger$
26-1	4990-4994	This	_	_
26-2	4995-4999	work	_	_
26-3	5000-5003	was	_	_
26-4	5004-5008	also	_	_
26-5	5009-5018	partially	_	_
26-6	5019-5028	supported	_	_
26-7	5029-5031	by	_	_
26-8	5032-5035	the	_	_
26-9	5036-5040	PRIN	_	_
26-10	5041-5048	project	_	_
26-11	5049-5056	LEGO-AI	_	_
26-12	5057-5058	(	_	_
26-13	5058-5062	Prot	_	_
26-14	5062-5063	.	_	_
26-15	5064-5074	2020TA3K9N	_	_
26-16	5074-5075	)	*[340]	EVALMETRIC[340]
26-17	5075-5076	,	*[340]	EVALMETRIC[340]
26-18	5077-5080	the	*[340]	EVALMETRIC[340]
26-19	5081-5083	EU	*[340]	EVALMETRIC[340]
26-20	5084-5088	ISFP	*[340]	EVALMETRIC[340]
26-21	5089-5098	PROTECTOR	_	_
26-22	5099-5100	(	_	_
26-23	5100-5109	101034216	_	_
26-24	5109-5110	)	_	_
26-25	5111-5118	project	_	_
26-26	5119-5122	and	_	_
26-27	5123-5126	the	_	_
26-28	5127-5129	EU	_	_
26-29	5130-5135	H2020	_	_
26-30	5136-5142	MARVEL	_	_
26-31	5143-5144	(	_	_
26-32	5144-5150	957337	_	_
26-33	5150-5151	)	_	_
26-34	5152-5159	project	_	_
26-35	5160-5163	and	_	_
26-36	5163-5164	,	_	_
26-37	5165-5167	it	_	_
26-38	5168-5171	was	_	_
26-39	5172-5179	carried	_	_
26-40	5180-5183	out	_	_
26-41	5184-5186	in	_	_
26-42	5187-5190	the	_	_
26-43	5191-5197	Vision	_	_
26-44	5198-5201	and	_	_
26-45	5202-5210	Learning	_	_
26-46	5211-5216	joint	_	_
26-47	5217-5227	laboratory	_	_
26-48	5228-5230	of	_	_
26-49	5231-5241	Fondazione	_	_
26-50	5242-5247	Bruno	_	_
26-51	5248-5255	Kessler	_	_
26-52	5256-5259	and	_	_
26-53	5260-5265	UNITN	_	_
26-54	5265-5266	.	_	_
26-55	5268-5269	#	_	_
26-56	5269-5270	#	_	_
26-57	5271-5276	TODOS	_	_
26-58	5277-5278	:	_	_
26-59	5278-5282	soon	_	_
26-60	5282-5283	:	_	_
26-61	5284-5285	-	_	_
26-62	5286-5289	Add	_	_
26-63	5290-5294	code	_	_
26-64	5295-5298	for	_	_
26-65	5299-5300	$	_	_
26-66	5300-5301	\\	_	_
26-67	5301-5305	text	_	_
26-68	5305-5306	{	_	_
26-69	5306-5310	EUMS	_	_
26-70	5310-5311	}	_	_
26-71	5311-5312	^	_	_
26-72	5312-5313	\\	_	_
26-73	5313-5319	dagger	_	_
26-74	5319-5320	$	_	_