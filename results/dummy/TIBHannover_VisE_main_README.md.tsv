#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Ontology-driven Event Type Classification in Images  This is the official GitHub page for the paper:  > Eric Müller-Budack, Matthias Springstein, Sherzod Hakimov, Kevin Mrutzek, and Ralph Ewerth: "Ontology-driven Event Type Classification in Images".
1-1	0-1	#	_	_
1-2	2-17	Ontology-driven	_	_
1-3	18-23	Event	*[208]	LICENSE[208]
1-4	24-28	Type	*[208]	LICENSE[208]
1-5	29-43	Classification	*[208]	LICENSE[208]
1-6	44-46	in	*[208]	LICENSE[208]
1-7	47-53	Images	*[208]	LICENSE[208]
1-8	55-59	This	*[208]	LICENSE[208]
1-9	60-62	is	*[208]	LICENSE[208]
1-10	63-66	the	*[208]	LICENSE[208]
1-11	67-75	official	*[208]	LICENSE[208]
1-12	76-82	GitHub	*[208]	LICENSE[208]
1-13	83-87	page	*[208]	LICENSE[208]
1-14	88-91	for	*[208]	LICENSE[208]
1-15	92-95	the	*[208]	LICENSE[208]
1-16	96-101	paper	*[208]	LICENSE[208]
1-17	101-102	:	*[208]	LICENSE[208]
1-18	104-105	>	*[208]	LICENSE[208]
1-19	106-110	Eric	*[208]	LICENSE[208]
1-20	111-124	Müller-Budack	*[208]	LICENSE[208]
1-21	124-125	,	*[208]	LICENSE[208]
1-22	126-134	Matthias	*[208]	LICENSE[208]
1-23	135-146	Springstein	*[208]	LICENSE[208]
1-24	146-147	,	*[208]	LICENSE[208]
1-25	148-155	Sherzod	*[208]	LICENSE[208]
1-26	156-163	Hakimov	*[208]	LICENSE[208]
1-27	163-164	,	*[208]	LICENSE[208]
1-28	165-170	Kevin	_	_
1-29	171-178	Mrutzek	_	_
1-30	178-179	,	_	_
1-31	180-183	and	_	_
1-32	184-189	Ralph	_	_
1-33	190-196	Ewerth	_	_
1-34	196-197	:	_	_
1-35	198-199	"	_	_
1-36	199-214	Ontology-driven	_	_
1-37	215-220	Event	_	_
1-38	221-225	Type	_	_
1-39	226-240	Classification	_	_
1-40	241-243	in	_	_
1-41	244-250	Images	_	_
1-42	250-251	"	_	_
1-43	251-252	.	_	_

#Text=In: \*Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision (WACV)\*, pages 2928-2938, IEEE, Virtual Conference, 2021.
2-1	253-255	In	_	_
2-2	255-256	:	_	_
2-3	257-258	\*	_	_
2-4	258-269	Proceedings	_	_
2-5	270-272	of	_	_
2-6	273-276	the	_	_
2-7	277-281	IEEE	_	_
2-8	281-282	/	_	_
2-9	282-285	CVF	_	_
2-10	286-292	Winter	_	_
2-11	293-303	Conference	_	_
2-12	304-306	on	_	_
2-13	307-319	Applications	_	_
2-14	320-322	of	_	_
2-15	323-331	Computer	_	_
2-16	332-338	Vision	_	_
2-17	339-340	(	*[180]	PROJECT[180]
2-18	340-344	WACV	_	_
2-19	344-345	)	_	_
2-20	345-346	\*	_	_
2-21	346-347	,	_	_
2-22	348-353	pages	_	_
2-23	354-358	2928	_	_
2-24	358-359	-	_	_
2-25	359-363	2938	_	_
2-26	363-364	,	_	_
2-27	365-369	IEEE	_	_
2-28	369-370	,	_	_
2-29	371-378	Virtual	_	_
2-30	379-389	Conference	_	_
2-31	389-390	,	_	_
2-32	391-395	2021	_	_
2-33	395-396	.	_	_

#Text=The paper is available on: - \*Computer Vision Foundation (CVF)\*: https://openaccess.thecvf.com/content/WACV2021/html/Muller-Budack\_Ontology-Driven\_Event\_Type\_Classification\_in\_Images\_WACV\_2021\_paper.html - \*arXiv\*: https://arxiv.org/pdf/2011.04714.pdf  Further information can be found on the \*\*EventKG\*\* website: http://eventkg.l3s.uni-hannover.de/VisE   ## Content  - \[Ontology-driven Event Type Classification in Images\](#ontology-driven-event-type-classification-in-images)   - \[Content\](#content)   - \[Setup\](#setup)     - \[Setup with Singularity (for Reproducibility)\](#setup-with-singularity-for-reproducibility)     - \[Setup with Virtual Environment\](#setup-with-virtual-environment)     - \[Setup with Docker\](#setup-with-docker)   - \[Download Ontology, Dataset and Models\](#download-ontology-dataset-and-models)   - \[Models\](#models)   - \[Inference\](#inference)   - \[Test\](#test)   - \[VisE-D: Visual Event Classification Dataset\](#vise-d-visual-event-classification-dataset)   - \[VisE-O: Visual Event Ontology\](#vise-o-visual-event-ontology)   - \[Benchmark Ontologies\](#benchmark-ontologies)   - \[Supplemental Material\](#supplemental-material)   - \[LICENSE\](#license)   ## Setup  We provide three different ways to setup the project.
3-1	398-401	The	_	_
3-2	402-407	paper	_	_
3-3	408-410	is	_	_
3-4	411-420	available	_	_
3-5	421-423	on	_	_
3-6	423-424	:	_	_
3-7	425-426	-	_	_
3-8	427-428	\*	_	_
3-9	428-436	Computer	_	_
3-10	437-443	Vision	_	_
3-11	444-454	Foundation	_	_
3-12	455-456	(	_	_
3-13	456-459	CVF	_	_
3-14	459-460	)	_	_
3-15	460-461	\*	_	_
3-16	461-462	:	_	_
3-17	463-468	https	_	_
3-18	468-469	:	_	_
3-19	469-470	/	_	_
3-20	470-471	/	_	_
3-21	471-492	openaccess.thecvf.com	_	_
3-22	492-493	/	_	_
3-23	493-500	content	_	_
3-24	500-501	/	_	_
3-25	501-509	WACV2021	_	_
3-26	509-510	/	_	_
3-27	510-514	html	_	_
3-28	514-515	/	_	_
3-29	515-585	Muller-Budack\_Ontology-Driven\_Event\_Type\_Classification\_in\_Images\_WACV	_	_
3-29	581-585	WACV	_	_
3-30	585-586	\_	_	_
3-31	586-590	2021	_	_
3-32	590-591	\_	_	_
3-33	591-601	paper.html	_	_
3-34	602-603	-	_	_
3-35	604-605	\*	_	_
3-36	605-610	arXiv	_	_
3-37	610-611	\*	_	_
3-38	611-612	:	_	_
3-39	613-618	https	_	_
3-40	618-619	:	_	_
3-41	619-620	/	_	_
3-42	620-621	/	_	_
3-43	621-630	arxiv.org	_	_
3-44	630-631	/	_	_
3-45	631-634	pdf	_	_
3-46	634-635	/	_	_
3-47	635-645	2011.04714	_	_
3-48	645-646	.	_	_
3-49	646-649	pdf	_	_
3-50	651-658	Further	_	_
3-51	659-670	information	_	_
3-52	671-674	can	_	_
3-53	675-677	be	_	_
3-54	678-683	found	_	_
3-55	684-686	on	_	_
3-56	687-690	the	_	_
3-57	691-692	\*	_	_
3-58	692-693	\*	_	_
3-59	693-700	EventKG	_	_
3-60	700-701	\*	_	_
3-61	701-702	\*	_	_
3-62	703-710	website	_	_
3-63	710-711	:	_	_
3-64	712-716	http	_	_
3-65	716-717	:	_	_
3-66	717-718	/	_	_
3-67	718-719	/	_	_
3-68	719-746	eventkg.l3s.uni-hannover.de	_	_
3-68	719-726	eventkg	_	_
3-69	746-747	/	_	_
3-70	747-751	VisE	_	_
3-71	754-755	#	_	_
3-72	755-756	#	_	_
3-73	757-764	Content	_	_
3-74	766-767	-	_	_
3-75	768-769	\[	_	_
3-76	769-784	Ontology-driven	_	_
3-77	785-790	Event	_	_
3-78	791-795	Type	_	_
3-79	796-810	Classification	_	_
3-80	811-813	in	_	_
3-81	814-820	Images	_	_
3-82	820-821	\]	_	_
3-83	821-822	(	_	_
3-84	822-823	#	_	_
3-85	823-874	ontology-driven-event-type-classification-in-images	_	_
3-86	874-875	)	_	_
3-87	878-879	-	_	_
3-88	880-881	\[	_	_
3-89	881-888	Content	_	_
3-90	888-889	\]	_	_
3-91	889-890	(	_	_
3-92	890-891	#	_	_
3-93	891-898	content	_	_
3-94	898-899	)	_	_
3-95	902-903	-	_	_
3-96	904-905	\[	_	_
3-97	905-910	Setup	_	_
3-98	910-911	\]	_	_
3-99	911-912	(	_	_
3-100	912-913	#	_	_
3-101	913-918	setup	_	_
3-102	918-919	)	_	_
3-103	924-925	-	_	_
3-104	926-927	\[	_	_
3-105	927-932	Setup	_	_
3-106	933-937	with	_	_
3-107	938-949	Singularity	_	_
3-108	950-951	(	_	_
3-109	951-954	for	_	_
3-110	955-970	Reproducibility	_	_
3-111	970-971	)	_	_
3-112	971-972	\]	_	_
3-113	972-973	(	_	_
3-114	973-974	#	_	_
3-115	974-1016	setup-with-singularity-for-reproducibility	_	_
3-116	1016-1017	)	_	_
3-117	1022-1023	-	_	_
3-118	1024-1025	\[	_	_
3-119	1025-1030	Setup	_	_
3-120	1031-1035	with	_	_
3-121	1036-1043	Virtual	_	_
3-122	1044-1055	Environment	_	_
3-123	1055-1056	\]	_	_
3-124	1056-1057	(	_	_
3-125	1057-1058	#	_	_
3-126	1058-1088	setup-with-virtual-environment	_	_
3-127	1088-1089	)	_	_
3-128	1094-1095	-	_	_
3-129	1096-1097	\[	_	_
3-130	1097-1102	Setup	_	_
3-131	1103-1107	with	_	_
3-132	1108-1114	Docker	_	_
3-133	1114-1115	\]	_	_
3-134	1115-1116	(	_	_
3-135	1116-1117	#	_	_
3-136	1117-1134	setup-with-docker	_	_
3-137	1134-1135	)	_	_
3-138	1138-1139	-	_	_
3-139	1140-1141	\[	_	_
3-140	1141-1149	Download	_	_
3-141	1150-1158	Ontology	_	_
3-142	1158-1159	,	_	_
3-143	1160-1167	Dataset	_	_
3-144	1168-1171	and	_	_
3-145	1172-1178	Models	_	_
3-146	1178-1179	\]	_	_
3-147	1179-1180	(	_	_
3-148	1180-1181	#	_	_
3-149	1181-1217	download-ontology-dataset-and-models	_	_
3-150	1217-1218	)	_	_
3-151	1221-1222	-	_	_
3-152	1223-1224	\[	_	_
3-153	1224-1230	Models	_	_
3-154	1230-1231	\]	_	_
3-155	1231-1232	(	_	_
3-156	1232-1233	#	_	_
3-157	1233-1239	models	_	_
3-158	1239-1240	)	_	_
3-159	1243-1244	-	_	_
3-160	1245-1246	\[	_	_
3-161	1246-1255	Inference	_	_
3-162	1255-1256	\]	_	_
3-163	1256-1257	(	_	_
3-164	1257-1258	#	_	_
3-165	1258-1267	inference	_	_
3-166	1267-1268	)	_	_
3-167	1271-1272	-	_	_
3-168	1273-1274	\[	_	_
3-169	1274-1278	Test	_	_
3-170	1278-1279	\]	_	_
3-171	1279-1280	(	_	_
3-172	1280-1281	#	_	_
3-173	1281-1285	test	_	_
3-174	1285-1286	)	_	_
3-175	1289-1290	-	_	_
3-176	1291-1292	\[	_	_
3-177	1292-1298	VisE-D	_	_
3-178	1298-1299	:	*[177]	WORKSHOP[177]
3-179	1300-1306	Visual	*[177]	WORKSHOP[177]
3-180	1307-1312	Event	*[177]	WORKSHOP[177]
3-181	1313-1327	Classification	*[177]	WORKSHOP[177]
3-182	1328-1335	Dataset	*[177]	WORKSHOP[177]
3-183	1335-1336	\]	*[177]	WORKSHOP[177]
3-184	1336-1337	(	*[177]	WORKSHOP[177]
3-185	1337-1338	#	*[177]	WORKSHOP[177]
3-186	1338-1380	vise-d-visual-event-classification-dataset	*[177]	WORKSHOP[177]
3-187	1380-1381	)	*[177]	WORKSHOP[177]
3-188	1384-1385	-	*[177]	WORKSHOP[177]
3-189	1386-1387	\[	*[177]	WORKSHOP[177]
3-190	1387-1393	VisE-O	*[177]	WORKSHOP[177]
3-191	1393-1394	:	*[177]	WORKSHOP[177]
3-192	1395-1401	Visual	*[177]	WORKSHOP[177]
3-193	1402-1407	Event	*[177]	WORKSHOP[177]
3-194	1408-1416	Ontology	*[177]	WORKSHOP[177]
3-195	1416-1417	\]	*[177]	WORKSHOP[177]
3-196	1417-1418	(	*[177]	WORKSHOP[177]
3-197	1418-1419	#	*[177]	WORKSHOP[177]
3-198	1419-1447	vise-o-visual-event-ontology	_	_
3-199	1447-1448	)	_	_
3-200	1451-1452	-	_	_
3-201	1453-1454	\[	_	_
3-202	1454-1463	Benchmark	_	_
3-203	1464-1474	Ontologies	_	_
3-204	1474-1475	\]	_	_
3-205	1475-1476	(	_	_
3-206	1476-1477	#	_	_
3-207	1477-1497	benchmark-ontologies	_	_
3-208	1497-1498	)	_	_
3-209	1501-1502	-	_	_
3-210	1503-1504	\[	_	_
3-211	1504-1516	Supplemental	_	_
3-212	1517-1525	Material	_	_
3-213	1525-1526	\]	_	_
3-214	1526-1527	(	_	_
3-215	1527-1528	#	_	_
3-216	1528-1549	supplemental-material	_	_
3-217	1549-1550	)	_	_
3-218	1553-1554	-	_	_
3-219	1555-1556	\[	_	_
3-220	1556-1563	LICENSE	_	_
3-221	1563-1564	\]	_	_
3-222	1564-1565	(	_	_
3-223	1565-1566	#	_	_
3-224	1566-1573	license	_	_
3-225	1573-1574	)	_	_
3-226	1577-1578	#	_	_
3-227	1578-1579	#	_	_
3-228	1580-1585	Setup	_	_
3-229	1587-1589	We	_	_
3-230	1590-1597	provide	_	_
3-231	1598-1603	three	_	_
3-232	1604-1613	different	_	_
3-233	1614-1618	ways	_	_
3-234	1619-1621	to	_	_
3-235	1622-1627	setup	_	_
3-236	1628-1631	the	_	_
3-237	1632-1639	project	_	_
3-238	1639-1640	.	_	_

#Text=The results can be reproduced using the \[setup with singularity\](#setup-with-singularity-for-reproducibility).
4-1	1641-1644	The	_	_
4-2	1645-1652	results	_	_
4-3	1653-1656	can	_	_
4-4	1657-1659	be	_	_
4-5	1660-1670	reproduced	_	_
4-6	1671-1676	using	_	_
4-7	1677-1680	the	_	_
4-8	1681-1682	\[	_	_
4-9	1682-1687	setup	_	_
4-10	1688-1692	with	_	_
4-11	1693-1704	singularity	_	_
4-12	1704-1705	\]	_	_
4-13	1705-1706	(	_	_
4-14	1706-1707	#	_	_
4-15	1707-1749	setup-with-singularity-for-reproducibility	_	_
4-15	1718-1729	singularity	_	_
4-16	1749-1750	)	_	_
4-17	1750-1751	.	_	_

#Text=The singularity image is built with an optimized pytorch implementation on arch linux, which we used for training and testing.
5-1	1752-1755	The	_	_
5-2	1756-1767	singularity	_	_
5-3	1768-1773	image	_	_
5-4	1774-1776	is	_	_
5-5	1777-1782	built	_	_
5-6	1783-1787	with	_	_
5-7	1788-1790	an	_	_
5-8	1791-1800	optimized	_	_
5-9	1801-1808	pytorch	_	_
5-10	1809-1823	implementation	_	_
5-11	1824-1826	on	_	_
5-12	1827-1831	arch	_	_
5-13	1832-1837	linux	_	_
5-14	1837-1838	,	_	_
5-15	1839-1844	which	_	_
5-16	1845-1847	we	*[204]	SOFTWARE[204]
5-17	1848-1852	used	_	_
5-18	1853-1856	for	_	_
5-19	1857-1865	training	_	_
5-20	1866-1869	and	_	_
5-21	1870-1877	testing	_	_
5-22	1877-1878	.	_	_

#Text=While the other two setups using a \[virtual environment\](#setup-with-virtual-environment) or \[docker\](#setup-with-docker) produce the same result on our testsets, they slightly differ from the results reported in the paper (deviation around 0.1%).   ### Setup with Singularity (for Reproducibility)  To install singularity please follow the instructions on: https://sylabs.io/guides/3.6/admin-guide/installation.html  Download our singularity image from: \[link\](https://tib.eu/cloud/s/fPMwLMWo3wCmMRy/download) (Filesize is 5 GB)  To run code using sinularity, please run:   ```shell script singularity exec \\   -B </PATH/TO/REPOSITORY>:/src \\   --nv </PATH/TO/SINGULARITY/IMAGE>.sif \\   bash  cd /src ```   ### Setup with Virtual Environment  Please run the following command to setup the project in your (virtual) environment:  ```shell script pip install -r requirements.txt ```  \*\*NOTE:\*\* This setup produces slightly different results (deviation around 0.1%) while \[testing\](#test).
6-1	2004-2009	While	_	_
6-2	2010-2013	the	_	_
6-3	2014-2019	other	_	_
6-4	2020-2023	two	_	_
6-5	2024-2030	setups	_	_
6-6	2031-2036	using	_	_
6-7	2037-2038	a	_	_
6-8	2039-2040	\[	_	_
6-9	2040-2047	virtual	_	_
6-10	2048-2059	environment	_	_
6-11	2059-2060	\]	_	_
6-12	2060-2061	(	_	_
6-13	2061-2062	#	_	_
6-14	2062-2092	setup-with-virtual-environment	_	_
6-15	2092-2093	)	_	_
6-16	2094-2096	or	_	_
6-17	2097-2098	\[	_	_
6-18	2098-2104	docker	_	_
6-19	2104-2105	\]	_	_
6-20	2105-2106	(	_	_
6-21	2106-2107	#	_	_
6-22	2107-2124	setup-with-docker	_	_
6-22	2118-2124	docker	_	_
6-23	2124-2125	)	_	_
6-24	2126-2133	produce	_	_
6-25	2134-2137	the	_	_
6-26	2138-2142	same	_	_
6-27	2143-2149	result	_	_
6-28	2150-2152	on	_	_
6-29	2153-2156	our	_	_
6-30	2157-2165	testsets	_	_
6-31	2165-2166	,	_	_
6-32	2167-2171	they	_	_
6-33	2172-2180	slightly	_	_
6-34	2181-2187	differ	_	_
6-35	2188-2192	from	_	_
6-36	2193-2196	the	_	_
6-37	2197-2204	results	_	_
6-38	2205-2213	reported	_	_
6-39	2214-2216	in	_	_
6-40	2217-2220	the	_	_
6-41	2221-2226	paper	_	_
6-42	2227-2228	(	_	_
6-43	2228-2237	deviation	_	_
6-44	2238-2244	around	_	_
6-45	2245-2249	0.1%	_	_
6-46	2249-2250	)	_	_
6-47	2250-2251	.	_	_
6-48	2254-2255	#	_	_
6-49	2255-2256	#	_	_
6-50	2256-2257	#	_	_
6-51	2258-2263	Setup	_	_
6-52	2264-2268	with	_	_
6-53	2269-2280	Singularity	_	_
6-54	2281-2282	(	_	_
6-55	2282-2285	for	_	_
6-56	2286-2301	Reproducibility	_	_
6-57	2301-2302	)	_	_
6-58	2304-2306	To	_	_
6-59	2307-2314	install	_	_
6-60	2315-2326	singularity	_	_
6-61	2327-2333	please	_	_
6-62	2334-2340	follow	_	_
6-63	2341-2344	the	_	_
6-64	2345-2357	instructions	_	_
6-65	2358-2360	on	_	_
6-66	2360-2361	:	_	_
6-67	2362-2367	https	_	_
6-68	2367-2368	:	_	_
6-69	2368-2369	/	_	_
6-70	2369-2370	/	_	_
6-71	2370-2379	sylabs.io	_	_
6-72	2379-2380	/	_	_
6-73	2380-2386	guides	_	_
6-74	2386-2387	/	_	_
6-75	2387-2390	3.6	_	_
6-76	2390-2391	/	_	_
6-77	2391-2402	admin-guide	_	_
6-78	2402-2403	/	_	_
6-79	2403-2420	installation.html	_	_
6-80	2422-2430	Download	_	_
6-81	2431-2434	our	_	_
6-82	2435-2446	singularity	_	_
6-83	2447-2452	image	_	_
6-84	2453-2457	from	_	_
6-85	2457-2458	:	_	_
6-86	2459-2460	\[	_	_
6-87	2460-2464	link	_	_
6-88	2464-2465	\]	_	_
6-89	2465-2466	(	_	_
6-90	2466-2471	https	_	_
6-91	2471-2472	:	_	_
6-92	2472-2473	/	_	_
6-93	2473-2474	/	_	_
6-94	2474-2480	tib.eu	_	_
6-95	2480-2481	/	_	_
6-96	2481-2486	cloud	_	_
6-97	2486-2487	/	_	_
6-98	2487-2488	s	_	_
6-99	2488-2489	/	_	_
6-100	2489-2504	fPMwLMWo3wCmMRy	_	_
6-101	2504-2505	/	_	_
6-102	2505-2513	download	_	_
6-103	2513-2514	)	_	_
6-104	2515-2516	(	_	_
6-105	2516-2524	Filesize	_	_
6-106	2525-2527	is	_	_
6-107	2528-2529	5	_	_
6-108	2530-2532	GB	_	_
6-109	2532-2533	)	_	_
6-110	2535-2537	To	_	_
6-111	2538-2541	run	_	_
6-112	2542-2546	code	_	_
6-113	2547-2552	using	_	_
6-114	2553-2563	sinularity	_	_
6-115	2563-2564	,	_	_
6-116	2565-2571	please	_	_
6-117	2572-2575	run	_	_
6-118	2575-2576	:	_	_
6-119	2579-2580	`	_	_
6-120	2580-2581	`	_	_
6-121	2581-2582	`	_	_
6-122	2582-2587	shell	_	_
6-123	2588-2594	script	_	_
6-124	2595-2606	singularity	_	_
6-125	2607-2611	exec	_	_
6-126	2612-2613	\\	_	_
6-127	2616-2617	-	_	_
6-128	2617-2618	B	_	_
6-129	2619-2620	<	_	_
6-130	2620-2621	/	_	_
6-131	2621-2625	PATH	_	_
6-132	2625-2626	/	*[181]	PROJECT[181]
6-133	2626-2628	TO	*[181]	PROJECT[181]
6-134	2628-2629	/	*[181]	PROJECT[181]
6-135	2629-2639	REPOSITORY	*[181]	PROJECT[181]
6-136	2639-2640	>	*[181]	PROJECT[181]
6-137	2640-2641	:	*[181]	PROJECT[181]
6-138	2641-2642	/	*[181]	PROJECT[181]
6-139	2642-2645	src	*[181]	PROJECT[181]
6-140	2646-2647	\\	*[181]	PROJECT[181]
6-141	2650-2651	-	*[181]	PROJECT[181]
6-142	2651-2652	-	*[181]	PROJECT[181]
6-143	2652-2654	nv	*[181]	PROJECT[181]
6-144	2655-2656	<	*[181]	PROJECT[181]
6-145	2656-2657	/	*[181]	PROJECT[181]
6-146	2657-2661	PATH	*[181]	PROJECT[181]
6-147	2661-2662	/	*[181]	PROJECT[181]
6-148	2662-2664	TO	*[181]	PROJECT[181]
6-149	2664-2665	/	*[181]	PROJECT[181]
6-150	2665-2676	SINGULARITY	*[181]	PROJECT[181]
6-151	2676-2677	/	*[181]	PROJECT[181]
6-152	2677-2682	IMAGE	*[181]	PROJECT[181]
6-153	2682-2683	>	*[181]	PROJECT[181]
6-154	2683-2684	.	*[181]	PROJECT[181]
6-155	2684-2687	sif	*[181]	PROJECT[181]
6-156	2688-2689	\\	*[181]	PROJECT[181]
6-157	2692-2696	bash	*[181]	PROJECT[181]
6-158	2698-2700	cd	*[181]	PROJECT[181]
6-159	2701-2702	/	*[181]	PROJECT[181]
6-160	2702-2705	src	*[181]	PROJECT[181]
6-161	2706-2707	`	*[181]	PROJECT[181]
6-162	2707-2708	`	*[181]	PROJECT[181]
6-163	2708-2709	`	*[181]	PROJECT[181]
6-164	2712-2713	#	*[181]	PROJECT[181]
6-165	2713-2714	#	*[181]	PROJECT[181]
6-166	2714-2715	#	*[181]	PROJECT[181]
6-167	2716-2721	Setup	*[181]	PROJECT[181]
6-168	2722-2726	with	*[181]	PROJECT[181]
6-169	2727-2734	Virtual	*[181]	PROJECT[181]
6-170	2735-2746	Environment	*[181]	PROJECT[181]
6-171	2748-2754	Please	*[181]	PROJECT[181]
6-172	2755-2758	run	*[181]	PROJECT[181]
6-173	2759-2762	the	*[181]	PROJECT[181]
6-174	2763-2772	following	*[181]	PROJECT[181]
6-175	2773-2780	command	*[181]	PROJECT[181]
6-176	2781-2783	to	*[181]	PROJECT[181]
6-177	2784-2789	setup	*[181]	PROJECT[181]
6-178	2790-2793	the	*[181]	PROJECT[181]
6-179	2794-2801	project	*[181]	PROJECT[181]
6-180	2802-2804	in	*[181]	PROJECT[181]
6-181	2805-2809	your	_	_
6-182	2810-2811	(	_	_
6-183	2811-2818	virtual	_	_
6-184	2818-2819	)	_	_
6-185	2820-2831	environment	_	_
6-186	2831-2832	:	_	_
6-187	2834-2835	`	_	_
6-188	2835-2836	`	_	_
6-189	2836-2837	`	_	_
6-190	2837-2842	shell	_	_
6-191	2843-2849	script	_	_
6-192	2850-2853	pip	_	_
6-193	2854-2861	install	_	_
6-194	2862-2863	-	_	_
6-195	2863-2864	r	_	_
6-196	2865-2881	requirements.txt	_	_
6-197	2882-2883	`	_	_
6-198	2883-2884	`	_	_
6-199	2884-2885	`	_	_
6-200	2887-2888	\*	_	_
6-201	2888-2889	\*	_	_
6-202	2889-2893	NOTE	_	_
6-203	2893-2894	:	_	_
6-204	2894-2895	\*	_	_
6-205	2895-2896	\*	_	_
6-206	2897-2901	This	_	_
6-207	2902-2907	setup	_	_
6-208	2908-2916	produces	_	_
6-209	2917-2925	slightly	_	_
6-210	2926-2935	different	_	_
6-211	2936-2943	results	_	_
6-212	2944-2945	(	_	_
6-213	2945-2954	deviation	_	_
6-214	2955-2961	around	_	_
6-215	2962-2966	0.1%	_	_
6-216	2966-2967	)	_	_
6-217	2968-2973	while	_	_
6-218	2974-2975	\[	_	_
6-219	2975-2982	testing	_	_
6-220	2982-2983	\]	_	_
6-221	2983-2984	(	_	_
6-222	2984-2985	#	_	_
6-223	2985-2989	test	_	_
6-224	2989-2990	)	_	_
6-225	2990-2991	.	_	_

#Text=To fully reproduce our results we have provided a \[singularity image\](#setup-with-singularity-for-reproducibility), which is a copy of our training and testing environment and uses a highly optimized pytorch implementation.   ### Setup with Docker  We have provided a Docker container to execute our code.
7-1	2992-2994	To	_	_
7-2	2995-3000	fully	_	_
7-3	3001-3010	reproduce	_	_
7-4	3011-3014	our	_	_
7-5	3015-3022	results	_	_
7-6	3023-3025	we	_	_
7-7	3026-3030	have	_	_
7-8	3031-3039	provided	_	_
7-9	3040-3041	a	_	_
7-10	3042-3043	\[	_	_
7-11	3043-3054	singularity	_	_
7-12	3055-3060	image	_	_
7-13	3060-3061	\]	_	_
7-14	3061-3062	(	_	_
7-15	3062-3063	#	_	_
7-16	3063-3105	setup-with-singularity-for-reproducibility	_	_
7-16	3074-3085	singularity	_	_
7-17	3105-3106	)	_	_
7-18	3106-3107	,	_	_
7-19	3108-3113	which	_	_
7-20	3114-3116	is	*[185]	EVALMETRIC[185]
7-21	3117-3118	a	*[185]	EVALMETRIC[185]
7-22	3119-3123	copy	*[185]	EVALMETRIC[185]
7-23	3124-3126	of	*[185]	EVALMETRIC[185]
7-24	3127-3130	our	*[185]	EVALMETRIC[185]
7-25	3131-3139	training	*[185]	EVALMETRIC[185]
7-26	3140-3143	and	*[185]	EVALMETRIC[185]
7-27	3144-3151	testing	*[185]	EVALMETRIC[185]
7-28	3152-3163	environment	*[185]	EVALMETRIC[185]
7-29	3164-3167	and	*[185]	EVALMETRIC[185]
7-30	3168-3172	uses	*[185]	EVALMETRIC[185]
7-31	3173-3174	a	*[185]	EVALMETRIC[185]
7-32	3175-3181	highly	*[185]	EVALMETRIC[185]
7-33	3182-3191	optimized	*[185]	EVALMETRIC[185]
7-34	3192-3199	pytorch	_	_
7-35	3200-3214	implementation	_	_
7-36	3214-3215	.	_	_
7-37	3218-3219	#	_	_
7-38	3219-3220	#	_	_
7-39	3220-3221	#	_	_
7-40	3222-3227	Setup	_	_
7-41	3228-3232	with	_	_
7-42	3233-3239	Docker	_	_
7-43	3241-3243	We	_	_
7-44	3244-3248	have	_	_
7-45	3249-3257	provided	_	_
7-46	3258-3259	a	_	_
7-47	3260-3266	Docker	_	_
7-48	3267-3276	container	_	_
7-49	3277-3279	to	_	_
7-50	3280-3287	execute	_	_
7-51	3288-3291	our	_	_
7-52	3292-3296	code	_	_
7-53	3296-3297	.	_	_

#Text=You can build the container with:  ```shell script docker build <PATH/TO/REPOSITORY> -t <DOCKER\_NAME> ```  To run the container please use:  ```shell script docker run \\   --volume <PATH/TO/REPOSITORY>:/src \\   --shm-size=256m \\   -u $(id -u):$(id -g) \\   -it <DOCKER\_NAME> bash   cd /src ```  \*\*NOTE:\*\* This setup produces slightly different results (deviation around 0.1%) while \[testing\](#test).
8-1	3298-3301	You	_	_
8-2	3302-3305	can	_	_
8-3	3306-3311	build	_	_
8-4	3312-3315	the	_	_
8-5	3316-3325	container	_	_
8-6	3326-3330	with	_	_
8-7	3330-3331	:	_	_
8-8	3333-3334	`	_	_
8-9	3334-3335	`	_	_
8-10	3335-3336	`	_	_
8-11	3336-3341	shell	_	_
8-12	3342-3348	script	_	_
8-13	3349-3355	docker	_	_
8-14	3356-3361	build	_	_
8-15	3362-3363	<	_	_
8-16	3363-3367	PATH	_	_
8-17	3367-3368	/	_	_
8-18	3368-3370	TO	_	_
8-19	3370-3371	/	_	_
8-20	3371-3381	REPOSITORY	_	_
8-21	3381-3382	>	_	_
8-22	3383-3384	-	_	_
8-23	3384-3385	t	_	_
8-24	3386-3387	<	_	_
8-25	3387-3398	DOCKER\_NAME	_	_
8-26	3398-3399	>	_	_
8-27	3400-3401	`	_	_
8-28	3401-3402	`	_	_
8-29	3402-3403	`	_	_
8-30	3405-3407	To	_	_
8-31	3408-3411	run	_	_
8-32	3412-3415	the	*[205]	SOFTWARE[205]
8-33	3416-3425	container	*[205]	SOFTWARE[205]
8-34	3426-3432	please	*[205]	SOFTWARE[205]
8-35	3433-3436	use	*[205]	SOFTWARE[205]
8-36	3436-3437	:	*[205]	SOFTWARE[205]
8-37	3439-3440	`	*[205]	SOFTWARE[205]
8-38	3440-3441	`	*[205]	SOFTWARE[205]
8-39	3441-3442	`	*[205]	SOFTWARE[205]
8-40	3442-3447	shell	*[205]	SOFTWARE[205]
8-41	3448-3454	script	*[205]	SOFTWARE[205]
8-42	3455-3461	docker	*[205]	SOFTWARE[205]
8-43	3462-3465	run	*[205]	SOFTWARE[205]
8-44	3466-3467	\\	*[205]	SOFTWARE[205]
8-45	3470-3471	-	*[205]	SOFTWARE[205]
8-46	3471-3472	-	*[205]	SOFTWARE[205]
8-47	3472-3478	volume	*[205]	SOFTWARE[205]
8-48	3479-3480	<	*[205]	SOFTWARE[205]
8-49	3480-3484	PATH	*[205]	SOFTWARE[205]
8-50	3484-3485	/	*[205]	SOFTWARE[205]
8-51	3485-3487	TO	*[205]	SOFTWARE[205]
8-52	3487-3488	/	*[205]	SOFTWARE[205]
8-53	3488-3498	REPOSITORY	*[205]	SOFTWARE[205]
8-54	3498-3499	>	*[205]	SOFTWARE[205]
8-55	3499-3500	:	*[205]	SOFTWARE[205]
8-56	3500-3501	/	*[205]	SOFTWARE[205]
8-57	3501-3504	src	*[205]	SOFTWARE[205]
8-58	3505-3506	\\	*[205]	SOFTWARE[205]
8-59	3509-3510	-	*[205]	SOFTWARE[205]
8-60	3510-3511	-	*[205]	SOFTWARE[205]
8-61	3511-3519	shm-size	*[205]	SOFTWARE[205]
8-62	3519-3520	=	*[205]	SOFTWARE[205]
8-63	3520-3524	256m	*[205]	SOFTWARE[205]
8-64	3525-3526	\\	*[205]	SOFTWARE[205]
8-65	3529-3530	-	*[205]	SOFTWARE[205]
8-66	3530-3531	u	*[205]	SOFTWARE[205]
8-67	3532-3533	$	*[205]	SOFTWARE[205]
8-68	3533-3534	(	*[205]	SOFTWARE[205]
8-69	3534-3536	id	*[205]	SOFTWARE[205]
8-70	3537-3538	-	*[205]	SOFTWARE[205]
8-71	3538-3539	u	*[205]	SOFTWARE[205]
8-72	3539-3540	)	*[205]	SOFTWARE[205]
8-73	3540-3541	:	*[205]	SOFTWARE[205]
8-74	3541-3542	$	*[205]	SOFTWARE[205]
8-75	3542-3543	(	*[205]	SOFTWARE[205]
8-76	3543-3545	id	*[205]	SOFTWARE[205]
8-77	3546-3547	-	*[205]	SOFTWARE[205]
8-78	3547-3548	g	*[205]	SOFTWARE[205]
8-79	3548-3549	)	*[205]	SOFTWARE[205]
8-80	3550-3551	\\	*[205]	SOFTWARE[205]
8-81	3554-3555	-	*[205]	SOFTWARE[205]
8-82	3555-3557	it	*[205]	SOFTWARE[205]
8-83	3558-3559	<	*[205]	SOFTWARE[205]
8-84	3559-3570	DOCKER\_NAME	*[205]	SOFTWARE[205]
8-85	3570-3571	>	*[205]	SOFTWARE[205]
8-86	3572-3576	bash	*[205]	SOFTWARE[205]
8-87	3579-3581	cd	*[205]	SOFTWARE[205]
8-88	3582-3583	/	*[205]	SOFTWARE[205]
8-89	3583-3586	src	*[205]	SOFTWARE[205]
8-90	3587-3588	`	*[205]	SOFTWARE[205]
8-91	3588-3589	`	*[205]	SOFTWARE[205]
8-92	3589-3590	`	*[205]	SOFTWARE[205]
8-93	3592-3593	\*	*[205]	SOFTWARE[205]
8-94	3593-3594	\*	*[205]	SOFTWARE[205]
8-95	3594-3598	NOTE	_	_
8-96	3598-3599	:	_	_
8-97	3599-3600	\*	_	_
8-98	3600-3601	\*	_	_
8-99	3602-3606	This	_	_
8-100	3607-3612	setup	_	_
8-101	3613-3621	produces	_	_
8-102	3622-3630	slightly	_	_
8-103	3631-3640	different	_	_
8-104	3641-3648	results	_	_
8-105	3649-3650	(	_	_
8-106	3650-3659	deviation	_	_
8-107	3660-3666	around	_	_
8-108	3667-3671	0.1%	_	_
8-109	3671-3672	)	_	_
8-110	3673-3678	while	_	_
8-111	3679-3680	\[	_	_
8-112	3680-3687	testing	_	_
8-113	3687-3688	\]	_	_
8-114	3688-3689	(	_	_
8-115	3689-3690	#	_	_
8-116	3690-3694	test	_	_
8-117	3694-3695	)	_	_
8-118	3695-3696	.	_	_

#Text=To fully reproduce our results we have provided a \[singularity image\](#setup-with-singularity-for-reproducibility), which is a copy of our training and testing environment and uses a highly optimized pytorch implementation.   ## Download Ontology, Dataset and Models  You can automatically download the files (ontologies, models, etc.) that are required for \[inference\](#inference) and \[test\](#test) with the following command:  ```shell script python download\_resources.py ```  The files will be stored in a folder called ```resources/``` relative to the repository path.   ## Models  We provide the trained models for the following approaches:  - Classification baseline (denoted as ```C```): \[link\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/727c3ee1-4107-4996-878d-1caf537730e8/download/vise\_c.tar.gz) - Best ontology driven approach using the cross-entropy loss (denoted as ```CO\_cel```): \[link\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/7c672f2b-f45e-40aa-b6bb-01fb2e9bf5e7/download/vise\_co\_cel.tar.gz) - Best ontology driven approach using the cross-entropy loss (denoted as ```CO\_cos```): \[link\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/b105c1aa-3bc4-4233-8103-8f4616948d85/download/vise\_co\_cos.tar.gz)  The performance of these models regarding the top-k accuracy, jaccard similarity coefficient (JSC), and cosine similarity (CS) on the \*VisE-Bing\* and \*VisE-Wiki\* testsets is listed below using the provided \[singularity image\](#setup-with-singularity-for-reproducibility):  \\ \*\*VisE-Bing\*\* \| Model  \|  Top-1   \|  Top-3   \|  Top-5   \|   JSC    \|    CS    \| \| :----- \| :------: \| :------: \| :------: \| :------: \| :------: \| \| C      \|   77.4   \|   89.8   \|   93.6   \|   84.7   \|   87.7   \| \| CO\_cel \|   81.5   \| \*\*91.8\*\* \| \*\*94.3\*\* \|   87.5   \|   90.0   \| \| CO\_cos \| \*\*81.9\*\* \|   90.8   \|   93.2   \| \*\*87.9\*\* \| \*\*90.4\*\* \|  \\ \*\*VisE-Wiki\*\* \| Model  \|  Top-1   \|  Top-3   \|  Top-5   \|   JSC    \|    CS    \| \| :----- \| :------: \| :------: \| :------: \| :------: \| :------: \| \| C      \|   61.7   \|   74.6   \| \*\*79.2\*\* \|   72.7   \|   77.8   \| \| CO\_cel \|   63.4   \| \*\*74.7\*\* \|   78.8   \|   73.9   \|   78.7   \| \| CO\_cos \| \*\*63.5\*\* \|   74.3   \|   78.8   \| \*\*74.1\*\* \| \*\*79.0\*\* \|   ## Inference  In order to apply our \[models\](#models) on an image or a list of images, please execute the following command:  ```shell script python infer.py -c </path/to/model.yml> -i </path/to/image(s)> ```  If you followed the instructions in \[Download Ontology, Dataset and Models\](#download-ontology-dataset-and-models) the model config is placed in ```resources/VisE-D/models/<modelname>.yml``` relative to the repository path.
9-1	3697-3699	To	_	_
9-2	3700-3705	fully	_	_
9-3	3706-3715	reproduce	_	_
9-4	3716-3719	our	_	_
9-5	3720-3727	results	_	_
9-6	3728-3730	we	_	_
9-7	3731-3735	have	_	_
9-8	3736-3744	provided	_	_
9-9	3745-3746	a	_	_
9-10	3747-3748	\[	_	_
9-11	3748-3759	singularity	_	_
9-12	3760-3765	image	_	_
9-13	3765-3766	\]	_	_
9-14	3766-3767	(	_	_
9-15	3767-3768	#	_	_
9-16	3768-3810	setup-with-singularity-for-reproducibility	_	_
9-17	3810-3811	)	_	_
9-18	3811-3812	,	_	_
9-19	3813-3818	which	_	_
9-20	3819-3821	is	_	_
9-21	3822-3823	a	_	_
9-22	3824-3828	copy	_	_
9-23	3829-3831	of	_	_
9-24	3832-3835	our	_	_
9-25	3836-3844	training	_	_
9-26	3845-3848	and	_	_
9-27	3849-3856	testing	_	_
9-28	3857-3868	environment	_	_
9-29	3869-3872	and	_	_
9-30	3873-3877	uses	_	_
9-31	3878-3879	a	_	_
9-32	3880-3886	highly	_	_
9-33	3887-3896	optimized	_	_
9-34	3897-3904	pytorch	_	_
9-35	3905-3919	implementation	_	_
9-36	3919-3920	.	_	_
9-37	3923-3924	#	_	_
9-38	3924-3925	#	_	_
9-39	3926-3934	Download	_	_
9-40	3935-3943	Ontology	_	_
9-41	3943-3944	,	_	_
9-42	3945-3952	Dataset	_	_
9-43	3953-3956	and	_	_
9-44	3957-3963	Models	_	_
9-45	3965-3968	You	_	_
9-46	3969-3972	can	_	_
9-47	3973-3986	automatically	_	_
9-48	3987-3995	download	_	_
9-49	3996-3999	the	_	_
9-50	4000-4005	files	_	_
9-51	4006-4007	(	_	_
9-52	4007-4017	ontologies	_	_
9-53	4017-4018	,	_	_
9-54	4019-4025	models	_	_
9-55	4025-4026	,	_	_
9-56	4027-4030	etc	_	_
9-57	4030-4031	.	_	_
9-58	4031-4032	)	_	_
9-59	4033-4037	that	_	_
9-60	4038-4041	are	_	_
9-61	4042-4050	required	_	_
9-62	4051-4054	for	_	_
9-63	4055-4056	\[	_	_
9-64	4056-4065	inference	_	_
9-65	4065-4066	\]	_	_
9-66	4066-4067	(	_	_
9-67	4067-4068	#	_	_
9-68	4068-4077	inference	_	_
9-69	4077-4078	)	_	_
9-70	4079-4082	and	_	_
9-71	4083-4084	\[	_	_
9-72	4084-4088	test	_	_
9-73	4088-4089	\]	_	_
9-74	4089-4090	(	_	_
9-75	4090-4091	#	_	_
9-76	4091-4095	test	_	_
9-77	4095-4096	)	_	_
9-78	4097-4101	with	_	_
9-79	4102-4105	the	_	_
9-80	4106-4115	following	_	_
9-81	4116-4123	command	_	_
9-82	4123-4124	:	_	_
9-83	4126-4127	`	_	_
9-84	4127-4128	`	_	_
9-85	4128-4129	`	_	_
9-86	4129-4134	shell	_	_
9-87	4135-4141	script	_	_
9-88	4142-4148	python	_	_
9-89	4149-4170	download\_resources.py	_	_
9-90	4171-4172	`	_	_
9-91	4172-4173	`	_	_
9-92	4173-4174	`	_	_
9-93	4176-4179	The	_	_
9-94	4180-4185	files	_	_
9-95	4186-4190	will	_	_
9-96	4191-4193	be	_	_
9-97	4194-4200	stored	_	_
9-98	4201-4203	in	_	_
9-99	4204-4205	a	_	_
9-100	4206-4212	folder	_	_
9-101	4213-4219	called	_	_
9-102	4220-4221	`	_	_
9-103	4221-4222	`	_	_
9-104	4222-4223	`	_	_
9-105	4223-4232	resources	_	_
9-106	4232-4233	/	_	_
9-107	4233-4234	`	_	_
9-108	4234-4235	`	_	_
9-109	4235-4236	`	_	_
9-110	4237-4245	relative	_	_
9-111	4246-4248	to	_	_
9-112	4249-4252	the	_	_
9-113	4253-4263	repository	_	_
9-114	4264-4268	path	_	_
9-115	4268-4269	.	_	_
9-116	4272-4273	#	_	_
9-117	4273-4274	#	_	_
9-118	4275-4281	Models	_	_
9-119	4283-4285	We	_	_
9-120	4286-4293	provide	_	_
9-121	4294-4297	the	_	_
9-122	4298-4305	trained	_	_
9-123	4306-4312	models	_	_
9-124	4313-4316	for	_	_
9-125	4317-4320	the	_	_
9-126	4321-4330	following	_	_
9-127	4331-4341	approaches	_	_
9-128	4341-4342	:	_	_
9-129	4344-4345	-	_	_
9-130	4346-4360	Classification	_	_
9-131	4361-4369	baseline	_	_
9-132	4370-4371	(	_	_
9-133	4371-4378	denoted	_	_
9-134	4379-4381	as	_	_
9-135	4382-4383	`	_	_
9-136	4383-4384	`	_	_
9-137	4384-4385	`	_	_
9-138	4385-4386	C	_	_
9-139	4386-4387	`	_	_
9-140	4387-4388	`	_	_
9-141	4388-4389	`	_	_
9-142	4389-4390	)	_	_
9-143	4390-4391	:	_	_
9-144	4392-4393	\[	_	_
9-145	4393-4397	link	_	_
9-146	4397-4398	\]	_	_
9-147	4398-4399	(	_	_
9-148	4399-4404	https	_	_
9-149	4404-4405	:	_	_
9-150	4405-4406	/	_	_
9-151	4406-4407	/	_	_
9-152	4407-4427	data.uni-hannover.de	_	_
9-153	4427-4428	/	_	_
9-154	4428-4435	dataset	_	_
9-155	4435-4436	/	_	_
9-156	4436-4444	3afb333d	_	_
9-157	4444-4445	-	_	_
9-158	4445-4449	230f	_	_
9-159	4449-4450	-	_	_
9-160	4450-4454	4829	_	_
9-161	4454-4455	-	_	_
9-162	4455-4472	91bb-d4dd41bfdcfa	_	_
9-163	4472-4473	/	_	_
9-164	4473-4481	resource	_	_
9-165	4481-4482	/	_	_
9-166	4482-4490	727c3ee1	_	_
9-167	4490-4491	-	_	_
9-168	4491-4495	4107	_	_
9-169	4495-4496	-	_	_
9-170	4496-4500	4996	_	_
9-171	4500-4501	-	_	_
9-172	4501-4505	878d	_	_
9-173	4505-4506	-	_	_
9-174	4506-4518	1caf537730e8	_	_
9-175	4518-4519	/	_	_
9-176	4519-4527	download	_	_
9-177	4527-4528	/	_	_
9-178	4528-4541	vise\_c.tar.gz	_	_
9-179	4541-4542	)	_	_
9-180	4543-4544	-	_	_
9-181	4545-4549	Best	_	_
9-182	4550-4558	ontology	_	_
9-183	4559-4565	driven	_	_
9-184	4566-4574	approach	_	_
9-185	4575-4580	using	_	_
9-186	4581-4584	the	*[206]	SOFTWARE[206]
9-187	4585-4598	cross-entropy	*[206]	SOFTWARE[206]
9-188	4599-4603	loss	*[206]	SOFTWARE[206]
9-189	4604-4605	(	*[206]	SOFTWARE[206]
9-190	4605-4612	denoted	*[206]	SOFTWARE[206]
9-191	4613-4615	as	*[206]	SOFTWARE[206]
9-192	4616-4617	`	*[206]	SOFTWARE[206]
9-193	4617-4618	`	*[206]	SOFTWARE[206]
9-194	4618-4619	`	*[206]	SOFTWARE[206]
9-195	4619-4625	CO\_cel	*[206]	SOFTWARE[206]
9-196	4625-4626	`	*[206]	SOFTWARE[206]
9-197	4626-4627	`	*[206]	SOFTWARE[206]
9-198	4627-4628	`	*[206]	SOFTWARE[206]
9-199	4628-4629	)	*[206]	SOFTWARE[206]
9-200	4629-4630	:	*[206]	SOFTWARE[206]
9-201	4631-4632	\[	*[206]	SOFTWARE[206]
9-202	4632-4636	link	*[206]	SOFTWARE[206]
9-203	4636-4637	\]	*[206]	SOFTWARE[206]
9-204	4637-4638	(	*[206]	SOFTWARE[206]
9-205	4638-4643	https	*[206]	SOFTWARE[206]
9-206	4643-4644	:	*[206]	SOFTWARE[206]
9-207	4644-4645	/	*[206]	SOFTWARE[206]
9-208	4645-4646	/	*[206]	SOFTWARE[206]
9-209	4646-4666	data.uni-hannover.de	*[206]	SOFTWARE[206]
9-210	4666-4667	/	*[206]	SOFTWARE[206]
9-211	4667-4674	dataset	*[206]	SOFTWARE[206]
9-212	4674-4675	/	*[206]	SOFTWARE[206]
9-213	4675-4683	3afb333d	*[206]	SOFTWARE[206]
9-214	4683-4684	-	*[206]	SOFTWARE[206]
9-215	4684-4688	230f	*[206]	SOFTWARE[206]
9-216	4688-4689	-	*[206]	SOFTWARE[206]
9-217	4689-4693	4829	*[206]	SOFTWARE[206]
9-218	4693-4694	-	*[206]	SOFTWARE[206]
9-219	4694-4711	91bb-d4dd41bfdcfa	*[206]	SOFTWARE[206]
9-220	4711-4712	/	*[206]	SOFTWARE[206]
9-221	4712-4720	resource	*[206]	SOFTWARE[206]
9-222	4720-4721	/	*[206]	SOFTWARE[206]
9-223	4721-4734	7c672f2b-f45e	*[206]	SOFTWARE[206]
9-224	4734-4735	-	*[206]	SOFTWARE[206]
9-225	4735-4744	40aa-b6bb	*[206]	SOFTWARE[206]
9-226	4744-4745	-	*[206]	SOFTWARE[206]
9-227	4745-4757	01fb2e9bf5e7	*[206]	SOFTWARE[206]
9-228	4757-4758	/	*[206]	SOFTWARE[206]
9-229	4758-4766	download	*[206]	SOFTWARE[206]
9-230	4766-4767	/	*[206]	SOFTWARE[206]
9-231	4767-4785	vise\_co\_cel.tar.gz	*[206]	SOFTWARE[206]
9-232	4785-4786	)	*[206]	SOFTWARE[206]
9-233	4787-4788	-	*[206]	SOFTWARE[206]
9-234	4789-4793	Best	*[206]	SOFTWARE[206]
9-235	4794-4802	ontology	*[206]	SOFTWARE[206]
9-236	4803-4809	driven	*[206]	SOFTWARE[206]
9-237	4810-4818	approach	*[206]	SOFTWARE[206]
9-238	4819-4824	using	*[206]	SOFTWARE[206]
9-239	4825-4828	the	*[206]	SOFTWARE[206]
9-240	4829-4842	cross-entropy	*[206]	SOFTWARE[206]
9-241	4843-4847	loss	*[206]	SOFTWARE[206]
9-242	4848-4849	(	*[206]	SOFTWARE[206]
9-243	4849-4856	denoted	*[206]	SOFTWARE[206]
9-244	4857-4859	as	*[206]	SOFTWARE[206]
9-245	4860-4861	`	*[206]	SOFTWARE[206]
9-246	4861-4862	`	*[206]	SOFTWARE[206]
9-247	4862-4863	`	*[206]	SOFTWARE[206]
9-248	4863-4869	CO\_cos	*[206]	SOFTWARE[206]
9-249	4869-4870	`	*[206]	SOFTWARE[206]
9-250	4870-4871	`	*[206]	SOFTWARE[206]
9-251	4871-4872	`	*[206]	SOFTWARE[206]
9-252	4872-4873	)	*[206]	SOFTWARE[206]
9-253	4873-4874	:	*[206]	SOFTWARE[206]
9-254	4875-4876	\[	*[206]	SOFTWARE[206]
9-255	4876-4880	link	*[206]	SOFTWARE[206]
9-256	4880-4881	\]	*[206]	SOFTWARE[206]
9-257	4881-4882	(	*[206]	SOFTWARE[206]
9-258	4882-4887	https	*[206]	SOFTWARE[206]
9-259	4887-4888	:	*[206]	SOFTWARE[206]
9-260	4888-4889	/	*[206]	SOFTWARE[206]
9-261	4889-4890	/	*[206]	SOFTWARE[206]
9-262	4890-4910	data.uni-hannover.de	*[206]	SOFTWARE[206]
9-263	4910-4911	/	*[206]	SOFTWARE[206]
9-264	4911-4918	dataset	*[206]	SOFTWARE[206]
9-265	4918-4919	/	*[206]	SOFTWARE[206]
9-266	4919-4927	3afb333d	*[206]	SOFTWARE[206]
9-267	4927-4928	-	*[206]	SOFTWARE[206]
9-268	4928-4932	230f	*[206]	SOFTWARE[206]
9-269	4932-4933	-	*[206]	SOFTWARE[206]
9-270	4933-4937	4829	*[206]	SOFTWARE[206]
9-271	4937-4938	-	*[206]	SOFTWARE[206]
9-272	4938-4955	91bb-d4dd41bfdcfa	*[206]	SOFTWARE[206]
9-273	4955-4956	/	*[206]	SOFTWARE[206]
9-274	4956-4964	resource	*[206]	SOFTWARE[206]
9-275	4964-4965	/	*[206]	SOFTWARE[206]
9-276	4965-4973	b105c1aa	*[206]	SOFTWARE[206]
9-277	4973-4974	-	*[206]	SOFTWARE[206]
9-278	4974-4978	3bc4	*[206]	SOFTWARE[206]
9-279	4978-4979	-	*[206]	SOFTWARE[206]
9-280	4979-4983	4233	*[206]	SOFTWARE[206]
9-281	4983-4984	-	*[206]	SOFTWARE[206]
9-282	4984-4988	8103	*[206]	SOFTWARE[206]
9-283	4988-4989	-	*[206]	SOFTWARE[206]
9-284	4989-5001	8f4616948d85	*[206]	SOFTWARE[206]
9-285	5001-5002	/	*[206]	SOFTWARE[206]
9-286	5002-5010	download	*[206]	SOFTWARE[206]
9-287	5010-5011	/	*[206]	SOFTWARE[206]
9-288	5011-5029	vise\_co\_cos.tar.gz	*[206]	SOFTWARE[206]
9-289	5029-5030	)	*[206]	SOFTWARE[206]
9-290	5032-5035	The	*[206]	SOFTWARE[206]
9-291	5036-5047	performance	*[206]	SOFTWARE[206]
9-292	5048-5050	of	*[206]	SOFTWARE[206]
9-293	5051-5056	these	*[206]	SOFTWARE[206]
9-294	5057-5063	models	*[206]	SOFTWARE[206]
9-295	5064-5073	regarding	*[206]	SOFTWARE[206]
9-296	5074-5077	the	*[206]	SOFTWARE[206]
9-297	5078-5083	top-k	*[206]	SOFTWARE[206]
9-298	5084-5092	accuracy	*[206]	SOFTWARE[206]
9-299	5092-5093	,	*[206]	SOFTWARE[206]
9-300	5094-5101	jaccard	*[206]	SOFTWARE[206]
9-301	5102-5112	similarity	*[206]	SOFTWARE[206]
9-302	5113-5124	coefficient	*[206]	SOFTWARE[206]
9-303	5125-5126	(	*[206]	SOFTWARE[206]
9-304	5126-5129	JSC	*[206]	SOFTWARE[206]
9-305	5129-5130	)	*[206]	SOFTWARE[206]
9-306	5130-5131	,	*[206]	SOFTWARE[206]
9-307	5132-5135	and	*[206]	SOFTWARE[206]
9-308	5136-5142	cosine	*[206]	SOFTWARE[206]
9-309	5143-5153	similarity	*[206]	SOFTWARE[206]
9-310	5154-5155	(	*[206]	SOFTWARE[206]
9-311	5155-5157	CS	*[206]	SOFTWARE[206]
9-312	5157-5158	)	*[206]	SOFTWARE[206]
9-313	5159-5161	on	*[206]	SOFTWARE[206]
9-314	5162-5165	the	*[206]	SOFTWARE[206]
9-315	5166-5167	\*	*[206]	SOFTWARE[206]
9-316	5167-5176	VisE-Bing	*[206]	SOFTWARE[206]
9-317	5176-5177	\*	*[206]	SOFTWARE[206]
9-318	5178-5181	and	*[206]	SOFTWARE[206]
9-319	5182-5183	\*	*[206]	SOFTWARE[206]
9-320	5183-5192	VisE-Wiki	*[206]	SOFTWARE[206]
9-321	5192-5193	\*	*[206]	SOFTWARE[206]
9-322	5194-5202	testsets	*[206]	SOFTWARE[206]
9-323	5203-5205	is	*[206]	SOFTWARE[206]
9-324	5206-5212	listed	*[206]	SOFTWARE[206]
9-325	5213-5218	below	*[206]	SOFTWARE[206]
9-326	5219-5224	using	*[206]	SOFTWARE[206]
9-327	5225-5228	the	*[206]	SOFTWARE[206]
9-328	5229-5237	provided	*[206]	SOFTWARE[206]
9-329	5238-5239	\[	*[206]	SOFTWARE[206]
9-330	5239-5250	singularity	*[206]	SOFTWARE[206]
9-331	5251-5256	image	*[206]	SOFTWARE[206]
9-332	5256-5257	\]	*[206]	SOFTWARE[206]
9-333	5257-5258	(	*[206]	SOFTWARE[206]
9-334	5258-5259	#	*[206]	SOFTWARE[206]
9-335	5259-5301	setup-with-singularity-for-reproducibility	*[206]	SOFTWARE[206]
9-336	5301-5302	)	*[206]	SOFTWARE[206]
9-337	5302-5303	:	*[206]	SOFTWARE[206]
9-338	5305-5306	\\	*[206]	SOFTWARE[206]
9-339	5307-5308	\*	*[206]	SOFTWARE[206]
9-340	5308-5309	\*	*[206]	SOFTWARE[206]
9-341	5309-5318	VisE-Bing	*[206]	SOFTWARE[206]
9-342	5318-5319	\*	*[206]	SOFTWARE[206]
9-343	5319-5320	\*	*[206]	SOFTWARE[206]
9-344	5321-5322	\|	*[206]	SOFTWARE[206]
9-345	5323-5328	Model	*[206]	SOFTWARE[206]
9-346	5330-5331	\|	*[206]	SOFTWARE[206]
9-347	5333-5336	Top	*[206]	SOFTWARE[206]
9-348	5336-5337	-	*[206]	SOFTWARE[206]
9-349	5337-5338	1	*[206]	SOFTWARE[206]
9-350	5341-5342	\|	*[206]	SOFTWARE[206]
9-351	5344-5347	Top	*[206]	SOFTWARE[206]
9-352	5347-5348	-	*[206]	SOFTWARE[206]
9-353	5348-5349	3	*[206]	SOFTWARE[206]
9-354	5352-5353	\|	*[206]	SOFTWARE[206]
9-355	5355-5358	Top	*[206]	SOFTWARE[206]
9-356	5358-5359	-	*[206]	SOFTWARE[206]
9-357	5359-5360	5	*[206]	SOFTWARE[206]
9-358	5363-5364	\|	*[206]	SOFTWARE[206]
9-359	5367-5370	JSC	*[206]	SOFTWARE[206]
9-360	5374-5375	\|	*[206]	SOFTWARE[206]
9-361	5379-5381	CS	*[206]	SOFTWARE[206]
9-362	5385-5386	\|	*[206]	SOFTWARE[206]
9-363	5387-5388	\|	*[206]	SOFTWARE[206]
9-364	5389-5390	:	*[206]	SOFTWARE[206]
9-365	5390-5391	-	*[206]	SOFTWARE[206]
9-366	5391-5392	-	*[206]	SOFTWARE[206]
9-367	5392-5393	-	*[206]	SOFTWARE[206]
9-368	5393-5394	-	*[206]	SOFTWARE[206]
9-369	5394-5395	-	*[206]	SOFTWARE[206]
9-370	5396-5397	\|	*[206]	SOFTWARE[206]
9-371	5398-5399	:	*[206]	SOFTWARE[206]
9-372	5399-5400	-	*[206]	SOFTWARE[206]
9-373	5400-5401	-	*[206]	SOFTWARE[206]
9-374	5401-5402	-	*[206]	SOFTWARE[206]
9-375	5402-5403	-	*[206]	SOFTWARE[206]
9-376	5403-5404	-	*[206]	SOFTWARE[206]
9-377	5404-5405	-	*[206]	SOFTWARE[206]
9-378	5405-5406	:	*[206]	SOFTWARE[206]
9-379	5407-5408	\|	*[206]	SOFTWARE[206]
9-380	5409-5410	:	*[206]	SOFTWARE[206]
9-381	5410-5411	-	*[206]	SOFTWARE[206]
9-382	5411-5412	-	*[206]	SOFTWARE[206]
9-383	5412-5413	-	*[206]	SOFTWARE[206]
9-384	5413-5414	-	*[206]	SOFTWARE[206]
9-385	5414-5415	-	*[206]	SOFTWARE[206]
9-386	5415-5416	-	*[206]	SOFTWARE[206]
9-387	5416-5417	:	*[206]	SOFTWARE[206]
9-388	5418-5419	\|	*[206]	SOFTWARE[206]
9-389	5420-5421	:	*[206]	SOFTWARE[206]
9-390	5421-5422	-	*[206]	SOFTWARE[206]
9-391	5422-5423	-	*[206]	SOFTWARE[206]
9-392	5423-5424	-	*[206]	SOFTWARE[206]
9-393	5424-5425	-	*[206]	SOFTWARE[206]
9-394	5425-5426	-	*[206]	SOFTWARE[206]
9-395	5426-5427	-	*[206]	SOFTWARE[206]
9-396	5427-5428	:	*[206]	SOFTWARE[206]
9-397	5429-5430	\|	*[206]	SOFTWARE[206]
9-398	5431-5432	:	*[206]	SOFTWARE[206]
9-399	5432-5433	-	*[206]	SOFTWARE[206]
9-400	5433-5434	-	*[206]	SOFTWARE[206]
9-401	5434-5435	-	*[206]	SOFTWARE[206]
9-402	5435-5436	-	*[206]	SOFTWARE[206]
9-403	5436-5437	-	*[206]	SOFTWARE[206]
9-404	5437-5438	-	*[206]	SOFTWARE[206]
9-405	5438-5439	:	*[206]	SOFTWARE[206]
9-406	5440-5441	\|	*[206]	SOFTWARE[206]
9-407	5442-5443	:	*[206]	SOFTWARE[206]
9-408	5443-5444	-	*[206]	SOFTWARE[206]
9-409	5444-5445	-	*[206]	SOFTWARE[206]
9-410	5445-5446	-	*[206]	SOFTWARE[206]
9-411	5446-5447	-	*[206]	SOFTWARE[206]
9-412	5447-5448	-	*[206]	SOFTWARE[206]
9-413	5448-5449	-	*[206]	SOFTWARE[206]
9-414	5449-5450	:	*[206]	SOFTWARE[206]
9-415	5451-5452	\|	*[206]	SOFTWARE[206]
9-416	5453-5454	\|	*[206]	SOFTWARE[206]
9-417	5455-5456	C	*[206]	SOFTWARE[206]
9-418	5462-5463	\|	*[206]	SOFTWARE[206]
9-419	5466-5470	77.4	*[206]	SOFTWARE[206]
9-420	5473-5474	\|	*[206]	SOFTWARE[206]
9-421	5477-5481	89.8	*[206]	SOFTWARE[206]
9-422	5484-5485	\|	*[206]	SOFTWARE[206]
9-423	5488-5492	93.6	*[206]	SOFTWARE[206]
9-424	5495-5496	\|	*[206]	SOFTWARE[206]
9-425	5499-5503	84.7	*[206]	SOFTWARE[206]
9-426	5506-5507	\|	*[206]	SOFTWARE[206]
9-427	5510-5514	87.7	*[206]	SOFTWARE[206]
9-428	5517-5518	\|	*[206]	SOFTWARE[206]
9-429	5519-5520	\|	*[206]	SOFTWARE[206]
9-430	5521-5527	CO\_cel	*[206]	SOFTWARE[206]
9-431	5528-5529	\|	*[206]	SOFTWARE[206]
9-432	5532-5536	81.5	*[206]	SOFTWARE[206]
9-433	5539-5540	\|	*[206]	SOFTWARE[206]
9-434	5541-5542	\*	*[206]	SOFTWARE[206]
9-435	5542-5543	\*	*[206]	SOFTWARE[206]
9-436	5543-5547	91.8	*[206]	SOFTWARE[206]
9-437	5547-5548	\*	*[206]	SOFTWARE[206]
9-438	5548-5549	\*	*[206]	SOFTWARE[206]
9-439	5550-5551	\|	*[206]	SOFTWARE[206]
9-440	5552-5553	\*	*[206]	SOFTWARE[206]
9-441	5553-5554	\*	*[206]	SOFTWARE[206]
9-442	5554-5558	94.3	*[206]	SOFTWARE[206]
9-443	5558-5559	\*	*[206]	SOFTWARE[206]
9-444	5559-5560	\*	*[206]	SOFTWARE[206]
9-445	5561-5562	\|	*[206]	SOFTWARE[206]
9-446	5565-5569	87.5	*[206]	SOFTWARE[206]
9-447	5572-5573	\|	*[206]	SOFTWARE[206]
9-448	5576-5580	90.0	*[206]	SOFTWARE[206]
9-449	5583-5584	\|	*[206]	SOFTWARE[206]
9-450	5585-5586	\|	*[206]	SOFTWARE[206]
9-451	5587-5593	CO\_cos	*[206]	SOFTWARE[206]
9-452	5594-5595	\|	*[206]	SOFTWARE[206]
9-453	5596-5597	\*	*[206]	SOFTWARE[206]
9-454	5597-5598	\*	*[206]	SOFTWARE[206]
9-455	5598-5602	81.9	*[206]	SOFTWARE[206]
9-456	5602-5603	\*	*[206]	SOFTWARE[206]
9-457	5603-5604	\*	*[206]	SOFTWARE[206]
9-458	5605-5606	\|	*[206]	SOFTWARE[206]
9-459	5609-5613	90.8	*[206]	SOFTWARE[206]
9-460	5616-5617	\|	*[206]	SOFTWARE[206]
9-461	5620-5624	93.2	*[206]	SOFTWARE[206]
9-462	5627-5628	\|	*[206]	SOFTWARE[206]
9-463	5629-5630	\*	*[206]	SOFTWARE[206]
9-464	5630-5631	\*	*[206]	SOFTWARE[206]
9-465	5631-5635	87.9	*[206]	SOFTWARE[206]
9-466	5635-5636	\*	*[206]	SOFTWARE[206]
9-467	5636-5637	\*	*[206]	SOFTWARE[206]
9-468	5638-5639	\|	*[206]	SOFTWARE[206]
9-469	5640-5641	\*	*[206]	SOFTWARE[206]
9-470	5641-5642	\*	*[206]	SOFTWARE[206]
9-471	5642-5646	90.4	*[206]	SOFTWARE[206]
9-472	5646-5647	\*	*[206]	SOFTWARE[206]
9-473	5647-5648	\*	*[206]	SOFTWARE[206]
9-474	5649-5650	\|	*[206]	SOFTWARE[206]
9-475	5652-5653	\\	*[206]	SOFTWARE[206]
9-476	5654-5655	\*	*[206]	SOFTWARE[206]
9-477	5655-5656	\*	*[206]	SOFTWARE[206]
9-478	5656-5665	VisE-Wiki	*[206]	SOFTWARE[206]
9-479	5665-5666	\*	*[206]	SOFTWARE[206]
9-480	5666-5667	\*	*[206]	SOFTWARE[206]
9-481	5668-5669	\|	*[206]	SOFTWARE[206]
9-482	5670-5675	Model	*[206]	SOFTWARE[206]
9-483	5677-5678	\|	*[206]	SOFTWARE[206]
9-484	5680-5683	Top	*[206]	SOFTWARE[206]
9-485	5683-5684	-	*[206]	SOFTWARE[206]
9-486	5684-5685	1	*[206]	SOFTWARE[206]
9-487	5688-5689	\|	*[206]	SOFTWARE[206]
9-488	5691-5694	Top	*[206]	SOFTWARE[206]
9-489	5694-5695	-	*[206]	SOFTWARE[206]
9-490	5695-5696	3	*[206]	SOFTWARE[206]
9-491	5699-5700	\|	*[206]	SOFTWARE[206]
9-492	5702-5705	Top	*[206]	SOFTWARE[206]
9-493	5705-5706	-	*[206]	SOFTWARE[206]
9-494	5706-5707	5	*[206]	SOFTWARE[206]
9-495	5710-5711	\|	*[206]	SOFTWARE[206]
9-496	5714-5717	JSC	*[206]	SOFTWARE[206]
9-497	5721-5722	\|	*[206]	SOFTWARE[206]
9-498	5726-5728	CS	*[206]	SOFTWARE[206]
9-499	5732-5733	\|	*[206]	SOFTWARE[206]
9-500	5734-5735	\|	*[206]	SOFTWARE[206]
9-501	5736-5737	:	*[206]	SOFTWARE[206]
9-502	5737-5738	-	*[206]	SOFTWARE[206]
9-503	5738-5739	-	*[206]	SOFTWARE[206]
9-504	5739-5740	-	*[206]	SOFTWARE[206]
9-505	5740-5741	-	*[206]	SOFTWARE[206]
9-506	5741-5742	-	*[206]	SOFTWARE[206]
9-507	5743-5744	\|	*[206]	SOFTWARE[206]
9-508	5745-5746	:	*[206]	SOFTWARE[206]
9-509	5746-5747	-	*[206]	SOFTWARE[206]
9-510	5747-5748	-	*[206]	SOFTWARE[206]
9-511	5748-5749	-	*[206]	SOFTWARE[206]
9-512	5749-5750	-	*[206]	SOFTWARE[206]
9-513	5750-5751	-	*[206]	SOFTWARE[206]
9-514	5751-5752	-	*[206]	SOFTWARE[206]
9-515	5752-5753	:	*[206]	SOFTWARE[206]
9-516	5754-5755	\|	*[206]	SOFTWARE[206]
9-517	5756-5757	:	*[206]	SOFTWARE[206]
9-518	5757-5758	-	*[206]	SOFTWARE[206]
9-519	5758-5759	-	*[206]	SOFTWARE[206]
9-520	5759-5760	-	*[206]	SOFTWARE[206]
9-521	5760-5761	-	*[206]	SOFTWARE[206]
9-522	5761-5762	-	*[206]	SOFTWARE[206]
9-523	5762-5763	-	*[206]	SOFTWARE[206]
9-524	5763-5764	:	*[206]	SOFTWARE[206]
9-525	5765-5766	\|	*[206]	SOFTWARE[206]
9-526	5767-5768	:	*[206]	SOFTWARE[206]
9-527	5768-5769	-	*[206]	SOFTWARE[206]
9-528	5769-5770	-	*[206]	SOFTWARE[206]
9-529	5770-5771	-	*[206]	SOFTWARE[206]
9-530	5771-5772	-	*[206]	SOFTWARE[206]
9-531	5772-5773	-	*[206]	SOFTWARE[206]
9-532	5773-5774	-	*[206]	SOFTWARE[206]
9-533	5774-5775	:	*[206]	SOFTWARE[206]
9-534	5776-5777	\|	*[206]	SOFTWARE[206]
9-535	5778-5779	:	*[206]	SOFTWARE[206]
9-536	5779-5780	-	*[206]	SOFTWARE[206]
9-537	5780-5781	-	*[206]	SOFTWARE[206]
9-538	5781-5782	-	*[206]	SOFTWARE[206]
9-539	5782-5783	-	*[206]	SOFTWARE[206]
9-540	5783-5784	-	*[206]	SOFTWARE[206]
9-541	5784-5785	-	*[206]	SOFTWARE[206]
9-542	5785-5786	:	*[206]	SOFTWARE[206]
9-543	5787-5788	\|	*[206]	SOFTWARE[206]
9-544	5789-5790	:	*[206]	SOFTWARE[206]
9-545	5790-5791	-	*[206]	SOFTWARE[206]
9-546	5791-5792	-	*[206]	SOFTWARE[206]
9-547	5792-5793	-	*[206]	SOFTWARE[206]
9-548	5793-5794	-	*[206]	SOFTWARE[206]
9-549	5794-5795	-	*[206]	SOFTWARE[206]
9-550	5795-5796	-	*[206]	SOFTWARE[206]
9-551	5796-5797	:	*[206]	SOFTWARE[206]
9-552	5798-5799	\|	*[206]	SOFTWARE[206]
9-553	5800-5801	\|	*[206]	SOFTWARE[206]
9-554	5802-5803	C	*[206]	SOFTWARE[206]
9-555	5809-5810	\|	*[206]	SOFTWARE[206]
9-556	5813-5817	61.7	*[206]	SOFTWARE[206]
9-557	5820-5821	\|	*[206]	SOFTWARE[206]
9-558	5824-5828	74.6	*[206]	SOFTWARE[206]
9-559	5831-5832	\|	*[206]	SOFTWARE[206]
9-560	5833-5834	\*	*[206]	SOFTWARE[206]
9-561	5834-5835	\*	*[206]	SOFTWARE[206]
9-562	5835-5839	79.2	*[206]	SOFTWARE[206]
9-563	5839-5840	\*	*[206]	SOFTWARE[206]
9-564	5840-5841	\*	*[206]	SOFTWARE[206]
9-565	5842-5843	\|	*[206]	SOFTWARE[206]
9-566	5846-5850	72.7	*[206]	SOFTWARE[206]
9-567	5853-5854	\|	*[206]	SOFTWARE[206]
9-568	5857-5861	77.8	*[206]	SOFTWARE[206]
9-569	5864-5865	\|	*[206]	SOFTWARE[206]
9-570	5866-5867	\|	*[206]	SOFTWARE[206]
9-571	5868-5874	CO\_cel	*[206]	SOFTWARE[206]
9-572	5875-5876	\|	*[206]	SOFTWARE[206]
9-573	5879-5883	63.4	*[206]	SOFTWARE[206]
9-574	5886-5887	\|	*[206]	SOFTWARE[206]
9-575	5888-5889	\*	*[206]	SOFTWARE[206]
9-576	5889-5890	\*	*[206]	SOFTWARE[206]
9-577	5890-5894	74.7	*[206]	SOFTWARE[206]
9-578	5894-5895	\*	*[206]	SOFTWARE[206]
9-579	5895-5896	\*	*[206]	SOFTWARE[206]
9-580	5897-5898	\|	*[206]	SOFTWARE[206]
9-581	5901-5905	78.8	*[206]	SOFTWARE[206]
9-582	5908-5909	\|	*[206]	SOFTWARE[206]
9-583	5912-5916	73.9	*[206]	SOFTWARE[206]
9-584	5919-5920	\|	*[206]	SOFTWARE[206]
9-585	5923-5927	78.7	*[206]	SOFTWARE[206]
9-586	5930-5931	\|	*[206]	SOFTWARE[206]
9-587	5932-5933	\|	*[206]	SOFTWARE[206]
9-588	5934-5940	CO\_cos	*[206]	SOFTWARE[206]
9-589	5941-5942	\|	*[206]	SOFTWARE[206]
9-590	5943-5944	\*	*[206]	SOFTWARE[206]
9-591	5944-5945	\*	*[206]	SOFTWARE[206]
9-592	5945-5949	63.5	*[206]	SOFTWARE[206]
9-593	5949-5950	\*	*[206]	SOFTWARE[206]
9-594	5950-5951	\*	*[206]	SOFTWARE[206]
9-595	5952-5953	\|	*[206]	SOFTWARE[206]
9-596	5956-5960	74.3	*[206]	SOFTWARE[206]
9-597	5963-5964	\|	*[206]	SOFTWARE[206]
9-598	5967-5971	78.8	*[206]	SOFTWARE[206]
9-599	5974-5975	\|	*[206]	SOFTWARE[206]
9-600	5976-5977	\*	*[206]	SOFTWARE[206]
9-601	5977-5978	\*	*[206]	SOFTWARE[206]
9-602	5978-5982	74.1	*[206]	SOFTWARE[206]
9-603	5982-5983	\*	*[206]	SOFTWARE[206]
9-604	5983-5984	\*	*[206]	SOFTWARE[206]
9-605	5985-5986	\|	*[206]	SOFTWARE[206]
9-606	5987-5988	\*	*[206]	SOFTWARE[206]
9-607	5988-5989	\*	*[206]	SOFTWARE[206]
9-608	5989-5993	79.0	*[206]	SOFTWARE[206]
9-609	5993-5994	\*	*[206]	SOFTWARE[206]
9-610	5994-5995	\*	*[206]	SOFTWARE[206]
9-611	5996-5997	\|	*[206]	SOFTWARE[206]
9-612	6000-6001	#	*[206]	SOFTWARE[206]
9-613	6001-6002	#	*[206]	SOFTWARE[206]
9-614	6003-6012	Inference	*[206]	SOFTWARE[206]
9-615	6014-6016	In	*[206]	SOFTWARE[206]
9-616	6017-6022	order	*[206]	SOFTWARE[206]
9-617	6023-6025	to	*[206]	SOFTWARE[206]
9-618	6026-6031	apply	*[206]	SOFTWARE[206]
9-619	6032-6035	our	*[206]	SOFTWARE[206]
9-620	6036-6037	\[	*[206]	SOFTWARE[206]
9-621	6037-6043	models	*[206]	SOFTWARE[206]
9-622	6043-6044	\]	*[206]	SOFTWARE[206]
9-623	6044-6045	(	*[206]	SOFTWARE[206]
9-624	6045-6046	#	*[206]	SOFTWARE[206]
9-625	6046-6052	models	*[206]	SOFTWARE[206]
9-626	6052-6053	)	*[206]	SOFTWARE[206]
9-627	6054-6056	on	*[206]	SOFTWARE[206]
9-628	6057-6059	an	*[206]	SOFTWARE[206]
9-629	6060-6065	image	*[206]	SOFTWARE[206]
9-630	6066-6068	or	*[206]	SOFTWARE[206]
9-631	6069-6070	a	*[206]	SOFTWARE[206]
9-632	6071-6075	list	*[206]	SOFTWARE[206]
9-633	6076-6078	of	*[206]	SOFTWARE[206]
9-634	6079-6085	images	*[206]	SOFTWARE[206]
9-635	6085-6086	,	*[206]	SOFTWARE[206]
9-636	6087-6093	please	*[206]	SOFTWARE[206]
9-637	6094-6101	execute	*[206]	SOFTWARE[206]
9-638	6102-6105	the	*[206]	SOFTWARE[206]
9-639	6106-6115	following	*[206]	SOFTWARE[206]
9-640	6116-6123	command	*[206]	SOFTWARE[206]
9-641	6123-6124	:	*[206]	SOFTWARE[206]
9-642	6126-6127	`	*[206]	SOFTWARE[206]
9-643	6127-6128	`	*[206]	SOFTWARE[206]
9-644	6128-6129	`	*[206]	SOFTWARE[206]
9-645	6129-6134	shell	*[206]	SOFTWARE[206]
9-646	6135-6141	script	*[206]	SOFTWARE[206]
9-647	6142-6148	python	*[206]	SOFTWARE[206]
9-648	6149-6157	infer.py	*[206]	SOFTWARE[206]
9-649	6158-6159	-	*[206]	SOFTWARE[206]
9-650	6159-6160	c	*[206]	SOFTWARE[206]
9-651	6161-6162	<	*[206]	SOFTWARE[206]
9-652	6162-6163	/	*[206]	SOFTWARE[206]
9-653	6163-6167	path	*[206]	SOFTWARE[206]
9-654	6167-6168	/	*[206]	SOFTWARE[206]
9-655	6168-6170	to	*[206]	SOFTWARE[206]
9-656	6170-6171	/	*[206]	SOFTWARE[206]
9-657	6171-6180	model.yml	*[206]	SOFTWARE[206]
9-658	6180-6181	>	*[206]	SOFTWARE[206]
9-659	6182-6183	-	*[206]	SOFTWARE[206]
9-660	6183-6184	i	*[206]	SOFTWARE[206]
9-661	6185-6186	<	*[206]	SOFTWARE[206]
9-662	6186-6187	/	*[206]	SOFTWARE[206]
9-663	6187-6191	path	*[206]	SOFTWARE[206]
9-664	6191-6192	/	*[206]	SOFTWARE[206]
9-665	6192-6194	to	*[206]	SOFTWARE[206]
9-666	6194-6195	/	*[206]	SOFTWARE[206]
9-667	6195-6200	image	*[206]	SOFTWARE[206]
9-668	6200-6201	(	*[206]	SOFTWARE[206]
9-669	6201-6202	s	*[206]	SOFTWARE[206]
9-670	6202-6203	)	*[206]	SOFTWARE[206]
9-671	6203-6204	>	*[206]	SOFTWARE[206]
9-672	6205-6206	`	*[206]	SOFTWARE[206]
9-673	6206-6207	`	*[206]	SOFTWARE[206]
9-674	6207-6208	`	*[206]	SOFTWARE[206]
9-675	6210-6212	If	*[206]	SOFTWARE[206]
9-676	6213-6216	you	*[206]	SOFTWARE[206]
9-677	6217-6225	followed	*[206]	SOFTWARE[206]
9-678	6226-6229	the	*[206]	SOFTWARE[206]
9-679	6230-6242	instructions	*[206]	SOFTWARE[206]
9-680	6243-6245	in	*[206]	SOFTWARE[206]
9-681	6246-6247	\[	*[206]	SOFTWARE[206]
9-682	6247-6255	Download	*[206]	SOFTWARE[206]
9-683	6256-6264	Ontology	*[206]	SOFTWARE[206]
9-684	6264-6265	,	*[206]	SOFTWARE[206]
9-685	6266-6273	Dataset	*[206]	SOFTWARE[206]
9-686	6274-6277	and	*[206]	SOFTWARE[206]
9-687	6278-6284	Models	*[206]	SOFTWARE[206]
9-688	6284-6285	\]	*[206]	SOFTWARE[206]
9-689	6285-6286	(	*[206]	SOFTWARE[206]
9-690	6286-6287	#	*[206]	SOFTWARE[206]
9-691	6287-6323	download-ontology-dataset-and-models	_	_
9-692	6323-6324	)	_	_
9-693	6325-6328	the	_	_
9-694	6329-6334	model	_	_
9-695	6335-6341	config	_	_
9-696	6342-6344	is	_	_
9-697	6345-6351	placed	_	_
9-698	6352-6354	in	_	_
9-699	6355-6356	`	_	_
9-700	6356-6357	`	_	_
9-701	6357-6358	`	_	_
9-702	6358-6367	resources	_	_
9-703	6367-6368	/	_	_
9-704	6368-6374	VisE-D	_	_
9-705	6374-6375	/	_	_
9-706	6375-6381	models	_	_
9-707	6381-6382	/	_	_
9-708	6382-6383	<	_	_
9-709	6383-6392	modelname	_	_
9-710	6392-6393	>	_	_
9-711	6393-6394	.	_	_
9-712	6394-6397	yml	_	_
9-713	6397-6398	`	_	_
9-714	6398-6399	`	_	_
9-715	6399-6400	`	_	_
9-716	6401-6409	relative	_	_
9-717	6410-6412	to	_	_
9-718	6413-6416	the	_	_
9-719	6417-6427	repository	_	_
9-720	6428-6432	path	_	_
9-721	6432-6433	.	_	_

#Text=\*\*Optional parameters:\*\* As standard parameters the batch size is set to 32, the top-5 predictions will be shown, and the multiplied values of the leaf node probability and subgraph cosine similarity are used to convert the subgraph vector to a leaf node vector (details are presented in Section 4.2.3 of the paper).
10-1	6435-6436	\*	_	_
10-2	6436-6437	\*	_	_
10-3	6437-6445	Optional	_	_
10-4	6446-6456	parameters	_	_
10-5	6456-6457	:	_	_
10-6	6457-6458	\*	_	_
10-7	6458-6459	\*	_	_
10-8	6460-6462	As	_	_
10-9	6463-6471	standard	_	_
10-10	6472-6482	parameters	_	_
10-11	6483-6486	the	_	_
10-12	6487-6492	batch	_	_
10-13	6493-6497	size	_	_
10-14	6498-6500	is	_	_
10-15	6501-6504	set	_	_
10-16	6505-6507	to	_	_
10-17	6508-6510	32	_	_
10-18	6510-6511	,	_	_
10-19	6512-6515	the	_	_
10-20	6516-6519	top	_	_
10-21	6519-6520	-	_	_
10-22	6520-6521	5	_	_
10-23	6522-6533	predictions	_	_
10-24	6534-6538	will	_	_
10-25	6539-6541	be	_	_
10-26	6542-6547	shown	_	_
10-27	6547-6548	,	_	_
10-28	6549-6552	and	_	_
10-29	6553-6556	the	_	_
10-30	6557-6567	multiplied	_	_
10-31	6568-6574	values	_	_
10-32	6575-6577	of	_	_
10-33	6578-6581	the	_	_
10-34	6582-6586	leaf	_	_
10-35	6587-6591	node	_	_
10-36	6592-6603	probability	_	_
10-37	6604-6607	and	_	_
10-38	6608-6616	subgraph	_	_
10-39	6617-6623	cosine	_	_
10-40	6624-6634	similarity	_	_
10-41	6635-6638	are	_	_
10-42	6639-6643	used	_	_
10-43	6644-6646	to	_	_
10-44	6647-6654	convert	_	_
10-45	6655-6658	the	_	_
10-46	6659-6667	subgraph	_	_
10-47	6668-6674	vector	_	_
10-48	6675-6677	to	_	_
10-49	6678-6679	a	_	_
10-50	6680-6684	leaf	_	_
10-51	6685-6689	node	_	_
10-52	6690-6696	vector	*[182]	PROJECT[182]
10-53	6697-6698	(	*[182]	PROJECT[182]
10-54	6698-6705	details	*[182]	PROJECT[182]
10-55	6706-6709	are	*[182]	PROJECT[182]
10-56	6710-6719	presented	_	_
10-57	6720-6722	in	_	_
10-58	6723-6730	Section	_	_
10-59	6731-6736	4.2.3	_	_
10-60	6737-6739	of	_	_
10-61	6740-6743	the	_	_
10-62	6744-6749	paper	_	_
10-63	6749-6750	)	_	_
10-64	6750-6751	.	_	_

#Text=```--batch\_size <int>``` specifies the batch size (default ```16```)  ```--num\_predictions <int>``` sets the number of top predictions printed on the console (default ```3```)   ```--s2l\_strategy \[leafprob, cossim, leafprob\*cossim\]``` specifies the strategies to retrieve the leaf node vector from a subgraph vector (default ```leafprob\*cossim```)    ## Test  This step requires to download the test images in the \*VisE-Bing\* or \*VisE-Wiki\* dataset.
11-1	6754-6755	`	_	_
11-2	6755-6756	`	_	_
11-3	6756-6757	`	_	_
11-4	6757-6758	-	_	_
11-5	6758-6759	-	_	_
11-6	6759-6769	batch\_size	_	_
11-7	6770-6771	<	_	_
11-8	6771-6774	int	_	_
11-9	6774-6775	>	_	_
11-10	6775-6776	`	_	_
11-11	6776-6777	`	*[186]	EVALMETRIC[186]
11-12	6777-6778	`	*[186]	EVALMETRIC[186]
11-13	6779-6788	specifies	*[186]	EVALMETRIC[186]
11-14	6789-6792	the	*[186]	EVALMETRIC[186]
11-15	6793-6798	batch	*[186]	EVALMETRIC[186]
11-16	6799-6803	size	*[186]	EVALMETRIC[186]
11-17	6804-6805	(	*[186]	EVALMETRIC[186]
11-18	6805-6812	default	*[186]	EVALMETRIC[186]
11-19	6813-6814	`	*[186]	EVALMETRIC[186]
11-20	6814-6815	`	*[186]	EVALMETRIC[186]
11-21	6815-6816	`	*[186]	EVALMETRIC[186]
11-22	6816-6818	16	*[186]	EVALMETRIC[186]
11-23	6818-6819	`	*[186]	EVALMETRIC[186]
11-24	6819-6820	`	*[186]	EVALMETRIC[186]
11-25	6820-6821	`	*[186]	EVALMETRIC[186]
11-26	6821-6822	)	*[186]	EVALMETRIC[186]
11-27	6824-6825	`	*[186]	EVALMETRIC[186]
11-28	6825-6826	`	*[186]	EVALMETRIC[186]
11-29	6826-6827	`	*[186]	EVALMETRIC[186]
11-30	6827-6828	-	*[186]	EVALMETRIC[186]
11-31	6828-6829	-	*[186]	EVALMETRIC[186]
11-32	6829-6844	num\_predictions	*[186]	EVALMETRIC[186]
11-33	6845-6846	<	*[186]	EVALMETRIC[186]
11-34	6846-6849	int	*[186]	EVALMETRIC[186]
11-35	6849-6850	>	*[186]	EVALMETRIC[186]
11-36	6850-6851	`	*[186]	EVALMETRIC[186]
11-37	6851-6852	`	*[186]	EVALMETRIC[186]
11-38	6852-6853	`	*[186]	EVALMETRIC[186]
11-39	6854-6858	sets	*[186]	EVALMETRIC[186]
11-40	6859-6862	the	*[186]	EVALMETRIC[186]
11-41	6863-6869	number	*[186]	EVALMETRIC[186]
11-42	6870-6872	of	*[186]	EVALMETRIC[186]
11-43	6873-6876	top	*[186]	EVALMETRIC[186]
11-44	6877-6888	predictions	*[186]	EVALMETRIC[186]
11-45	6889-6896	printed	*[186]	EVALMETRIC[186]
11-46	6897-6899	on	*[186]	EVALMETRIC[186]
11-47	6900-6903	the	*[186]	EVALMETRIC[186]
11-48	6904-6911	console	*[186]	EVALMETRIC[186]
11-49	6912-6913	(	*[186]	EVALMETRIC[186]
11-50	6913-6920	default	_	_
11-51	6921-6922	`	_	_
11-52	6922-6923	`	_	_
11-53	6923-6924	`	_	_
11-54	6924-6925	3	_	_
11-55	6925-6926	`	_	_
11-56	6926-6927	`	_	_
11-57	6927-6928	`	_	_
11-58	6928-6929	)	_	_
11-59	6932-6933	`	_	_
11-60	6933-6934	`	_	_
11-61	6934-6935	`	_	_
11-62	6935-6936	-	_	_
11-63	6936-6937	-	_	_
11-64	6937-6949	s2l\_strategy	_	_
11-65	6950-6951	\[	_	_
11-66	6951-6959	leafprob	_	_
11-67	6959-6960	,	_	_
11-68	6961-6967	cossim	_	_
11-69	6967-6968	,	_	_
11-70	6969-6977	leafprob	_	_
11-71	6977-6978	\*	_	_
11-72	6978-6984	cossim	_	_
11-73	6984-6985	\]	_	_
11-74	6985-6986	`	_	_
11-75	6986-6987	`	_	_
11-76	6987-6988	`	_	_
11-77	6989-6998	specifies	_	_
11-78	6999-7002	the	_	_
11-79	7003-7013	strategies	_	_
11-80	7014-7016	to	_	_
11-81	7017-7025	retrieve	_	_
11-82	7026-7029	the	_	_
11-83	7030-7034	leaf	_	_
11-84	7035-7039	node	_	_
11-85	7040-7046	vector	_	_
11-86	7047-7051	from	_	_
11-87	7052-7053	a	_	_
11-88	7054-7062	subgraph	_	_
11-89	7063-7069	vector	_	_
11-90	7070-7071	(	_	_
11-91	7071-7078	default	_	_
11-92	7079-7080	`	_	_
11-93	7080-7081	`	_	_
11-94	7081-7082	`	_	_
11-95	7082-7090	leafprob	_	_
11-96	7090-7091	\*	_	_
11-97	7091-7097	cossim	_	_
11-98	7097-7098	`	_	_
11-99	7098-7099	`	_	_
11-100	7099-7100	`	_	_
11-101	7100-7101	)	_	_
11-102	7105-7106	#	_	_
11-103	7106-7107	#	_	_
11-104	7108-7112	Test	_	_
11-105	7114-7118	This	_	_
11-106	7119-7123	step	_	_
11-107	7124-7132	requires	_	_
11-108	7133-7135	to	_	_
11-109	7136-7144	download	_	_
11-110	7145-7148	the	_	_
11-111	7149-7153	test	_	_
11-112	7154-7160	images	_	_
11-113	7161-7163	in	_	_
11-114	7164-7167	the	_	_
11-115	7168-7169	\*	_	_
11-116	7169-7178	VisE-Bing	_	_
11-117	7178-7179	\*	_	_
11-118	7180-7182	or	_	_
11-119	7183-7184	\*	_	_
11-120	7184-7193	VisE-Wiki	_	_
11-121	7193-7194	\*	_	_
11-122	7195-7202	dataset	_	_
11-123	7202-7203	.	_	_

#Text=You can run the following command to automatically download the images:  ```shell script python download\_images.py -d </path/to/dataset.jsonl> -o </path/to/output/root\_directory/> ```  If you followed the instructions in \[Download Ontology, Dataset and Models\](#download-ontology-dataset-and-models) the dataset is placed in ```resources/VisE-D/<datasetname>.jsonl``` and model config is placed in ```resources/VisE-D/models/<modelname>.yml``` relative to the repository path.
12-1	7204-7207	You	_	_
12-2	7208-7211	can	_	_
12-3	7212-7215	run	_	_
12-4	7216-7219	the	_	_
12-5	7220-7229	following	_	_
12-6	7230-7237	command	_	_
12-7	7238-7240	to	_	_
12-8	7241-7254	automatically	_	_
12-9	7255-7263	download	_	_
12-10	7264-7267	the	_	_
12-11	7268-7274	images	_	_
12-12	7274-7275	:	_	_
12-13	7277-7278	`	_	_
12-14	7278-7279	`	_	_
12-15	7279-7280	`	_	_
12-16	7280-7285	shell	_	_
12-17	7286-7292	script	_	_
12-18	7293-7299	python	_	_
12-19	7300-7318	download\_images.py	_	_
12-20	7319-7320	-	_	_
12-21	7320-7321	d	_	_
12-22	7322-7323	<	_	_
12-23	7323-7324	/	_	_
12-24	7324-7328	path	_	_
12-25	7328-7329	/	_	_
12-26	7329-7331	to	_	_
12-27	7331-7332	/	_	_
12-28	7332-7345	dataset.jsonl	_	_
12-29	7345-7346	>	*[187]	EVALMETRIC[187]
12-30	7347-7348	-	*[187]	EVALMETRIC[187]
12-31	7348-7349	o	*[187]	EVALMETRIC[187]
12-32	7350-7351	<	*[187]	EVALMETRIC[187]
12-33	7351-7352	/	*[187]	EVALMETRIC[187]
12-34	7352-7356	path	*[187]	EVALMETRIC[187]
12-35	7356-7357	/	*[187]	EVALMETRIC[187]
12-36	7357-7359	to	*[187]	EVALMETRIC[187]
12-37	7359-7360	/	*[187]	EVALMETRIC[187]
12-38	7360-7366	output	*[187]	EVALMETRIC[187]
12-39	7366-7367	/	*[187]	EVALMETRIC[187]
12-40	7367-7381	root\_directory	*[187]	EVALMETRIC[187]
12-41	7381-7382	/	*[187]	EVALMETRIC[187]
12-42	7382-7383	>	*[187]	EVALMETRIC[187]
12-43	7384-7385	`	*[187]	EVALMETRIC[187]
12-44	7385-7386	`	*[187]	EVALMETRIC[187]
12-45	7386-7387	`	*[187]	EVALMETRIC[187]
12-46	7389-7391	If	*[187]	EVALMETRIC[187]
12-47	7392-7395	you	*[187]	EVALMETRIC[187]
12-48	7396-7404	followed	*[187]	EVALMETRIC[187]
12-49	7405-7408	the	*[187]	EVALMETRIC[187]
12-50	7409-7421	instructions	*[187]	EVALMETRIC[187]
12-51	7422-7424	in	*[187]	EVALMETRIC[187]
12-52	7425-7426	\[	*[187]	EVALMETRIC[187]
12-53	7426-7434	Download	*[187]	EVALMETRIC[187]
12-54	7435-7443	Ontology	*[187]	EVALMETRIC[187]
12-55	7443-7444	,	*[187]	EVALMETRIC[187]
12-56	7445-7452	Dataset	*[187]	EVALMETRIC[187]
12-57	7453-7456	and	*[187]	EVALMETRIC[187]
12-58	7457-7463	Models	*[187]	EVALMETRIC[187]
12-59	7463-7464	\]	*[187]	EVALMETRIC[187]
12-60	7464-7465	(	*[187]	EVALMETRIC[187]
12-61	7465-7466	#	*[187]	EVALMETRIC[187]
12-62	7466-7502	download-ontology-dataset-and-models	*[187]	EVALMETRIC[187]
12-63	7502-7503	)	_	_
12-64	7504-7507	the	_	_
12-65	7508-7515	dataset	_	_
12-66	7516-7518	is	_	_
12-67	7519-7525	placed	_	_
12-68	7526-7528	in	_	_
12-69	7529-7530	`	_	_
12-70	7530-7531	`	_	_
12-71	7531-7532	`	_	_
12-72	7532-7541	resources	_	_
12-73	7541-7542	/	_	_
12-74	7542-7548	VisE-D	_	_
12-75	7548-7549	/	_	_
12-76	7549-7550	<	_	_
12-77	7550-7561	datasetname	_	_
12-78	7561-7562	>	_	_
12-79	7562-7563	.	_	_
12-80	7563-7568	jsonl	_	_
12-81	7568-7569	`	_	_
12-82	7569-7570	`	_	_
12-83	7570-7571	`	_	_
12-84	7572-7575	and	_	_
12-85	7576-7581	model	_	_
12-86	7582-7588	config	_	_
12-87	7589-7591	is	_	_
12-88	7592-7598	placed	_	_
12-89	7599-7601	in	_	_
12-90	7602-7603	`	_	_
12-91	7603-7604	`	_	_
12-92	7604-7605	`	_	_
12-93	7605-7614	resources	_	_
12-94	7614-7615	/	_	_
12-95	7615-7621	VisE-D	_	_
12-96	7621-7622	/	_	_
12-97	7622-7628	models	_	_
12-98	7628-7629	/	_	_
12-99	7629-7630	<	_	_
12-100	7630-7639	modelname	_	_
12-101	7639-7640	>	_	_
12-102	7640-7641	.	_	_
12-103	7641-7644	yml	_	_
12-104	7644-7645	`	_	_
12-105	7645-7646	`	_	_
12-106	7646-7647	`	_	_
12-107	7648-7656	relative	_	_
12-108	7657-7659	to	_	_
12-109	7660-7663	the	_	_
12-110	7664-7674	repository	_	_
12-111	7675-7679	path	_	_
12-112	7679-7680	.	_	_

#Text=\*\*Optional parameters:\*\*  ```-t <int>``` sets the number of parallel threads (default ```32```)  ```-r <int>``` sets the number of retries to download an image (default ```5```)  ```--max\_img\_dim <int>``` sets the dimension of the longer image dimension (default ```512```)  \*\*NOTE:\*\* This step also allows to download the training and validation images in case you want to build your own models
13-1	7683-7684	\*	_	_
13-2	7684-7685	\*	_	_
13-3	7685-7693	Optional	_	_
13-4	7694-7704	parameters	_	_
13-5	7704-7705	:	_	_
13-6	7705-7706	\*	_	_
13-7	7706-7707	\*	_	_
13-8	7709-7710	`	_	_
13-9	7710-7711	`	_	_
13-10	7711-7712	`	_	_
13-11	7712-7713	-	_	_
13-12	7713-7714	t	_	_
13-13	7715-7716	<	_	_
13-14	7716-7719	int	_	_
13-15	7719-7720	>	_	_
13-16	7720-7721	`	_	_
13-17	7721-7722	`	_	_
13-18	7722-7723	`	_	_
13-19	7724-7728	sets	_	_
13-20	7729-7732	the	_	_
13-21	7733-7739	number	_	_
13-22	7740-7742	of	_	_
13-23	7743-7751	parallel	*[188]	EVALMETRIC[188]
13-24	7752-7759	threads	*[188]	EVALMETRIC[188]
13-25	7760-7761	(	*[188]	EVALMETRIC[188]
13-26	7761-7768	default	*[188]	EVALMETRIC[188]
13-27	7769-7770	`	*[188]	EVALMETRIC[188]
13-28	7770-7771	`	*[188]	EVALMETRIC[188]
13-29	7771-7772	`	*[188]	EVALMETRIC[188]
13-30	7772-7774	32	*[188]	EVALMETRIC[188]
13-31	7774-7775	`	*[188]	EVALMETRIC[188]
13-32	7775-7776	`	*[188]	EVALMETRIC[188]
13-33	7776-7777	`	*[188]	EVALMETRIC[188]
13-34	7777-7778	)	*[188]	EVALMETRIC[188]
13-35	7780-7781	`	*[188]	EVALMETRIC[188]
13-36	7781-7782	`	*[188]	EVALMETRIC[188]
13-37	7782-7783	`	*[188]	EVALMETRIC[188]
13-38	7783-7784	-	*[188]	EVALMETRIC[188]
13-39	7784-7785	r	*[188]	EVALMETRIC[188]
13-40	7786-7787	<	*[188]	EVALMETRIC[188]
13-41	7787-7790	int	*[188]	EVALMETRIC[188]
13-42	7790-7791	>	*[188]	EVALMETRIC[188]
13-43	7791-7792	`	*[188]	EVALMETRIC[188]
13-44	7792-7793	`	*[188]	EVALMETRIC[188]
13-45	7793-7794	`	*[188]	EVALMETRIC[188]
13-46	7795-7799	sets	*[188]	EVALMETRIC[188]
13-47	7800-7803	the	*[188]	EVALMETRIC[188]
13-48	7804-7810	number	*[188]	EVALMETRIC[188]
13-49	7811-7813	of	*[188]	EVALMETRIC[188]
13-50	7814-7821	retries	*[188]	EVALMETRIC[188]
13-51	7822-7824	to	*[188]	EVALMETRIC[188]
13-52	7825-7833	download	*[188]	EVALMETRIC[188]
13-53	7834-7836	an	*[188]	EVALMETRIC[188]
13-54	7837-7842	image	*[188]	EVALMETRIC[188]
13-55	7843-7844	(	*[188]	EVALMETRIC[188]
13-56	7844-7851	default	*[188]	EVALMETRIC[188]
13-57	7852-7853	`	*[188]	EVALMETRIC[188]
13-58	7853-7854	`	*[188]	EVALMETRIC[188]
13-59	7854-7855	`	*[188]	EVALMETRIC[188]
13-60	7855-7856	5	*[188]	EVALMETRIC[188]
13-61	7856-7857	`	*[188]	EVALMETRIC[188]
13-62	7857-7858	`	*[188]	EVALMETRIC[188]
13-63	7858-7859	`	*[188]	EVALMETRIC[188]
13-64	7859-7860	)	*[188]	EVALMETRIC[188]
13-65	7862-7863	`	*[188]	EVALMETRIC[188]
13-66	7863-7864	`	*[188]	EVALMETRIC[188]
13-67	7864-7865	`	*[188]	EVALMETRIC[188]
13-68	7865-7866	-	*[188]	EVALMETRIC[188]
13-69	7866-7867	-	*[188]	EVALMETRIC[188]
13-70	7867-7878	max\_img\_dim	*[188]	EVALMETRIC[188]
13-71	7879-7880	<	*[188]	EVALMETRIC[188]
13-72	7880-7883	int	*[188]	EVALMETRIC[188]
13-73	7883-7884	>	*[188]	EVALMETRIC[188]
13-74	7884-7885	`	*[188]	EVALMETRIC[188]
13-75	7885-7886	`	*[188]	EVALMETRIC[188]
13-76	7886-7887	`	*[188]	EVALMETRIC[188]
13-77	7888-7892	sets	*[188]	EVALMETRIC[188]
13-78	7893-7896	the	*[188]	EVALMETRIC[188]
13-79	7897-7906	dimension	*[188]	EVALMETRIC[188]
13-80	7907-7909	of	*[188]	EVALMETRIC[188]
13-81	7910-7913	the	*[188]	EVALMETRIC[188]
13-82	7914-7920	longer	*[188]	EVALMETRIC[188]
13-83	7921-7926	image	_	_
13-84	7927-7936	dimension	_	_
13-85	7937-7938	(	_	_
13-86	7938-7945	default	_	_
13-87	7946-7947	`	_	_
13-88	7947-7948	`	_	_
13-89	7948-7949	`	_	_
13-90	7949-7952	512	_	_
13-91	7952-7953	`	_	_
13-92	7953-7954	`	_	_
13-93	7954-7955	`	_	_
13-94	7955-7956	)	_	_
13-95	7958-7959	\*	_	_
13-96	7959-7960	\*	_	_
13-97	7960-7964	NOTE	_	_
13-98	7964-7965	:	_	_
13-99	7965-7966	\*	_	_
13-100	7966-7967	\*	_	_
13-101	7968-7972	This	_	_
13-102	7973-7977	step	_	_
13-103	7978-7982	also	_	_
13-104	7983-7989	allows	_	_
13-105	7990-7992	to	_	_
13-106	7993-8001	download	_	_
13-107	8002-8005	the	_	_
13-108	8006-8014	training	_	_
13-109	8015-8018	and	_	_
13-110	8019-8029	validation	_	_
13-111	8030-8036	images	_	_
13-112	8037-8039	in	_	_
13-113	8040-8044	case	_	_
13-114	8045-8048	you	_	_
13-115	8049-8053	want	_	_
13-116	8054-8056	to	_	_
13-117	8057-8062	build	_	_
13-118	8063-8067	your	_	_
13-119	8068-8071	own	_	_
13-120	8072-8078	models	_	_

#Text=.
14-1	8078-8079	.	_	_

#Text=\\ After downloading the test images you can calculate the results using the following command:  ```shell script python test.py \\     -c </path/to/model.yml> \\     -i </path/to/image/root\_directory> \\     -t </path/to/testset.jsonl>     -o </path/to/output.json> ```  \*\*Optional parameters:\*\* As standard parameters the batch size is set to 32 and the multiplied values of the leaf node probability and subgraph cosine similarity are used to convert the subgraph vector to a leaf node vector (details are presented in Section 4.2.3 of the paper).
15-1	8082-8083	\\	_	_
15-2	8084-8089	After	_	_
15-3	8090-8101	downloading	_	_
15-4	8102-8105	the	_	_
15-5	8106-8110	test	_	_
15-6	8111-8117	images	_	_
15-7	8118-8121	you	_	_
15-8	8122-8125	can	_	_
15-9	8126-8135	calculate	_	_
15-10	8136-8139	the	_	_
15-11	8140-8147	results	_	_
15-12	8148-8153	using	_	_
15-13	8154-8157	the	_	_
15-14	8158-8167	following	_	_
15-15	8168-8175	command	_	_
15-16	8175-8176	:	_	_
15-17	8178-8179	`	_	_
15-18	8179-8180	`	_	_
15-19	8180-8181	`	_	_
15-20	8181-8186	shell	_	_
15-21	8187-8193	script	_	_
15-22	8194-8200	python	_	_
15-23	8201-8208	test.py	_	_
15-24	8209-8210	\\	_	_
15-25	8215-8216	-	_	_
15-26	8216-8217	c	_	_
15-27	8218-8219	<	_	_
15-28	8219-8220	/	*[174]	ONTOLOGY[174]
15-29	8220-8224	path	*[174]	ONTOLOGY[174]
15-30	8224-8225	/	*[174]	ONTOLOGY[174]
15-31	8225-8227	to	*[174]	ONTOLOGY[174]
15-32	8227-8228	/	*[174]	ONTOLOGY[174]
15-33	8228-8237	model.yml	*[174]	ONTOLOGY[174]
15-34	8237-8238	>	*[174]	ONTOLOGY[174]
15-35	8239-8240	\\	*[174]	ONTOLOGY[174]
15-36	8245-8246	-	*[174]	ONTOLOGY[174]
15-37	8246-8247	i	*[174]	ONTOLOGY[174]
15-38	8248-8249	<	*[174]	ONTOLOGY[174]
15-39	8249-8250	/	*[174]	ONTOLOGY[174]
15-40	8250-8254	path	*[174]	ONTOLOGY[174]
15-41	8254-8255	/	*[174]	ONTOLOGY[174]
15-42	8255-8257	to	*[174]	ONTOLOGY[174]
15-43	8257-8258	/	*[174]	ONTOLOGY[174]
15-44	8258-8263	image	*[174]	ONTOLOGY[174]
15-45	8263-8264	/	*[174]	ONTOLOGY[174]
15-46	8264-8278	root\_directory	*[174]	ONTOLOGY[174]
15-47	8278-8279	>	*[174]	ONTOLOGY[174]
15-48	8280-8281	\\	*[174]	ONTOLOGY[174]
15-49	8286-8287	-	*[174]	ONTOLOGY[174]
15-50	8287-8288	t	*[174]	ONTOLOGY[174]
15-51	8289-8290	<	*[174]	ONTOLOGY[174]
15-52	8290-8291	/	*[174]	ONTOLOGY[174]
15-53	8291-8295	path	_	_
15-54	8295-8296	/	_	_
15-55	8296-8298	to	_	_
15-56	8298-8299	/	_	_
15-57	8299-8312	testset.jsonl	_	_
15-58	8312-8313	>	_	_
15-59	8318-8319	-	_	_
15-60	8319-8320	o	_	_
15-61	8321-8322	<	_	_
15-62	8322-8323	/	_	_
15-63	8323-8327	path	_	_
15-64	8327-8328	/	_	_
15-65	8328-8330	to	_	_
15-66	8330-8331	/	_	_
15-67	8331-8342	output.json	_	_
15-68	8342-8343	>	_	_
15-69	8344-8345	`	_	_
15-70	8345-8346	`	_	_
15-71	8346-8347	`	_	_
15-72	8349-8350	\*	_	_
15-73	8350-8351	\*	_	_
15-74	8351-8359	Optional	_	_
15-75	8360-8370	parameters	_	_
15-76	8370-8371	:	_	_
15-77	8371-8372	\*	_	_
15-78	8372-8373	\*	_	_
15-79	8374-8376	As	_	_
15-80	8377-8385	standard	_	_
15-81	8386-8396	parameters	_	_
15-82	8397-8400	the	_	_
15-83	8401-8406	batch	_	_
15-84	8407-8411	size	_	_
15-85	8412-8414	is	_	_
15-86	8415-8418	set	_	_
15-87	8419-8421	to	_	_
15-88	8422-8424	32	_	_
15-89	8425-8428	and	_	_
15-90	8429-8432	the	_	_
15-91	8433-8443	multiplied	_	_
15-92	8444-8450	values	_	_
15-93	8451-8453	of	_	_
15-94	8454-8457	the	_	_
15-95	8458-8462	leaf	_	_
15-96	8463-8467	node	_	_
15-97	8468-8479	probability	_	_
15-98	8480-8483	and	_	_
15-99	8484-8492	subgraph	_	_
15-100	8493-8499	cosine	_	_
15-101	8500-8510	similarity	_	_
15-102	8511-8514	are	_	_
15-103	8515-8519	used	_	_
15-104	8520-8522	to	_	_
15-105	8523-8530	convert	_	_
15-106	8531-8534	the	_	_
15-107	8535-8543	subgraph	_	_
15-108	8544-8550	vector	_	_
15-109	8551-8553	to	_	_
15-110	8554-8555	a	_	_
15-111	8556-8560	leaf	_	_
15-112	8561-8565	node	_	_
15-113	8566-8572	vector	_	_
15-114	8573-8574	(	_	_
15-115	8574-8581	details	_	_
15-116	8582-8585	are	_	_
15-117	8586-8595	presented	_	_
15-118	8596-8598	in	_	_
15-119	8599-8606	Section	_	_
15-120	8607-8612	4.2.3	_	_
15-121	8613-8615	of	_	_
15-122	8616-8619	the	_	_
15-123	8620-8625	paper	_	_
15-124	8625-8626	)	_	_
15-125	8626-8627	.	_	_

#Text=```--batch\_size <int>``` specifies the batch size (default ```16```)  ```--s2l\_strategy \[leafprob, cossim, leafprob\*cossim\]``` specifies the strategies to retrieve the leaf node vector from a subgraph vector (default ```leafprob\*cossim```)    ## VisE-D: Visual Event Classification Dataset  The \*Visual Event Classification Dataset (VisE-D)\* is available on: https://data.uni-hannover.de/de/dataset/vise  You can automatically download the dataset by following the instructions in \[Download Ontology, Dataset and Models\](#download-ontology-dataset-and-models).
16-1	8629-8630	`	_	_
16-2	8630-8631	`	_	_
16-3	8631-8632	`	_	_
16-4	8632-8633	-	_	_
16-5	8633-8634	-	_	_
16-6	8634-8644	batch\_size	_	_
16-7	8645-8646	<	_	_
16-8	8646-8649	int	_	_
16-9	8649-8650	>	_	_
16-10	8650-8651	`	_	_
16-11	8651-8652	`	_	_
16-12	8652-8653	`	_	_
16-13	8654-8663	specifies	_	_
16-14	8664-8667	the	_	_
16-15	8668-8673	batch	_	_
16-16	8674-8678	size	_	_
16-17	8679-8680	(	_	_
16-18	8680-8687	default	_	_
16-19	8688-8689	`	_	_
16-20	8689-8690	`	_	_
16-21	8690-8691	`	_	_
16-22	8691-8693	16	_	_
16-23	8693-8694	`	*[178]	WORKSHOP[178]
16-24	8694-8695	`	*[178]	WORKSHOP[178]
16-25	8695-8696	`	*[178]	WORKSHOP[178]
16-26	8696-8697	)	*[178]	WORKSHOP[178]
16-27	8699-8700	`	_	_
16-28	8700-8701	`	_	_
16-29	8701-8702	`	_	_
16-30	8702-8703	-	_	_
16-31	8703-8704	-	_	_
16-32	8704-8716	s2l\_strategy	_	_
16-33	8717-8718	\[	_	_
16-34	8718-8726	leafprob	_	_
16-35	8726-8727	,	_	_
16-36	8728-8734	cossim	_	_
16-37	8734-8735	,	_	_
16-38	8736-8744	leafprob	_	_
16-39	8744-8745	\*	_	_
16-40	8745-8751	cossim	_	_
16-41	8751-8752	\]	_	_
16-42	8752-8753	`	_	_
16-43	8753-8754	`	_	_
16-44	8754-8755	`	_	_
16-45	8756-8765	specifies	_	_
16-46	8766-8769	the	_	_
16-47	8770-8780	strategies	_	_
16-48	8781-8783	to	_	_
16-49	8784-8792	retrieve	_	_
16-50	8793-8796	the	_	_
16-51	8797-8801	leaf	_	_
16-52	8802-8806	node	_	_
16-53	8807-8813	vector	_	_
16-54	8814-8818	from	_	_
16-55	8819-8820	a	_	_
16-56	8821-8829	subgraph	_	_
16-57	8830-8836	vector	_	_
16-58	8837-8838	(	_	_
16-59	8838-8845	default	_	_
16-60	8846-8847	`	_	_
16-61	8847-8848	`	_	_
16-62	8848-8849	`	_	_
16-63	8849-8857	leafprob	_	_
16-64	8857-8858	\*	_	_
16-65	8858-8864	cossim	_	_
16-66	8864-8865	`	_	_
16-67	8865-8866	`	_	_
16-68	8866-8867	`	_	_
16-69	8867-8868	)	_	_
16-70	8872-8873	#	_	_
16-71	8873-8874	#	_	_
16-72	8875-8881	VisE-D	_	_
16-73	8881-8882	:	_	_
16-74	8883-8889	Visual	_	_
16-75	8890-8895	Event	_	_
16-76	8896-8910	Classification	_	_
16-77	8911-8918	Dataset	_	_
16-78	8920-8923	The	_	_
16-79	8924-8925	\*	_	_
16-80	8925-8931	Visual	_	_
16-81	8932-8937	Event	_	_
16-82	8938-8952	Classification	_	_
16-83	8953-8960	Dataset	_	_
16-84	8961-8962	(	_	_
16-85	8962-8968	VisE-D	_	_
16-86	8968-8969	)	_	_
16-87	8969-8970	\*	_	_
16-88	8971-8973	is	_	_
16-89	8974-8983	available	_	_
16-90	8984-8986	on	_	_
16-91	8986-8987	:	_	_
16-92	8988-8993	https	_	_
16-93	8993-8994	:	_	_
16-94	8994-8995	/	_	_
16-95	8995-8996	/	_	_
16-96	8996-9016	data.uni-hannover.de	_	_
16-97	9016-9017	/	_	_
16-98	9017-9019	de	_	_
16-99	9019-9020	/	_	_
16-100	9020-9027	dataset	_	_
16-101	9027-9028	/	_	_
16-102	9028-9032	vise	_	_
16-103	9034-9037	You	_	_
16-104	9038-9041	can	_	_
16-105	9042-9055	automatically	_	_
16-106	9056-9064	download	_	_
16-107	9065-9068	the	_	_
16-108	9069-9076	dataset	_	_
16-109	9077-9079	by	_	_
16-110	9080-9089	following	_	_
16-111	9090-9093	the	_	_
16-112	9094-9106	instructions	_	_
16-113	9107-9109	in	_	_
16-114	9110-9111	\[	_	_
16-115	9111-9119	Download	_	_
16-116	9120-9128	Ontology	_	_
16-117	9128-9129	,	_	_
16-118	9130-9137	Dataset	_	_
16-119	9138-9141	and	_	_
16-120	9142-9148	Models	_	_
16-121	9148-9149	\]	_	_
16-122	9149-9150	(	_	_
16-123	9150-9151	#	_	_
16-124	9151-9187	download-ontology-dataset-and-models	_	_
16-125	9187-9188	)	_	_
16-126	9188-9189	.	_	_

#Text=To download the images from the provided URLs, please run the following command:  ```shell script python download\_images.py -d </path/to/dataset.jsonl> -o </path/to/output/root\_directory/> ```  Optional parameters:  ```-t <int>``` sets the number of parallel threads (default ```32```)  ```-r <int>``` sets the number of retries to download an image (default ```5```)  ```--max\_img\_dim <int>``` sets the dimension of the longer image dimension (default ```512```)   ## VisE-O: Visual Event Ontology  In Section 3.2 of the paper, we have presented several methods to create an \*Ontology\* for newsworthy event types.
17-1	9190-9192	To	_	_
17-2	9193-9201	download	_	_
17-3	9202-9205	the	_	_
17-4	9206-9212	images	_	_
17-5	9213-9217	from	_	_
17-6	9218-9221	the	_	_
17-7	9222-9230	provided	_	_
17-8	9231-9235	URLs	_	_
17-9	9235-9236	,	_	_
17-10	9237-9243	please	_	_
17-11	9244-9247	run	_	_
17-12	9248-9251	the	_	_
17-13	9252-9261	following	_	_
17-14	9262-9269	command	_	_
17-15	9269-9270	:	_	_
17-16	9272-9273	`	_	_
17-17	9273-9274	`	_	_
17-18	9274-9275	`	_	_
17-19	9275-9280	shell	_	_
17-20	9281-9287	script	_	_
17-21	9288-9294	python	_	_
17-22	9295-9313	download\_images.py	_	_
17-23	9314-9315	-	_	_
17-24	9315-9316	d	_	_
17-25	9317-9318	<	_	_
17-26	9318-9319	/	_	_
17-27	9319-9323	path	_	_
17-28	9323-9324	/	_	_
17-29	9324-9326	to	_	_
17-30	9326-9327	/	_	_
17-31	9327-9340	dataset.jsonl	_	_
17-32	9340-9341	>	_	_
17-33	9342-9343	-	_	_
17-34	9343-9344	o	_	_
17-35	9345-9346	<	_	_
17-36	9346-9347	/	_	_
17-37	9347-9351	path	_	_
17-38	9351-9352	/	_	_
17-39	9352-9354	to	_	_
17-40	9354-9355	/	_	_
17-41	9355-9361	output	_	_
17-42	9361-9362	/	_	_
17-43	9362-9376	root\_directory	_	_
17-44	9376-9377	/	_	_
17-45	9377-9378	>	_	_
17-46	9379-9380	`	_	_
17-47	9380-9381	`	_	_
17-48	9381-9382	`	_	_
17-49	9384-9392	Optional	_	_
17-50	9393-9403	parameters	_	_
17-51	9403-9404	:	_	_
17-52	9406-9407	`	_	_
17-53	9407-9408	`	_	_
17-54	9408-9409	`	_	_
17-55	9409-9410	-	_	_
17-56	9410-9411	t	_	_
17-57	9412-9413	<	_	_
17-58	9413-9416	int	_	_
17-59	9416-9417	>	_	_
17-60	9417-9418	`	_	_
17-61	9418-9419	`	_	_
17-62	9419-9420	`	_	_
17-63	9421-9425	sets	_	_
17-64	9426-9429	the	_	_
17-65	9430-9436	number	_	_
17-66	9437-9439	of	_	_
17-67	9440-9448	parallel	_	_
17-68	9449-9456	threads	_	_
17-69	9457-9458	(	_	_
17-70	9458-9465	default	_	_
17-71	9466-9467	`	_	_
17-72	9467-9468	`	_	_
17-73	9468-9469	`	_	_
17-74	9469-9471	32	_	_
17-75	9471-9472	`	_	_
17-76	9472-9473	`	_	_
17-77	9473-9474	`	_	_
17-78	9474-9475	)	_	_
17-79	9477-9478	`	_	_
17-80	9478-9479	`	_	_
17-81	9479-9480	`	_	_
17-82	9480-9481	-	_	_
17-83	9481-9482	r	_	_
17-84	9483-9484	<	_	_
17-85	9484-9487	int	_	_
17-86	9487-9488	>	_	_
17-87	9488-9489	`	_	_
17-88	9489-9490	`	_	_
17-89	9490-9491	`	_	_
17-90	9492-9496	sets	_	_
17-91	9497-9500	the	_	_
17-92	9501-9507	number	_	_
17-93	9508-9510	of	_	_
17-94	9511-9518	retries	_	_
17-95	9519-9521	to	_	_
17-96	9522-9530	download	_	_
17-97	9531-9533	an	_	_
17-98	9534-9539	image	_	_
17-99	9540-9541	(	_	_
17-100	9541-9548	default	_	_
17-101	9549-9550	`	_	_
17-102	9550-9551	`	_	_
17-103	9551-9552	`	_	_
17-104	9552-9553	5	_	_
17-105	9553-9554	`	_	_
17-106	9554-9555	`	_	_
17-107	9555-9556	`	_	_
17-108	9556-9557	)	_	_
17-109	9559-9560	`	_	_
17-110	9560-9561	`	_	_
17-111	9561-9562	`	_	_
17-112	9562-9563	-	_	_
17-113	9563-9564	-	_	_
17-114	9564-9575	max\_img\_dim	_	_
17-115	9576-9577	<	_	_
17-116	9577-9580	int	_	_
17-117	9580-9581	>	_	_
17-118	9581-9582	`	_	_
17-119	9582-9583	`	_	_
17-120	9583-9584	`	_	_
17-121	9585-9589	sets	_	_
17-122	9590-9593	the	_	_
17-123	9594-9603	dimension	_	_
17-124	9604-9606	of	_	_
17-125	9607-9610	the	_	_
17-126	9611-9617	longer	_	_
17-127	9618-9623	image	_	_
17-128	9624-9633	dimension	_	_
17-129	9634-9635	(	_	_
17-130	9635-9642	default	_	_
17-131	9643-9644	`	_	_
17-132	9644-9645	`	_	_
17-133	9645-9646	`	_	_
17-134	9646-9649	512	_	_
17-135	9649-9650	`	_	_
17-136	9650-9651	`	_	_
17-137	9651-9652	`	_	_
17-138	9652-9653	)	_	_
17-139	9656-9657	#	_	_
17-140	9657-9658	#	_	_
17-141	9659-9665	VisE-O	_	_
17-142	9665-9666	:	_	_
17-143	9667-9673	Visual	_	_
17-144	9674-9679	Event	_	_
17-145	9680-9688	Ontology	_	_
17-146	9690-9692	In	_	_
17-147	9693-9700	Section	_	_
17-148	9701-9704	3.2	_	_
17-149	9705-9707	of	_	_
17-150	9708-9711	the	_	_
17-151	9712-9717	paper	_	_
17-152	9717-9718	,	_	_
17-153	9719-9721	we	_	_
17-154	9722-9726	have	_	_
17-155	9727-9736	presented	_	_
17-156	9737-9744	several	_	_
17-157	9745-9752	methods	*[189]	EVALMETRIC[189]
17-158	9753-9755	to	*[189]	EVALMETRIC[189]
17-159	9756-9762	create	*[189]	EVALMETRIC[189]
17-160	9763-9765	an	*[189]	EVALMETRIC[189]
17-161	9766-9767	\*	*[189]	EVALMETRIC[189]
17-162	9767-9775	Ontology	*[189]	EVALMETRIC[189]
17-163	9775-9776	\*	*[189]	EVALMETRIC[189]
17-164	9777-9780	for	*[189]	EVALMETRIC[189]
17-165	9781-9791	newsworthy	_	_
17-166	9792-9797	event	_	_
17-167	9798-9803	types	_	_
17-168	9803-9804	.	_	_

#Text=Statistics are presented in Table 1 of the paper.
18-1	9805-9815	Statistics	_	_
18-2	9816-9819	are	_	_
18-3	9820-9829	presented	_	_
18-4	9830-9832	in	_	_
18-5	9833-9838	Table	_	_
18-6	9839-9840	1	_	_
18-7	9841-9843	of	_	_
18-8	9844-9847	the	_	_
18-9	9848-9853	paper	_	_
18-10	9853-9854	.	_	_

#Text=Different versions of the \*Visual Event Ontology (VisE-O)\* can be downloaded here: \[link\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/99ce7e4d-df5b-40f6-afb4-16085dbf697d/download/vise-d.tar.gz)  Furthermore you can explore the \*Ontologies\* using the following links:  - \*\*Initial Ontology\*\* (result of Section 3.2.2): \[explore\](https://tibhannover.github.io/VisE/VisE-O\_initial/index.html) - \*\*Disambiguated Ontology\*\* (result of Section 3.2.3): \[explore\](https://tibhannover.github.io/VisE/VisE-O\_disambiguated/index.html) - \*\*Refined Ontology\*\* (result of Section 3.2.4): \[explore\](https://tibhannover.github.io/VisE/VisE-O\_refined/index.html)  \*\*USAGE:\*\* After opening an \*Ontology\*, the \*Leaf Event Nodes\* (blue), \*Branch Event Nodes\* (orange), and \*Root Node\* (yellow) as well as their \*Relations\* are displayed.
19-1	9857-9866	Different	_	_
19-2	9867-9875	versions	_	_
19-3	9876-9878	of	_	_
19-4	9879-9882	the	_	_
19-5	9883-9884	\*	_	_
19-6	9884-9890	Visual	_	_
19-7	9891-9896	Event	_	_
19-8	9897-9905	Ontology	_	_
19-9	9906-9907	(	_	_
19-10	9907-9913	VisE-O	_	_
19-11	9913-9914	)	_	_
19-12	9914-9915	\*	_	_
19-13	9916-9919	can	_	_
19-14	9920-9922	be	_	_
19-15	9923-9933	downloaded	_	_
19-16	9934-9938	here	_	_
19-17	9938-9939	:	_	_
19-18	9940-9941	\[	_	_
19-19	9941-9945	link	_	_
19-20	9945-9946	\]	_	_
19-21	9946-9947	(	_	_
19-22	9947-9952	https	_	_
19-23	9952-9953	:	_	_
19-24	9953-9954	/	_	_
19-25	9954-9955	/	_	_
19-26	9955-9975	data.uni-hannover.de	_	_
19-27	9975-9976	/	_	_
19-28	9976-9983	dataset	_	_
19-29	9983-9984	/	_	_
19-30	9984-9992	3afb333d	_	_
19-31	9992-9993	-	_	_
19-32	9993-9997	230f	_	_
19-33	9997-9998	-	_	_
19-34	9998-10002	4829	_	_
19-35	10002-10003	-	_	_
19-36	10003-10020	91bb-d4dd41bfdcfa	_	_
19-37	10020-10021	/	_	_
19-38	10021-10029	resource	_	_
19-39	10029-10030	/	_	_
19-40	10030-10043	99ce7e4d-df5b	_	_
19-41	10043-10044	-	_	_
19-42	10044-10048	40f6	_	_
19-43	10048-10049	-	_	_
19-44	10049-10053	afb4	_	_
19-45	10053-10054	-	_	_
19-46	10054-10066	16085dbf697d	_	_
19-47	10066-10067	/	_	_
19-48	10067-10075	download	_	_
19-49	10075-10076	/	_	_
19-50	10076-10089	vise-d.tar.gz	_	_
19-50	10076-10082	vise-d	_	_
19-51	10089-10090	)	_	_
19-52	10092-10103	Furthermore	_	_
19-53	10104-10107	you	_	_
19-54	10108-10111	can	_	_
19-55	10112-10119	explore	_	_
19-56	10120-10123	the	_	_
19-57	10124-10125	\*	_	_
19-58	10125-10135	Ontologies	_	_
19-59	10135-10136	\*	_	_
19-60	10137-10142	using	_	_
19-61	10143-10146	the	_	_
19-62	10147-10156	following	_	_
19-63	10157-10162	links	_	_
19-64	10162-10163	:	_	_
19-65	10165-10166	-	_	_
19-66	10167-10168	\*	_	_
19-67	10168-10169	\*	_	_
19-68	10169-10176	Initial	_	_
19-69	10177-10185	Ontology	_	_
19-70	10185-10186	\*	_	_
19-71	10186-10187	\*	_	_
19-72	10188-10189	(	_	_
19-73	10189-10195	result	_	_
19-74	10196-10198	of	_	_
19-75	10199-10206	Section	_	_
19-76	10207-10212	3.2.2	_	_
19-77	10212-10213	)	_	_
19-78	10213-10214	:	_	_
19-79	10215-10216	\[	_	_
19-80	10216-10223	explore	_	_
19-81	10223-10224	\]	_	_
19-82	10224-10225	(	_	_
19-83	10225-10230	https	_	_
19-84	10230-10231	:	_	_
19-85	10231-10232	/	_	_
19-86	10232-10233	/	_	_
19-87	10233-10254	tibhannover.github.io	_	_
19-88	10254-10255	/	_	_
19-89	10255-10259	VisE	_	_
19-90	10259-10260	/	_	_
19-91	10260-10274	VisE-O\_initial	_	_
19-91	10260-10266	VisE-O	_	_
19-92	10274-10275	/	_	_
19-93	10275-10285	index.html	_	_
19-94	10285-10286	)	_	_
19-95	10287-10288	-	_	_
19-96	10289-10290	\*	_	_
19-97	10290-10291	\*	_	_
19-98	10291-10304	Disambiguated	_	_
19-99	10305-10313	Ontology	_	_
19-100	10313-10314	\*	*[183]	PROJECT[183]
19-101	10314-10315	\*	_	_
19-102	10316-10317	(	_	_
19-103	10317-10323	result	_	_
19-104	10324-10326	of	_	_
19-105	10327-10334	Section	_	_
19-106	10335-10340	3.2.3	_	_
19-107	10340-10341	)	_	_
19-108	10341-10342	:	_	_
19-109	10343-10344	\[	_	_
19-110	10344-10351	explore	_	_
19-111	10351-10352	\]	_	_
19-112	10352-10353	(	_	_
19-113	10353-10358	https	_	_
19-114	10358-10359	:	_	_
19-115	10359-10360	/	_	_
19-116	10360-10361	/	_	_
19-117	10361-10382	tibhannover.github.io	_	_
19-118	10382-10383	/	_	_
19-119	10383-10387	VisE	_	_
19-120	10387-10388	/	_	_
19-121	10388-10408	VisE-O\_disambiguated	_	_
19-122	10408-10409	/	_	_
19-123	10409-10419	index.html	_	_
19-124	10419-10420	)	_	_
19-125	10421-10422	-	_	_
19-126	10423-10424	\*	_	_
19-127	10424-10425	\*	_	_
19-128	10425-10432	Refined	_	_
19-129	10433-10441	Ontology	_	_
19-130	10441-10442	\*	_	_
19-131	10442-10443	\*	_	_
19-132	10444-10445	(	_	_
19-133	10445-10451	result	_	_
19-134	10452-10454	of	_	_
19-135	10455-10462	Section	_	_
19-136	10463-10468	3.2.4	_	_
19-137	10468-10469	)	_	_
19-138	10469-10470	:	_	_
19-139	10471-10472	\[	_	_
19-140	10472-10479	explore	_	_
19-141	10479-10480	\]	_	_
19-142	10480-10481	(	_	_
19-143	10481-10486	https	_	_
19-144	10486-10487	:	_	_
19-145	10487-10488	/	_	_
19-146	10488-10489	/	_	_
19-147	10489-10510	tibhannover.github.io	_	_
19-148	10510-10511	/	_	_
19-149	10511-10515	VisE	_	_
19-150	10515-10516	/	_	_
19-151	10516-10530	VisE-O\_refined	_	_
19-151	10516-10522	VisE-O	_	_
19-152	10530-10531	/	_	_
19-153	10531-10541	index.html	_	_
19-154	10541-10542	)	_	_
19-155	10544-10545	\*	_	_
19-156	10545-10546	\*	_	_
19-157	10546-10551	USAGE	_	_
19-158	10551-10552	:	_	_
19-159	10552-10553	\*	_	_
19-160	10553-10554	\*	_	_
19-161	10555-10560	After	_	_
19-162	10561-10568	opening	_	_
19-163	10569-10571	an	_	_
19-164	10572-10573	\*	_	_
19-165	10573-10581	Ontology	_	_
19-166	10581-10582	\*	_	_
19-167	10582-10583	,	_	_
19-168	10584-10587	the	_	_
19-169	10588-10589	\*	_	_
19-170	10589-10593	Leaf	_	_
19-171	10594-10599	Event	_	_
19-172	10600-10605	Nodes	_	_
19-173	10605-10606	\*	_	_
19-174	10607-10608	(	_	_
19-175	10608-10612	blue	_	_
19-176	10612-10613	)	_	_
19-177	10613-10614	,	_	_
19-178	10615-10616	\*	_	_
19-179	10616-10622	Branch	_	_
19-180	10623-10628	Event	_	_
19-181	10629-10634	Nodes	_	_
19-182	10634-10635	\*	_	_
19-183	10636-10637	(	_	_
19-184	10637-10643	orange	_	_
19-185	10643-10644	)	_	_
19-186	10644-10645	,	_	_
19-187	10646-10649	and	_	_
19-188	10650-10651	\*	_	_
19-189	10651-10655	Root	_	_
19-190	10656-10660	Node	_	_
19-191	10660-10661	\*	_	_
19-192	10662-10663	(	_	_
19-193	10663-10669	yellow	_	_
19-194	10669-10670	)	_	_
19-195	10671-10673	as	_	_
19-196	10674-10678	well	_	_
19-197	10679-10681	as	_	_
19-198	10682-10687	their	_	_
19-199	10688-10689	\*	_	_
19-200	10689-10698	Relations	_	_
19-201	10698-10699	\*	_	_
19-202	10700-10703	are	_	_
19-203	10704-10713	displayed	_	_
19-204	10713-10714	.	_	_

#Text=By clicking on a specific \*Event Node\* additional information such as the \*Wikidata ID\* and related child (\*Incoming\*) and parent (\*Outgoing\*) nodes are shown.
20-1	10715-10717	By	_	_
20-2	10718-10726	clicking	_	_
20-3	10727-10729	on	_	_
20-4	10730-10731	a	_	_
20-5	10732-10740	specific	_	_
20-6	10741-10742	\*	_	_
20-7	10742-10747	Event	_	_
20-8	10748-10752	Node	_	_
20-9	10752-10753	\*	_	_
20-10	10754-10764	additional	_	_
20-11	10765-10776	information	_	_
20-12	10777-10781	such	_	_
20-13	10782-10784	as	_	_
20-14	10785-10788	the	_	_
20-15	10789-10790	\*	_	_
20-16	10790-10798	Wikidata	_	_
20-17	10799-10801	ID	_	_
20-18	10801-10802	\*	_	_
20-19	10803-10806	and	_	_
20-20	10807-10814	related	_	_
20-21	10815-10820	child	_	_
20-22	10821-10822	(	_	_
20-23	10822-10823	\*	_	_
20-24	10823-10831	Incoming	_	_
20-25	10831-10832	\*	_	_
20-26	10832-10833	)	_	_
20-27	10834-10837	and	_	_
20-28	10838-10844	parent	_	_
20-29	10845-10846	(	_	_
20-30	10846-10847	\*	_	_
20-31	10847-10855	Outgoing	_	_
20-32	10855-10856	\*	_	_
20-33	10856-10857	)	_	_
20-34	10858-10863	nodes	_	_
20-35	10864-10867	are	_	_
20-36	10868-10873	shown	_	_
20-37	10873-10874	.	_	_

#Text=In addition, the search bar can be used to directly access a specific \*Event Node\*.   ## Benchmark Ontologies  In order to evaluate the presented ontology-diven approach on other benchmark datasets, we have manually linked classes of the \*Web Images for Event Recognition (WIDER)\*, \*Social Event Dataset (SocEID)\*, and the \*Rare Event Dataset (RED)\* to the \*Wikidata\* knowledge base according to Section 5.3.3.
21-1	10875-10877	In	_	_
21-2	10878-10886	addition	_	_
21-3	10886-10887	,	_	_
21-4	10888-10891	the	_	_
21-5	10892-10898	search	_	_
21-6	10899-10902	bar	_	_
21-7	10903-10906	can	_	_
21-8	10907-10909	be	_	_
21-9	10910-10914	used	_	_
21-10	10915-10917	to	_	_
21-11	10918-10926	directly	_	_
21-12	10927-10933	access	_	_
21-13	10934-10935	a	_	_
21-14	10936-10944	specific	_	_
21-15	10945-10946	\*	_	_
21-16	10946-10951	Event	_	_
21-17	10952-10956	Node	_	_
21-18	10956-10957	\*	_	_
21-19	10957-10958	.	_	_
21-20	10961-10962	#	_	_
21-21	10962-10963	#	_	_
21-22	10964-10973	Benchmark	_	_
21-23	10974-10984	Ontologies	_	_
21-24	10986-10988	In	_	_
21-25	10989-10994	order	_	_
21-26	10995-10997	to	_	_
21-27	10998-11006	evaluate	_	_
21-28	11007-11010	the	_	_
21-29	11011-11020	presented	_	_
21-30	11021-11035	ontology-diven	_	_
21-31	11036-11044	approach	_	_
21-32	11045-11047	on	_	_
21-33	11048-11053	other	_	_
21-34	11054-11063	benchmark	_	_
21-35	11064-11072	datasets	_	_
21-36	11072-11073	,	_	_
21-37	11074-11076	we	_	_
21-38	11077-11081	have	_	_
21-39	11082-11090	manually	_	_
21-40	11091-11097	linked	_	_
21-41	11098-11105	classes	_	_
21-42	11106-11108	of	_	_
21-43	11109-11112	the	_	_
21-44	11113-11114	\*	_	_
21-45	11114-11117	Web	_	_
21-46	11118-11124	Images	_	_
21-47	11125-11128	for	_	_
21-48	11129-11134	Event	_	_
21-49	11135-11146	Recognition	_	_
21-50	11147-11148	(	_	_
21-51	11148-11153	WIDER	_	_
21-52	11153-11154	)	_	_
21-53	11154-11155	\*	_	_
21-54	11155-11156	,	_	_
21-55	11157-11158	\*	_	_
21-56	11158-11164	Social	_	_
21-57	11165-11170	Event	_	_
21-58	11171-11178	Dataset	_	_
21-59	11179-11180	(	_	_
21-60	11180-11186	SocEID	_	_
21-61	11186-11187	)	_	_
21-62	11187-11188	\*	_	_
21-63	11188-11189	,	_	_
21-64	11190-11193	and	_	_
21-65	11194-11197	the	_	_
21-66	11198-11199	\*	_	_
21-67	11199-11203	Rare	_	_
21-68	11204-11209	Event	_	_
21-69	11210-11217	Dataset	_	_
21-70	11218-11219	(	_	_
21-71	11219-11222	RED	_	_
21-72	11222-11223	)	_	_
21-73	11223-11224	\*	_	_
21-74	11225-11227	to	_	_
21-75	11228-11231	the	_	_
21-76	11232-11233	\*	_	_
21-77	11233-11241	Wikidata	_	_
21-78	11241-11242	\*	*[172]	PUBLICATION[172]
21-79	11243-11252	knowledge	_	_
21-80	11253-11257	base	_	_
21-81	11258-11267	according	_	_
21-82	11268-11270	to	_	_
21-83	11271-11278	Section	_	_
21-84	11279-11284	5.3.3	_	_
21-85	11284-11285	.	_	_

#Text=The resulting \*Ontologies\* for these datasets can be downloaded and explored here: - \*\*WIDER Ontology\*\*: \[download\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/b1c2f92b-4b69-46fc-9282-16acc7a1c9aa/download/wider.tar.gz) \| \[explore\](https://tibhannover.github.io/VisE/WIDER/index.html) - \*\*SocEID Ontology\*\*: \[download\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/a8373c98-32a8-408c-b8e9-51e6b1e01777/download/soceid.tar.gz) \| \[explore\](https://tibhannover.github.io/VisE/SocEID/index.html) - \*\*RED Ontology\*\*: \[download\](https://data.uni-hannover.de/dataset/3afb333d-230f-4829-91bb-d4dd41bfdcfa/resource/d0f5cd8b-7c3e-4055-9810-f9cba2b69a33/download/red.tar.gz) \| \[explore\](https://tibhannover.github.io/VisE/RED/index.html)  ## Supplemental Material  Detailed information on the sampling strategy to gather event images, statistics for the training and testing datasets presented in Section 3.3, and results using different inference strategies (Section 4.2.3) are available in the \[vise\_supplemental.pdf\](vise\_supplemental.pdf).    ## LICENSE  This work is published under the GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007.
22-1	11286-11289	The	_	_
22-2	11290-11299	resulting	_	_
22-3	11300-11301	\*	_	_
22-4	11301-11311	Ontologies	_	_
22-5	11311-11312	\*	*[184]	PROJECT[184]
22-6	11313-11316	for	*[184]	PROJECT[184]
22-7	11317-11322	these	*[184]	PROJECT[184]
22-8	11323-11331	datasets	*[184]	PROJECT[184]
22-9	11332-11335	can	*[184]	PROJECT[184]
22-10	11336-11338	be	*[184]	PROJECT[184]
22-11	11339-11349	downloaded	*[184]	PROJECT[184]
22-12	11350-11353	and	*[184]	PROJECT[184]
22-13	11354-11362	explored	*[184]	PROJECT[184]
22-14	11363-11367	here	*[184]	PROJECT[184]
22-15	11367-11368	:	*[184]	PROJECT[184]
22-16	11369-11370	-	*[184]	PROJECT[184]
22-17	11371-11372	\*	*[184]	PROJECT[184]
22-18	11372-11373	\*	*[184]	PROJECT[184]
22-19	11373-11378	WIDER	*[184]	PROJECT[184]
22-20	11379-11387	Ontology	*[184]	PROJECT[184]
22-21	11387-11388	\*	*[184]	PROJECT[184]
22-22	11388-11389	\*	*[184]	PROJECT[184]
22-23	11389-11390	:	*[184]	PROJECT[184]
22-24	11391-11392	\[	*[184]	PROJECT[184]
22-25	11392-11400	download	*[184]	PROJECT[184]
22-26	11400-11401	\]	*[184]	PROJECT[184]
22-27	11401-11402	(	*[184]	PROJECT[184]
22-28	11402-11407	https	*[184]	PROJECT[184]
22-29	11407-11408	:	*[184]	PROJECT[184]
22-30	11408-11409	/	*[184]	PROJECT[184]
22-31	11409-11410	/	*[184]	PROJECT[184]
22-32	11410-11430	data.uni-hannover.de	*[184]	PROJECT[184]
22-33	11430-11431	/	*[184]	PROJECT[184]
22-34	11431-11438	dataset	*[184]	PROJECT[184]
22-35	11438-11439	/	*[184]	PROJECT[184]
22-36	11439-11447	3afb333d	*[184]	PROJECT[184]
22-37	11447-11448	-	*[184]	PROJECT[184]
22-38	11448-11452	230f	*[184]	PROJECT[184]
22-39	11452-11453	-	*[184]	PROJECT[184]
22-40	11453-11457	4829	*[184]	PROJECT[184]
22-41	11457-11458	-	*[184]	PROJECT[184]
22-42	11458-11475	91bb-d4dd41bfdcfa	*[184]	PROJECT[184]
22-43	11475-11476	/	*[184]	PROJECT[184]
22-44	11476-11484	resource	*[184]	PROJECT[184]
22-45	11484-11485	/	*[184]	PROJECT[184]
22-46	11485-11493	b1c2f92b	*[184]	PROJECT[184]
22-47	11493-11494	-	*[184]	PROJECT[184]
22-48	11494-11498	4b69	*[184]	PROJECT[184]
22-49	11498-11499	-	*[184]	PROJECT[184]
22-50	11499-11503	46fc	*[184]	PROJECT[184]
22-51	11503-11504	-	*[184]	PROJECT[184]
22-52	11504-11508	9282	*[184]	PROJECT[184]
22-53	11508-11509	-	*[184]	PROJECT[184]
22-54	11509-11521	16acc7a1c9aa	*[184]	PROJECT[184]
22-55	11521-11522	/	*[184]	PROJECT[184]
22-56	11522-11530	download	*[184]	PROJECT[184]
22-57	11530-11531	/	*[184]	PROJECT[184]
22-58	11531-11543	wider.tar.gz	*[184]	PROJECT[184]
22-58	11531-11536	wider	*[184]	PROJECT[184]
22-59	11543-11544	)	*[184]	PROJECT[184]
22-60	11545-11546	\|	*[184]	PROJECT[184]
22-61	11547-11548	\[	*[184]	PROJECT[184]
22-62	11548-11555	explore	*[184]	PROJECT[184]
22-63	11555-11556	\]	*[184]	PROJECT[184]
22-64	11556-11557	(	*[184]	PROJECT[184]
22-65	11557-11562	https	*[184]	PROJECT[184]
22-66	11562-11563	:	*[184]	PROJECT[184]
22-67	11563-11564	/	*[184]	PROJECT[184]
22-68	11564-11565	/	*[184]	PROJECT[184]
22-69	11565-11586	tibhannover.github.io	*[184]	PROJECT[184]
22-70	11586-11587	/	*[184]	PROJECT[184]
22-71	11587-11591	VisE	*[184]	PROJECT[184]
22-72	11591-11592	/	*[184]	PROJECT[184]
22-73	11592-11597	WIDER	*[184]	PROJECT[184]
22-74	11597-11598	/	*[184]	PROJECT[184]
22-75	11598-11608	index.html	*[184]	PROJECT[184]
22-76	11608-11609	)	*[184]	PROJECT[184]
22-77	11610-11611	-	*[184]	PROJECT[184]
22-78	11612-11613	\*	*[184]	PROJECT[184]
22-79	11613-11614	\*	*[184]	PROJECT[184]
22-80	11614-11620	SocEID	*[184]	PROJECT[184]
22-81	11621-11629	Ontology	*[184]	PROJECT[184]
22-82	11629-11630	\*	*[184]	PROJECT[184]
22-83	11630-11631	\*	*[184]	PROJECT[184]
22-84	11631-11632	:	*[184]	PROJECT[184]
22-85	11633-11634	\[	*[184]	PROJECT[184]
22-86	11634-11642	download	*[184]	PROJECT[184]
22-87	11642-11643	\]	*[184]	PROJECT[184]
22-88	11643-11644	(	*[184]	PROJECT[184]
22-89	11644-11649	https	*[184]	PROJECT[184]
22-90	11649-11650	:	*[184]	PROJECT[184]
22-91	11650-11651	/	*[184]	PROJECT[184]
22-92	11651-11652	/	*[184]	PROJECT[184]
22-93	11652-11672	data.uni-hannover.de	*[184]	PROJECT[184]
22-94	11672-11673	/	*[184]	PROJECT[184]
22-95	11673-11680	dataset	*[184]	PROJECT[184]
22-96	11680-11681	/	*[184]	PROJECT[184]
22-97	11681-11689	3afb333d	*[184]	PROJECT[184]
22-98	11689-11690	-	*[184]	PROJECT[184]
22-99	11690-11694	230f	*[184]	PROJECT[184]
22-100	11694-11695	-	*[184]	PROJECT[184]
22-101	11695-11699	4829	*[184]	PROJECT[184]
22-102	11699-11700	-	*[184]	PROJECT[184]
22-103	11700-11717	91bb-d4dd41bfdcfa	*[184]	PROJECT[184]
22-104	11717-11718	/	*[184]	PROJECT[184]
22-105	11718-11726	resource	*[184]	PROJECT[184]
22-106	11726-11727	/	*[184]	PROJECT[184]
22-107	11727-11735	a8373c98	*[184]	PROJECT[184]
22-108	11735-11736	-	*[184]	PROJECT[184]
22-109	11736-11740	32a8	*[184]	PROJECT[184]
22-110	11740-11741	-	*[184]	PROJECT[184]
22-111	11741-11750	408c-b8e9	*[184]	PROJECT[184]
22-112	11750-11751	-	*[184]	PROJECT[184]
22-113	11751-11763	51e6b1e01777	*[184]	PROJECT[184]
22-114	11763-11764	/	*[184]	PROJECT[184]
22-115	11764-11772	download	*[184]	PROJECT[184]
22-116	11772-11773	/	*[184]	PROJECT[184]
22-117	11773-11786	soceid.tar.gz	*[184]	PROJECT[184]
22-117	11773-11779	soceid	*[184]	PROJECT[184]
22-118	11786-11787	)	*[184]	PROJECT[184]
22-119	11788-11789	\|	*[184]	PROJECT[184]
22-120	11790-11791	\[	*[184]	PROJECT[184]
22-121	11791-11798	explore	*[184]	PROJECT[184]
22-122	11798-11799	\]	*[184]	PROJECT[184]
22-123	11799-11800	(	*[184]	PROJECT[184]
22-124	11800-11805	https	*[184]	PROJECT[184]
22-125	11805-11806	:	*[184]	PROJECT[184]
22-126	11806-11807	/	*[184]	PROJECT[184]
22-127	11807-11808	/	*[184]	PROJECT[184]
22-128	11808-11829	tibhannover.github.io	*[184]	PROJECT[184]
22-129	11829-11830	/	*[184]	PROJECT[184]
22-130	11830-11834	VisE	*[184]	PROJECT[184]
22-131	11834-11835	/	*[184]	PROJECT[184]
22-132	11835-11841	SocEID	*[184]	PROJECT[184]
22-133	11841-11842	/	*[184]	PROJECT[184]
22-134	11842-11852	index.html	*[184]	PROJECT[184]
22-135	11852-11853	)	*[184]	PROJECT[184]
22-136	11854-11855	-	*[184]	PROJECT[184]
22-137	11856-11857	\*	*[184]	PROJECT[184]
22-138	11857-11858	\*	*[184]	PROJECT[184]
22-139	11858-11861	RED	*[184]	PROJECT[184]
22-140	11862-11870	Ontology	*[184]	PROJECT[184]
22-141	11870-11871	\*	*[184]	PROJECT[184]
22-142	11871-11872	\*	*[184]	PROJECT[184]
22-143	11872-11873	:	*[184]	PROJECT[184]
22-144	11874-11875	\[	*[184]	PROJECT[184]
22-145	11875-11883	download	*[184]	PROJECT[184]
22-146	11883-11884	\]	*[184]	PROJECT[184]
22-147	11884-11885	(	*[184]	PROJECT[184]
22-148	11885-11890	https	*[184]	PROJECT[184]
22-149	11890-11891	:	*[184]	PROJECT[184]
22-150	11891-11892	/	*[184]	PROJECT[184]
22-151	11892-11893	/	*[184]	PROJECT[184]
22-152	11893-11913	data.uni-hannover.de	*[184]	PROJECT[184]
22-153	11913-11914	/	*[184]	PROJECT[184]
22-154	11914-11921	dataset	*[184]	PROJECT[184]
22-155	11921-11922	/	*[184]	PROJECT[184]
22-156	11922-11930	3afb333d	*[184]	PROJECT[184]
22-157	11930-11931	-	*[184]	PROJECT[184]
22-158	11931-11935	230f	*[184]	PROJECT[184]
22-159	11935-11936	-	*[184]	PROJECT[184]
22-160	11936-11940	4829	*[184]	PROJECT[184]
22-161	11940-11941	-	*[184]	PROJECT[184]
22-162	11941-11958	91bb-d4dd41bfdcfa	*[184]	PROJECT[184]
22-163	11958-11959	/	*[184]	PROJECT[184]
22-164	11959-11967	resource	*[184]	PROJECT[184]
22-165	11967-11968	/	*[184]	PROJECT[184]
22-166	11968-11976	d0f5cd8b	*[184]	PROJECT[184]
22-167	11976-11977	-	*[184]	PROJECT[184]
22-168	11977-11981	7c3e	*[184]	PROJECT[184]
22-169	11981-11982	-	*[184]	PROJECT[184]
22-170	11982-11986	4055	*[184]	PROJECT[184]
22-171	11986-11987	-	*[184]	PROJECT[184]
22-172	11987-11991	9810	*[184]	PROJECT[184]
22-173	11991-11992	-	*[184]	PROJECT[184]
22-174	11992-12004	f9cba2b69a33	*[184]	PROJECT[184]
22-175	12004-12005	/	*[184]	PROJECT[184]
22-176	12005-12013	download	*[184]	PROJECT[184]
22-177	12013-12014	/	*[184]	PROJECT[184]
22-178	12014-12024	red.tar.gz	*[184]	PROJECT[184]
22-178	12014-12017	red	*[184]	PROJECT[184]
22-179	12024-12025	)	*[184]	PROJECT[184]
22-180	12026-12027	\|	*[184]	PROJECT[184]
22-181	12028-12029	\[	*[184]	PROJECT[184]
22-182	12029-12036	explore	*[184]	PROJECT[184]
22-183	12036-12037	\]	*[184]	PROJECT[184]
22-184	12037-12038	(	*[184]	PROJECT[184]
22-185	12038-12043	https	*[184]	PROJECT[184]
22-186	12043-12044	:	*[184]	PROJECT[184]
22-187	12044-12045	/	*[184]	PROJECT[184]
22-188	12045-12046	/	*[184]	PROJECT[184]
22-189	12046-12067	tibhannover.github.io	_	_
22-190	12067-12068	/	_	_
22-191	12068-12072	VisE	_	_
22-192	12072-12073	/	_	_
22-193	12073-12076	RED	_	_
22-194	12076-12077	/	_	_
22-195	12077-12087	index.html	_	_
22-196	12087-12088	)	_	_
22-197	12090-12091	#	_	_
22-198	12091-12092	#	_	_
22-199	12093-12105	Supplemental	_	_
22-200	12106-12114	Material	_	_
22-201	12116-12124	Detailed	_	_
22-202	12125-12136	information	_	_
22-203	12137-12139	on	_	_
22-204	12140-12143	the	_	_
22-205	12144-12152	sampling	_	_
22-206	12153-12161	strategy	_	_
22-207	12162-12164	to	_	_
22-208	12165-12171	gather	_	_
22-209	12172-12177	event	_	_
22-210	12178-12184	images	_	_
22-211	12184-12185	,	_	_
22-212	12186-12196	statistics	_	_
22-213	12197-12200	for	_	_
22-214	12201-12204	the	_	_
22-215	12205-12213	training	_	_
22-216	12214-12217	and	_	_
22-217	12218-12225	testing	_	_
22-218	12226-12234	datasets	_	_
22-219	12235-12244	presented	_	_
22-220	12245-12247	in	_	_
22-221	12248-12255	Section	_	_
22-222	12256-12259	3.3	_	_
22-223	12259-12260	,	_	_
22-224	12261-12264	and	_	_
22-225	12265-12272	results	_	_
22-226	12273-12278	using	_	_
22-227	12279-12288	different	_	_
22-228	12289-12298	inference	_	_
22-229	12299-12309	strategies	_	_
22-230	12310-12311	(	_	_
22-231	12311-12318	Section	_	_
22-232	12319-12324	4.2.3	_	_
22-233	12324-12325	)	_	_
22-234	12326-12329	are	_	_
22-235	12330-12339	available	_	_
22-236	12340-12342	in	_	_
22-237	12343-12346	the	_	_
22-238	12347-12348	\[	_	_
22-239	12348-12369	vise\_supplemental.pdf	_	_
22-240	12369-12370	\]	_	_
22-241	12370-12371	(	_	_
22-242	12371-12392	vise\_supplemental.pdf	_	_
22-243	12392-12393	)	_	_
22-244	12393-12394	.	_	_
22-245	12398-12399	#	_	_
22-246	12399-12400	#	_	_
22-247	12401-12408	LICENSE	_	_
22-248	12410-12414	This	_	_
22-249	12415-12419	work	_	_
22-250	12420-12422	is	_	_
22-251	12423-12432	published	_	_
22-252	12433-12438	under	_	_
22-253	12439-12442	the	_	_
22-254	12443-12446	GNU	_	_
22-255	12447-12454	GENERAL	_	_
22-256	12455-12461	PUBLIC	_	_
22-257	12462-12469	LICENSE	_	_
22-258	12470-12477	Version	_	_
22-259	12478-12479	3	_	_
22-260	12479-12480	,	_	_
22-261	12481-12483	29	_	_
22-262	12484-12488	June	_	_
22-263	12489-12493	2007	_	_
22-264	12493-12494	.	_	_

#Text=For details please check the LICENSE file in the repository.
23-1	12495-12498	For	_	_
23-2	12499-12506	details	_	_
23-3	12507-12513	please	_	_
23-4	12514-12519	check	_	_
23-5	12520-12523	the	*[190]	EVALMETRIC[190]
23-6	12524-12531	LICENSE	*[190]	EVALMETRIC[190]
23-7	12532-12536	file	*[190]	EVALMETRIC[190]
23-8	12537-12539	in	*[190]	EVALMETRIC[190]
23-9	12540-12543	the	*[190]	EVALMETRIC[190]
23-10	12544-12554	repository	*[190]	EVALMETRIC[190]
23-11	12554-12555	.	_	_