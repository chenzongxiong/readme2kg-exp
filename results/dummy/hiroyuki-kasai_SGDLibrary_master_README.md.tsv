#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# SGDLibrary : Stochastic Optimization Algorithm Library in MATLAB/Octave ----------  Authors: \[Hiroyuki Kasai\](http://kasai.comm.waseda.ac.jp/kasai/)  Last page update: November 20, 2020  Latest library version: 1.0.20 (see Release notes for more info)  <br />  Announcement ---------- We are very welcome to your contribution.
1-1	0-1	#	_	_
1-2	2-12	SGDLibrary	_	_
1-3	13-14	:	_	_
1-4	15-25	Stochastic	_	_
1-5	26-38	Optimization	_	_
1-6	39-48	Algorithm	_	_
1-7	49-56	Library	_	_
1-8	57-59	in	_	_
1-9	60-66	MATLAB	_	_
1-10	66-67	/	_	_
1-11	67-73	Octave	_	_
1-12	74-75	-	_	_
1-13	75-76	-	_	_
1-14	76-77	-	*[548]	PROJECT[548]
1-15	77-78	-	*[548]	PROJECT[548]
1-16	78-79	-	*[548]	PROJECT[548]
1-17	79-80	-	*[548]	PROJECT[548]
1-18	80-81	-	*[548]	PROJECT[548]
1-19	81-82	-	*[548]	PROJECT[548]
1-20	82-83	-	*[548]	PROJECT[548]
1-21	83-84	-	*[548]	PROJECT[548]
1-22	86-93	Authors	*[548]	PROJECT[548]
1-23	93-94	:	*[548]	PROJECT[548]
1-24	95-96	\[	*[548]	PROJECT[548]
1-25	96-104	Hiroyuki	*[548]	PROJECT[548]
1-26	105-110	Kasai	*[548]	PROJECT[548]
1-27	110-111	\]	*[548]	PROJECT[548]
1-28	111-112	(	*[548]	PROJECT[548]
1-29	112-116	http	*[548]	PROJECT[548]
1-30	116-117	:	*[548]	PROJECT[548]
1-31	117-118	/	*[548]	PROJECT[548]
1-32	118-119	/	*[548]	PROJECT[548]
1-33	119-142	kasai.comm.waseda.ac.jp	*[548]	PROJECT[548]
1-34	142-143	/	*[548]	PROJECT[548]
1-35	143-148	kasai	*[548]	PROJECT[548]
1-36	148-149	/	*[548]	PROJECT[548]
1-37	149-150	)	*[548]	PROJECT[548]
1-38	152-156	Last	*[548]	PROJECT[548]
1-39	157-161	page	*[548]	PROJECT[548]
1-40	162-168	update	*[548]	PROJECT[548]
1-41	168-169	:	*[548]	PROJECT[548]
1-42	170-178	November	*[548]	PROJECT[548]
1-43	179-181	20	*[548]	PROJECT[548]
1-44	181-182	,	*[548]	PROJECT[548]
1-45	183-187	2020	*[548]	PROJECT[548]
1-46	189-195	Latest	*[548]	PROJECT[548]
1-47	196-203	library	*[548]	PROJECT[548]
1-48	204-211	version	*[548]	PROJECT[548]
1-49	211-212	:	*[548]	PROJECT[548]
1-50	213-219	1.0.20	*[548]	PROJECT[548]
1-51	220-221	(	*[548]	PROJECT[548]
1-52	221-224	see	*[548]	PROJECT[548]
1-53	225-232	Release	*[548]	PROJECT[548]
1-54	233-238	notes	*[548]	PROJECT[548]
1-55	239-242	for	*[548]	PROJECT[548]
1-56	243-247	more	*[548]	PROJECT[548]
1-57	248-252	info	*[548]	PROJECT[548]
1-58	252-253	)	*[548]	PROJECT[548]
1-59	255-256	<	*[548]	PROJECT[548]
1-60	256-258	br	*[548]	PROJECT[548]
1-61	259-260	/	*[548]	PROJECT[548]
1-62	260-261	>	*[548]	PROJECT[548]
1-63	263-275	Announcement	*[548]	PROJECT[548]
1-64	276-277	-	*[548]	PROJECT[548]
1-65	277-278	-	*[548]	PROJECT[548]
1-66	278-279	-	*[548]	PROJECT[548]
1-67	279-280	-	*[548]	PROJECT[548]
1-68	280-281	-	_	_
1-69	281-282	-	_	_
1-70	282-283	-	_	_
1-71	283-284	-	_	_
1-72	284-285	-	_	_
1-73	285-286	-	_	_
1-74	287-289	We	_	_
1-75	290-293	are	_	_
1-76	294-298	very	_	_
1-77	299-306	welcome	_	_
1-78	307-309	to	_	_
1-79	310-314	your	_	_
1-80	315-327	contribution	_	_
1-81	327-328	.	_	_

#Text=Please tell us  - Stochastic optimization solvers written by MATLAB, and  - your comments and suggestions.
2-1	329-335	Please	_	_
2-2	336-340	tell	_	_
2-3	341-343	us	_	_
2-4	345-346	-	_	_
2-5	347-357	Stochastic	_	_
2-6	358-370	optimization	_	_
2-7	371-378	solvers	_	_
2-8	379-386	written	_	_
2-9	387-389	by	_	_
2-10	390-396	MATLAB	_	_
2-11	396-397	,	*[467]	ONTOLOGY[467]
2-12	398-401	and	*[467]	ONTOLOGY[467]
2-13	403-404	-	*[467]	ONTOLOGY[467]
2-14	405-409	your	*[467]	ONTOLOGY[467]
2-15	410-418	comments	*[467]	ONTOLOGY[467]
2-16	419-422	and	*[467]	ONTOLOGY[467]
2-17	423-434	suggestions	*[467]	ONTOLOGY[467]
2-18	434-435	.	_	_

#Text=<br />  Introduction ---------- The SGDLibrary is a \*\*pure-MATLAB\*\* library or toolbox of a collection of \*\*stochastic optimization algorithms\*\*.
3-1	437-438	<	_	_
3-2	438-440	br	_	_
3-3	441-442	/	_	_
3-4	442-443	>	_	_
3-5	445-457	Introduction	_	_
3-6	458-459	-	_	_
3-7	459-460	-	_	_
3-8	460-461	-	_	_
3-9	461-462	-	_	_
3-10	462-463	-	_	_
3-11	463-464	-	_	_
3-12	464-465	-	_	_
3-13	465-466	-	_	_
3-14	466-467	-	_	_
3-15	467-468	-	_	_
3-16	469-472	The	_	_
3-17	473-483	SGDLibrary	_	_
3-18	484-486	is	_	_
3-19	487-488	a	_	_
3-20	489-490	\*	_	_
3-21	490-491	\*	_	_
3-22	491-502	pure-MATLAB	_	_
3-22	496-502	MATLAB	*[528]	SOFTWARE[528]
3-23	502-503	\*	*[528]	SOFTWARE[528]
3-24	503-504	\*	*[528]	SOFTWARE[528]
3-25	505-512	library	_	_
3-26	513-515	or	_	_
3-27	516-523	toolbox	_	_
3-28	524-526	of	_	_
3-29	527-528	a	_	_
3-30	529-539	collection	_	_
3-31	540-542	of	_	_
3-32	543-544	\*	_	_
3-33	544-545	\*	_	_
3-34	545-555	stochastic	_	_
3-35	556-568	optimization	_	_
3-36	569-579	algorithms	_	_
3-37	579-580	\*	_	_
3-38	580-581	\*	_	_
3-39	581-582	.	_	_

#Text=This solves an unconstrained minimization problem of the form, min f(x) = sum\_i f\_i(x).
4-1	583-587	This	_	_
4-2	588-594	solves	_	_
4-3	595-597	an	_	_
4-4	598-611	unconstrained	_	_
4-5	612-624	minimization	*[458]	PUBLICATION[458]
4-6	625-632	problem	*[458]	PUBLICATION[458]
4-7	633-635	of	*[458]	PUBLICATION[458]
4-8	636-639	the	*[458]	PUBLICATION[458]
4-9	640-644	form	*[458]	PUBLICATION[458]
4-10	644-645	,	_	_
4-11	646-649	min	_	_
4-12	650-651	f	_	_
4-13	651-652	(	_	_
4-14	652-653	x	_	_
4-15	653-654	)	_	_
4-16	655-656	=	_	_
4-17	657-662	sum\_i	_	_
4-18	663-666	f\_i	_	_
4-19	666-667	(	_	_
4-20	667-668	x	_	_
4-21	668-669	)	_	_
4-22	669-670	.	_	_

#Text=The SGDLibrary is also operable on \[GNU Octave\](https://www.gnu.org/software/octave/) (Free software compatible with many MATLAB scripts).
5-1	671-674	The	_	_
5-2	675-685	SGDLibrary	_	_
5-3	686-688	is	_	_
5-4	689-693	also	_	_
5-5	694-702	operable	_	_
5-6	703-705	on	_	_
5-7	706-707	\[	_	_
5-8	707-710	GNU	_	_
5-9	711-717	Octave	*[529]	SOFTWARE[529]
5-10	717-718	\]	*[529]	SOFTWARE[529]
5-11	718-719	(	*[529]	SOFTWARE[529]
5-12	719-724	https	*[529]	SOFTWARE[529]
5-13	724-725	:	*[529]	SOFTWARE[529]
5-14	725-726	/	*[529]	SOFTWARE[529]
5-15	726-727	/	*[529]	SOFTWARE[529]
5-16	727-738	www.gnu.org	*[529]	SOFTWARE[529]
5-17	738-739	/	*[529]	SOFTWARE[529]
5-18	739-747	software	*[529]	SOFTWARE[529]
5-19	747-748	/	*[529]	SOFTWARE[529]
5-20	748-754	octave	*[529]	SOFTWARE[529]
5-21	754-755	/	*[529]	SOFTWARE[529]
5-22	755-756	)	*[529]	SOFTWARE[529]
5-23	757-758	(	*[529]	SOFTWARE[529]
5-24	758-762	Free	_	_
5-25	763-771	software	_	_
5-26	772-782	compatible	_	_
5-27	783-787	with	_	_
5-28	788-792	many	_	_
5-29	793-799	MATLAB	_	_
5-30	800-807	scripts	_	_
5-31	807-808	)	_	_
5-32	808-809	.	_	_

#Text=Note that this SGDLibrary internally contains the \[GDLibrary\](https://github.com/hiroyuki-kasai/GDLibrary).
6-1	810-814	Note	_	_
6-2	815-819	that	_	_
6-3	820-824	this	_	_
6-4	825-835	SGDLibrary	*[518]	LICENSE[518]
6-5	836-846	internally	*[518]	LICENSE[518]
6-6	847-855	contains	*[518]	LICENSE[518]
6-7	856-859	the	*[518]	LICENSE[518]
6-8	860-861	\[	*[518]	LICENSE[518]
6-9	861-870	GDLibrary	_	_
6-10	870-871	\]	_	_
6-11	871-872	(	_	_
6-12	872-877	https	_	_
6-13	877-878	:	_	_
6-14	878-879	/	_	_
6-15	879-880	/	_	_
6-16	880-890	github.com	_	_
6-17	890-891	/	_	_
6-18	891-905	hiroyuki-kasai	_	_
6-19	905-906	/	_	_
6-20	906-915	GDLibrary	_	_
6-21	915-916	)	_	_
6-22	916-917	.	_	_

#Text=<br />  Document ---------- The document of SGDLibrary can be obtained from below\;  - H.
7-1	919-920	<	_	_
7-2	920-922	br	_	_
7-3	923-924	/	_	_
7-4	924-925	>	_	_
7-5	927-935	Document	_	_
7-6	936-937	-	_	_
7-7	937-938	-	*[479]	DATASET[479]
7-8	938-939	-	*[479]	DATASET[479]
7-9	939-940	-	*[479]	DATASET[479]
7-10	940-941	-	*[479]	DATASET[479]
7-11	941-942	-	*[479]	DATASET[479]
7-12	942-943	-	*[479]	DATASET[479]
7-13	943-944	-	*[479]	DATASET[479]
7-14	944-945	-	*[479]	DATASET[479]
7-15	945-946	-	*[479]	DATASET[479]
7-16	947-950	The	*[479]	DATASET[479]
7-17	951-959	document	_	_
7-18	960-962	of	_	_
7-19	963-973	SGDLibrary	_	_
7-20	974-977	can	_	_
7-21	978-980	be	_	_
7-22	981-989	obtained	_	_
7-23	990-994	from	_	_
7-24	995-1000	below	_	_
7-25	1000-1001	\;	_	_
7-26	1003-1004	-	_	_
7-27	1005-1006	H	_	_
7-28	1006-1007	.	_	_

#Text=Kasai, "\[SGDLibrary: A MATLAB library for stochastic optimization algorithms\](http://www.jmlr.org/papers/v18/17-632.html)," Journal of Machine Learning Research (JMLR), vol.18, no.215, 2018 (arXiv preprint \[arXiv:1710.10951\](https://arxiv.org/abs/1710.10951)).
8-1	1008-1013	Kasai	_	_
8-2	1013-1014	,	_	_
8-3	1015-1016	"	_	_
8-4	1016-1017	\[	_	_
8-5	1017-1027	SGDLibrary	_	_
8-6	1027-1028	:	_	_
8-7	1029-1030	A	_	_
8-8	1031-1037	MATLAB	_	_
8-9	1038-1045	library	_	_
8-10	1046-1049	for	_	_
8-11	1050-1060	stochastic	_	_
8-12	1061-1073	optimization	_	_
8-13	1074-1084	algorithms	_	_
8-14	1084-1085	\]	_	_
8-15	1085-1086	(	_	_
8-16	1086-1090	http	_	_
8-17	1090-1091	:	_	_
8-18	1091-1092	/	_	_
8-19	1092-1093	/	_	_
8-20	1093-1105	www.jmlr.org	_	_
8-21	1105-1106	/	_	_
8-22	1106-1112	papers	_	_
8-23	1112-1113	/	_	_
8-24	1113-1116	v18	_	_
8-25	1116-1117	/	_	_
8-26	1117-1119	17	_	_
8-27	1119-1120	-	_	_
8-28	1120-1123	632	_	_
8-29	1123-1124	.	_	_
8-30	1124-1128	html	_	_
8-31	1128-1129	)	_	_
8-32	1129-1130	,	_	_
8-33	1130-1131	"	_	_
8-34	1132-1139	Journal	_	_
8-35	1140-1142	of	_	_
8-36	1143-1150	Machine	_	_
8-37	1151-1159	Learning	_	_
8-38	1160-1168	Research	_	_
8-39	1169-1170	(	_	_
8-40	1170-1174	JMLR	_	_
8-41	1174-1175	)	_	_
8-42	1175-1176	,	_	_
8-43	1177-1180	vol	_	_
8-44	1180-1183	.18	_	_
8-45	1183-1184	,	_	_
8-46	1185-1187	no	_	_
8-47	1187-1191	.215	_	_
8-48	1191-1192	,	_	_
8-49	1193-1197	2018	_	_
8-50	1198-1199	(	_	_
8-51	1199-1204	arXiv	_	_
8-52	1205-1213	preprint	_	_
8-53	1214-1215	\[	*[502]	PROGLANG[502]
8-54	1215-1220	arXiv	*[502]	PROGLANG[502]
8-55	1220-1221	:	*[502]	PROGLANG[502]
8-56	1221-1231	1710.10951	*[502]	PROGLANG[502]
8-57	1231-1232	\]	*[502]	PROGLANG[502]
8-58	1232-1233	(	*[502]	PROGLANG[502]
8-59	1233-1238	https	*[502]	PROGLANG[502]
8-60	1238-1239	:	*[502]	PROGLANG[502]
8-61	1239-1240	/	*[502]	PROGLANG[502]
8-62	1240-1241	/	*[502]	PROGLANG[502]
8-63	1241-1250	arxiv.org	*[502]	PROGLANG[502]
8-64	1250-1251	/	*[502]	PROGLANG[502]
8-65	1251-1254	abs	*[502]	PROGLANG[502]
8-66	1254-1255	/	*[502]	PROGLANG[502]
8-67	1255-1265	1710.10951	_	_
8-68	1265-1266	)	_	_
8-69	1266-1267	)	_	_
8-70	1267-1268	.	_	_

#Text=<br />  ## <a name="supp\_solver"> List of the algorithms available in SGDLibrary </a>   - \*\*SGD variants\*\* (stochastic gradient descent)     - Vanila SGD         - H.
9-1	1271-1272	<	_	_
9-2	1272-1274	br	_	_
9-3	1275-1276	/	_	_
9-4	1276-1277	>	_	_
9-5	1279-1280	#	_	_
9-6	1280-1281	#	*[480]	DATASET[480]
9-7	1282-1283	<	*[480]	DATASET[480]
9-8	1283-1284	a	*[480]	DATASET[480]
9-9	1285-1289	name	*[480]	DATASET[480]
9-10	1289-1290	=	*[480]	DATASET[480]
9-11	1290-1291	"	*[480]	DATASET[480]
9-12	1291-1302	supp\_solver	_	_
9-13	1302-1303	"	_	_
9-14	1303-1304	>	_	_
9-15	1305-1309	List	_	_
9-16	1310-1312	of	_	_
9-17	1313-1316	the	_	_
9-18	1317-1327	algorithms	_	_
9-19	1328-1337	available	_	_
9-20	1338-1340	in	_	_
9-21	1341-1351	SGDLibrary	_	_
9-22	1352-1353	<	_	_
9-23	1353-1354	/	_	_
9-24	1354-1355	a	_	_
9-25	1355-1356	>	_	_
9-26	1359-1360	-	_	_
9-27	1361-1362	\*	_	_
9-28	1362-1363	\*	_	_
9-29	1363-1366	SGD	_	_
9-30	1367-1375	variants	_	_
9-31	1375-1376	\*	_	_
9-32	1376-1377	\*	_	_
9-33	1378-1379	(	_	_
9-34	1379-1389	stochastic	_	_
9-35	1390-1398	gradient	_	_
9-36	1399-1406	descent	_	_
9-37	1406-1407	)	_	_
9-38	1412-1413	-	_	_
9-39	1414-1420	Vanila	_	_
9-40	1421-1424	SGD	_	_
9-41	1433-1434	-	_	_
9-42	1435-1436	H	_	_
9-43	1436-1437	.	_	_

#Text=Robbins and S.
10-1	1438-1445	Robbins	_	_
10-2	1446-1449	and	_	_
10-3	1450-1451	S	*[519]	LICENSE[519]
10-4	1451-1452	.	_	_

#Text=Monro, "\[A stochastic approximation method\](https://www.jstor.org/stable/pdf/2236626.pdf)," The annals of mathematical statistics, vol. 22, no. 3, pp. 400-407, 1951
11-1	1453-1458	Monro	_	_
11-2	1458-1459	,	_	_
11-3	1460-1461	"	_	_
11-4	1461-1462	\[	_	_
11-5	1462-1463	A	*[468]	ONTOLOGY[468]
11-6	1464-1474	stochastic	*[468]	ONTOLOGY[468]
11-7	1475-1488	approximation	*[468]	ONTOLOGY[468]
11-8	1489-1495	method	*[468]	ONTOLOGY[468]
11-9	1495-1496	\]	*[468]	ONTOLOGY[468]
11-10	1496-1497	(	*[468]	ONTOLOGY[468]
11-11	1497-1502	https	*[468]	ONTOLOGY[468]
11-12	1502-1503	:	*[468]	ONTOLOGY[468]
11-13	1503-1504	/	*[468]	ONTOLOGY[468]
11-14	1504-1505	/	*[468]	ONTOLOGY[468]
11-15	1505-1518	www.jstor.org	_	_
11-16	1518-1519	/	_	_
11-17	1519-1525	stable	_	_
11-18	1525-1526	/	_	_
11-19	1526-1529	pdf	_	_
11-20	1529-1530	/	_	_
11-21	1530-1537	2236626	_	_
11-22	1537-1538	.	_	_
11-23	1538-1541	pdf	_	_
11-24	1541-1542	)	_	_
11-25	1542-1543	,	_	_
11-26	1543-1544	"	_	_
11-27	1545-1548	The	_	_
11-28	1549-1555	annals	_	_
11-29	1556-1558	of	_	_
11-30	1559-1571	mathematical	_	_
11-31	1572-1582	statistics	_	_
11-32	1582-1583	,	_	_
11-33	1584-1587	vol	_	_
11-34	1587-1588	.	_	_
11-35	1589-1591	22	_	_
11-36	1591-1592	,	_	_
11-37	1593-1595	no	_	_
11-38	1595-1596	.	_	_
11-39	1597-1598	3	_	_
11-40	1598-1599	,	_	_
11-41	1600-1602	pp	_	_
11-42	1602-1603	.	_	_
11-43	1604-1607	400	_	_
11-44	1607-1608	-	_	_
11-45	1608-1611	407	_	_
11-46	1611-1612	,	_	_
11-47	1613-1617	1951	_	_

#Text=.
12-1	1617-1618	.	_	_

#Text=- L.
13-1	1627-1628	-	_	_
13-2	1629-1630	L	*[475]	WORKSHOP[475]
13-3	1630-1631	.	_	_

#Text=Bottou, "\[Online learning and stochastic approximations\](http://leon.bottou.org/publications/pdf/online-1998.pdf)," Edited by David Saad, Cambridge University Press, Cambridge, UK, 1998
14-1	1632-1638	Bottou	_	_
14-2	1638-1639	,	_	_
14-3	1640-1641	"	_	_
14-4	1641-1642	\[	_	_
14-5	1642-1648	Online	_	_
14-6	1649-1657	learning	_	_
14-7	1658-1661	and	_	_
14-8	1662-1672	stochastic	_	_
14-9	1673-1687	approximations	_	_
14-10	1687-1688	\]	_	_
14-11	1688-1689	(	_	_
14-12	1689-1693	http	_	_
14-13	1693-1694	:	_	_
14-14	1694-1695	/	_	_
14-15	1695-1696	/	_	_
14-16	1696-1711	leon.bottou.org	_	_
14-17	1711-1712	/	_	_
14-18	1712-1724	publications	*[535]	EVALMETRIC[535]
14-19	1724-1725	/	*[535]	EVALMETRIC[535]
14-20	1725-1728	pdf	*[535]	EVALMETRIC[535]
14-21	1728-1729	/	*[535]	EVALMETRIC[535]
14-22	1729-1735	online	*[535]	EVALMETRIC[535]
14-23	1735-1736	-	*[535]	EVALMETRIC[535]
14-24	1736-1740	1998	*[535]	EVALMETRIC[535]
14-25	1740-1741	.	*[535]	EVALMETRIC[535]
14-26	1741-1744	pdf	*[535]	EVALMETRIC[535]
14-27	1744-1745	)	*[535]	EVALMETRIC[535]
14-28	1745-1746	,	*[535]	EVALMETRIC[535]
14-29	1746-1747	"	*[535]	EVALMETRIC[535]
14-30	1748-1754	Edited	*[535]	EVALMETRIC[535]
14-31	1755-1757	by	_	_
14-32	1758-1763	David	_	_
14-33	1764-1768	Saad	_	_
14-34	1768-1769	,	_	_
14-35	1770-1779	Cambridge	_	_
14-36	1780-1790	University	_	_
14-37	1791-1796	Press	_	_
14-38	1796-1797	,	_	_
14-39	1798-1807	Cambridge	_	_
14-40	1807-1808	,	_	_
14-41	1809-1811	UK	_	_
14-42	1811-1812	,	_	_
14-43	1813-1817	1998	_	_

#Text=.
15-1	1817-1818	.	_	_

#Text=- SGD-CM (SGD with classical momentum)     - SGD-CM-NAG (SGD with classical momentum and Nesterov's Accelerated Gradient)         - I.
16-1	1823-1824	-	_	_
16-2	1825-1831	SGD-CM	_	_
16-3	1832-1833	(	_	_
16-4	1833-1836	SGD	_	_
16-5	1837-1841	with	_	_
16-6	1842-1851	classical	_	_
16-7	1852-1860	momentum	_	_
16-8	1860-1861	)	_	_
16-9	1866-1867	-	_	_
16-10	1868-1878	SGD-CM-NAG	_	_
16-11	1879-1880	(	*[469]	ONTOLOGY[469]
16-12	1880-1883	SGD	*[469]	ONTOLOGY[469]
16-13	1884-1888	with	*[469]	ONTOLOGY[469]
16-14	1889-1898	classical	*[469]	ONTOLOGY[469]
16-15	1899-1907	momentum	*[469]	ONTOLOGY[469]
16-16	1908-1911	and	*[469]	ONTOLOGY[469]
16-17	1912-1922	Nesterov's	*[469]	ONTOLOGY[469]
16-18	1923-1934	Accelerated	*[469]	ONTOLOGY[469]
16-19	1935-1943	Gradient	*[469]	ONTOLOGY[469]
16-20	1943-1944	)	_	_
16-21	1953-1954	-	_	_
16-22	1955-1956	I	_	_
16-23	1956-1957	.	_	_

#Text=Sutskever, J.
17-1	1958-1967	Sutskever	_	_
17-2	1967-1968	,	_	_
17-3	1969-1970	J	_	_
17-4	1970-1971	.	_	_

#Text=Martens, G.
18-1	1972-1979	Martens	_	_
18-2	1979-1980	,	_	_
18-3	1981-1982	G	*[481]	DATASET[481]
18-4	1982-1983	.	_	_

#Text=Dahl and G.
19-1	1984-1988	Dahl	_	_
19-2	1989-1992	and	_	_
19-3	1993-1994	G	_	_
19-4	1994-1995	.	_	_

#Text=Hinton, "\[On the importance of initialization and momentum in deep learning\](https://dl.acm.org/citation.cfm?
20-1	1996-2002	Hinton	_	_
20-2	2002-2003	,	_	_
20-3	2004-2005	"	_	_
20-4	2005-2006	\[	_	_
20-5	2006-2008	On	_	_
20-6	2009-2012	the	_	_
20-7	2013-2023	importance	_	_
20-8	2024-2026	of	_	_
20-9	2027-2041	initialization	_	_
20-10	2042-2045	and	_	_
20-11	2046-2054	momentum	_	_
20-12	2055-2057	in	_	_
20-13	2058-2062	deep	_	_
20-14	2063-2071	learning	_	_
20-15	2071-2072	\]	*[520]	LICENSE[520]
20-16	2072-2073	(	*[520]	LICENSE[520]
20-17	2073-2078	https	_	_
20-18	2078-2079	:	_	_
20-19	2079-2080	/	_	_
20-20	2080-2081	/	_	_
20-21	2081-2091	dl.acm.org	_	_
20-22	2091-2092	/	_	_
20-23	2092-2104	citation.cfm	_	_
20-24	2104-2105	?	_	_

#Text=id=3043064)," ICML, 2013
21-1	2105-2107	id	_	_
21-2	2107-2108	=	_	_
21-3	2108-2115	3043064	_	_
21-4	2115-2116	)	_	_
21-5	2116-2117	,	_	_
21-6	2117-2118	"	_	_
21-7	2119-2123	ICML	_	_
21-8	2123-2124	,	_	_
21-9	2125-2129	2013	_	_

#Text=.
22-1	2129-2130	.	_	_

#Text=- AdaGrad (Adaptive gradient algorithm)         - J.
23-1	2135-2136	-	_	_
23-2	2137-2144	AdaGrad	_	_
23-3	2145-2146	(	_	_
23-4	2146-2154	Adaptive	_	_
23-5	2155-2163	gradient	_	_
23-6	2164-2173	algorithm	_	_
23-7	2173-2174	)	_	_
23-8	2183-2184	-	_	_
23-9	2185-2186	J	_	_
23-10	2186-2187	.	_	_

#Text=Duchi, E.
24-1	2188-2193	Duchi	_	_
24-2	2193-2194	,	*[521]	LICENSE[521]
24-3	2195-2196	E	_	_
24-4	2196-2197	.	_	_

#Text=Hazan and Y.
25-1	2198-2203	Hazan	_	_
25-2	2204-2207	and	_	_
25-3	2208-2209	Y	_	_
25-4	2209-2210	.	_	_

#Text=Singer, "\[Adaptive subgradient methods for online learning and stochastic optimization\](http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)," Journal of Machine Learning Research, 12, pp. 2121-2159, 2011
26-1	2211-2217	Singer	_	_
26-2	2217-2218	,	_	_
26-3	2219-2220	"	_	_
26-4	2220-2221	\[	_	_
26-5	2221-2229	Adaptive	_	_
26-6	2230-2241	subgradient	_	_
26-7	2242-2249	methods	_	_
26-8	2250-2253	for	_	_
26-9	2254-2260	online	_	_
26-10	2261-2269	learning	_	_
26-11	2270-2273	and	_	_
26-12	2274-2284	stochastic	_	_
26-13	2285-2297	optimization	_	_
26-14	2297-2298	\]	_	_
26-15	2298-2299	(	_	_
26-16	2299-2303	http	_	_
26-17	2303-2304	:	_	_
26-18	2304-2305	/	_	_
26-19	2305-2306	/	_	_
26-20	2306-2318	www.jmlr.org	_	_
26-21	2318-2319	/	_	_
26-22	2319-2325	papers	_	_
26-23	2325-2326	/	_	_
26-24	2326-2334	volume12	_	_
26-25	2334-2335	/	_	_
26-26	2335-2343	duchi11a	_	_
26-27	2343-2344	/	_	_
26-28	2344-2356	duchi11a.pdf	_	_
26-29	2356-2357	)	_	_
26-30	2357-2358	,	_	_
26-31	2358-2359	"	_	_
26-32	2360-2367	Journal	_	_
26-33	2368-2370	of	_	_
26-34	2371-2378	Machine	_	_
26-35	2379-2387	Learning	_	_
26-36	2388-2396	Research	_	_
26-37	2396-2397	,	_	_
26-38	2398-2400	12	_	_
26-39	2400-2401	,	_	_
26-40	2402-2404	pp	_	_
26-41	2404-2405	.	_	_
26-42	2406-2410	2121	_	_
26-43	2410-2411	-	_	_
26-44	2411-2415	2159	_	_
26-45	2415-2416	,	_	_
26-46	2417-2421	2011	_	_

#Text=.
27-1	2421-2422	.	_	_

#Text=- AdaDelta         - M.
28-1	2427-2428	-	_	_
28-2	2429-2437	AdaDelta	_	_
28-3	2446-2447	-	_	_
28-4	2448-2449	M	_	_
28-5	2449-2450	.	_	_

#Text=D.Zeiler, "\[AdaDelta: An adaptive learning rate method\](http://arxiv.org/abs/1212.5701)," arXiv preprint arXiv:1212.5701, 2012
29-1	2451-2459	D.Zeiler	_	_
29-2	2459-2460	,	_	_
29-3	2461-2462	"	_	_
29-4	2462-2463	\[	_	_
29-5	2463-2471	AdaDelta	_	_
29-6	2471-2472	:	_	_
29-7	2473-2475	An	_	_
29-8	2476-2484	adaptive	_	_
29-9	2485-2493	learning	_	_
29-10	2494-2498	rate	_	_
29-11	2499-2505	method	_	_
29-12	2505-2506	\]	_	_
29-13	2506-2507	(	_	_
29-14	2507-2511	http	_	_
29-15	2511-2512	:	_	_
29-16	2512-2513	/	_	_
29-17	2513-2514	/	_	_
29-18	2514-2523	arxiv.org	_	_
29-19	2523-2524	/	_	_
29-20	2524-2527	abs	_	_
29-21	2527-2528	/	_	_
29-22	2528-2537	1212.5701	_	_
29-23	2537-2538	)	_	_
29-24	2538-2539	,	_	_
29-25	2539-2540	"	_	_
29-26	2541-2546	arXiv	_	_
29-27	2547-2555	preprint	_	_
29-28	2556-2561	arXiv	_	_
29-29	2561-2562	:	_	_
29-30	2562-2571	1212.5701	_	_
29-31	2571-2572	,	_	_
29-32	2573-2577	2012	_	_

#Text=.
30-1	2577-2578	.	_	_

#Text=- RMSProp         - T.
31-1	2583-2584	-	_	_
31-2	2585-2592	RMSProp	_	_
31-3	2601-2602	-	_	_
31-4	2603-2604	T	*[484]	PROJECT[484]
31-5	2604-2605	.	_	_

#Text=Tieleman and G.
32-1	2606-2614	Tieleman	_	_
32-2	2615-2618	and	_	_
32-3	2619-2620	G	_	_
32-4	2620-2621	.	_	_

#Text=Hinton, "Lecture 6.5 - RMSProp", COURSERA: Neural Networks for Machine Learning, Technical report, 2012
33-1	2622-2628	Hinton	_	_
33-2	2628-2629	,	_	_
33-3	2630-2631	"	_	_
33-4	2631-2638	Lecture	_	_
33-5	2639-2642	6.5	_	_
33-6	2643-2644	-	_	_
33-7	2645-2652	RMSProp	_	_
33-8	2652-2653	"	_	_
33-9	2653-2654	,	_	_
33-10	2655-2663	COURSERA	_	_
33-11	2663-2664	:	_	_
33-12	2665-2671	Neural	_	_
33-13	2672-2680	Networks	_	_
33-14	2681-2684	for	_	_
33-15	2685-2692	Machine	_	_
33-16	2693-2701	Learning	_	_
33-17	2701-2702	,	_	_
33-18	2703-2712	Technical	_	_
33-19	2713-2719	report	_	_
33-20	2719-2720	,	_	_
33-21	2721-2725	2012	_	_

#Text=.
34-1	2725-2726	.	_	_

#Text=- Adam         - D.
35-1	2731-2732	-	_	_
35-2	2733-2737	Adam	_	_
35-3	2746-2747	-	_	_
35-4	2748-2749	D	_	_
35-5	2749-2750	.	_	_

#Text=Kingma and J.
36-1	2751-2757	Kingma	_	_
36-2	2758-2761	and	_	_
36-3	2762-2763	J	_	_
36-4	2763-2764	.	_	_

#Text=Ba, "\[Adam: A method for stochastic optimization\](http://arxiv.org/pdf/1412.6980.pdf)," International Conference for Learning Representation (ICLR), 2015
37-1	2765-2767	Ba	_	_
37-2	2767-2768	,	_	_
37-3	2769-2770	"	_	_
37-4	2770-2771	\[	_	_
37-5	2771-2775	Adam	_	_
37-6	2775-2776	:	*[477]	WORKSHOP[477]
37-7	2777-2778	A	*[477]	WORKSHOP[477]
37-8	2779-2785	method	*[477]	WORKSHOP[477]
37-9	2786-2789	for	*[477]	WORKSHOP[477]
37-10	2790-2800	stochastic	*[477]	WORKSHOP[477]
37-11	2801-2813	optimization	*[477]	WORKSHOP[477]
37-12	2813-2814	\]	*[477]	WORKSHOP[477]
37-13	2814-2815	(	*[477]	WORKSHOP[477]
37-14	2815-2819	http	*[477]	WORKSHOP[477]
37-15	2819-2820	:	*[477]	WORKSHOP[477]
37-16	2820-2821	/	*[477]	WORKSHOP[477]
37-17	2821-2822	/	*[477]	WORKSHOP[477]
37-18	2822-2831	arxiv.org	*[477]	WORKSHOP[477]
37-19	2831-2832	/	*[477]	WORKSHOP[477]
37-20	2832-2835	pdf	*[477]	WORKSHOP[477]
37-21	2835-2836	/	*[477]	WORKSHOP[477]
37-22	2836-2845	1412.6980	*[477]	WORKSHOP[477]
37-23	2845-2846	.	*[477]	WORKSHOP[477]
37-24	2846-2849	pdf	*[477]	WORKSHOP[477]
37-25	2849-2850	)	*[477]	WORKSHOP[477]
37-26	2850-2851	,	*[477]	WORKSHOP[477]
37-27	2851-2852	"	*[477]	WORKSHOP[477]
37-28	2853-2866	International	_	_
37-29	2867-2877	Conference	_	_
37-30	2878-2881	for	_	_
37-31	2882-2890	Learning	_	_
37-32	2891-2905	Representation	_	_
37-33	2906-2907	(	_	_
37-34	2907-2911	ICLR	_	_
37-35	2911-2912	)	_	_
37-36	2912-2913	,	_	_
37-37	2914-2918	2015	_	_

#Text=.
38-1	2918-2919	.	_	_

#Text=- AdaMax         - D.
39-1	2924-2925	-	_	_
39-2	2926-2932	AdaMax	_	_
39-3	2941-2942	-	_	_
39-4	2943-2944	D	_	_
39-5	2944-2945	.	_	_

#Text=Kingma and J.
40-1	2946-2952	Kingma	_	_
40-2	2953-2956	and	_	_
40-3	2957-2958	J	_	_
40-4	2958-2959	.	_	_

#Text=Ba, "\[Adam: A method for stochastic optimization\](http://arxiv.org/pdf/1412.6980.pdf)," International Conference for Learning Representation (ICLR), 2015. - \*\*Variance reduction variants\*\*     - SVRG (stochastic variance reduced gradient)         - R.
41-1	2960-2962	Ba	_	_
41-2	2962-2963	,	_	_
41-3	2964-2965	"	_	_
41-4	2965-2966	\[	_	_
41-5	2966-2970	Adam	_	_
41-6	2970-2971	:	_	_
41-7	2972-2973	A	_	_
41-8	2974-2980	method	_	_
41-9	2981-2984	for	_	_
41-10	2985-2995	stochastic	_	_
41-11	2996-3008	optimization	_	_
41-12	3008-3009	\]	_	_
41-13	3009-3010	(	_	_
41-14	3010-3014	http	_	_
41-15	3014-3015	:	_	_
41-16	3015-3016	/	_	_
41-17	3016-3017	/	_	_
41-18	3017-3026	arxiv.org	_	_
41-19	3026-3027	/	_	_
41-20	3027-3030	pdf	_	_
41-21	3030-3031	/	_	_
41-22	3031-3040	1412.6980	_	_
41-23	3040-3041	.	_	_
41-24	3041-3044	pdf	_	_
41-25	3044-3045	)	_	_
41-26	3045-3046	,	_	_
41-27	3046-3047	"	_	_
41-28	3048-3061	International	_	_
41-29	3062-3072	Conference	_	_
41-30	3073-3076	for	_	_
41-31	3077-3085	Learning	_	_
41-32	3086-3100	Representation	_	_
41-33	3101-3102	(	_	_
41-34	3102-3106	ICLR	_	_
41-35	3106-3107	)	_	_
41-36	3107-3108	,	_	_
41-37	3109-3113	2015	_	_
41-38	3113-3114	.	_	_
41-39	3115-3116	-	_	_
41-40	3117-3118	\*	_	_
41-41	3118-3119	\*	_	_
41-42	3119-3127	Variance	_	_
41-43	3128-3137	reduction	_	_
41-44	3138-3146	variants	_	_
41-45	3146-3147	\*	_	_
41-46	3147-3148	\*	_	_
41-47	3153-3154	-	_	_
41-48	3155-3159	SVRG	_	_
41-49	3160-3161	(	_	_
41-50	3161-3171	stochastic	_	_
41-51	3172-3180	variance	_	_
41-52	3181-3188	reduced	_	_
41-53	3189-3197	gradient	_	_
41-54	3197-3198	)	_	_
41-55	3207-3208	-	_	_
41-56	3209-3210	R	_	_
41-57	3210-3211	.	_	_

#Text=Johnson and T.
42-1	3212-3219	Johnson	_	_
42-2	3220-3223	and	*[522]	LICENSE[522]
42-3	3224-3225	T	*[522]	LICENSE[522]
42-4	3225-3226	.	_	_

#Text=Zhang, "\[Accelerating stochastic gradient descent using predictive variance reduction\](http://papers.nips.cc/paper/4937-accelerating-stochastic-gradient-descent-using-predictive-variance-reduction.pdf)," NIPS, 2013
43-1	3227-3232	Zhang	_	_
43-2	3232-3233	,	_	_
43-3	3234-3235	"	_	_
43-4	3235-3236	\[	_	_
43-5	3236-3248	Accelerating	_	_
43-6	3249-3259	stochastic	_	_
43-7	3260-3268	gradient	_	_
43-8	3269-3276	descent	_	_
43-9	3277-3282	using	_	_
43-10	3283-3293	predictive	_	_
43-11	3294-3302	variance	_	_
43-12	3303-3312	reduction	_	_
43-13	3312-3313	\]	_	_
43-14	3313-3314	(	_	_
43-15	3314-3318	http	_	_
43-16	3318-3319	:	_	_
43-17	3319-3320	/	_	_
43-18	3320-3321	/	_	_
43-19	3321-3335	papers.nips.cc	_	_
43-20	3335-3336	/	_	_
43-21	3336-3341	paper	_	_
43-22	3341-3342	/	_	_
43-23	3342-3346	4937	_	_
43-24	3346-3347	-	_	_
43-25	3347-3427	accelerating-stochastic-gradient-descent-using-predictive-variance-reduction.pdf	_	_
43-26	3427-3428	)	_	_
43-27	3428-3429	,	_	_
43-28	3429-3430	"	_	_
43-29	3431-3435	NIPS	_	_
43-30	3435-3436	,	_	_
43-31	3437-3441	2013	_	_

#Text=.
44-1	3441-3442	.	_	_

#Text=- SAG (stochastic average gradient)         - N.
45-1	3447-3448	-	_	_
45-2	3449-3452	SAG	_	_
45-3	3453-3454	(	_	_
45-4	3454-3464	stochastic	_	_
45-5	3465-3472	average	*[482]	DATASET[482]
45-6	3473-3481	gradient	*[482]	DATASET[482]
45-7	3481-3482	)	_	_
45-8	3491-3492	-	_	_
45-9	3493-3494	N	_	_
45-10	3494-3495	.	_	_

#Text=L.
46-1	3496-3497	L	_	_
46-2	3497-3498	.	_	_

#Text=Roux, M.
47-1	3499-3503	Roux	_	_
47-2	3503-3504	,	_	_
47-3	3505-3506	M	_	_
47-4	3506-3507	.	_	_

#Text=Schmidt, and F.
48-1	3508-3515	Schmidt	_	_
48-2	3515-3516	,	_	_
48-3	3517-3520	and	_	_
48-4	3521-3522	F	_	_
48-5	3522-3523	.	_	_

#Text=R.
49-1	3524-3525	R	_	_
49-2	3525-3526	.	_	_

#Text=Bach, "\[A stochastic gradient method with an exponential convergence rate for finite training sets\](https://papers.nips.cc/paper/4633-a-stochastic-gradient-method-with-an-exponential-convergence-\_rate-for-finite-training-sets.pdf)," NIPS, 2012
50-1	3527-3531	Bach	_	_
50-2	3531-3532	,	_	_
50-3	3533-3534	"	_	_
50-4	3534-3535	\[	_	_
50-5	3535-3536	A	_	_
50-6	3537-3547	stochastic	_	_
50-7	3548-3556	gradient	_	_
50-8	3557-3563	method	_	_
50-9	3564-3568	with	_	_
50-10	3569-3571	an	_	_
50-11	3572-3583	exponential	_	_
50-12	3584-3595	convergence	_	_
50-13	3596-3600	rate	_	_
50-14	3601-3604	for	_	_
50-15	3605-3611	finite	_	_
50-16	3612-3620	training	_	_
50-17	3621-3625	sets	_	_
50-18	3625-3626	\]	_	_
50-19	3626-3627	(	_	_
50-20	3627-3632	https	_	_
50-21	3632-3633	:	_	_
50-22	3633-3634	/	_	_
50-23	3634-3635	/	_	_
50-24	3635-3649	papers.nips.cc	_	_
50-25	3649-3650	/	_	_
50-26	3650-3655	paper	_	_
50-27	3655-3656	/	_	_
50-28	3656-3660	4633	_	_
50-29	3660-3661	-	_	_
50-30	3661-3721	a-stochastic-gradient-method-with-an-exponential-convergence	_	_
50-31	3721-3722	-	*[504]	PROGLANG[504]
50-32	3722-3723	\_	*[504]	PROGLANG[504]
50-33	3723-3756	rate-for-finite-training-sets.pdf	_	_
50-34	3756-3757	)	_	_
50-35	3757-3758	,	_	_
50-36	3758-3759	"	_	_
50-37	3760-3764	NIPS	_	_
50-38	3764-3765	,	_	_
50-39	3766-3770	2012	_	_

#Text=.
51-1	3770-3771	.	_	_

#Text=- SAGA         - A.
52-1	3776-3777	-	_	_
52-2	3778-3782	SAGA	_	_
52-3	3791-3792	-	_	_
52-4	3793-3794	A	*[483]	DATASET[483]
52-5	3794-3795	.	_	_

#Text=Defazio, F.
53-1	3796-3803	Defazio	_	_
53-2	3803-3804	,	*[489]	CONFERENCE[489]
53-3	3805-3806	F	*[489]	CONFERENCE[489]
53-4	3806-3807	.	_	_

#Text=Bach, and S.
54-1	3808-3812	Bach	_	_
54-2	3812-3813	,	_	_
54-3	3814-3817	and	_	_
54-4	3818-3819	S	_	_
54-5	3819-3820	.	_	_

#Text=Lacoste-Julien, "\[SAGA: A fast incremental gradient method with support for non-strongly convex composite objectives\](https://papers.nips.cc/paper/5258-saga-a-fast-incremental-gradient-method-with-support-for-non-strongly-convex-composite-objectives.pdf),", NIPS, 2014
55-1	3821-3835	Lacoste-Julien	_	_
55-2	3835-3836	,	_	_
55-3	3837-3838	"	_	_
55-4	3838-3839	\[	_	_
55-5	3839-3843	SAGA	_	_
55-6	3843-3844	:	_	_
55-7	3845-3846	A	_	_
55-8	3847-3851	fast	_	_
55-9	3852-3863	incremental	_	_
55-10	3864-3872	gradient	_	_
55-11	3873-3879	method	_	_
55-12	3880-3884	with	_	_
55-13	3885-3892	support	_	_
55-14	3893-3896	for	_	_
55-15	3897-3909	non-strongly	_	_
55-16	3910-3916	convex	_	_
55-17	3917-3926	composite	_	_
55-18	3927-3937	objectives	_	_
55-19	3937-3938	\]	_	_
55-20	3938-3939	(	_	_
55-21	3939-3944	https	_	_
55-22	3944-3945	:	_	_
55-23	3945-3946	/	_	_
55-24	3946-3947	/	_	_
55-25	3947-3961	papers.nips.cc	_	_
55-26	3961-3962	/	_	_
55-27	3962-3967	paper	_	_
55-28	3967-3968	/	_	_
55-29	3968-3972	5258	_	_
55-30	3972-3973	-	_	_
55-31	3973-4074	saga-a-fast-incremental-gradient-method-with-support-for-non-strongly-convex-composite-objectives.pdf	_	_
55-32	4074-4075	)	_	_
55-33	4075-4076	,	_	_
55-34	4076-4077	"	_	_
55-35	4077-4078	,	_	_
55-36	4079-4083	NIPS	_	_
55-37	4083-4084	,	_	_
55-38	4085-4089	2014	_	_

#Text=.
56-1	4089-4090	.	_	_

#Text=- SARAH (StochAstic Recusive gRadient algoritHm)         - L.
57-1	4095-4096	-	_	_
57-2	4097-4102	SARAH	_	_
57-3	4103-4104	(	_	_
57-4	4104-4114	StochAstic	_	_
57-5	4115-4123	Recusive	_	_
57-6	4124-4132	gRadient	_	_
57-7	4133-4142	algoritHm	_	_
57-8	4142-4143	)	_	_
57-9	4152-4153	-	_	_
57-10	4154-4155	L	_	_
57-11	4155-4156	.	_	_

#Text=M.
58-1	4157-4158	M	_	_
58-2	4158-4159	.	_	_

#Text=Nguyen, J.
59-1	4160-4166	Nguyen	_	_
59-2	4166-4167	,	*[505]	PROGLANG[505]
59-3	4168-4169	J	*[505]	PROGLANG[505]
59-4	4169-4170	.	_	_

#Text=Liu, K.
60-1	4171-4174	Liu	_	_
60-2	4174-4175	,	_	_
60-3	4176-4177	K	_	_
60-4	4177-4178	.	_	_

#Text=Scheinberg, and M.
61-1	4179-4189	Scheinberg	_	_
61-2	4189-4190	,	*[523]	LICENSE[523]
61-3	4191-4194	and	*[523]	LICENSE[523]
61-4	4195-4196	M	*[523]	LICENSE[523]
61-5	4196-4197	.	_	_

#Text=Takac, "\[SARAH: A novel method for machine learning problems using stochastic recursive gradient\](https://arxiv.org/abs/1703.00102)," ICML, 2017. - \*\*Quasi-Newton variants\*\*     - SQN (stochastic quasi-Newton)         - R.
62-1	4198-4203	Takac	_	_
62-2	4203-4204	,	_	_
62-3	4205-4206	"	_	_
62-4	4206-4207	\[	_	_
62-5	4207-4212	SARAH	_	_
62-6	4212-4213	:	_	_
62-7	4214-4215	A	_	_
62-8	4216-4221	novel	_	_
62-9	4222-4228	method	_	_
62-10	4229-4232	for	_	_
62-11	4233-4240	machine	_	_
62-12	4241-4249	learning	_	_
62-13	4250-4258	problems	_	_
62-14	4259-4264	using	_	_
62-15	4265-4275	stochastic	_	_
62-16	4276-4285	recursive	_	_
62-17	4286-4294	gradient	_	_
62-18	4294-4295	\]	_	_
62-19	4295-4296	(	_	_
62-20	4296-4301	https	_	_
62-21	4301-4302	:	_	_
62-22	4302-4303	/	_	_
62-23	4303-4304	/	_	_
62-24	4304-4313	arxiv.org	_	_
62-25	4313-4314	/	_	_
62-26	4314-4317	abs	_	_
62-27	4317-4318	/	_	_
62-28	4318-4328	1703.00102	_	_
62-29	4328-4329	)	_	_
62-30	4329-4330	,	_	_
62-31	4330-4331	"	_	_
62-32	4332-4336	ICML	_	_
62-33	4336-4337	,	_	_
62-34	4338-4342	2017	_	_
62-35	4342-4343	.	_	_
62-36	4344-4345	-	_	_
62-37	4346-4347	\*	_	_
62-38	4347-4348	\*	_	_
62-39	4348-4360	Quasi-Newton	_	_
62-40	4361-4369	variants	_	_
62-41	4369-4370	\*	_	_
62-42	4370-4371	\*	_	_
62-43	4376-4377	-	_	_
62-44	4378-4381	SQN	_	_
62-45	4382-4383	(	_	_
62-46	4383-4393	stochastic	_	_
62-47	4394-4406	quasi-Newton	_	_
62-48	4406-4407	)	_	_
62-49	4416-4417	-	_	_
62-50	4418-4419	R	_	_
62-51	4419-4420	.	_	_

#Text=H.
63-1	4421-4422	H	_	_
63-2	4422-4423	.	_	_

#Text=Byrd, ,S.
64-1	4424-4428	Byrd	_	_
64-2	4428-4429	,	_	_
64-3	4430-4431	,	_	_
64-4	4431-4432	S	*[506]	PROGLANG[506]
64-5	4432-4433	.	_	_

#Text=L.
65-1	4434-4435	L	_	_
65-2	4435-4436	.	_	_

#Text=Hansen J.
66-1	4437-4443	Hansen	_	_
66-2	4444-4445	J	_	_
66-3	4445-4446	.	_	_

#Text=Nocedal, and Y.
67-1	4447-4454	Nocedal	_	_
67-2	4454-4455	,	_	_
67-3	4456-4459	and	_	_
67-4	4460-4461	Y	_	_
67-5	4461-4462	.	_	_

#Text=Singer, "\[A stochastic quasi-Newton method  for large-scale optimization\](http://epubs.siam.org/doi/abs/10.1137/140954362?
68-1	4463-4469	Singer	_	_
68-2	4469-4470	,	_	_
68-3	4471-4472	"	_	_
68-4	4472-4473	\[	_	_
68-5	4473-4474	A	_	_
68-6	4475-4485	stochastic	_	_
68-7	4486-4498	quasi-Newton	_	_
68-8	4499-4505	method	_	_
68-9	4507-4510	for	_	_
68-10	4511-4522	large-scale	_	_
68-11	4523-4535	optimization	_	_
68-12	4535-4536	\]	_	_
68-13	4536-4537	(	_	_
68-14	4537-4541	http	_	_
68-15	4541-4542	:	_	_
68-16	4542-4543	/	_	_
68-17	4543-4544	/	_	_
68-18	4544-4558	epubs.siam.org	_	_
68-19	4558-4559	/	_	_
68-20	4559-4562	doi	_	_
68-21	4562-4563	/	_	_
68-22	4563-4566	abs	_	_
68-23	4566-4567	/	_	_
68-24	4567-4574	10.1137	_	_
68-25	4574-4575	/	_	_
68-26	4575-4584	140954362	_	_
68-27	4584-4585	?	_	_

#Text=journalCode=sjope8)," SIAM Journal on Optimization, vol. 26, Issue 2, pp. 1008-1031, 2016
69-1	4585-4596	journalCode	_	_
69-2	4596-4597	=	_	_
69-3	4597-4603	sjope8	_	_
69-4	4603-4604	)	_	_
69-5	4604-4605	,	_	_
69-6	4605-4606	"	_	_
69-7	4607-4611	SIAM	_	_
69-8	4612-4619	Journal	_	_
69-9	4620-4622	on	_	_
69-10	4623-4635	Optimization	_	_
69-11	4635-4636	,	_	_
69-12	4637-4640	vol	_	_
69-13	4640-4641	.	_	_
69-14	4642-4644	26	_	_
69-15	4644-4645	,	_	_
69-16	4646-4651	Issue	_	_
69-17	4652-4653	2	_	_
69-18	4653-4654	,	_	_
69-19	4655-4657	pp	_	_
69-20	4657-4658	.	_	_
69-21	4659-4663	1008	_	_
69-22	4663-4664	-	_	_
69-23	4664-4668	1031	_	_
69-24	4668-4669	,	_	_
69-25	4670-4674	2016	_	_

#Text=.
70-1	4674-4675	.	_	_

#Text=- SVRG-SQN (denoted as "Stochastic L-BFGS" or "slbfgs" in the paper below
71-1	4680-4681	-	_	_
71-2	4682-4690	SVRG-SQN	_	_
71-3	4691-4692	(	_	_
71-4	4692-4699	denoted	_	_
71-5	4700-4702	as	_	_
71-6	4703-4704	"	_	_
71-7	4704-4714	Stochastic	_	_
71-8	4715-4721	L-BFGS	_	_
71-9	4721-4722	"	_	_
71-10	4723-4725	or	_	_
71-11	4726-4727	"	_	_
71-12	4727-4733	slbfgs	_	_
71-13	4733-4734	"	_	_
71-14	4735-4737	in	_	_
71-15	4738-4741	the	_	_
71-16	4742-4747	paper	_	_
71-17	4748-4753	below	_	_

#Text=.
72-1	4753-4754	.	_	_

#Text=)         - P.
73-1	4754-4755	)	_	_
73-2	4764-4765	-	_	_
73-3	4766-4767	P	_	_
73-4	4767-4768	.	_	_

#Text=Moritz, R.
74-1	4769-4775	Moritz	_	_
74-2	4775-4776	,	_	_
74-3	4777-4778	R	_	_
74-4	4778-4779	.	_	_

#Text=Nishihara and M.
75-1	4780-4789	Nishihara	_	_
75-2	4790-4793	and	_	_
75-3	4794-4795	M	_	_
75-4	4795-4796	.	_	_

#Text=I.
76-1	4797-4798	I	_	_
76-2	4798-4799	.	_	_

#Text=Jordan, "\[A linearly-convergent stochastic L-BFGS Algorithm\](http://www.jmlr.org/proceedings/papers/v51/moritz16.html)," International Conference on Artificial Intelligence and Statistics (AISTATS), pp.249-258, 2016
77-1	4800-4806	Jordan	_	_
77-2	4806-4807	,	_	_
77-3	4808-4809	"	_	_
77-4	4809-4810	\[	_	_
77-5	4810-4811	A	_	_
77-6	4812-4831	linearly-convergent	_	_
77-7	4832-4842	stochastic	_	_
77-8	4843-4849	L-BFGS	_	_
77-9	4850-4859	Algorithm	_	_
77-10	4859-4860	\]	_	_
77-11	4860-4861	(	_	_
77-12	4861-4865	http	_	_
77-13	4865-4866	:	_	_
77-14	4866-4867	/	_	_
77-15	4867-4868	/	_	_
77-16	4868-4880	www.jmlr.org	_	_
77-17	4880-4881	/	_	_
77-18	4881-4892	proceedings	_	_
77-19	4892-4893	/	_	_
77-20	4893-4899	papers	_	_
77-21	4899-4900	/	_	_
77-22	4900-4903	v51	_	_
77-23	4903-4904	/	_	_
77-24	4904-4912	moritz16	_	_
77-25	4912-4913	.	_	_
77-26	4913-4917	html	_	_
77-27	4917-4918	)	_	_
77-28	4918-4919	,	_	_
77-29	4919-4920	"	_	_
77-30	4921-4934	International	_	_
77-31	4935-4945	Conference	_	_
77-32	4946-4948	on	*[486]	PROJECT[486]
77-33	4949-4959	Artificial	*[486]	PROJECT[486]
77-34	4960-4972	Intelligence	_	_
77-35	4973-4976	and	_	_
77-36	4977-4987	Statistics	_	_
77-37	4988-4989	(	_	_
77-38	4989-4996	AISTATS	_	_
77-39	4996-4997	)	_	_
77-40	4997-4998	,	_	_
77-41	4999-5001	pp	_	_
77-42	5001-5005	.249	_	_
77-43	5005-5006	-	_	_
77-44	5006-5009	258	_	_
77-45	5009-5010	,	_	_
77-46	5011-5015	2016	_	_

#Text=.
78-1	5015-5016	.	_	_

#Text=- SVRG-LBFGS (denoted as "SVRG+II: LBFGS" in the paper below
79-1	5021-5022	-	_	_
79-2	5023-5033	SVRG-LBFGS	_	_
79-3	5034-5035	(	*[490]	CONFERENCE[490]
79-4	5035-5042	denoted	*[490]	CONFERENCE[490]
79-5	5043-5045	as	*[490]	CONFERENCE[490]
79-6	5046-5047	"	*[490]	CONFERENCE[490]
79-7	5047-5051	SVRG	*[490]	CONFERENCE[490]
79-8	5051-5052	+	*[490]	CONFERENCE[490]
79-9	5052-5054	II	*[490]	CONFERENCE[490]
79-10	5054-5055	:	*[490]	CONFERENCE[490]
79-11	5056-5061	LBFGS	*[490]	CONFERENCE[490]
79-12	5061-5062	"	*[490]	CONFERENCE[490]
79-13	5063-5065	in	*[490]	CONFERENCE[490]
79-14	5066-5069	the	*[490]	CONFERENCE[490]
79-15	5070-5075	paper	_	_
79-16	5076-5081	below	_	_

#Text=.
80-1	5081-5082	.	_	_

#Text=)         - R.
81-1	5082-5083	)	_	_
81-2	5092-5093	-	_	_
81-3	5094-5095	R	_	_
81-4	5095-5096	.	_	_

#Text=Kolte, M.
82-1	5097-5102	Kolte	_	_
82-2	5102-5103	,	*[507]	PROGLANG[507]
82-3	5104-5105	M	_	_
82-4	5105-5106	.	_	_

#Text=Erdogdu and A.
83-1	5107-5114	Erdogdu	_	_
83-2	5115-5118	and	_	_
83-3	5119-5120	A	_	_
83-4	5120-5121	.	_	_

#Text=Ozgur, "\[Accelerating SVRG via second-order information\](http://www.opt-ml.org/papers/OPT2015\_paper\_41.pdf)," OPT2015, 2015
84-1	5122-5127	Ozgur	_	_
84-2	5127-5128	,	_	_
84-3	5129-5130	"	_	_
84-4	5130-5131	\[	_	_
84-5	5131-5143	Accelerating	_	_
84-6	5144-5148	SVRG	_	_
84-7	5149-5152	via	_	_
84-8	5153-5165	second-order	_	_
84-9	5166-5177	information	_	_
84-10	5177-5178	\]	_	_
84-11	5178-5179	(	_	_
84-12	5179-5183	http	_	_
84-13	5183-5184	:	_	_
84-14	5184-5185	/	_	_
84-15	5185-5186	/	_	_
84-16	5186-5200	www.opt-ml.org	_	_
84-17	5200-5201	/	_	_
84-18	5201-5207	papers	_	_
84-19	5207-5208	/	_	_
84-20	5208-5215	OPT2015	_	_
84-21	5215-5216	\_	_	_
84-22	5216-5221	paper	_	_
84-23	5221-5222	\_	_	_
84-24	5222-5224	41	_	_
84-25	5224-5225	.	_	_
84-26	5225-5228	pdf	_	_
84-27	5228-5229	)	*[485]	DATASET[485]
84-28	5229-5230	,	*[485]	DATASET[485]
84-29	5230-5231	"	_	_
84-30	5232-5239	OPT2015	_	_
84-31	5239-5240	,	_	_
84-32	5241-5245	2015	_	_

#Text=.
85-1	5245-5246	.	_	_

#Text=- SS-SVRG (denoted as "SVRG+I: Subsampled Hessian followed by SVT" in the paper below
86-1	5251-5252	-	_	_
86-2	5253-5260	SS-SVRG	_	_
86-3	5261-5262	(	*[536]	EVALMETRIC[536]
86-4	5262-5269	denoted	*[536]	EVALMETRIC[536]
86-5	5270-5272	as	*[536]	EVALMETRIC[536]
86-6	5273-5274	"	*[536]	EVALMETRIC[536]
86-7	5274-5278	SVRG	*[536]	EVALMETRIC[536]
86-8	5278-5279	+	*[536]	EVALMETRIC[536]
86-9	5279-5280	I	*[536]	EVALMETRIC[536]
86-10	5280-5281	:	*[536]	EVALMETRIC[536]
86-11	5282-5292	Subsampled	*[536]	EVALMETRIC[536]
86-12	5293-5300	Hessian	_	_
86-13	5301-5309	followed	_	_
86-14	5310-5312	by	_	_
86-15	5313-5316	SVT	_	_
86-16	5316-5317	"	_	_
86-17	5318-5320	in	_	_
86-18	5321-5324	the	_	_
86-19	5325-5330	paper	_	_
86-20	5331-5336	below	_	_

#Text=.
87-1	5336-5337	.	_	_

#Text=)         - R.
88-1	5337-5338	)	_	_
88-2	5347-5348	-	_	_
88-3	5349-5350	R	_	_
88-4	5350-5351	.	_	_

#Text=Kolte, M.
89-1	5352-5357	Kolte	_	_
89-2	5357-5358	,	_	_
89-3	5359-5360	M	_	_
89-4	5360-5361	.	_	_

#Text=Erdogdu and A.
90-1	5362-5369	Erdogdu	_	_
90-2	5370-5373	and	_	_
90-3	5374-5375	A	_	_
90-4	5375-5376	.	_	_

#Text=Ozgur, "\[Accelerating SVRG via second-order information\](http://www.opt-ml.org/papers/OPT2015\_paper\_41.pdf)," OPT2015, 2015
91-1	5377-5382	Ozgur	_	_
91-2	5382-5383	,	_	_
91-3	5384-5385	"	_	_
91-4	5385-5386	\[	_	_
91-5	5386-5398	Accelerating	_	_
91-6	5399-5403	SVRG	_	_
91-7	5404-5407	via	_	_
91-8	5408-5420	second-order	_	_
91-9	5421-5432	information	*[479]	WORKSHOP[479]
91-10	5432-5433	\]	*[479]	WORKSHOP[479]
91-11	5433-5434	(	*[479]	WORKSHOP[479]
91-12	5434-5438	http	*[479]	WORKSHOP[479]
91-13	5438-5439	:	*[479]	WORKSHOP[479]
91-14	5439-5440	/	*[479]	WORKSHOP[479]
91-15	5440-5441	/	*[479]	WORKSHOP[479]
91-16	5441-5455	www.opt-ml.org	*[479]	WORKSHOP[479]
91-17	5455-5456	/	*[479]	WORKSHOP[479]
91-18	5456-5462	papers	_	_
91-19	5462-5463	/	_	_
91-20	5463-5470	OPT2015	_	_
91-21	5470-5471	\_	_	_
91-22	5471-5476	paper	_	_
91-23	5476-5477	\_	_	_
91-24	5477-5479	41	_	_
91-25	5479-5480	.	_	_
91-26	5480-5483	pdf	_	_
91-27	5483-5484	)	_	_
91-28	5484-5485	,	_	_
91-29	5485-5486	"	_	_
91-30	5487-5494	OPT2015	_	_
91-31	5494-5495	,	_	_
91-32	5496-5500	2015	_	_

#Text=.
92-1	5500-5501	.	_	_

#Text=- oBFGS-Inf (Online BFGS, Infinite memory)         - N.
93-1	5507-5508	-	_	_
93-2	5509-5518	oBFGS-Inf	_	_
93-3	5519-5520	(	_	_
93-4	5520-5526	Online	_	_
93-5	5527-5531	BFGS	_	_
93-6	5531-5532	,	_	_
93-7	5533-5541	Infinite	_	_
93-8	5542-5548	memory	_	_
93-9	5548-5549	)	_	_
93-10	5558-5559	-	_	_
93-11	5560-5561	N	*[508]	PROGLANG[508]
93-12	5561-5562	.	_	_

#Text=N.
94-1	5563-5564	N	_	_
94-2	5564-5565	.	_	_

#Text=Schraudolph, J.
95-1	5566-5577	Schraudolph	_	_
95-2	5577-5578	,	_	_
95-3	5579-5580	J	_	_
95-4	5580-5581	.	_	_

#Text=Yu and Simon Gunter, "\[A stochastic quasi-Newton method for online convex optimization \](http://www.jmlr.org/proceedings/papers/v2/schraudolph07a/schraudolph07a.pdf),"  International Conference on Artificial Intelligence and Statistics (AISTATS), pp.436-443, Journal of Machine Learning Research, 2007
96-1	5582-5584	Yu	_	_
96-2	5585-5588	and	_	_
96-3	5589-5594	Simon	_	_
96-4	5595-5601	Gunter	_	_
96-5	5601-5602	,	_	_
96-6	5603-5604	"	_	_
96-7	5604-5605	\[	_	_
96-8	5605-5606	A	_	_
96-9	5607-5617	stochastic	_	_
96-10	5618-5630	quasi-Newton	_	_
96-11	5631-5637	method	_	_
96-12	5638-5641	for	_	_
96-13	5642-5648	online	_	_
96-14	5649-5655	convex	_	_
96-15	5656-5668	optimization	_	_
96-16	5669-5670	\]	_	_
96-17	5670-5671	(	_	_
96-18	5671-5675	http	_	_
96-19	5675-5676	:	_	_
96-20	5676-5677	/	_	_
96-21	5677-5678	/	_	_
96-22	5678-5690	www.jmlr.org	_	_
96-23	5690-5691	/	*[533]	SOFTWARE[533]
96-24	5691-5702	proceedings	*[533]	SOFTWARE[533]
96-25	5702-5703	/	*[533]	SOFTWARE[533]
96-26	5703-5709	papers	*[533]	SOFTWARE[533]
96-27	5709-5710	/	*[533]	SOFTWARE[533]
96-28	5710-5712	v2	*[533]	SOFTWARE[533]
96-29	5712-5713	/	*[533]	SOFTWARE[533]
96-30	5713-5727	schraudolph07a	*[533]	SOFTWARE[533]
96-31	5727-5728	/	*[533]	SOFTWARE[533]
96-32	5728-5746	schraudolph07a.pdf	_	_
96-33	5746-5747	)	_	_
96-34	5747-5748	,	_	_
96-35	5748-5749	"	_	_
96-36	5751-5764	International	_	_
96-37	5765-5775	Conference	_	_
96-38	5776-5778	on	_	_
96-39	5779-5789	Artificial	_	_
96-40	5790-5802	Intelligence	_	_
96-41	5803-5806	and	_	_
96-42	5807-5817	Statistics	_	_
96-43	5818-5819	(	_	_
96-44	5819-5826	AISTATS	_	_
96-45	5826-5827	)	_	_
96-46	5827-5828	,	_	_
96-47	5829-5831	pp	_	_
96-48	5831-5835	.436	_	_
96-49	5835-5836	-	_	_
96-50	5836-5839	443	_	_
96-51	5839-5840	,	_	_
96-52	5841-5848	Journal	_	_
96-53	5849-5851	of	_	_
96-54	5852-5859	Machine	_	_
96-55	5860-5868	Learning	_	_
96-56	5869-5877	Research	_	_
96-57	5877-5878	,	_	_
96-58	5879-5883	2007	_	_

#Text=.
97-1	5883-5884	.	_	_

#Text=- oLBFGS-Lim (Online BFGS, Limited memory)         - N.
98-1	5889-5890	-	_	_
98-2	5891-5901	oLBFGS-Lim	_	_
98-3	5902-5903	(	_	_
98-4	5903-5909	Online	_	_
98-5	5910-5914	BFGS	*[491]	CONFERENCE[491]
98-6	5914-5915	,	*[491]	CONFERENCE[491]
98-7	5916-5923	Limited	_	_
98-8	5924-5930	memory	_	_
98-9	5930-5931	)	_	_
98-10	5940-5941	-	_	_
98-11	5942-5943	N	_	_
98-12	5943-5944	.	_	_

#Text=N.
99-1	5945-5946	N	_	_
99-2	5946-5947	.	_	_

#Text=Schraudolph, J.
100-1	5948-5959	Schraudolph	_	_
100-2	5959-5960	,	*[472]	ONTOLOGY[472]
100-3	5961-5962	J	*[472]	ONTOLOGY[472]
100-4	5962-5963	.	_	_

#Text=Yu and S.
101-1	5964-5966	Yu	_	_
101-2	5967-5970	and	_	_
101-3	5971-5972	S	_	_
101-4	5972-5973	.	_	_

#Text=Gunter, "\[A stochastic quasi-Newton method for online convex optimization \](http://www.jmlr.org/proceedings/papers/v2/schraudolph07a/schraudolph07a.pdf),"  International Conference on Artificial Intelligence and Statistics (AISTATS), pp.436-443, Journal of Machine Learning Research, 2007
102-1	5974-5980	Gunter	_	_
102-2	5980-5981	,	_	_
102-3	5982-5983	"	_	_
102-4	5983-5984	\[	_	_
102-5	5984-5985	A	_	_
102-6	5986-5996	stochastic	_	_
102-7	5997-6009	quasi-Newton	_	_
102-8	6010-6016	method	_	_
102-9	6017-6020	for	_	_
102-10	6021-6027	online	_	_
102-11	6028-6034	convex	_	_
102-12	6035-6047	optimization	_	_
102-13	6048-6049	\]	_	_
102-14	6049-6050	(	_	_
102-15	6050-6054	http	_	_
102-16	6054-6055	:	_	_
102-17	6055-6056	/	_	_
102-18	6056-6057	/	_	_
102-19	6057-6069	www.jmlr.org	_	_
102-20	6069-6070	/	_	_
102-21	6070-6081	proceedings	_	_
102-22	6081-6082	/	_	_
102-23	6082-6088	papers	_	_
102-24	6088-6089	/	_	_
102-25	6089-6091	v2	_	_
102-26	6091-6092	/	*[509]	PROGLANG[509]
102-27	6092-6106	schraudolph07a	*[509]	PROGLANG[509]
102-28	6106-6107	/	*[509]	PROGLANG[509]
102-29	6107-6125	schraudolph07a.pdf	*[509]	PROGLANG[509]
102-30	6125-6126	)	*[509]	PROGLANG[509]
102-31	6126-6127	,	*[509]	PROGLANG[509]
102-32	6127-6128	"	*[509]	PROGLANG[509]
102-33	6130-6143	International	*[509]	PROGLANG[509]
102-34	6144-6154	Conference	*[509]	PROGLANG[509]
102-35	6155-6157	on	*[509]	PROGLANG[509]
102-36	6158-6168	Artificial	*[509]	PROGLANG[509]
102-37	6169-6181	Intelligence	*[509]	PROGLANG[509]
102-38	6182-6185	and	*[509]	PROGLANG[509]
102-39	6186-6196	Statistics	*[509]	PROGLANG[509]
102-40	6197-6198	(	*[509]	PROGLANG[509]
102-41	6198-6205	AISTATS	*[509]	PROGLANG[509]
102-42	6205-6206	)	*[509]	PROGLANG[509]
102-43	6206-6207	,	*[509]	PROGLANG[509]
102-44	6208-6210	pp	*[509]	PROGLANG[509]
102-45	6210-6214	.436	*[509]	PROGLANG[509]
102-46	6214-6215	-	*[509]	PROGLANG[509]
102-47	6215-6218	443	*[509]	PROGLANG[509]
102-48	6218-6219	,	*[509]	PROGLANG[509]
102-49	6220-6227	Journal	*[509]	PROGLANG[509]
102-50	6228-6230	of	*[509]	PROGLANG[509]
102-51	6231-6238	Machine	_	_
102-52	6239-6247	Learning	_	_
102-53	6248-6256	Research	_	_
102-54	6256-6257	,	_	_
102-55	6258-6262	2007	_	_

#Text=.
103-1	6262-6263	.	_	_

#Text=- A.
104-1	6273-6274	-	_	_
104-2	6275-6276	A	_	_
104-3	6276-6277	.	_	_

#Text=Mokhtari and A.
105-1	6278-6286	Mokhtari	_	_
105-2	6287-6290	and	_	_
105-3	6291-6292	A	_	_
105-4	6292-6293	.	_	_

#Text=Ribeiro, "\[Global convergence of online limited memory BFGS\](www.jmlr.org/papers/volume16/mokhtari15a/mokhtari15a.pdf )," Journal of Machine Learning Research, 16, pp. 3151-3181, 2015
106-1	6294-6301	Ribeiro	_	_
106-2	6301-6302	,	_	_
106-3	6303-6304	"	_	_
106-4	6304-6305	\[	_	_
106-5	6305-6311	Global	_	_
106-6	6312-6323	convergence	_	_
106-7	6324-6326	of	_	_
106-8	6327-6333	online	_	_
106-9	6334-6341	limited	_	_
106-10	6342-6348	memory	_	_
106-11	6349-6353	BFGS	_	_
106-12	6353-6354	\]	_	_
106-13	6354-6355	(	_	_
106-14	6355-6367	www.jmlr.org	_	_
106-15	6367-6368	/	_	_
106-16	6368-6374	papers	_	_
106-17	6374-6375	/	_	_
106-18	6375-6383	volume16	_	_
106-19	6383-6384	/	_	_
106-20	6384-6395	mokhtari15a	_	_
106-21	6395-6396	/	_	_
106-22	6396-6411	mokhtari15a.pdf	_	_
106-23	6412-6413	)	_	_
106-24	6413-6414	,	_	_
106-25	6414-6415	"	_	_
106-26	6416-6423	Journal	_	_
106-27	6424-6426	of	_	_
106-28	6427-6434	Machine	_	_
106-29	6435-6443	Learning	_	_
106-30	6444-6452	Research	_	_
106-31	6452-6453	,	*[460]	PUBLICATION[460]
106-32	6454-6456	16	*[460]	PUBLICATION[460]
106-33	6456-6457	,	*[460]	PUBLICATION[460]
106-34	6458-6460	pp	*[460]	PUBLICATION[460]
106-35	6460-6461	.	*[460]	PUBLICATION[460]
106-36	6462-6466	3151	*[460]	PUBLICATION[460]
106-37	6466-6467	-	*[460]	PUBLICATION[460]
106-38	6467-6471	3181	*[460]	PUBLICATION[460]
106-39	6471-6472	,	*[460]	PUBLICATION[460]
106-40	6473-6477	2015	_	_

#Text=.
107-1	6477-6478	.	_	_

#Text=- Reg-oBFGS-Inf (Regularized oBFGS, Infinite memory) (denoted as "RES" in the paper below
108-1	6483-6484	-	_	_
108-2	6485-6498	Reg-oBFGS-Inf	_	_
108-3	6499-6500	(	_	_
108-4	6500-6511	Regularized	_	_
108-5	6512-6517	oBFGS	*[510]	PROGLANG[510]
108-6	6517-6518	,	*[510]	PROGLANG[510]
108-7	6519-6527	Infinite	*[510]	PROGLANG[510]
108-8	6528-6534	memory	*[510]	PROGLANG[510]
108-9	6534-6535	)	*[510]	PROGLANG[510]
108-10	6536-6537	(	*[510]	PROGLANG[510]
108-11	6537-6544	denoted	*[510]	PROGLANG[510]
108-12	6545-6547	as	*[510]	PROGLANG[510]
108-13	6548-6549	"	*[510]	PROGLANG[510]
108-14	6549-6552	RES	*[510]	PROGLANG[510]
108-15	6552-6553	"	*[510]	PROGLANG[510]
108-16	6554-6556	in	_	_
108-17	6557-6560	the	_	_
108-18	6561-6566	paper	_	_
108-19	6567-6572	below	_	_

#Text=.
109-1	6572-6573	.	_	_

#Text=)         - A.
110-1	6573-6574	)	_	_
110-2	6583-6584	-	_	_
110-3	6585-6586	A	_	_
110-4	6586-6587	.	_	_

#Text=Mokhtari and A.
111-1	6588-6596	Mokhtari	_	_
111-2	6597-6600	and	_	_
111-3	6601-6602	A	_	_
111-4	6602-6603	.	_	_

#Text=Ribeiro, "\[RES: Regularized stochastic BFGS algorithm\](http://ieeexplore.ieee.org/document/6899692/)," IEEE Transactions on Signal Processing, vol. 62, no. 23, pp. 6089-6104, Dec., 2014
112-1	6604-6611	Ribeiro	_	_
112-2	6611-6612	,	_	_
112-3	6613-6614	"	_	_
112-4	6614-6615	\[	_	_
112-5	6615-6618	RES	_	_
112-6	6618-6619	:	_	_
112-7	6620-6631	Regularized	_	_
112-8	6632-6642	stochastic	_	_
112-9	6643-6647	BFGS	_	_
112-10	6648-6657	algorithm	_	_
112-11	6657-6658	\]	_	_
112-12	6658-6659	(	_	_
112-13	6659-6663	http	_	_
112-14	6663-6664	:	_	_
112-15	6664-6665	/	_	_
112-16	6665-6666	/	_	_
112-17	6666-6685	ieeexplore.ieee.org	_	_
112-18	6685-6686	/	_	_
112-19	6686-6694	document	_	_
112-20	6694-6695	/	*[537]	EVALMETRIC[537]
112-21	6695-6702	6899692	*[537]	EVALMETRIC[537]
112-22	6702-6703	/	*[537]	EVALMETRIC[537]
112-23	6703-6704	)	*[537]	EVALMETRIC[537]
112-24	6704-6705	,	*[537]	EVALMETRIC[537]
112-25	6705-6706	"	*[537]	EVALMETRIC[537]
112-26	6707-6711	IEEE	*[537]	EVALMETRIC[537]
112-27	6712-6724	Transactions	*[537]	EVALMETRIC[537]
112-28	6725-6727	on	*[537]	EVALMETRIC[537]
112-29	6728-6734	Signal	*[537]	EVALMETRIC[537]
112-30	6735-6745	Processing	*[537]	EVALMETRIC[537]
112-31	6745-6746	,	*[537]	EVALMETRIC[537]
112-32	6747-6750	vol	*[537]	EVALMETRIC[537]
112-33	6750-6751	.	*[537]	EVALMETRIC[537]
112-34	6752-6754	62	*[537]	EVALMETRIC[537]
112-35	6754-6755	,	_	_
112-36	6756-6758	no	_	_
112-37	6758-6759	.	_	_
112-38	6760-6762	23	_	_
112-39	6762-6763	,	_	_
112-40	6764-6766	pp	_	_
112-41	6766-6767	.	_	_
112-42	6768-6772	6089	_	_
112-43	6772-6773	-	_	_
112-44	6773-6777	6104	_	_
112-45	6777-6778	,	_	_
112-46	6779-6782	Dec	_	_
112-47	6782-6783	.	_	_
112-48	6783-6784	,	_	_
112-49	6785-6789	2014	_	_

#Text=.
113-1	6789-6790	.	_	_

#Text=- Damp-oBFGS-Inf (Regularized damped oBFGS, Infinite memory) (denoted as "SDBFGS" in the paper below
114-1	6795-6796	-	_	_
114-2	6797-6811	Damp-oBFGS-Inf	_	_
114-3	6812-6813	(	_	_
114-4	6813-6824	Regularized	_	_
114-5	6825-6831	damped	_	_
114-6	6832-6837	oBFGS	_	_
114-7	6837-6838	,	_	_
114-8	6839-6847	Infinite	_	_
114-9	6848-6854	memory	_	_
114-10	6854-6855	)	_	_
114-11	6856-6857	(	_	_
114-12	6857-6864	denoted	_	_
114-13	6865-6867	as	_	_
114-14	6868-6869	"	_	_
114-15	6869-6875	SDBFGS	_	_
114-16	6875-6876	"	_	_
114-17	6877-6879	in	_	_
114-18	6880-6883	the	_	_
114-19	6884-6889	paper	_	_
114-20	6890-6895	below	_	_

#Text=.
115-1	6895-6896	.	_	_

#Text=)         - X.
116-1	6896-6897	)	_	_
116-2	6906-6907	-	_	_
116-3	6908-6909	X	*[538]	EVALMETRIC[538]
116-4	6909-6910	.	_	_

#Text=Wang, S.
117-1	6911-6915	Wang	_	_
117-2	6915-6916	,	_	_
117-3	6917-6918	S	_	_
117-4	6918-6919	.	_	_

#Text=Ma, D.
118-1	6920-6922	Ma	_	_
118-2	6922-6923	,	_	_
118-3	6924-6925	D	*[524]	LICENSE[524]
118-4	6925-6926	.	_	_

#Text=Goldfarb and W.
119-1	6927-6935	Goldfarb	_	_
119-2	6936-6939	and	_	_
119-3	6940-6941	W	_	_
119-4	6941-6942	.	_	_

#Text=Liu, "\[Stochastic quasi-Newton methods for nonconvex stochastic  optimization\](https://arxiv.org/pdf/1607.01231v3.pdf)," arXiv preprint arXiv:1607.01231, 2016
120-1	6943-6946	Liu	_	_
120-2	6946-6947	,	_	_
120-3	6948-6949	"	_	_
120-4	6949-6950	\[	_	_
120-5	6950-6960	Stochastic	_	_
120-6	6961-6973	quasi-Newton	_	_
120-7	6974-6981	methods	_	_
120-8	6982-6985	for	_	_
120-9	6986-6995	nonconvex	_	_
120-10	6996-7006	stochastic	_	_
120-11	7008-7020	optimization	_	_
120-12	7020-7021	\]	_	_
120-13	7021-7022	(	_	_
120-14	7022-7027	https	_	_
120-15	7027-7028	:	_	_
120-16	7028-7029	/	_	_
120-17	7029-7030	/	*[461]	PUBLICATION[461]
120-18	7030-7039	arxiv.org	*[461]	PUBLICATION[461]
120-19	7039-7040	/	*[461]	PUBLICATION[461]
120-20	7040-7043	pdf	*[461]	PUBLICATION[461]
120-21	7043-7044	/	*[461]	PUBLICATION[461]
120-22	7044-7056	1607.01231v3	*[461]	PUBLICATION[461]
120-23	7056-7057	.	*[461]	PUBLICATION[461]
120-24	7057-7060	pdf	*[461]	PUBLICATION[461]
120-25	7060-7061	)	*[461]	PUBLICATION[461]
120-26	7061-7062	,	*[461]	PUBLICATION[461]
120-27	7062-7063	"	*[461]	PUBLICATION[461]
120-28	7064-7069	arXiv	*[461]	PUBLICATION[461]
120-29	7070-7078	preprint	*[461]	PUBLICATION[461]
120-30	7079-7084	arXiv	*[461]	PUBLICATION[461]
120-31	7084-7085	:	*[461]	PUBLICATION[461]
120-32	7085-7095	1607.01231	_	_
120-33	7095-7096	,	_	_
120-34	7097-7101	2016	_	_

#Text=.
121-1	7101-7102	.	_	_

#Text=- IQN (incremental Quasi-Newton method)         - A.
122-1	7107-7108	-	_	_
122-2	7109-7112	IQN	_	_
122-3	7113-7114	(	_	_
122-4	7114-7125	incremental	_	_
122-5	7126-7138	Quasi-Newton	_	_
122-6	7139-7145	method	*[539]	EVALMETRIC[539]
122-7	7145-7146	)	*[539]	EVALMETRIC[539]
122-8	7155-7156	-	*[539]	EVALMETRIC[539]
122-9	7157-7158	A	*[539]	EVALMETRIC[539]
122-10	7158-7159	.	_	_

#Text=Mokhtari, M.
123-1	7160-7168	Mokhtari	_	_
123-2	7168-7169	,	_	_
123-3	7170-7171	M	_	_
123-4	7171-7172	.	_	_

#Text=Eisen and A.
124-1	7173-7178	Eisen	_	_
124-2	7179-7182	and	_	_
124-3	7183-7184	A	*[473]	ONTOLOGY[473]
124-4	7184-7185	.	_	_

#Text=Ribeiro, "\[An Incremental Quasi-Newton Method with a Local Superlinear Convergence Rate\](https://arxiv.org/abs/1702.00709)," ICASSP2017, 2017. - \*\*Inexact Hessian variants\*\*     - SCR (Sub-sampled Cubic Regularization)         - J.
125-1	7186-7193	Ribeiro	_	_
125-2	7193-7194	,	_	_
125-3	7195-7196	"	_	_
125-4	7196-7197	\[	_	_
125-5	7197-7199	An	_	_
125-6	7200-7211	Incremental	_	_
125-7	7212-7224	Quasi-Newton	_	_
125-8	7225-7231	Method	_	_
125-9	7232-7236	with	_	_
125-10	7237-7238	a	_	_
125-11	7239-7244	Local	_	_
125-12	7245-7256	Superlinear	_	_
125-13	7257-7268	Convergence	_	_
125-14	7269-7273	Rate	_	_
125-15	7273-7274	\]	_	_
125-16	7274-7275	(	_	_
125-17	7275-7280	https	_	_
125-18	7280-7281	:	_	_
125-19	7281-7282	/	_	_
125-20	7282-7283	/	_	_
125-21	7283-7292	arxiv.org	_	_
125-22	7292-7293	/	_	_
125-23	7293-7296	abs	_	_
125-24	7296-7297	/	_	_
125-25	7297-7307	1702.00709	_	_
125-26	7307-7308	)	_	_
125-27	7308-7309	,	_	_
125-28	7309-7310	"	_	_
125-29	7311-7321	ICASSP2017	_	_
125-30	7321-7322	,	_	_
125-31	7323-7327	2017	_	_
125-32	7327-7328	.	_	_
125-33	7329-7330	-	_	_
125-34	7331-7332	\*	_	_
125-35	7332-7333	\*	_	_
125-36	7333-7340	Inexact	_	_
125-37	7341-7348	Hessian	_	_
125-38	7349-7357	variants	_	_
125-39	7357-7358	\*	*[462]	PUBLICATION[462]
125-40	7358-7359	\*	*[462]	PUBLICATION[462]
125-41	7364-7365	-	*[462]	PUBLICATION[462]
125-42	7366-7369	SCR	*[462]	PUBLICATION[462]
125-43	7370-7371	(	*[462]	PUBLICATION[462]
125-44	7371-7382	Sub-sampled	*[462]	PUBLICATION[462]
125-45	7383-7388	Cubic	*[462]	PUBLICATION[462]
125-46	7389-7403	Regularization	_	_
125-47	7403-7404	)	_	_
125-48	7413-7414	-	_	_
125-49	7415-7416	J	_	_
125-50	7416-7417	.	_	_

#Text=M.
126-1	7418-7419	M	_	_
126-2	7419-7420	.	_	_

#Text=Kohler and A.
127-1	7421-7427	Kohler	_	_
127-2	7428-7431	and	_	_
127-3	7432-7433	A	_	_
127-4	7433-7434	.	_	_

#Text=Lucchi, "\[Sub-sampled Cubic Regularization for non-convex optimization\](http://proceedings.mlr.press/v70/kohler17a.html)," ICML, 2017
128-1	7435-7441	Lucchi	_	_
128-2	7441-7442	,	_	_
128-3	7443-7444	"	_	_
128-4	7444-7445	\[	_	_
128-5	7445-7456	Sub-sampled	_	_
128-6	7457-7462	Cubic	_	_
128-7	7463-7477	Regularization	_	_
128-8	7478-7481	for	_	_
128-9	7482-7492	non-convex	_	_
128-10	7493-7505	optimization	_	_
128-11	7505-7506	\]	_	_
128-12	7506-7507	(	_	_
128-13	7507-7511	http	_	_
128-14	7511-7512	:	_	_
128-15	7512-7513	/	_	_
128-16	7513-7514	/	_	_
128-17	7514-7535	proceedings.mlr.press	_	_
128-18	7535-7536	/	_	_
128-19	7536-7539	v70	_	_
128-20	7539-7540	/	_	_
128-21	7540-7554	kohler17a.html	_	_
128-22	7554-7555	)	_	_
128-23	7555-7556	,	_	_
128-24	7556-7557	"	_	_
128-25	7558-7562	ICML	_	_
128-26	7562-7563	,	_	_
128-27	7564-7568	2017	_	_

#Text=.
129-1	7568-7569	.	_	_

#Text=- Sub-sampled TR (trust region)         - A.
130-1	7574-7575	-	_	_
130-2	7576-7587	Sub-sampled	_	_
130-3	7588-7590	TR	*[480]	WORKSHOP[480]
130-4	7591-7592	(	*[480]	WORKSHOP[480]
130-5	7592-7597	trust	_	_
130-6	7598-7604	region	_	_
130-7	7604-7605	)	_	_
130-8	7614-7615	-	_	_
130-9	7616-7617	A	_	_
130-10	7617-7618	.	_	_

#Text=R.
131-1	7619-7620	R	_	_
131-2	7620-7621	.	_	_

#Text=Conn, N.
132-1	7622-7626	Conn	_	_
132-2	7626-7627	,	_	_
132-3	7628-7629	N	*[512]	PROGLANG[512]
132-4	7629-7630	.	_	_

#Text=I.
133-1	7631-7632	I	_	_
133-2	7632-7633	.	_	_

#Text=Gould and P.
134-1	7634-7639	Gould	_	_
134-2	7640-7643	and	_	_
134-3	7644-7645	P	_	_
134-4	7645-7646	.	_	_

#Text=L.
135-1	7647-7648	L	_	_
135-2	7648-7649	.	_	_

#Text=Toint, "\[Trust region methods\](https://epubs.siam.org/doi/book/10.1137/1.9780898719857)," MOS-SIAM Series on Optimization, 2000. - \*\*Else\*\*     - SVRG-BB (stochastic variance reduced gradient with Barzilai-Borwein)         - C.
136-1	7650-7655	Toint	_	_
136-2	7655-7656	,	_	_
136-3	7657-7658	"	_	_
136-4	7658-7659	\[	_	_
136-5	7659-7664	Trust	_	_
136-6	7665-7671	region	_	_
136-7	7672-7679	methods	_	_
136-8	7679-7680	\]	_	_
136-9	7680-7681	(	_	_
136-10	7681-7686	https	_	_
136-11	7686-7687	:	_	_
136-12	7687-7688	/	_	_
136-13	7688-7689	/	_	_
136-14	7689-7703	epubs.siam.org	_	_
136-15	7703-7704	/	_	_
136-16	7704-7707	doi	_	_
136-17	7707-7708	/	_	_
136-18	7708-7712	book	_	_
136-19	7712-7713	/	_	_
136-20	7713-7720	10.1137	_	_
136-21	7720-7721	/	_	_
136-22	7721-7736	1.9780898719857	_	_
136-23	7736-7737	)	_	_
136-24	7737-7738	,	_	_
136-25	7738-7739	"	_	_
136-26	7740-7748	MOS-SIAM	_	_
136-27	7749-7755	Series	_	_
136-28	7756-7758	on	_	_
136-29	7759-7771	Optimization	_	_
136-30	7771-7772	,	_	_
136-31	7773-7777	2000	_	_
136-32	7777-7778	.	_	_
136-33	7779-7780	-	_	_
136-34	7781-7782	\*	_	_
136-35	7782-7783	\*	_	_
136-36	7783-7787	Else	_	_
136-37	7787-7788	\*	_	_
136-38	7788-7789	\*	_	_
136-39	7794-7795	-	_	_
136-40	7796-7803	SVRG-BB	_	_
136-41	7804-7805	(	_	_
136-42	7805-7815	stochastic	_	_
136-43	7816-7824	variance	_	_
136-44	7825-7832	reduced	_	_
136-45	7833-7841	gradient	_	_
136-46	7842-7846	with	_	_
136-47	7847-7863	Barzilai-Borwein	_	_
136-48	7863-7864	)	_	_
136-49	7873-7874	-	_	_
136-50	7875-7876	C	_	_
136-51	7876-7877	.	_	_

#Text=Tan, S.
137-1	7878-7881	Tan	_	_
137-2	7881-7882	,	_	_
137-3	7883-7884	S	_	_
137-4	7884-7885	.	_	_

#Text=Ma, Y.
138-1	7886-7888	Ma	_	_
138-2	7888-7889	,	_	_
138-3	7890-7891	Y	_	_
138-4	7891-7892	.	_	_

#Text=Dai, Y.
139-1	7893-7896	Dai	_	_
139-2	7896-7897	,	_	_
139-3	7898-7899	Y	_	_
139-4	7899-7900	.	_	_

#Text=Qian, "\[Barzilai-Borwein step size for stochastic gradient descent\](https://arxiv.org/pdf/1605.04131v2.pdf)," NIPS, 2016.
140-1	7901-7905	Qian	_	_
140-2	7905-7906	,	*[525]	LICENSE[525]
140-3	7907-7908	"	*[525]	LICENSE[525]
140-4	7908-7909	\[	*[525]	LICENSE[525]
140-5	7909-7925	Barzilai-Borwein	_	_
140-6	7926-7930	step	_	_
140-7	7931-7935	size	_	_
140-8	7936-7939	for	_	_
140-9	7940-7950	stochastic	_	_
140-10	7951-7959	gradient	_	_
140-11	7960-7967	descent	_	_
140-12	7967-7968	\]	_	_
140-13	7968-7969	(	_	_
140-14	7969-7974	https	_	_
140-15	7974-7975	:	_	_
140-16	7975-7976	/	_	_
140-17	7976-7977	/	_	_
140-18	7977-7986	arxiv.org	_	_
140-19	7986-7987	/	_	_
140-20	7987-7990	pdf	_	_
140-21	7990-7991	/	_	_
140-22	7991-8003	1605.04131v2	_	_
140-23	8003-8004	.	_	_
140-24	8004-8007	pdf	_	_
140-25	8007-8008	)	_	_
140-26	8008-8009	,	_	_
140-27	8009-8010	"	_	_
140-28	8011-8015	NIPS	_	_
140-29	8015-8016	,	_	_
140-30	8017-8021	2016	_	_
140-31	8021-8022	.	_	_

#Text=<br />  ## Algorithm configurations    \|Algorithm name in example codes\| function \| `options.sub\_mode` \| other `options` \| \|---\|---\|---\|---\| \|SGD\|`sgd`\|\|\| \|SGD-CM\|`sgd\_cm`\|`'CM'`\|\| \|SGD-CM-NAG\|`sgd\_cm`\|`'CM-NAG'`\|\| \|AdaGrad\|`adagrad`\|`'AdaGrad'`\|\| \|RMSProp\|`adagrad`\|`'RMSProp'`\|\| \|AdaDelta\|`adagrad`\|`'AdaDelta'`\|\| \|Adam\|`adam`\|`'Adam'`\|\| \|AdaMax\|`adam`\|`'AdaMax'`\|\| \|SVRG\|`svrg`\|\|\| \|SAG\|`sag`\|`'SAG'`\|\| \|SAGA\|`sag`\|`'SAGA'`\|\| \|SARAH\|`sarah`\|\|\| \|SQN\|`slbfg`s\|`'SQN'`\|\| \|SVRG-SQN\|`slbfgs`\|`'SVRG-SQN'`\|\| \|SVRG-LBFGS\|`slbfgs`\|`'SVRG-LBFGS'`\|\| \|SS-SVRG\|`subsamp\_svrg`\|\|\| \|oBFGS-Inf\|`obfgs`\|`'Inf-mem'`\|\| \|oLBFGS-Lim\|`obfgs`\|`'Lim-mem'`\|\| \|Reg-oBFGS-Inf\|`obfgs`\|`'Inf-mem'`\|`regularized=true`\| \|Damp-oBFGS-Inf\|`obfgs`\|`'Inf-mem'`\|`regularized=true` & `damped=true`\| \|IQN\|`iqn`\|\|\| \|SCR\|`scr`\|\| `gradient\_sampling=1` & `Hessian\_sampling=1`\| \|Subsampled-TR\|`subsamp\_tr`\|\| `gradient\_sampling=1` & `Hessian\_sampling=1`\| \|SVRG-BB\|`svrg\_bb`\|\|\|    - Note that other algorithms could be configurable by selecting other combinations of sub\_mode and options.
141-1	8024-8025	<	_	_
141-2	8025-8027	br	_	_
141-3	8028-8029	/	_	_
141-4	8029-8030	>	_	_
141-5	8032-8033	#	_	_
141-6	8033-8034	#	*[463]	PUBLICATION[463]
141-7	8035-8044	Algorithm	*[463]	PUBLICATION[463]
141-8	8045-8059	configurations	*[463]	PUBLICATION[463]
141-9	8063-8064	\|	*[463]	PUBLICATION[463]
141-10	8064-8073	Algorithm	*[463]	PUBLICATION[463]
141-11	8074-8078	name	*[463]	PUBLICATION[463]
141-12	8079-8081	in	*[463]	PUBLICATION[463]
141-13	8082-8089	example	*[463]	PUBLICATION[463]
141-14	8090-8095	codes	*[463]	PUBLICATION[463]
141-15	8095-8096	\|	*[463]	PUBLICATION[463]
141-16	8097-8105	function	*[463]	PUBLICATION[463]
141-17	8106-8107	\|	*[463]	PUBLICATION[463]
141-18	8108-8109	`	*[463]	PUBLICATION[463]
141-19	8109-8125	options.sub\_mode	*[463]	PUBLICATION[463]
141-20	8125-8126	`	*[463]	PUBLICATION[463]
141-21	8127-8128	\|	*[463]	PUBLICATION[463]
141-22	8129-8134	other	*[463]	PUBLICATION[463]
141-23	8135-8136	`	*[463]	PUBLICATION[463]
141-24	8136-8143	options	*[463]	PUBLICATION[463]
141-25	8143-8144	`	*[463]	PUBLICATION[463]
141-26	8145-8146	\|	*[463]	PUBLICATION[463]
141-27	8147-8148	\|	*[463]	PUBLICATION[463]
141-28	8148-8149	-	*[463]	PUBLICATION[463]
141-29	8149-8150	-	*[463]	PUBLICATION[463]
141-30	8150-8151	-	*[463]	PUBLICATION[463]
141-31	8151-8152	\|	*[463]	PUBLICATION[463]
141-32	8152-8153	-	*[463]	PUBLICATION[463]
141-33	8153-8154	-	*[463]	PUBLICATION[463]
141-34	8154-8155	-	*[463]	PUBLICATION[463]
141-35	8155-8156	\|	*[463]	PUBLICATION[463]
141-36	8156-8157	-	*[463]	PUBLICATION[463]
141-37	8157-8158	-	*[463]	PUBLICATION[463]
141-38	8158-8159	-	*[463]	PUBLICATION[463]
141-39	8159-8160	\|	*[463]	PUBLICATION[463]
141-40	8160-8161	-	*[463]	PUBLICATION[463]
141-41	8161-8162	-	*[463]	PUBLICATION[463]
141-42	8162-8163	-	*[463]	PUBLICATION[463]
141-43	8163-8164	\|	*[463]	PUBLICATION[463]
141-44	8165-8166	\|	*[463]	PUBLICATION[463]
141-45	8166-8169	SGD	*[463]	PUBLICATION[463]
141-46	8169-8170	\|	*[463]	PUBLICATION[463]
141-47	8170-8171	`	*[463]	PUBLICATION[463]
141-48	8171-8174	sgd	*[463]	PUBLICATION[463]
141-49	8174-8175	`	*[463]	PUBLICATION[463]
141-50	8175-8176	\|	*[463]	PUBLICATION[463]
141-51	8176-8177	\|	*[463]	PUBLICATION[463]
141-52	8177-8178	\|	*[463]	PUBLICATION[463]
141-53	8179-8180	\|	*[463]	PUBLICATION[463]
141-54	8180-8186	SGD-CM	*[463]	PUBLICATION[463]
141-55	8186-8187	\|	*[463]	PUBLICATION[463]
141-56	8187-8188	`	*[463]	PUBLICATION[463]
141-57	8188-8194	sgd\_cm	*[463]	PUBLICATION[463]
141-58	8194-8195	`	*[463]	PUBLICATION[463]
141-59	8195-8196	\|	*[463]	PUBLICATION[463]
141-60	8196-8197	`	*[463]	PUBLICATION[463]
141-61	8197-8198	'	*[463]	PUBLICATION[463]
141-62	8198-8200	CM	*[463]	PUBLICATION[463]
141-63	8200-8201	'	*[463]	PUBLICATION[463]
141-64	8201-8202	`	*[463]	PUBLICATION[463]
141-65	8202-8203	\|	*[463]	PUBLICATION[463]
141-66	8203-8204	\|	*[463]	PUBLICATION[463]
141-67	8205-8206	\|	*[463]	PUBLICATION[463]
141-68	8206-8216	SGD-CM-NAG	*[463]	PUBLICATION[463]
141-69	8216-8217	\|	*[463]	PUBLICATION[463]
141-70	8217-8218	`	*[463]	PUBLICATION[463]
141-71	8218-8224	sgd\_cm	*[463]	PUBLICATION[463]
141-72	8224-8225	`	*[463]	PUBLICATION[463]
141-73	8225-8226	\|	*[463]	PUBLICATION[463]
141-74	8226-8227	`	*[463]	PUBLICATION[463]
141-75	8227-8228	'	*[463]	PUBLICATION[463]
141-76	8228-8234	CM-NAG	*[463]	PUBLICATION[463]
141-77	8234-8235	'	*[463]	PUBLICATION[463]
141-78	8235-8236	`	*[463]	PUBLICATION[463]
141-79	8236-8237	\|	*[463]	PUBLICATION[463]
141-80	8237-8238	\|	*[463]	PUBLICATION[463]
141-81	8239-8240	\|	*[463]	PUBLICATION[463]
141-82	8240-8247	AdaGrad	*[463]	PUBLICATION[463]
141-83	8247-8248	\|	*[463]	PUBLICATION[463]
141-84	8248-8249	`	*[463]	PUBLICATION[463]
141-85	8249-8256	adagrad	*[463]	PUBLICATION[463]
141-86	8256-8257	`	*[463]	PUBLICATION[463]
141-87	8257-8258	\|	*[463]	PUBLICATION[463]
141-88	8258-8259	`	*[463]	PUBLICATION[463]
141-89	8259-8260	'	*[463]	PUBLICATION[463]
141-90	8260-8267	AdaGrad	*[463]	PUBLICATION[463]
141-91	8267-8268	'	*[463]	PUBLICATION[463]
141-92	8268-8269	`	*[463]	PUBLICATION[463]
141-93	8269-8270	\|	*[463]	PUBLICATION[463]
141-94	8270-8271	\|	*[463]	PUBLICATION[463]
141-95	8272-8273	\|	*[463]	PUBLICATION[463]
141-96	8273-8280	RMSProp	*[463]	PUBLICATION[463]
141-97	8280-8281	\|	*[463]	PUBLICATION[463]
141-98	8281-8282	`	*[463]	PUBLICATION[463]
141-99	8282-8289	adagrad	*[463]	PUBLICATION[463]
141-100	8289-8290	`	*[463]	PUBLICATION[463]
141-101	8290-8291	\|	*[463]	PUBLICATION[463]
141-102	8291-8292	`	*[463]	PUBLICATION[463]
141-103	8292-8293	'	*[463]	PUBLICATION[463]
141-104	8293-8300	RMSProp	*[463]	PUBLICATION[463]
141-105	8300-8301	'	*[463]	PUBLICATION[463]
141-106	8301-8302	`	*[463]	PUBLICATION[463]
141-107	8302-8303	\|	*[463]	PUBLICATION[463]
141-108	8303-8304	\|	*[463]	PUBLICATION[463]
141-109	8305-8306	\|	*[463]	PUBLICATION[463]
141-110	8306-8314	AdaDelta	*[463]	PUBLICATION[463]
141-111	8314-8315	\|	*[463]	PUBLICATION[463]
141-112	8315-8316	`	*[463]	PUBLICATION[463]
141-113	8316-8323	adagrad	*[463]	PUBLICATION[463]
141-114	8323-8324	`	*[463]	PUBLICATION[463]
141-115	8324-8325	\|	*[463]	PUBLICATION[463]
141-116	8325-8326	`	*[463]	PUBLICATION[463]
141-117	8326-8327	'	*[463]	PUBLICATION[463]
141-118	8327-8335	AdaDelta	*[463]	PUBLICATION[463]
141-119	8335-8336	'	*[463]	PUBLICATION[463]
141-120	8336-8337	`	*[463]	PUBLICATION[463]
141-121	8337-8338	\|	*[463]	PUBLICATION[463]
141-122	8338-8339	\|	*[463]	PUBLICATION[463]
141-123	8340-8341	\|	*[463]	PUBLICATION[463]
141-124	8341-8345	Adam	*[463]	PUBLICATION[463]
141-125	8345-8346	\|	*[463]	PUBLICATION[463]
141-126	8346-8347	`	*[463]	PUBLICATION[463]
141-127	8347-8351	adam	*[463]	PUBLICATION[463]
141-128	8351-8352	`	*[463]	PUBLICATION[463]
141-129	8352-8353	\|	*[463]	PUBLICATION[463]
141-130	8353-8354	`	*[463]	PUBLICATION[463]
141-131	8354-8355	'	*[463]	PUBLICATION[463]
141-132	8355-8359	Adam	*[463]	PUBLICATION[463]
141-133	8359-8360	'	*[463]	PUBLICATION[463]
141-134	8360-8361	`	*[463]	PUBLICATION[463]
141-135	8361-8362	\|	*[463]	PUBLICATION[463]
141-136	8362-8363	\|	*[463]	PUBLICATION[463]
141-137	8364-8365	\|	*[463]	PUBLICATION[463]
141-138	8365-8371	AdaMax	*[463]	PUBLICATION[463]
141-139	8371-8372	\|	*[463]	PUBLICATION[463]
141-140	8372-8373	`	*[463]	PUBLICATION[463]
141-141	8373-8377	adam	*[463]	PUBLICATION[463]
141-142	8377-8378	`	*[463]	PUBLICATION[463]
141-143	8378-8379	\|	*[463]	PUBLICATION[463]
141-144	8379-8380	`	*[463]	PUBLICATION[463]
141-145	8380-8381	'	*[463]	PUBLICATION[463]
141-146	8381-8387	AdaMax	*[463]	PUBLICATION[463]
141-147	8387-8388	'	*[463]	PUBLICATION[463]
141-148	8388-8389	`	*[463]	PUBLICATION[463]
141-149	8389-8390	\|	*[463]	PUBLICATION[463]
141-150	8390-8391	\|	*[463]	PUBLICATION[463]
141-151	8392-8393	\|	*[463]	PUBLICATION[463]
141-152	8393-8397	SVRG	*[463]	PUBLICATION[463]
141-153	8397-8398	\|	*[463]	PUBLICATION[463]
141-154	8398-8399	`	*[463]	PUBLICATION[463]
141-155	8399-8403	svrg	*[463]	PUBLICATION[463]
141-156	8403-8404	`	*[463]	PUBLICATION[463]
141-157	8404-8405	\|	*[463]	PUBLICATION[463]
141-158	8405-8406	\|	*[463]	PUBLICATION[463]
141-159	8406-8407	\|	*[463]	PUBLICATION[463]
141-160	8408-8409	\|	*[463]	PUBLICATION[463]
141-161	8409-8412	SAG	*[463]	PUBLICATION[463]
141-162	8412-8413	\|	*[463]	PUBLICATION[463]
141-163	8413-8414	`	*[463]	PUBLICATION[463]
141-164	8414-8417	sag	*[463]	PUBLICATION[463]
141-165	8417-8418	`	*[463]	PUBLICATION[463]
141-166	8418-8419	\|	*[463]	PUBLICATION[463]
141-167	8419-8420	`	*[463]	PUBLICATION[463]
141-168	8420-8421	'	*[463]	PUBLICATION[463]
141-169	8421-8424	SAG	*[463]	PUBLICATION[463]
141-170	8424-8425	'	*[463]	PUBLICATION[463]
141-171	8425-8426	`	*[463]	PUBLICATION[463]
141-172	8426-8427	\|	*[463]	PUBLICATION[463]
141-173	8427-8428	\|	*[463]	PUBLICATION[463]
141-174	8429-8430	\|	*[463]	PUBLICATION[463]
141-175	8430-8434	SAGA	*[463]	PUBLICATION[463]
141-176	8434-8435	\|	*[463]	PUBLICATION[463]
141-177	8435-8436	`	*[463]	PUBLICATION[463]
141-178	8436-8439	sag	*[463]	PUBLICATION[463]
141-179	8439-8440	`	*[463]	PUBLICATION[463]
141-180	8440-8441	\|	*[463]	PUBLICATION[463]
141-181	8441-8442	`	*[463]	PUBLICATION[463]
141-182	8442-8443	'	*[463]	PUBLICATION[463]
141-183	8443-8447	SAGA	*[463]	PUBLICATION[463]
141-184	8447-8448	'	*[463]	PUBLICATION[463]
141-185	8448-8449	`	*[463]	PUBLICATION[463]
141-186	8449-8450	\|	*[463]	PUBLICATION[463]
141-187	8450-8451	\|	*[463]	PUBLICATION[463]
141-188	8452-8453	\|	*[463]	PUBLICATION[463]
141-189	8453-8458	SARAH	*[463]	PUBLICATION[463]
141-190	8458-8459	\|	*[463]	PUBLICATION[463]
141-191	8459-8460	`	*[463]	PUBLICATION[463]
141-192	8460-8465	sarah	*[463]	PUBLICATION[463]
141-193	8465-8466	`	*[463]	PUBLICATION[463]
141-194	8466-8467	\|	*[463]	PUBLICATION[463]
141-195	8467-8468	\|	*[463]	PUBLICATION[463]
141-196	8468-8469	\|	*[463]	PUBLICATION[463]
141-197	8470-8471	\|	*[463]	PUBLICATION[463]
141-198	8471-8474	SQN	*[463]	PUBLICATION[463]
141-199	8474-8475	\|	*[463]	PUBLICATION[463]
141-200	8475-8476	`	*[463]	PUBLICATION[463]
141-201	8476-8481	slbfg	*[463]	PUBLICATION[463]
141-202	8481-8482	`	*[463]	PUBLICATION[463]
141-203	8482-8483	s	*[463]	PUBLICATION[463]
141-204	8483-8484	\|	*[463]	PUBLICATION[463]
141-205	8484-8485	`	*[463]	PUBLICATION[463]
141-206	8485-8486	'	*[463]	PUBLICATION[463]
141-207	8486-8489	SQN	*[463]	PUBLICATION[463]
141-208	8489-8490	'	*[463]	PUBLICATION[463]
141-209	8490-8491	`	*[463]	PUBLICATION[463]
141-210	8491-8492	\|	*[463]	PUBLICATION[463]
141-211	8492-8493	\|	*[463]	PUBLICATION[463]
141-212	8494-8495	\|	*[463]	PUBLICATION[463]
141-213	8495-8503	SVRG-SQN	*[463]	PUBLICATION[463]
141-214	8503-8504	\|	*[463]	PUBLICATION[463]
141-215	8504-8505	`	*[463]	PUBLICATION[463]
141-216	8505-8511	slbfgs	_	_
141-217	8511-8512	`	_	_
141-218	8512-8513	\|	_	_
141-219	8513-8514	`	_	_
141-220	8514-8515	'	_	_
141-221	8515-8523	SVRG-SQN	_	_
141-222	8523-8524	'	_	_
141-223	8524-8525	`	_	_
141-224	8525-8526	\|	_	_
141-225	8526-8527	\|	_	_
141-226	8528-8529	\|	_	_
141-227	8529-8539	SVRG-LBFGS	_	_
141-228	8539-8540	\|	_	_
141-229	8540-8541	`	_	_
141-230	8541-8547	slbfgs	_	_
141-231	8547-8548	`	_	_
141-232	8548-8549	\|	_	_
141-233	8549-8550	`	_	_
141-234	8550-8551	'	_	_
141-235	8551-8561	SVRG-LBFGS	_	_
141-236	8561-8562	'	_	_
141-237	8562-8563	`	_	_
141-238	8563-8564	\|	_	_
141-239	8564-8565	\|	_	_
141-240	8566-8567	\|	_	_
141-241	8567-8574	SS-SVRG	_	_
141-242	8574-8575	\|	_	_
141-243	8575-8576	`	_	_
141-244	8576-8588	subsamp\_svrg	_	_
141-245	8588-8589	`	_	_
141-246	8589-8590	\|	_	_
141-247	8590-8591	\|	_	_
141-248	8591-8592	\|	_	_
141-249	8593-8594	\|	_	_
141-250	8594-8603	oBFGS-Inf	_	_
141-251	8603-8604	\|	_	_
141-252	8604-8605	`	_	_
141-253	8605-8610	obfgs	_	_
141-254	8610-8611	`	_	_
141-255	8611-8612	\|	_	_
141-256	8612-8613	`	_	_
141-257	8613-8614	'	_	_
141-258	8614-8621	Inf-mem	_	_
141-259	8621-8622	'	_	_
141-260	8622-8623	`	_	_
141-261	8623-8624	\|	_	_
141-262	8624-8625	\|	_	_
141-263	8626-8627	\|	_	_
141-264	8627-8637	oLBFGS-Lim	_	_
141-265	8637-8638	\|	_	_
141-266	8638-8639	`	_	_
141-267	8639-8644	obfgs	_	_
141-268	8644-8645	`	_	_
141-269	8645-8646	\|	_	_
141-270	8646-8647	`	_	_
141-271	8647-8648	'	_	_
141-272	8648-8655	Lim-mem	_	_
141-273	8655-8656	'	_	_
141-274	8656-8657	`	_	_
141-275	8657-8658	\|	_	_
141-276	8658-8659	\|	_	_
141-277	8660-8661	\|	_	_
141-278	8661-8674	Reg-oBFGS-Inf	_	_
141-279	8674-8675	\|	_	_
141-280	8675-8676	`	_	_
141-281	8676-8681	obfgs	_	_
141-282	8681-8682	`	_	_
141-283	8682-8683	\|	_	_
141-284	8683-8684	`	_	_
141-285	8684-8685	'	_	_
141-286	8685-8692	Inf-mem	_	_
141-287	8692-8693	'	_	_
141-288	8693-8694	`	_	_
141-289	8694-8695	\|	_	_
141-290	8695-8696	`	_	_
141-291	8696-8707	regularized	_	_
141-292	8707-8708	=	_	_
141-293	8708-8712	true	_	_
141-294	8712-8713	`	_	_
141-295	8713-8714	\|	_	_
141-296	8715-8716	\|	_	_
141-297	8716-8730	Damp-oBFGS-Inf	_	_
141-298	8730-8731	\|	_	_
141-299	8731-8732	`	_	_
141-300	8732-8737	obfgs	_	_
141-301	8737-8738	`	_	_
141-302	8738-8739	\|	_	_
141-303	8739-8740	`	_	_
141-304	8740-8741	'	_	_
141-305	8741-8748	Inf-mem	_	_
141-306	8748-8749	'	_	_
141-307	8749-8750	`	_	_
141-308	8750-8751	\|	_	_
141-309	8751-8752	`	_	_
141-310	8752-8763	regularized	_	_
141-311	8763-8764	=	_	_
141-312	8764-8768	true	_	_
141-313	8768-8769	`	_	_
141-314	8770-8771	&	_	_
141-315	8772-8773	`	_	_
141-316	8773-8779	damped	_	_
141-317	8779-8780	=	_	_
141-318	8780-8784	true	_	_
141-319	8784-8785	`	_	_
141-320	8785-8786	\|	_	_
141-321	8787-8788	\|	_	_
141-322	8788-8791	IQN	_	_
141-323	8791-8792	\|	_	_
141-324	8792-8793	`	_	_
141-325	8793-8796	iqn	_	_
141-326	8796-8797	`	_	_
141-327	8797-8798	\|	_	_
141-328	8798-8799	\|	_	_
141-329	8799-8800	\|	_	_
141-330	8801-8802	\|	_	_
141-331	8802-8805	SCR	_	_
141-332	8805-8806	\|	_	_
141-333	8806-8807	`	_	_
141-334	8807-8810	scr	_	_
141-335	8810-8811	`	_	_
141-336	8811-8812	\|	_	_
141-337	8812-8813	\|	_	_
141-338	8814-8815	`	_	_
141-339	8815-8832	gradient\_sampling	_	_
141-340	8832-8833	=	_	_
141-341	8833-8834	1	_	_
141-342	8834-8835	`	_	_
141-343	8836-8837	&	_	_
141-344	8838-8839	`	_	_
141-345	8839-8855	Hessian\_sampling	_	_
141-346	8855-8856	=	_	_
141-347	8856-8857	1	_	_
141-348	8857-8858	`	_	_
141-349	8858-8859	\|	_	_
141-350	8860-8861	\|	_	_
141-351	8861-8874	Subsampled-TR	_	_
141-352	8874-8875	\|	_	_
141-353	8875-8876	`	_	_
141-354	8876-8886	subsamp\_tr	_	_
141-355	8886-8887	`	_	_
141-356	8887-8888	\|	_	_
141-357	8888-8889	\|	_	_
141-358	8890-8891	`	_	_
141-359	8891-8908	gradient\_sampling	_	_
141-360	8908-8909	=	_	_
141-361	8909-8910	1	_	_
141-362	8910-8911	`	_	_
141-363	8912-8913	&	_	_
141-364	8914-8915	`	_	_
141-365	8915-8931	Hessian\_sampling	_	_
141-366	8931-8932	=	_	_
141-367	8932-8933	1	_	_
141-368	8933-8934	`	_	_
141-369	8934-8935	\|	_	_
141-370	8936-8937	\|	_	_
141-371	8937-8944	SVRG-BB	_	_
141-372	8944-8945	\|	_	_
141-373	8945-8946	`	_	_
141-374	8946-8953	svrg\_bb	_	_
141-375	8953-8954	`	_	_
141-376	8954-8955	\|	_	_
141-377	8955-8956	\|	_	_
141-378	8956-8957	\|	_	_
141-379	8961-8962	-	_	_
141-380	8963-8967	Note	_	_
141-381	8968-8972	that	_	_
141-382	8973-8978	other	_	_
141-383	8979-8989	algorithms	_	_
141-384	8990-8995	could	_	_
141-385	8996-8998	be	_	_
141-386	8999-9011	configurable	_	_
141-387	9012-9014	by	_	_
141-388	9015-9024	selecting	_	_
141-389	9025-9030	other	_	_
141-390	9031-9043	combinations	_	_
141-391	9044-9046	of	_	_
141-392	9047-9055	sub\_mode	_	_
141-393	9056-9059	and	_	_
141-394	9060-9067	options	_	_
141-395	9067-9068	.	_	_

#Text=<br />  ## <a name="supp\_pro"> Supported problems </a>  \* L2-norm regularized multidimensional linear regression \* L2-norm regularized linear SVM \* L2-norm regularized logistic regression \* Softmax classification (multinomial logistic regression)     - Note that softmax classification problem does not support Hessian-vector product type algorithms, i.e., SQN, SVRG-SQN and SVRG-LBFGS. \* L1-norm regularized multidimensional linear regression \* L1-norm regularized logistic regression \* Sum quadratic problem   Additionally, the following problems are provided for gradient descent algorithms
142-1	9071-9072	<	_	_
142-2	9072-9074	br	_	_
142-3	9075-9076	/	_	_
142-4	9076-9077	>	_	_
142-5	9079-9080	#	_	_
142-6	9080-9081	#	_	_
142-7	9082-9083	<	_	_
142-8	9083-9084	a	_	_
142-9	9085-9089	name	_	_
142-10	9089-9090	=	_	_
142-11	9090-9091	"	_	_
142-12	9091-9099	supp\_pro	_	_
142-13	9099-9100	"	_	_
142-14	9100-9101	>	_	_
142-15	9102-9111	Supported	_	_
142-16	9112-9120	problems	_	_
142-17	9121-9122	<	_	_
142-18	9122-9123	/	_	_
142-19	9123-9124	a	_	_
142-20	9124-9125	>	_	_
142-21	9127-9128	\*	_	_
142-22	9129-9131	L2	_	_
142-23	9131-9132	-	_	_
142-24	9132-9136	norm	_	_
142-25	9137-9148	regularized	_	_
142-26	9149-9165	multidimensional	_	_
142-27	9166-9172	linear	_	_
142-28	9173-9183	regression	_	_
142-29	9184-9185	\*	_	_
142-30	9186-9188	L2	_	_
142-31	9188-9189	-	_	_
142-32	9189-9193	norm	_	_
142-33	9194-9205	regularized	_	_
142-34	9206-9212	linear	_	_
142-35	9213-9216	SVM	_	_
142-36	9217-9218	\*	_	_
142-37	9219-9221	L2	_	_
142-38	9221-9222	-	_	_
142-39	9222-9226	norm	_	_
142-40	9227-9238	regularized	_	_
142-41	9239-9247	logistic	_	_
142-42	9248-9258	regression	_	_
142-43	9259-9260	\*	_	_
142-44	9261-9268	Softmax	_	_
142-45	9269-9283	classification	_	_
142-46	9284-9285	(	_	_
142-47	9285-9296	multinomial	_	_
142-48	9297-9305	logistic	_	_
142-49	9306-9316	regression	_	_
142-50	9316-9317	)	_	_
142-51	9322-9323	-	_	_
142-52	9324-9328	Note	_	_
142-53	9329-9333	that	_	_
142-54	9334-9341	softmax	_	_
142-55	9342-9356	classification	_	_
142-56	9357-9364	problem	_	_
142-57	9365-9369	does	_	_
142-58	9370-9373	not	_	_
142-59	9374-9381	support	_	_
142-60	9382-9396	Hessian-vector	_	_
142-61	9397-9404	product	_	_
142-62	9405-9409	type	_	_
142-63	9410-9420	algorithms	_	_
142-64	9420-9421	,	_	_
142-65	9422-9425	i.e	_	_
142-66	9425-9426	.	_	_
142-67	9426-9427	,	_	_
142-68	9428-9431	SQN	_	_
142-69	9431-9432	,	_	_
142-70	9433-9441	SVRG-SQN	_	_
142-71	9442-9445	and	_	_
142-72	9446-9456	SVRG-LBFGS	_	_
142-73	9456-9457	.	_	_
142-74	9458-9459	\*	_	_
142-75	9460-9462	L1	_	_
142-76	9462-9463	-	_	_
142-77	9463-9467	norm	_	_
142-78	9468-9479	regularized	_	_
142-79	9480-9496	multidimensional	_	_
142-80	9497-9503	linear	_	_
142-81	9504-9514	regression	_	_
142-82	9515-9516	\*	_	_
142-83	9517-9519	L1	_	_
142-84	9519-9520	-	_	_
142-85	9520-9524	norm	_	_
142-86	9525-9536	regularized	_	_
142-87	9537-9545	logistic	_	_
142-88	9546-9556	regression	_	_
142-89	9557-9558	\*	_	_
142-90	9559-9562	Sum	_	_
142-91	9563-9572	quadratic	_	_
142-92	9573-9580	problem	_	_
142-93	9583-9595	Additionally	_	_
142-94	9595-9596	,	_	_
142-95	9597-9600	the	_	_
142-96	9601-9610	following	_	_
142-97	9611-9619	problems	_	_
142-98	9620-9623	are	_	_
142-99	9624-9632	provided	_	_
142-100	9633-9636	for	_	_
142-101	9637-9645	gradient	_	_
142-102	9646-9653	descent	_	_
142-103	9654-9664	algorithms	_	_

#Text=.
143-1	9664-9665	.	_	_

#Text=\* \[Rosenbrock problem\](https://en.wikipedia.org/wiki/Rosenbrock\_function) \* Quadratic problem \* General problem  <br />  Folders and files --------- <pre> ./                      - Top directory. .
144-1	9668-9669	\*	_	_
144-2	9670-9671	\[	_	_
144-3	9671-9681	Rosenbrock	_	_
144-4	9682-9689	problem	_	_
144-5	9689-9690	\]	_	_
144-6	9690-9691	(	_	_
144-7	9691-9696	https	_	_
144-8	9696-9697	:	_	_
144-9	9697-9698	/	_	_
144-10	9698-9699	/	_	_
144-11	9699-9715	en.wikipedia.org	_	_
144-12	9715-9716	/	_	_
144-13	9716-9720	wiki	_	_
144-14	9720-9721	/	_	_
144-15	9721-9740	Rosenbrock\_function	_	_
144-16	9740-9741	)	_	_
144-17	9742-9743	\*	_	_
144-18	9744-9753	Quadratic	_	_
144-19	9754-9761	problem	_	_
144-20	9762-9763	\*	_	_
144-21	9764-9771	General	_	_
144-22	9772-9779	problem	*[494]	CONFERENCE[494]
144-23	9781-9782	<	*[494]	CONFERENCE[494]
144-24	9782-9784	br	*[494]	CONFERENCE[494]
144-25	9785-9786	/	*[494]	CONFERENCE[494]
144-26	9786-9787	>	*[494]	CONFERENCE[494]
144-27	9789-9796	Folders	*[494]	CONFERENCE[494]
144-28	9797-9800	and	*[494]	CONFERENCE[494]
144-29	9801-9806	files	*[494]	CONFERENCE[494]
144-30	9807-9808	-	*[494]	CONFERENCE[494]
144-31	9808-9809	-	*[494]	CONFERENCE[494]
144-32	9809-9810	-	*[494]	CONFERENCE[494]
144-33	9810-9811	-	*[494]	CONFERENCE[494]
144-34	9811-9812	-	*[494]	CONFERENCE[494]
144-35	9812-9813	-	*[494]	CONFERENCE[494]
144-36	9813-9814	-	*[494]	CONFERENCE[494]
144-37	9814-9815	-	*[494]	CONFERENCE[494]
144-38	9815-9816	-	*[494]	CONFERENCE[494]
144-39	9817-9818	<	*[494]	CONFERENCE[494]
144-40	9818-9821	pre	*[494]	CONFERENCE[494]
144-41	9821-9822	>	*[494]	CONFERENCE[494]
144-42	9823-9824	.	*[494]	CONFERENCE[494]
144-43	9824-9825	/	*[494]	CONFERENCE[494]
144-44	9847-9848	-	*[494]	CONFERENCE[494]
144-45	9849-9852	Top	*[494]	CONFERENCE[494]
144-46	9853-9862	directory	_	_
144-47	9862-9863	.	_	_
144-48	9864-9865	.	_	_

#Text=/README.md             - This readme file. .
145-1	9865-9866	/	_	_
145-2	9866-9875	README.md	_	_
145-3	9888-9889	-	_	_
145-4	9890-9894	This	_	_
145-5	9895-9901	readme	_	_
145-6	9902-9906	file	_	_
145-7	9906-9907	.	_	_
145-8	9908-9909	.	_	_

#Text=/run\_me\_first.m        - The scipt that you need to run first. .
146-1	9909-9910	/	_	_
146-2	9910-9924	run\_me\_first.m	_	_
146-3	9932-9933	-	_	_
146-4	9934-9937	The	_	_
146-5	9938-9943	scipt	_	_
146-6	9944-9948	that	_	_
146-7	9949-9952	you	_	_
146-8	9953-9957	need	_	_
146-9	9958-9960	to	_	_
146-10	9961-9964	run	_	_
146-11	9965-9970	first	_	_
146-12	9970-9971	.	_	_
146-13	9972-9973	.	_	_

#Text=/demo.m                - Demonstration script to check and understand this package easily.
147-1	9973-9974	/	_	_
147-2	9974-9980	demo.m	*[514]	PROGLANG[514]
147-3	9996-9997	-	*[514]	PROGLANG[514]
147-4	9998-10011	Demonstration	*[514]	PROGLANG[514]
147-5	10012-10018	script	*[514]	PROGLANG[514]
147-6	10019-10021	to	*[514]	PROGLANG[514]
147-7	10022-10027	check	*[514]	PROGLANG[514]
147-8	10028-10031	and	*[514]	PROGLANG[514]
147-9	10032-10042	understand	_	_
147-10	10043-10047	this	_	_
147-11	10048-10055	package	_	_
147-12	10056-10062	easily	_	_
147-13	10062-10063	.	_	_

#Text=\|plotter/               - Contains plotting tools to show convergence results and various plots.
148-1	10065-10066	\|	_	_
148-2	10066-10073	plotter	_	_
148-3	10073-10074	/	_	_
148-4	10089-10090	-	_	_
148-5	10091-10099	Contains	_	_
148-6	10100-10108	plotting	*[526]	LICENSE[526]
148-7	10109-10114	tools	*[526]	LICENSE[526]
148-8	10115-10117	to	*[526]	LICENSE[526]
148-9	10118-10122	show	_	_
148-10	10123-10134	convergence	_	_
148-11	10135-10142	results	_	_
148-12	10143-10146	and	_	_
148-13	10147-10154	various	_	_
148-14	10155-10160	plots	_	_
148-15	10160-10161	.	_	_

#Text=\|tool/                  - Some auxiliary tools for this project.
149-1	10162-10163	\|	_	_
149-2	10163-10167	tool	_	_
149-3	10167-10168	/	_	_
149-4	10186-10187	-	_	_
149-5	10188-10192	Some	_	_
149-6	10193-10202	auxiliary	_	_
149-7	10203-10208	tools	_	_
149-8	10209-10212	for	_	_
149-9	10213-10217	this	_	_
149-10	10218-10225	project	_	_
149-11	10225-10226	.	_	_

#Text=\|problem/               - Problem definition files to be solved.
150-1	10227-10228	\|	_	_
150-2	10228-10235	problem	_	_
150-3	10235-10236	/	_	_
150-4	10251-10252	-	_	_
150-5	10253-10260	Problem	_	_
150-6	10261-10271	definition	_	_
150-7	10272-10277	files	_	_
150-8	10278-10280	to	_	_
150-9	10281-10283	be	_	_
150-10	10284-10290	solved	_	_
150-11	10290-10291	.	_	_

#Text=\|sgd\_solver/            - Contains various stochastic optimization algorithms.
151-1	10292-10293	\|	_	_
151-2	10293-10303	sgd\_solver	_	_
151-3	10303-10304	/	_	_
151-4	10316-10317	-	_	_
151-5	10318-10326	Contains	_	_
151-6	10327-10334	various	_	_
151-7	10335-10345	stochastic	_	_
151-8	10346-10358	optimization	_	_
151-9	10359-10369	algorithms	_	_
151-10	10369-10370	.	_	_

#Text=\|sgd\_test/              - Some helpful test scripts to use this package.
152-1	10371-10372	\|	_	_
152-2	10372-10380	sgd\_test	_	_
152-3	10380-10381	/	_	_
152-4	10395-10396	-	_	_
152-5	10397-10401	Some	*[515]	PROGLANG[515]
152-6	10402-10409	helpful	*[515]	PROGLANG[515]
152-7	10410-10414	test	*[515]	PROGLANG[515]
152-8	10415-10422	scripts	*[515]	PROGLANG[515]
152-9	10423-10425	to	*[515]	PROGLANG[515]
152-10	10426-10429	use	*[515]	PROGLANG[515]
152-11	10430-10434	this	*[515]	PROGLANG[515]
152-12	10435-10442	package	_	_
152-13	10442-10443	.	_	_

#Text=\|gd\_solver/             - Contains various gradient descent optimization algorithms.
153-1	10444-10445	\|	_	_
153-2	10445-10454	gd\_solver	_	_
153-3	10454-10455	/	_	_
153-4	10468-10469	-	_	_
153-5	10470-10478	Contains	_	_
153-6	10479-10486	various	_	_
153-7	10487-10495	gradient	*[464]	PUBLICATION[464]
153-8	10496-10503	descent	*[464]	PUBLICATION[464]
153-9	10504-10516	optimization	_	_
153-10	10517-10527	algorithms	_	_
153-11	10527-10528	.	_	_

#Text=\|gd\_test/               - Some helpful test scripts using gradient descent algorithms to use this package.
154-1	10529-10530	\|	_	_
154-2	10530-10537	gd\_test	_	_
154-3	10537-10538	/	_	_
154-4	10553-10554	-	_	_
154-5	10555-10559	Some	*[542]	EVALMETRIC[542]
154-6	10560-10567	helpful	_	_
154-7	10568-10572	test	_	_
154-8	10573-10580	scripts	_	_
154-9	10581-10586	using	_	_
154-10	10587-10595	gradient	_	_
154-11	10596-10603	descent	_	_
154-12	10604-10614	algorithms	_	_
154-13	10615-10617	to	_	_
154-14	10618-10621	use	_	_
154-15	10622-10626	this	_	_
154-16	10627-10634	package	_	_
154-17	10634-10635	.	_	_

#Text=</pre>                         First to do ---------------------------- Run `run\_me\_first` for path configurations.
155-1	10636-10637	<	_	_
155-2	10637-10638	/	_	_
155-3	10638-10641	pre	_	_
155-4	10641-10642	>	_	_
155-5	10667-10672	First	_	_
155-6	10673-10675	to	*[486]	DATASET[486]
155-7	10676-10678	do	*[486]	DATASET[486]
155-8	10679-10680	-	*[486]	DATASET[486]
155-9	10680-10681	-	*[486]	DATASET[486]
155-10	10681-10682	-	*[486]	DATASET[486]
155-11	10682-10683	-	*[486]	DATASET[486]
155-12	10683-10684	-	*[486]	DATASET[486]
155-13	10684-10685	-	*[486]	DATASET[486]
155-14	10685-10686	-	*[486]	DATASET[486]
155-15	10686-10687	-	*[486]	DATASET[486]
155-16	10687-10688	-	*[486]	DATASET[486]
155-17	10688-10689	-	*[486]	DATASET[486]
155-18	10689-10690	-	*[486]	DATASET[486]
155-19	10690-10691	-	*[486]	DATASET[486]
155-20	10691-10692	-	*[486]	DATASET[486]
155-21	10692-10693	-	*[486]	DATASET[486]
155-22	10693-10694	-	*[486]	DATASET[486]
155-23	10694-10695	-	*[486]	DATASET[486]
155-24	10695-10696	-	*[486]	DATASET[486]
155-25	10696-10697	-	*[486]	DATASET[486]
155-26	10697-10698	-	*[486]	DATASET[486]
155-27	10698-10699	-	*[486]	DATASET[486]
155-28	10699-10700	-	*[486]	DATASET[486]
155-29	10700-10701	-	*[486]	DATASET[486]
155-30	10701-10702	-	*[486]	DATASET[486]
155-31	10702-10703	-	*[486]	DATASET[486]
155-32	10703-10704	-	*[486]	DATASET[486]
155-33	10704-10705	-	*[486]	DATASET[486]
155-34	10705-10706	-	*[486]	DATASET[486]
155-35	10706-10707	-	*[486]	DATASET[486]
155-36	10708-10711	Run	*[486]	DATASET[486]
155-37	10712-10713	`	*[486]	DATASET[486]
155-38	10713-10725	run\_me\_first	_	_
155-39	10725-10726	`	_	_
155-40	10727-10730	for	_	_
155-41	10731-10735	path	_	_
155-42	10736-10750	configurations	_	_
155-43	10750-10751	.	_	_

#Text=```Matlab %% First run the setup script run\_me\_first\;  ```  <br />  Simplest usage example: 4 steps!
156-1	10753-10754	`	_	_
156-2	10754-10755	`	_	_
156-3	10755-10756	`	_	_
156-4	10756-10762	Matlab	_	_
156-5	10763-10764	%	_	_
156-6	10764-10765	%	_	_
156-7	10766-10771	First	_	_
156-8	10772-10775	run	_	_
156-9	10776-10779	the	*[495]	CONFERENCE[495]
156-10	10780-10785	setup	*[495]	CONFERENCE[495]
156-11	10786-10792	script	*[495]	CONFERENCE[495]
156-12	10793-10805	run\_me\_first	*[495]	CONFERENCE[495]
156-13	10805-10806	\;	*[495]	CONFERENCE[495]
156-14	10808-10809	`	*[495]	CONFERENCE[495]
156-15	10809-10810	`	*[495]	CONFERENCE[495]
156-16	10810-10811	`	*[495]	CONFERENCE[495]
156-17	10813-10814	<	*[495]	CONFERENCE[495]
156-18	10814-10816	br	*[495]	CONFERENCE[495]
156-19	10817-10818	/	*[495]	CONFERENCE[495]
156-20	10818-10819	>	*[495]	CONFERENCE[495]
156-21	10821-10829	Simplest	*[495]	CONFERENCE[495]
156-22	10830-10835	usage	_	_
156-23	10836-10843	example	_	_
156-24	10843-10844	:	_	_
156-25	10845-10846	4	_	_
156-26	10847-10852	steps	_	_
156-27	10852-10853	!	_	_

#Text=----------------------------  Just execute `demo` for the simplest demonstration of this package.
157-1	10854-10855	-	_	_
157-2	10855-10856	-	_	_
157-3	10856-10857	-	_	_
157-4	10857-10858	-	_	_
157-5	10858-10859	-	_	_
157-6	10859-10860	-	_	_
157-7	10860-10861	-	_	_
157-8	10861-10862	-	_	_
157-9	10862-10863	-	_	_
157-10	10863-10864	-	_	_
157-11	10864-10865	-	_	_
157-12	10865-10866	-	_	_
157-13	10866-10867	-	_	_
157-14	10867-10868	-	_	_
157-15	10868-10869	-	_	_
157-16	10869-10870	-	_	_
157-17	10870-10871	-	_	_
157-18	10871-10872	-	_	_
157-19	10872-10873	-	_	_
157-20	10873-10874	-	_	_
157-21	10874-10875	-	_	_
157-22	10875-10876	-	_	_
157-23	10876-10877	-	_	_
157-24	10877-10878	-	_	_
157-25	10878-10879	-	_	_
157-26	10879-10880	-	_	_
157-27	10880-10881	-	_	_
157-28	10881-10882	-	_	_
157-29	10884-10888	Just	_	_
157-30	10889-10896	execute	_	_
157-31	10897-10898	`	*[516]	PROGLANG[516]
157-32	10898-10902	demo	*[516]	PROGLANG[516]
157-33	10902-10903	`	*[516]	PROGLANG[516]
157-34	10904-10907	for	*[516]	PROGLANG[516]
157-35	10908-10911	the	*[516]	PROGLANG[516]
157-36	10912-10920	simplest	*[516]	PROGLANG[516]
157-37	10921-10934	demonstration	*[516]	PROGLANG[516]
157-38	10935-10937	of	*[516]	PROGLANG[516]
157-39	10938-10942	this	*[516]	PROGLANG[516]
157-40	10943-10950	package	_	_
157-41	10950-10951	.	_	_

#Text=This is the case of logistic regression problem.
158-1	10952-10956	This	_	_
158-2	10957-10959	is	_	_
158-3	10960-10963	the	_	_
158-4	10964-10968	case	_	_
158-5	10969-10971	of	_	_
158-6	10972-10980	logistic	_	_
158-7	10981-10991	regression	*[496]	CONFERENCE[496]
158-8	10992-10999	problem	_	_
158-9	10999-11000	.	_	_

#Text=```Matlab %% Execute the demonstration script demo\;  ```  The "\*\*demo.m\*\*" file contains below.
159-1	11002-11003	`	_	_
159-2	11003-11004	`	_	_
159-3	11004-11005	`	_	_
159-4	11005-11011	Matlab	_	_
159-5	11012-11013	%	_	_
159-6	11013-11014	%	_	_
159-7	11015-11022	Execute	_	_
159-8	11023-11026	the	_	_
159-9	11027-11040	demonstration	_	_
159-10	11041-11047	script	_	_
159-11	11048-11052	demo	*[487]	PROJECT[487]
159-12	11052-11053	\;	*[487]	PROJECT[487]
159-13	11055-11056	`	*[487]	PROJECT[487]
159-14	11056-11057	`	*[487]	PROJECT[487]
159-15	11057-11058	`	*[487]	PROJECT[487]
159-16	11060-11063	The	*[487]	PROJECT[487]
159-17	11064-11065	"	*[487]	PROJECT[487]
159-18	11065-11066	\*	*[487]	PROJECT[487]
159-19	11066-11067	\*	_	_
159-20	11067-11073	demo.m	_	_
159-21	11073-11074	\*	_	_
159-22	11074-11075	\*	_	_
159-23	11075-11076	"	_	_
159-24	11077-11081	file	_	_
159-25	11082-11090	contains	_	_
159-26	11091-11096	below	_	_
159-27	11096-11097	.	_	_

#Text=```Matlab %% generate synthetic data         % set number of dimensions d = 3\; % set number of samples     n = 300\; % generate data data = logistic\_regression\_data\_generator(n, d)\;   %% define problem definitions problem = logistic\_regression(data.x\_train, data.y\_train, data.x\_test, data.y\_test)\;    %% perform algorithms SGD and SVRG  options.w\_init = data.w\_init\; options.step\_init = 0.01\;        \[w\_sgd, info\_sgd\] = sgd(problem, options)\;   \[w\_svrg, info\_svrg\] = svrg(problem, options)\;   %% display cost/optimality gap vs number of gradient evaluations display\_graph('grad\_calc\_count','cost', {'SGD', 'SVRG'}, {w\_sgd, w\_svrg}, {info\_sgd, info\_svrg})\;  ```  <br /> Let take a closer look at the code above bit by bit.
160-1	11098-11099	`	_	_
160-2	11099-11100	`	_	_
160-3	11100-11101	`	_	_
160-4	11101-11107	Matlab	_	_
160-5	11108-11109	%	_	_
160-6	11109-11110	%	_	_
160-7	11111-11119	generate	_	_
160-8	11120-11129	synthetic	_	_
160-9	11130-11134	data	_	_
160-10	11143-11144	%	_	_
160-11	11145-11148	set	_	_
160-12	11149-11155	number	_	_
160-13	11156-11158	of	_	_
160-14	11159-11169	dimensions	_	_
160-15	11170-11171	d	_	_
160-16	11172-11173	=	_	_
160-17	11174-11175	3	_	_
160-18	11175-11176	\;	_	_
160-19	11177-11178	%	_	_
160-20	11179-11182	set	_	_
160-21	11183-11189	number	_	_
160-22	11190-11192	of	_	_
160-23	11193-11200	samples	_	_
160-24	11205-11206	n	_	_
160-25	11207-11208	=	_	_
160-26	11209-11212	300	_	_
160-27	11212-11213	\;	_	_
160-28	11214-11215	%	_	_
160-29	11216-11224	generate	_	_
160-30	11225-11229	data	_	_
160-31	11230-11234	data	_	_
160-32	11235-11236	=	_	_
160-33	11237-11271	logistic\_regression\_data\_generator	_	_
160-34	11271-11272	(	_	_
160-35	11272-11273	n	_	_
160-36	11273-11274	,	_	_
160-37	11275-11276	d	_	_
160-38	11276-11277	)	_	_
160-39	11277-11278	\;	_	_
160-40	11281-11282	%	_	_
160-41	11282-11283	%	_	_
160-42	11284-11290	define	_	_
160-43	11291-11298	problem	_	_
160-44	11299-11310	definitions	_	_
160-45	11311-11318	problem	_	_
160-46	11319-11320	=	_	_
160-47	11321-11340	logistic\_regression	_	_
160-48	11340-11341	(	_	_
160-49	11341-11353	data.x\_train	_	_
160-50	11353-11354	,	_	_
160-51	11355-11367	data.y\_train	_	_
160-52	11367-11368	,	_	_
160-53	11369-11380	data.x\_test	_	_
160-54	11380-11381	,	_	_
160-55	11382-11393	data.y\_test	_	_
160-56	11393-11394	)	*[497]	CONFERENCE[497]
160-57	11394-11395	\;	*[497]	CONFERENCE[497]
160-58	11399-11400	%	*[497]	CONFERENCE[497]
160-59	11400-11401	%	*[497]	CONFERENCE[497]
160-60	11402-11409	perform	*[497]	CONFERENCE[497]
160-61	11410-11420	algorithms	*[497]	CONFERENCE[497]
160-62	11421-11424	SGD	*[497]	CONFERENCE[497]
160-63	11425-11428	and	*[497]	CONFERENCE[497]
160-64	11429-11433	SVRG	*[497]	CONFERENCE[497]
160-65	11435-11449	options.w\_init	*[497]	CONFERENCE[497]
160-66	11450-11451	=	*[497]	CONFERENCE[497]
160-67	11452-11463	data.w\_init	_	_
160-68	11463-11464	\;	_	_
160-69	11465-11482	options.step\_init	_	_
160-70	11483-11484	=	_	_
160-71	11485-11489	0.01	_	_
160-72	11489-11490	\;	_	_
160-73	11498-11499	\[	_	_
160-74	11499-11504	w\_sgd	_	_
160-75	11504-11505	,	_	_
160-76	11506-11514	info\_sgd	_	_
160-77	11514-11515	\]	_	_
160-78	11516-11517	=	_	_
160-79	11518-11521	sgd	_	_
160-80	11521-11522	(	_	_
160-81	11522-11529	problem	_	_
160-82	11529-11530	,	_	_
160-83	11531-11538	options	_	_
160-84	11538-11539	)	_	_
160-85	11539-11540	\;	_	_
160-86	11543-11544	\[	_	_
160-87	11544-11550	w\_svrg	_	_
160-88	11550-11551	,	_	_
160-89	11552-11561	info\_svrg	_	_
160-90	11561-11562	\]	_	_
160-91	11563-11564	=	_	_
160-92	11565-11569	svrg	_	_
160-93	11569-11570	(	_	_
160-94	11570-11577	problem	_	_
160-95	11577-11578	,	_	_
160-96	11579-11586	options	_	_
160-97	11586-11587	)	_	_
160-98	11587-11588	\;	_	_
160-99	11591-11592	%	_	_
160-100	11592-11593	%	_	_
160-101	11594-11601	display	_	_
160-102	11602-11606	cost	_	_
160-103	11606-11607	/	_	_
160-104	11607-11617	optimality	_	_
160-105	11618-11621	gap	_	_
160-106	11622-11624	vs	_	_
160-107	11625-11631	number	_	_
160-108	11632-11634	of	_	_
160-109	11635-11643	gradient	_	_
160-110	11644-11655	evaluations	_	_
160-111	11656-11669	display\_graph	_	_
160-112	11669-11670	(	_	_
160-113	11670-11671	'	_	_
160-114	11671-11686	grad\_calc\_count	_	_
160-115	11686-11687	'	_	_
160-116	11687-11688	,	_	_
160-117	11688-11689	'	_	_
160-118	11689-11693	cost	_	_
160-119	11693-11694	'	_	_
160-120	11694-11695	,	_	_
160-121	11696-11697	{	_	_
160-122	11697-11698	'	_	_
160-123	11698-11701	SGD	_	_
160-124	11701-11702	'	_	_
160-125	11702-11703	,	_	_
160-126	11704-11705	'	_	_
160-127	11705-11709	SVRG	_	_
160-128	11709-11710	'	_	_
160-129	11710-11711	}	_	_
160-130	11711-11712	,	_	_
160-131	11713-11714	{	_	_
160-132	11714-11719	w\_sgd	_	_
160-133	11719-11720	,	_	_
160-134	11721-11727	w\_svrg	_	_
160-135	11727-11728	}	_	_
160-136	11728-11729	,	_	_
160-137	11730-11731	{	_	_
160-138	11731-11739	info\_sgd	_	_
160-139	11739-11740	,	_	_
160-140	11741-11750	info\_svrg	_	_
160-141	11750-11751	}	_	_
160-142	11751-11752	)	_	_
160-143	11752-11753	\;	_	_
160-144	11755-11756	`	_	_
160-145	11756-11757	`	_	_
160-146	11757-11758	`	_	_
160-147	11760-11761	<	_	_
160-148	11761-11763	br	_	_
160-149	11764-11765	/	_	_
160-150	11765-11766	>	_	_
160-151	11767-11770	Let	_	_
160-152	11771-11775	take	_	_
160-153	11776-11777	a	_	_
160-154	11778-11784	closer	_	_
160-155	11785-11789	look	_	_
160-156	11790-11792	at	_	_
160-157	11793-11796	the	_	_
160-158	11797-11801	code	_	_
160-159	11802-11807	above	_	_
160-160	11808-11811	bit	_	_
160-161	11812-11814	by	_	_
160-162	11815-11818	bit	_	_
160-163	11818-11819	.	_	_

#Text=The procedure has only \*\*4 steps\*\*!
161-1	11820-11823	The	_	_
161-2	11824-11833	procedure	_	_
161-3	11834-11837	has	_	_
161-4	11838-11842	only	_	_
161-5	11843-11844	\*	_	_
161-6	11844-11845	\*	*[517]	PROGLANG[517]
161-7	11845-11846	4	*[517]	PROGLANG[517]
161-8	11847-11852	steps	_	_
161-9	11852-11853	\*	_	_
161-10	11853-11854	\*	_	_
161-11	11854-11855	!	_	_

#Text=\*\*Step 1: Generate data\*\*  First, we generate datasets including train set and test set using a data generator function `logistic\_regression\_data\_generator()`.
162-1	11857-11858	\*	_	_
162-2	11858-11859	\*	_	_
162-3	11859-11863	Step	_	_
162-4	11864-11865	1	_	_
162-5	11865-11866	:	_	_
162-6	11867-11875	Generate	_	_
162-7	11876-11880	data	_	_
162-8	11880-11881	\*	_	_
162-9	11881-11882	\*	_	_
162-10	11884-11889	First	_	_
162-11	11889-11890	,	*[481]	WORKSHOP[481]
162-12	11891-11893	we	*[481]	WORKSHOP[481]
162-13	11894-11902	generate	*[481]	WORKSHOP[481]
162-14	11903-11911	datasets	*[481]	WORKSHOP[481]
162-15	11912-11921	including	*[481]	WORKSHOP[481]
162-16	11922-11927	train	*[481]	WORKSHOP[481]
162-17	11928-11931	set	*[481]	WORKSHOP[481]
162-18	11932-11935	and	*[481]	WORKSHOP[481]
162-19	11936-11940	test	*[481]	WORKSHOP[481]
162-20	11941-11944	set	*[481]	WORKSHOP[481]
162-21	11945-11950	using	*[481]	WORKSHOP[481]
162-22	11951-11952	a	*[481]	WORKSHOP[481]
162-23	11953-11957	data	*[481]	WORKSHOP[481]
162-24	11958-11967	generator	_	_
162-25	11968-11976	function	_	_
162-26	11977-11978	`	_	_
162-27	11978-12012	logistic\_regression\_data\_generator	_	_
162-28	12012-12013	(	_	_
162-29	12013-12014	)	_	_
162-30	12014-12015	`	_	_
162-31	12015-12016	.	_	_

#Text=The output include train set and test set and an initial value of the solution `w`.
163-1	12018-12021	The	_	_
163-2	12022-12028	output	_	_
163-3	12029-12036	include	_	_
163-4	12037-12042	train	_	_
163-5	12043-12046	set	_	_
163-6	12047-12050	and	_	_
163-7	12051-12055	test	_	_
163-8	12056-12059	set	_	_
163-9	12060-12063	and	_	_
163-10	12064-12066	an	_	_
163-11	12067-12074	initial	_	_
163-12	12075-12080	value	_	_
163-13	12081-12083	of	_	_
163-14	12084-12087	the	_	_
163-15	12088-12096	solution	_	_
163-16	12097-12098	`	_	_
163-17	12098-12099	w	_	_
163-18	12099-12100	`	_	_
163-19	12100-12101	.	_	_

#Text=```Matlab     d = 3\; n = 300\; data = logistic\_regression\_data\_generator(n, d)\; ```  \*\*Step 2: Define problem\*\*  The problem to be solved should be defined properly from the \[supported problems\](#supp\_pro).
164-1	12102-12103	`	_	_
164-2	12103-12104	`	_	_
164-3	12104-12105	`	_	_
164-4	12105-12111	Matlab	_	_
164-5	12116-12117	d	_	_
164-6	12118-12119	=	_	_
164-7	12120-12121	3	_	_
164-8	12121-12122	\;	_	_
164-9	12123-12124	n	_	_
164-10	12125-12126	=	_	_
164-11	12127-12130	300	_	_
164-12	12130-12131	\;	_	_
164-13	12132-12136	data	_	_
164-14	12137-12138	=	_	_
164-15	12139-12173	logistic\_regression\_data\_generator	_	_
164-16	12173-12174	(	_	_
164-17	12174-12175	n	_	_
164-18	12175-12176	,	_	_
164-19	12177-12178	d	_	_
164-20	12178-12179	)	_	_
164-21	12179-12180	\;	_	_
164-22	12181-12182	`	_	_
164-23	12182-12183	`	_	_
164-24	12183-12184	`	_	_
164-25	12186-12187	\*	_	_
164-26	12187-12188	\*	_	_
164-27	12188-12192	Step	_	_
164-28	12193-12194	2	_	_
164-29	12194-12195	:	_	_
164-30	12196-12202	Define	_	_
164-31	12203-12210	problem	_	_
164-32	12210-12211	\*	_	_
164-33	12211-12212	\*	_	_
164-34	12214-12217	The	_	_
164-35	12218-12225	problem	_	_
164-36	12226-12228	to	_	_
164-37	12229-12231	be	_	_
164-38	12232-12238	solved	_	_
164-39	12239-12245	should	_	_
164-40	12246-12248	be	_	_
164-41	12249-12256	defined	_	_
164-42	12257-12265	properly	_	_
164-43	12266-12270	from	_	_
164-44	12271-12274	the	_	_
164-45	12275-12276	\[	_	_
164-46	12276-12285	supported	_	_
164-47	12286-12294	problems	_	_
164-48	12294-12295	\]	_	_
164-49	12295-12296	(	_	_
164-50	12296-12297	#	_	_
164-51	12297-12305	supp\_pro	_	_
164-52	12305-12306	)	_	_
164-53	12306-12307	.	_	_

#Text=`logistic\_regression()` provides the comprehensive  functions for a logistic regression problem.
165-1	12308-12309	`	_	_
165-2	12309-12328	logistic\_regression	_	_
165-3	12328-12329	(	_	_
165-4	12329-12330	)	_	_
165-5	12330-12331	`	_	_
165-6	12332-12340	provides	_	_
165-7	12341-12344	the	_	_
165-8	12345-12358	comprehensive	_	_
165-9	12360-12369	functions	_	_
165-10	12370-12373	for	_	_
165-11	12374-12375	a	_	_
165-12	12376-12384	logistic	_	_
165-13	12385-12395	regression	_	_
165-14	12396-12403	problem	_	_
165-15	12403-12404	.	_	_

#Text=This returns the cost value by `cost(w)`, the gradient by `grad(w)` and the hessian by `hess(w)` when given `w`.
166-1	12405-12409	This	_	_
166-2	12410-12417	returns	_	_
166-3	12418-12421	the	_	_
166-4	12422-12426	cost	_	_
166-5	12427-12432	value	_	_
166-6	12433-12435	by	_	_
166-7	12436-12437	`	_	_
166-8	12437-12441	cost	_	_
166-9	12441-12442	(	_	_
166-10	12442-12443	w	_	_
166-11	12443-12444	)	_	_
166-12	12444-12445	`	_	_
166-13	12445-12446	,	_	_
166-14	12447-12450	the	_	_
166-15	12451-12459	gradient	_	_
166-16	12460-12462	by	_	_
166-17	12463-12464	`	_	_
166-18	12464-12468	grad	_	_
166-19	12468-12469	(	_	_
166-20	12469-12470	w	_	_
166-21	12470-12471	)	_	_
166-22	12471-12472	`	_	_
166-23	12473-12476	and	_	_
166-24	12477-12480	the	_	_
166-25	12481-12488	hessian	_	_
166-26	12489-12491	by	_	_
166-27	12492-12493	`	_	_
166-28	12493-12497	hess	_	_
166-29	12497-12498	(	_	_
166-30	12498-12499	w	_	_
166-31	12499-12500	)	_	_
166-32	12500-12501	`	_	_
166-33	12502-12506	when	_	_
166-34	12507-12512	given	_	_
166-35	12513-12514	`	_	_
166-36	12514-12515	w	*[465]	PUBLICATION[465]
166-37	12515-12516	`	_	_
166-38	12516-12517	.	_	_

#Text=These are essential for any gradient descent algorithms.
167-1	12519-12524	These	_	_
167-2	12525-12528	are	_	_
167-3	12529-12538	essential	_	_
167-4	12539-12542	for	_	_
167-5	12543-12546	any	*[483]	WORKSHOP[483]
167-6	12547-12555	gradient	*[483]	WORKSHOP[483]
167-7	12556-12563	descent	_	_
167-8	12564-12574	algorithms	_	_
167-9	12574-12575	.	_	_

#Text=```Matlab problem = logistic\_regression(data.x\_train, data.y\_train, data.x\_test, data.y\_test)\;  ```  \*\*Step 3: Perform solver\*\*  Now, you can perform optimization solvers, i.e., SGD and SVRG, calling \[solver functions\](#supp\_solver), i.e., `sgd()` function and `svrg()` function after setting some optimization options.
168-1	12576-12577	`	_	_
168-2	12577-12578	`	_	_
168-3	12578-12579	`	_	_
168-4	12579-12585	Matlab	_	_
168-5	12586-12593	problem	_	_
168-6	12594-12595	=	_	_
168-7	12596-12615	logistic\_regression	_	_
168-8	12615-12616	(	_	_
168-9	12616-12628	data.x\_train	_	_
168-10	12628-12629	,	_	_
168-11	12630-12642	data.y\_train	_	_
168-12	12642-12643	,	_	_
168-13	12644-12655	data.x\_test	_	_
168-14	12655-12656	,	_	_
168-15	12657-12668	data.y\_test	_	_
168-16	12668-12669	)	_	_
168-17	12669-12670	\;	_	_
168-18	12672-12673	`	_	_
168-19	12673-12674	`	_	_
168-20	12674-12675	`	_	_
168-21	12677-12678	\*	_	_
168-22	12678-12679	\*	_	_
168-23	12679-12683	Step	_	_
168-24	12684-12685	3	_	_
168-25	12685-12686	:	_	_
168-26	12687-12694	Perform	_	_
168-27	12695-12701	solver	_	_
168-28	12701-12702	\*	_	_
168-29	12702-12703	\*	_	_
168-30	12705-12708	Now	_	_
168-31	12708-12709	,	_	_
168-32	12710-12713	you	_	_
168-33	12714-12717	can	_	_
168-34	12718-12725	perform	_	_
168-35	12726-12738	optimization	_	_
168-36	12739-12746	solvers	_	_
168-37	12746-12747	,	_	_
168-38	12748-12751	i.e	_	_
168-39	12751-12752	.	_	_
168-40	12752-12753	,	_	_
168-41	12754-12757	SGD	_	_
168-42	12758-12761	and	_	_
168-43	12762-12766	SVRG	_	_
168-44	12766-12767	,	_	_
168-45	12768-12775	calling	_	_
168-46	12776-12777	\[	_	_
168-47	12777-12783	solver	_	_
168-48	12784-12793	functions	_	_
168-49	12793-12794	\]	_	_
168-50	12794-12795	(	_	_
168-51	12795-12796	#	_	_
168-52	12796-12807	supp\_solver	_	_
168-53	12807-12808	)	_	_
168-54	12808-12809	,	_	_
168-55	12810-12813	i.e	_	_
168-56	12813-12814	.	_	_
168-57	12814-12815	,	_	_
168-58	12816-12817	`	_	_
168-59	12817-12820	sgd	_	_
168-60	12820-12821	(	_	_
168-61	12821-12822	)	_	_
168-62	12822-12823	`	_	_
168-63	12824-12832	function	_	_
168-64	12833-12836	and	_	_
168-65	12837-12838	`	_	_
168-66	12838-12842	svrg	_	_
168-67	12842-12843	(	_	_
168-68	12843-12844	)	_	_
168-69	12844-12845	`	_	_
168-70	12846-12854	function	_	_
168-71	12855-12860	after	*[466]	PUBLICATION[466]
168-72	12861-12868	setting	*[466]	PUBLICATION[466]
168-73	12869-12873	some	*[466]	PUBLICATION[466]
168-74	12874-12886	optimization	*[466]	PUBLICATION[466]
168-75	12887-12894	options	_	_
168-76	12894-12895	.	_	_

#Text=```Matlab options.w\_init = data.w\_init\; options.step\_init = 0.01\;   \[w\_sgd, info\_sgd\] = sgd(problem, options)\;   \[w\_svrg, info\_svrg\] = svrg(problem, options)\; ``` They return the final solutions of `w` and the statistics information that include the histories of epoch numbers, cost values, norms of gradient, the number of gradient evaluations and so on.
169-1	12897-12898	`	_	_
169-2	12898-12899	`	_	_
169-3	12899-12900	`	_	_
169-4	12900-12906	Matlab	_	_
169-5	12907-12921	options.w\_init	_	_
169-6	12922-12923	=	_	_
169-7	12924-12935	data.w\_init	_	_
169-8	12935-12936	\;	_	_
169-9	12937-12954	options.step\_init	_	_
169-10	12955-12956	=	_	_
169-11	12957-12961	0.01	_	_
169-12	12961-12962	\;	_	_
169-13	12965-12966	\[	_	_
169-14	12966-12971	w\_sgd	_	_
169-15	12971-12972	,	_	_
169-16	12973-12981	info\_sgd	_	_
169-17	12981-12982	\]	_	_
169-18	12983-12984	=	_	_
169-19	12985-12988	sgd	_	_
169-20	12988-12989	(	_	_
169-21	12989-12996	problem	_	_
169-22	12996-12997	,	_	_
169-23	12998-13005	options	_	_
169-24	13005-13006	)	_	_
169-25	13006-13007	\;	_	_
169-26	13010-13011	\[	_	_
169-27	13011-13017	w\_svrg	_	_
169-28	13017-13018	,	_	_
169-29	13019-13028	info\_svrg	_	_
169-30	13028-13029	\]	_	_
169-31	13030-13031	=	_	_
169-32	13032-13036	svrg	_	_
169-33	13036-13037	(	_	_
169-34	13037-13044	problem	_	_
169-35	13044-13045	,	_	_
169-36	13046-13053	options	_	_
169-37	13053-13054	)	_	_
169-38	13054-13055	\;	_	_
169-39	13056-13057	`	_	_
169-40	13057-13058	`	_	_
169-41	13058-13059	`	_	_
169-42	13060-13064	They	_	_
169-43	13065-13071	return	_	_
169-44	13072-13075	the	_	_
169-45	13076-13081	final	_	_
169-46	13082-13091	solutions	_	_
169-47	13092-13094	of	_	_
169-48	13095-13096	`	_	_
169-49	13096-13097	w	_	_
169-50	13097-13098	`	_	_
169-51	13099-13102	and	_	_
169-52	13103-13106	the	_	_
169-53	13107-13117	statistics	_	_
169-54	13118-13129	information	_	_
169-55	13130-13134	that	_	_
169-56	13135-13142	include	_	_
169-57	13143-13146	the	_	_
169-58	13147-13156	histories	_	_
169-59	13157-13159	of	_	_
169-60	13160-13165	epoch	_	_
169-61	13166-13173	numbers	_	_
169-62	13173-13174	,	_	_
169-63	13175-13179	cost	_	_
169-64	13180-13186	values	*[528]	LICENSE[528]
169-65	13186-13187	,	*[528]	LICENSE[528]
169-66	13188-13193	norms	*[528]	LICENSE[528]
169-67	13194-13196	of	*[528]	LICENSE[528]
169-68	13197-13205	gradient	*[528]	LICENSE[528]
169-69	13205-13206	,	*[528]	LICENSE[528]
169-70	13207-13210	the	*[528]	LICENSE[528]
169-71	13211-13217	number	_	_
169-72	13218-13220	of	_	_
169-73	13221-13229	gradient	_	_
169-74	13230-13241	evaluations	_	_
169-75	13242-13245	and	_	_
169-76	13246-13248	so	_	_
169-77	13249-13251	on	_	_
169-78	13251-13252	.	_	_

#Text=\*\*Step 4: Show result\*\*  Finally, `display\_graph()` provides output results of decreasing behavior of the cost values in terms of the number of gradient evaluations.
170-1	13254-13255	\*	_	_
170-2	13255-13256	\*	_	_
170-3	13256-13260	Step	_	_
170-4	13261-13262	4	_	_
170-5	13262-13263	:	_	_
170-6	13264-13268	Show	_	_
170-7	13269-13275	result	_	_
170-8	13275-13276	\*	_	_
170-9	13276-13277	\*	_	_
170-10	13279-13286	Finally	_	_
170-11	13286-13287	,	_	_
170-12	13288-13289	`	_	_
170-13	13289-13302	display\_graph	_	_
170-14	13302-13303	(	_	_
170-15	13303-13304	)	_	_
170-16	13304-13305	`	_	_
170-17	13306-13314	provides	_	_
170-18	13315-13321	output	_	_
170-19	13322-13329	results	_	_
170-20	13330-13332	of	_	_
170-21	13333-13343	decreasing	_	_
170-22	13344-13352	behavior	_	_
170-23	13353-13355	of	*[543]	EVALMETRIC[543]
170-24	13356-13359	the	*[543]	EVALMETRIC[543]
170-25	13360-13364	cost	*[543]	EVALMETRIC[543]
170-26	13365-13371	values	*[543]	EVALMETRIC[543]
170-27	13372-13374	in	*[543]	EVALMETRIC[543]
170-28	13375-13380	terms	*[543]	EVALMETRIC[543]
170-29	13381-13383	of	*[543]	EVALMETRIC[543]
170-30	13384-13387	the	_	_
170-31	13388-13394	number	_	_
170-32	13395-13397	of	_	_
170-33	13398-13406	gradient	_	_
170-34	13407-13418	evaluations	_	_
170-35	13418-13419	.	_	_

#Text=Note that each algorithm needs different number of evaluations of samples in each epoch.
171-1	13421-13425	Note	_	_
171-2	13426-13430	that	_	_
171-3	13431-13435	each	_	_
171-4	13436-13445	algorithm	_	_
171-5	13446-13451	needs	_	_
171-6	13452-13461	different	_	_
171-7	13462-13468	number	_	_
171-8	13469-13471	of	_	_
171-9	13472-13483	evaluations	_	_
171-10	13484-13486	of	_	_
171-11	13487-13494	samples	_	_
171-12	13495-13497	in	*[467]	PUBLICATION[467]
171-13	13498-13502	each	_	_
171-14	13503-13508	epoch	_	_
171-15	13508-13509	.	_	_

#Text=Therefore, it is common to use this number to evaluate stochastic optimization algorithms instead of the number of iterations.
172-1	13510-13519	Therefore	_	_
172-2	13519-13520	,	_	_
172-3	13521-13523	it	_	_
172-4	13524-13526	is	_	_
172-5	13527-13533	common	_	_
172-6	13534-13536	to	_	_
172-7	13537-13540	use	_	_
172-8	13541-13545	this	_	_
172-9	13546-13552	number	_	_
172-10	13553-13555	to	_	_
172-11	13556-13564	evaluate	_	_
172-12	13565-13575	stochastic	_	_
172-13	13576-13588	optimization	*[498]	CONFERENCE[498]
172-14	13589-13599	algorithms	*[498]	CONFERENCE[498]
172-15	13600-13607	instead	*[498]	CONFERENCE[498]
172-16	13608-13610	of	*[498]	CONFERENCE[498]
172-17	13611-13614	the	*[498]	CONFERENCE[498]
172-18	13615-13621	number	*[498]	CONFERENCE[498]
172-19	13622-13624	of	_	_
172-20	13625-13635	iterations	_	_
172-21	13635-13636	.	_	_

#Text=```Matlab display\_graph('grad\_calc\_count','cost', {'SGD', 'SVRG'}, {w\_sgd, w\_svrg}, {info\_sgd, info\_svrg})\; ```  That's it!
173-1	13637-13638	`	_	_
173-2	13638-13639	`	*[487]	DATASET[487]
173-3	13639-13640	`	*[487]	DATASET[487]
173-4	13640-13646	Matlab	*[487]	DATASET[487]
173-5	13647-13660	display\_graph	*[487]	DATASET[487]
173-6	13660-13661	(	*[487]	DATASET[487]
173-7	13661-13662	'	*[487]	DATASET[487]
173-8	13662-13677	grad\_calc\_count	*[487]	DATASET[487]
173-9	13677-13678	'	*[487]	DATASET[487]
173-10	13678-13679	,	*[487]	DATASET[487]
173-11	13679-13680	'	*[487]	DATASET[487]
173-12	13680-13684	cost	*[487]	DATASET[487]
173-13	13684-13685	'	*[487]	DATASET[487]
173-14	13685-13686	,	*[487]	DATASET[487]
173-15	13687-13688	{	*[487]	DATASET[487]
173-16	13688-13689	'	*[487]	DATASET[487]
173-17	13689-13692	SGD	*[487]	DATASET[487]
173-18	13692-13693	'	*[487]	DATASET[487]
173-19	13693-13694	,	_	_
173-20	13695-13696	'	_	_
173-21	13696-13700	SVRG	_	_
173-22	13700-13701	'	_	_
173-23	13701-13702	}	_	_
173-24	13702-13703	,	_	_
173-25	13704-13705	{	_	_
173-26	13705-13710	w\_sgd	_	_
173-27	13710-13711	,	_	_
173-28	13712-13718	w\_svrg	_	_
173-29	13718-13719	}	_	_
173-30	13719-13720	,	_	_
173-31	13721-13722	{	_	_
173-32	13722-13730	info\_sgd	_	_
173-33	13730-13731	,	_	_
173-34	13732-13741	info\_svrg	_	_
173-35	13741-13742	}	_	_
173-36	13742-13743	)	_	_
173-37	13743-13744	\;	_	_
173-38	13745-13746	`	_	_
173-39	13746-13747	`	_	_
173-40	13747-13748	`	_	_
173-41	13750-13756	That's	_	_
173-42	13757-13759	it	_	_
173-43	13759-13760	!	_	_

#Text=<br />  More plots ----------------------------  "\*\*demo\_ext.m\*\*" gives you more plots
174-1	13762-13763	<	_	_
174-2	13763-13765	br	_	_
174-3	13766-13767	/	_	_
174-4	13767-13768	>	_	_
174-5	13770-13774	More	_	_
174-6	13775-13780	plots	_	_
174-7	13781-13782	-	_	_
174-8	13782-13783	-	_	_
174-9	13783-13784	-	_	_
174-10	13784-13785	-	_	_
174-11	13785-13786	-	_	_
174-12	13786-13787	-	_	_
174-13	13787-13788	-	_	_
174-14	13788-13789	-	_	_
174-15	13789-13790	-	*[518]	PROGLANG[518]
174-16	13790-13791	-	*[518]	PROGLANG[518]
174-17	13791-13792	-	*[518]	PROGLANG[518]
174-18	13792-13793	-	*[518]	PROGLANG[518]
174-19	13793-13794	-	*[518]	PROGLANG[518]
174-20	13794-13795	-	*[518]	PROGLANG[518]
174-21	13795-13796	-	*[518]	PROGLANG[518]
174-22	13796-13797	-	*[518]	PROGLANG[518]
174-23	13797-13798	-	*[518]	PROGLANG[518]
174-24	13798-13799	-	*[518]	PROGLANG[518]
174-25	13799-13800	-	*[518]	PROGLANG[518]
174-26	13800-13801	-	*[518]	PROGLANG[518]
174-27	13801-13802	-	*[518]	PROGLANG[518]
174-28	13802-13803	-	*[518]	PROGLANG[518]
174-29	13803-13804	-	*[518]	PROGLANG[518]
174-30	13804-13805	-	*[518]	PROGLANG[518]
174-31	13805-13806	-	*[518]	PROGLANG[518]
174-32	13806-13807	-	*[518]	PROGLANG[518]
174-33	13807-13808	-	*[518]	PROGLANG[518]
174-34	13808-13809	-	*[518]	PROGLANG[518]
174-35	13811-13812	"	*[518]	PROGLANG[518]
174-36	13812-13813	\*	*[518]	PROGLANG[518]
174-37	13813-13814	\*	*[518]	PROGLANG[518]
174-38	13814-13824	demo\_ext.m	*[518]	PROGLANG[518]
174-39	13824-13825	\*	*[518]	PROGLANG[518]
174-40	13825-13826	\*	*[518]	PROGLANG[518]
174-41	13826-13827	"	*[518]	PROGLANG[518]
174-42	13828-13833	gives	_	_
174-43	13834-13837	you	_	_
174-44	13838-13842	more	_	_
174-45	13843-13848	plots	_	_

#Text=.
175-1	13848-13849	.	_	_

#Text=- \*\*Demonstration of "optimality gap"\*\*  For the calculation of "optimality gap", you need optimal solution `w\_opt` beforehand by calling `calc\_solution()` function of the problem definition function.
176-1	13851-13852	-	_	_
176-2	13853-13854	\*	_	_
176-3	13854-13855	\*	_	_
176-4	13855-13868	Demonstration	_	_
176-5	13869-13871	of	_	_
176-6	13872-13873	"	_	_
176-7	13873-13883	optimality	_	_
176-8	13884-13887	gap	_	_
176-9	13887-13888	"	_	_
176-10	13888-13889	\*	_	_
176-11	13889-13890	\*	_	_
176-12	13892-13895	For	_	_
176-13	13896-13899	the	_	_
176-14	13900-13911	calculation	_	_
176-15	13912-13914	of	_	_
176-16	13915-13916	"	_	_
176-17	13916-13926	optimality	_	_
176-18	13927-13930	gap	_	_
176-19	13930-13931	"	*[476]	ONTOLOGY[476]
176-20	13931-13932	,	*[476]	ONTOLOGY[476]
176-21	13933-13936	you	*[476]	ONTOLOGY[476]
176-22	13937-13941	need	*[476]	ONTOLOGY[476]
176-23	13942-13949	optimal	*[476]	ONTOLOGY[476]
176-24	13950-13958	solution	*[476]	ONTOLOGY[476]
176-25	13959-13960	`	*[476]	ONTOLOGY[476]
176-26	13960-13965	w\_opt	*[476]	ONTOLOGY[476]
176-27	13965-13966	`	*[476]	ONTOLOGY[476]
176-28	13967-13977	beforehand	_	_
176-29	13978-13980	by	_	_
176-30	13981-13988	calling	_	_
176-31	13989-13990	`	_	_
176-32	13990-14003	calc\_solution	_	_
176-33	14003-14004	(	_	_
176-34	14004-14005	)	_	_
176-35	14005-14006	`	_	_
176-36	14007-14015	function	_	_
176-37	14016-14018	of	_	_
176-38	14019-14022	the	_	_
176-39	14023-14030	problem	_	_
176-40	14031-14041	definition	_	_
176-41	14042-14050	function	_	_
176-42	14050-14051	.	_	_

#Text=```Matlab %% calculate optimal solution for optimality gap w\_opt = problem.calc\_solution(1000)\; options.f\_opt = problem.cost(w\_opt)\; ```  This case uses the full gradient descent solve `gd()` to obtain an optimal solution under max iteration 1000 with very precise tolerant stopping condition.
177-1	14053-14054	`	_	_
177-2	14054-14055	`	_	_
177-3	14055-14056	`	_	_
177-4	14056-14062	Matlab	_	_
177-5	14063-14064	%	_	_
177-6	14064-14065	%	_	_
177-7	14066-14075	calculate	_	_
177-8	14076-14083	optimal	_	_
177-9	14084-14092	solution	_	_
177-10	14093-14096	for	_	_
177-11	14097-14107	optimality	_	_
177-12	14108-14111	gap	_	_
177-13	14112-14117	w\_opt	_	_
177-14	14118-14119	=	_	_
177-15	14120-14141	problem.calc\_solution	_	_
177-16	14141-14142	(	_	_
177-17	14142-14146	1000	_	_
177-18	14146-14147	)	_	_
177-19	14147-14148	\;	_	_
177-20	14149-14162	options.f\_opt	_	_
177-21	14163-14164	=	_	_
177-22	14165-14177	problem.cost	_	_
177-23	14177-14178	(	_	_
177-24	14178-14183	w\_opt	_	_
177-25	14183-14184	)	_	_
177-26	14184-14185	\;	_	_
177-27	14186-14187	`	_	_
177-28	14187-14188	`	_	_
177-29	14188-14189	`	_	_
177-30	14191-14195	This	_	_
177-31	14196-14200	case	_	_
177-32	14201-14205	uses	_	_
177-33	14206-14209	the	_	_
177-34	14210-14214	full	_	_
177-35	14215-14223	gradient	_	_
177-36	14224-14231	descent	_	_
177-37	14232-14237	solve	_	_
177-38	14238-14239	`	_	_
177-39	14239-14241	gd	_	_
177-40	14241-14242	(	_	_
177-41	14242-14243	)	_	_
177-42	14243-14244	`	_	_
177-43	14245-14247	to	_	_
177-44	14248-14254	obtain	_	_
177-45	14255-14257	an	_	_
177-46	14258-14265	optimal	_	_
177-47	14266-14274	solution	_	_
177-48	14275-14280	under	*[534]	SOFTWARE[534]
177-49	14281-14284	max	*[534]	SOFTWARE[534]
177-50	14285-14294	iteration	*[534]	SOFTWARE[534]
177-51	14295-14299	1000	*[534]	SOFTWARE[534]
177-52	14300-14304	with	_	_
177-53	14305-14309	very	_	_
177-54	14310-14317	precise	_	_
177-55	14318-14326	tolerant	_	_
177-56	14327-14335	stopping	_	_
177-57	14336-14345	condition	_	_
177-58	14345-14346	.	_	_

#Text=Then, you obtain the result of optimality gap by `display\_graph()`.
178-1	14348-14352	Then	_	_
178-2	14352-14353	,	*[468]	PUBLICATION[468]
178-3	14354-14357	you	*[468]	PUBLICATION[468]
178-4	14358-14364	obtain	*[468]	PUBLICATION[468]
178-5	14365-14368	the	*[468]	PUBLICATION[468]
178-6	14369-14375	result	_	_
178-7	14376-14378	of	_	_
178-8	14379-14389	optimality	_	_
178-9	14390-14393	gap	_	_
178-10	14394-14396	by	_	_
178-11	14397-14398	`	_	_
178-12	14398-14411	display\_graph	_	_
178-13	14411-14412	(	_	_
178-14	14412-14413	)	_	_
178-15	14413-14414	`	_	_
178-16	14414-14415	.	_	_

#Text=```Matlab display\_graph('grad\_calc\_count','optimality\_gap', {'SGD', 'SVRG'}, {w\_sgd, w\_svrg}, {info\_sgd, info\_svrg})\;     ```  - \*\*Demonstration of "classification accuracy"\*\*  Additionally, in this case of logistic regression, the results of classification accuracy are calculated using the corresponding prediction function `prediction()` and `accuracy` of the problem definition function `logistic\_regression()`.
179-1	14417-14418	`	_	_
179-2	14418-14419	`	_	_
179-3	14419-14420	`	_	_
179-4	14420-14426	Matlab	_	_
179-5	14427-14440	display\_graph	_	_
179-6	14440-14441	(	_	_
179-7	14441-14442	'	_	_
179-8	14442-14457	grad\_calc\_count	_	_
179-9	14457-14458	'	_	_
179-10	14458-14459	,	_	_
179-11	14459-14460	'	_	_
179-12	14460-14474	optimality\_gap	_	_
179-13	14474-14475	'	_	_
179-14	14475-14476	,	_	_
179-15	14477-14478	{	_	_
179-16	14478-14479	'	_	_
179-17	14479-14482	SGD	_	_
179-18	14482-14483	'	_	_
179-19	14483-14484	,	_	_
179-20	14485-14486	'	_	_
179-21	14486-14490	SVRG	_	_
179-22	14490-14491	'	_	_
179-23	14491-14492	}	_	_
179-24	14492-14493	,	_	_
179-25	14494-14495	{	_	_
179-26	14495-14500	w\_sgd	_	_
179-27	14500-14501	,	_	_
179-28	14502-14508	w\_svrg	_	_
179-29	14508-14509	}	_	_
179-30	14509-14510	,	_	_
179-31	14511-14512	{	_	_
179-32	14512-14520	info\_sgd	_	_
179-33	14520-14521	,	_	_
179-34	14522-14531	info\_svrg	_	_
179-35	14531-14532	}	_	_
179-36	14532-14533	)	_	_
179-37	14533-14534	\;	_	_
179-38	14539-14540	`	_	_
179-39	14540-14541	`	_	_
179-40	14541-14542	`	_	_
179-41	14544-14545	-	_	_
179-42	14546-14547	\*	_	_
179-43	14547-14548	\*	_	_
179-44	14548-14561	Demonstration	_	_
179-45	14562-14564	of	_	_
179-46	14565-14566	"	_	_
179-47	14566-14580	classification	_	_
179-48	14581-14589	accuracy	_	_
179-49	14589-14590	"	_	_
179-50	14590-14591	\*	_	_
179-51	14591-14592	\*	_	_
179-52	14594-14606	Additionally	_	_
179-53	14606-14607	,	_	_
179-54	14608-14610	in	_	_
179-55	14611-14615	this	_	_
179-56	14616-14620	case	_	_
179-57	14621-14623	of	_	_
179-58	14624-14632	logistic	_	_
179-59	14633-14643	regression	*[529]	LICENSE[529]
179-60	14643-14644	,	*[529]	LICENSE[529]
179-61	14645-14648	the	*[529]	LICENSE[529]
179-62	14649-14656	results	*[529]	LICENSE[529]
179-63	14657-14659	of	*[529]	LICENSE[529]
179-64	14660-14674	classification	*[529]	LICENSE[529]
179-65	14675-14683	accuracy	*[529]	LICENSE[529]
179-66	14684-14687	are	*[529]	LICENSE[529]
179-67	14688-14698	calculated	*[529]	LICENSE[529]
179-68	14699-14704	using	*[529]	LICENSE[529]
179-69	14705-14708	the	*[529]	LICENSE[529]
179-70	14709-14722	corresponding	*[529]	LICENSE[529]
179-71	14723-14733	prediction	_	_
179-72	14734-14742	function	_	_
179-73	14743-14744	`	_	_
179-74	14744-14754	prediction	_	_
179-75	14754-14755	(	_	_
179-76	14755-14756	)	_	_
179-77	14756-14757	`	_	_
179-78	14758-14761	and	_	_
179-79	14762-14763	`	_	_
179-80	14763-14771	accuracy	_	_
179-81	14771-14772	`	_	_
179-82	14773-14775	of	_	_
179-83	14776-14779	the	_	_
179-84	14780-14787	problem	_	_
179-85	14788-14798	definition	_	_
179-86	14799-14807	function	_	_
179-87	14808-14809	`	_	_
179-88	14809-14828	logistic\_regression	_	_
179-89	14828-14829	(	_	_
179-90	14829-14830	)	_	_
179-91	14830-14831	`	_	_
179-92	14831-14832	.	_	_

#Text=Furthermore, the classification accuracies are illustrated by `display\_classification\_result()` function that is written in "\*\*demo.m\*\*" like below\; ```Matlab %% calculate classification accuracy % for SGD % predict y\_pred\_sgd = problem.prediction(w\_sgd)\; % calculate accuracy accuracy\_sgd = problem.accuracy(y\_pred\_sgd)\;  fprintf('Classificaiton accuracy: %s: %.4f\\n', 'SGD', accuracy\_sgd)\; % convert from {1,-1} to {1,2} y\_pred\_sgd(y\_pred\_sgd==-1) = 2\; y\_pred\_sgd(y\_pred\_sgd==1) = 1\;   % for SVRG % predict     y\_pred\_svrg = problem.prediction(w\_svrg)\; % calculate accuracy accuracy\_svrg = problem.accuracy(y\_pred\_svrg)\;  fprintf('Classificaiton accuracy: %s: %.4f\\n', 'SVRG', accuracy\_svrg)\; % convert from {1,-1} to {1,2} y\_pred\_svrg(y\_pred\_svrg==-1) = 2\; y\_pred\_svrg(y\_pred\_svrg==1) = 1\;   %% display classification results  % convert from {1,-1} to {1,2} data.y\_train(data.y\_train==-1) = 2\; data.y\_train(data.y\_train==1) = 1\; data.y\_test(data.y\_test==-1) = 2\; data.y\_test(data.y\_test==1) = 1\;   % display results display\_classification\_result(problem, {'SGD', 'SVRG'}, {w\_sgd, w\_svrg}, {y\_pred\_sgd, y\_pred\_svrg}, {accuracy\_sgd, accuracy\_svrg}, data.x\_train, data.y\_train, data.x\_test, data.y\_test)\;      ```      Output results:  <img src="http://www.kasailab.com/public/github/SGDLibrary/images/log\_reg\_results.png" width="900"> <br /><br />   - \*\*Demonstration of "convergence animation"\*\*  You need specify additional options before executing solvers.
180-1	14834-14845	Furthermore	_	_
180-2	14845-14846	,	_	_
180-3	14847-14850	the	_	_
180-4	14851-14865	classification	_	_
180-5	14866-14876	accuracies	_	_
180-6	14877-14880	are	_	_
180-7	14881-14892	illustrated	_	_
180-8	14893-14895	by	*[469]	PUBLICATION[469]
180-9	14896-14897	`	*[469]	PUBLICATION[469]
180-10	14897-14926	display\_classification\_result	*[469]	PUBLICATION[469]
180-11	14926-14927	(	*[469]	PUBLICATION[469]
180-12	14927-14928	)	*[469]	PUBLICATION[469]
180-13	14928-14929	`	*[469]	PUBLICATION[469]
180-14	14930-14938	function	*[469]	PUBLICATION[469]
180-15	14939-14943	that	*[469]	PUBLICATION[469]
180-16	14944-14946	is	*[469]	PUBLICATION[469]
180-17	14947-14954	written	*[469]	PUBLICATION[469]
180-18	14955-14957	in	*[469]	PUBLICATION[469]
180-19	14958-14959	"	*[469]	PUBLICATION[469]
180-20	14959-14960	\*	*[469]	PUBLICATION[469]
180-21	14960-14961	\*	*[469]	PUBLICATION[469]
180-22	14961-14967	demo.m	*[469]	PUBLICATION[469]
180-23	14967-14968	\*	*[469]	PUBLICATION[469]
180-24	14968-14969	\*	*[469]	PUBLICATION[469]
180-25	14969-14970	"	*[469]	PUBLICATION[469]
180-26	14971-14975	like	*[469]	PUBLICATION[469]
180-27	14976-14981	below	*[469]	PUBLICATION[469]
180-28	14981-14982	\;	*[469]	PUBLICATION[469]
180-29	14983-14984	`	*[469]	PUBLICATION[469]
180-30	14984-14985	`	*[469]	PUBLICATION[469]
180-31	14985-14986	`	*[469]	PUBLICATION[469]
180-32	14986-14992	Matlab	*[469]	PUBLICATION[469]
180-33	14993-14994	%	*[469]	PUBLICATION[469]
180-34	14994-14995	%	*[469]	PUBLICATION[469]
180-35	14996-15005	calculate	*[469]	PUBLICATION[469]
180-36	15006-15020	classification	*[469]	PUBLICATION[469]
180-37	15021-15029	accuracy	*[469]	PUBLICATION[469]
180-38	15030-15031	%	*[469]	PUBLICATION[469]
180-39	15032-15035	for	*[469]	PUBLICATION[469]
180-40	15036-15039	SGD	*[469]	PUBLICATION[469]
180-41	15040-15041	%	*[469]	PUBLICATION[469]
180-42	15042-15049	predict	*[469]	PUBLICATION[469]
180-43	15050-15060	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-44	15061-15062	=	*[469]	PUBLICATION[469]
180-45	15063-15081	problem.prediction	*[469]	PUBLICATION[469]
180-46	15081-15082	(	*[469]	PUBLICATION[469]
180-47	15082-15087	w\_sgd	*[469]	PUBLICATION[469]
180-48	15087-15088	)	*[469]	PUBLICATION[469]
180-49	15088-15089	\;	*[469]	PUBLICATION[469]
180-50	15090-15091	%	*[469]	PUBLICATION[469]
180-51	15092-15101	calculate	*[469]	PUBLICATION[469]
180-52	15102-15110	accuracy	*[469]	PUBLICATION[469]
180-53	15111-15123	accuracy\_sgd	*[469]	PUBLICATION[469]
180-54	15124-15125	=	*[469]	PUBLICATION[469]
180-55	15126-15142	problem.accuracy	*[469]	PUBLICATION[469]
180-56	15142-15143	(	*[469]	PUBLICATION[469]
180-57	15143-15153	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-58	15153-15154	)	*[469]	PUBLICATION[469]
180-59	15154-15155	\;	*[469]	PUBLICATION[469]
180-60	15157-15164	fprintf	*[469]	PUBLICATION[469]
180-61	15164-15165	(	*[469]	PUBLICATION[469]
180-62	15165-15166	'	*[469]	PUBLICATION[469]
180-63	15166-15180	Classificaiton	*[469]	PUBLICATION[469]
180-64	15181-15189	accuracy	*[469]	PUBLICATION[469]
180-65	15189-15190	:	*[469]	PUBLICATION[469]
180-66	15191-15192	%	*[469]	PUBLICATION[469]
180-67	15192-15193	s	*[469]	PUBLICATION[469]
180-68	15193-15194	:	*[469]	PUBLICATION[469]
180-69	15195-15196	%	*[469]	PUBLICATION[469]
180-70	15196-15199	.4f	*[469]	PUBLICATION[469]
180-71	15199-15200	\\	*[469]	PUBLICATION[469]
180-72	15200-15201	n	*[469]	PUBLICATION[469]
180-73	15201-15202	'	*[469]	PUBLICATION[469]
180-74	15202-15203	,	*[469]	PUBLICATION[469]
180-75	15204-15205	'	*[469]	PUBLICATION[469]
180-76	15205-15208	SGD	*[469]	PUBLICATION[469]
180-77	15208-15209	'	*[469]	PUBLICATION[469]
180-78	15209-15210	,	*[469]	PUBLICATION[469]
180-79	15211-15223	accuracy\_sgd	*[469]	PUBLICATION[469]
180-80	15223-15224	)	*[469]	PUBLICATION[469]
180-81	15224-15225	\;	*[469]	PUBLICATION[469]
180-82	15226-15227	%	*[469]	PUBLICATION[469]
180-83	15228-15235	convert	*[469]	PUBLICATION[469]
180-84	15236-15240	from	*[469]	PUBLICATION[469]
180-85	15241-15242	{	*[469]	PUBLICATION[469]
180-86	15242-15243	1	*[469]	PUBLICATION[469]
180-87	15243-15244	,	*[469]	PUBLICATION[469]
180-88	15244-15245	-	*[469]	PUBLICATION[469]
180-89	15245-15246	1	*[469]	PUBLICATION[469]
180-90	15246-15247	}	*[469]	PUBLICATION[469]
180-91	15248-15250	to	*[469]	PUBLICATION[469]
180-92	15251-15252	{	*[469]	PUBLICATION[469]
180-93	15252-15255	1,2	*[469]	PUBLICATION[469]
180-94	15255-15256	}	*[469]	PUBLICATION[469]
180-95	15257-15267	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-96	15267-15268	(	*[469]	PUBLICATION[469]
180-97	15268-15278	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-98	15278-15279	=	*[469]	PUBLICATION[469]
180-99	15279-15280	=	*[469]	PUBLICATION[469]
180-100	15280-15281	-	*[469]	PUBLICATION[469]
180-101	15281-15282	1	*[469]	PUBLICATION[469]
180-102	15282-15283	)	*[469]	PUBLICATION[469]
180-103	15284-15285	=	*[469]	PUBLICATION[469]
180-104	15286-15287	2	*[469]	PUBLICATION[469]
180-105	15287-15288	\;	*[469]	PUBLICATION[469]
180-106	15289-15299	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-107	15299-15300	(	*[469]	PUBLICATION[469]
180-108	15300-15310	y\_pred\_sgd	*[469]	PUBLICATION[469]
180-109	15310-15311	=	*[469]	PUBLICATION[469]
180-110	15311-15312	=	*[469]	PUBLICATION[469]
180-111	15312-15313	1	*[469]	PUBLICATION[469]
180-112	15313-15314	)	*[469]	PUBLICATION[469]
180-113	15315-15316	=	*[469]	PUBLICATION[469]
180-114	15317-15318	1	*[469]	PUBLICATION[469]
180-115	15318-15319	\;	*[469]	PUBLICATION[469]
180-116	15322-15323	%	*[469]	PUBLICATION[469]
180-117	15324-15327	for	*[469]	PUBLICATION[469]
180-118	15328-15332	SVRG	*[469]	PUBLICATION[469]
180-119	15333-15334	%	*[469]	PUBLICATION[469]
180-120	15335-15342	predict	*[469]	PUBLICATION[469]
180-121	15347-15358	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-122	15359-15360	=	*[469]	PUBLICATION[469]
180-123	15361-15379	problem.prediction	*[469]	PUBLICATION[469]
180-124	15379-15380	(	*[469]	PUBLICATION[469]
180-125	15380-15386	w\_svrg	*[469]	PUBLICATION[469]
180-126	15386-15387	)	*[469]	PUBLICATION[469]
180-127	15387-15388	\;	*[469]	PUBLICATION[469]
180-128	15389-15390	%	*[469]	PUBLICATION[469]
180-129	15391-15400	calculate	*[469]	PUBLICATION[469]
180-130	15401-15409	accuracy	*[469]	PUBLICATION[469]
180-131	15410-15423	accuracy\_svrg	*[469]	PUBLICATION[469]
180-132	15424-15425	=	*[469]	PUBLICATION[469]
180-133	15426-15442	problem.accuracy	*[469]	PUBLICATION[469]
180-134	15442-15443	(	*[469]	PUBLICATION[469]
180-135	15443-15454	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-136	15454-15455	)	*[469]	PUBLICATION[469]
180-137	15455-15456	\;	*[469]	PUBLICATION[469]
180-138	15458-15465	fprintf	*[469]	PUBLICATION[469]
180-139	15465-15466	(	*[469]	PUBLICATION[469]
180-140	15466-15467	'	*[469]	PUBLICATION[469]
180-141	15467-15481	Classificaiton	*[469]	PUBLICATION[469]
180-142	15482-15490	accuracy	*[469]	PUBLICATION[469]
180-143	15490-15491	:	*[469]	PUBLICATION[469]
180-144	15492-15493	%	*[469]	PUBLICATION[469]
180-145	15493-15494	s	*[469]	PUBLICATION[469]
180-146	15494-15495	:	*[469]	PUBLICATION[469]
180-147	15496-15497	%	*[469]	PUBLICATION[469]
180-148	15497-15500	.4f	*[469]	PUBLICATION[469]
180-149	15500-15501	\\	*[469]	PUBLICATION[469]
180-150	15501-15502	n	*[469]	PUBLICATION[469]
180-151	15502-15503	'	*[469]	PUBLICATION[469]
180-152	15503-15504	,	*[469]	PUBLICATION[469]
180-153	15505-15506	'	*[469]	PUBLICATION[469]
180-154	15506-15510	SVRG	*[469]	PUBLICATION[469]
180-155	15510-15511	'	*[469]	PUBLICATION[469]
180-156	15511-15512	,	*[469]	PUBLICATION[469]
180-157	15513-15526	accuracy\_svrg	*[469]	PUBLICATION[469]
180-158	15526-15527	)	*[469]	PUBLICATION[469]
180-159	15527-15528	\;	*[469]	PUBLICATION[469]
180-160	15529-15530	%	*[469]	PUBLICATION[469]
180-161	15531-15538	convert	*[469]	PUBLICATION[469]
180-162	15539-15543	from	*[469]	PUBLICATION[469]
180-163	15544-15545	{	*[469]	PUBLICATION[469]
180-164	15545-15546	1	*[469]	PUBLICATION[469]
180-165	15546-15547	,	*[469]	PUBLICATION[469]
180-166	15547-15548	-	*[469]	PUBLICATION[469]
180-167	15548-15549	1	*[469]	PUBLICATION[469]
180-168	15549-15550	}	*[469]	PUBLICATION[469]
180-169	15551-15553	to	*[469]	PUBLICATION[469]
180-170	15554-15555	{	*[469]	PUBLICATION[469]
180-171	15555-15558	1,2	*[469]	PUBLICATION[469]
180-172	15558-15559	}	*[469]	PUBLICATION[469]
180-173	15560-15571	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-174	15571-15572	(	*[469]	PUBLICATION[469]
180-175	15572-15583	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-176	15583-15584	=	*[469]	PUBLICATION[469]
180-177	15584-15585	=	*[469]	PUBLICATION[469]
180-178	15585-15586	-	*[469]	PUBLICATION[469]
180-179	15586-15587	1	*[469]	PUBLICATION[469]
180-180	15587-15588	)	*[469]	PUBLICATION[469]
180-181	15589-15590	=	*[469]	PUBLICATION[469]
180-182	15591-15592	2	*[469]	PUBLICATION[469]
180-183	15592-15593	\;	*[469]	PUBLICATION[469]
180-184	15594-15605	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-185	15605-15606	(	*[469]	PUBLICATION[469]
180-186	15606-15617	y\_pred\_svrg	*[469]	PUBLICATION[469]
180-187	15617-15618	=	*[469]	PUBLICATION[469]
180-188	15618-15619	=	*[469]	PUBLICATION[469]
180-189	15619-15620	1	*[469]	PUBLICATION[469]
180-190	15620-15621	)	*[469]	PUBLICATION[469]
180-191	15622-15623	=	*[469]	PUBLICATION[469]
180-192	15624-15625	1	*[469]	PUBLICATION[469]
180-193	15625-15626	\;	*[469]	PUBLICATION[469]
180-194	15629-15630	%	*[469]	PUBLICATION[469]
180-195	15630-15631	%	*[469]	PUBLICATION[469]
180-196	15632-15639	display	*[469]	PUBLICATION[469]
180-197	15640-15654	classification	*[469]	PUBLICATION[469]
180-198	15655-15662	results	*[469]	PUBLICATION[469]
180-199	15664-15665	%	*[469]	PUBLICATION[469]
180-200	15666-15673	convert	*[469]	PUBLICATION[469]
180-201	15674-15678	from	*[469]	PUBLICATION[469]
180-202	15679-15680	{	*[469]	PUBLICATION[469]
180-203	15680-15681	1	*[469]	PUBLICATION[469]
180-204	15681-15682	,	*[469]	PUBLICATION[469]
180-205	15682-15683	-	*[469]	PUBLICATION[469]
180-206	15683-15684	1	*[469]	PUBLICATION[469]
180-207	15684-15685	}	*[469]	PUBLICATION[469]
180-208	15686-15688	to	*[469]	PUBLICATION[469]
180-209	15689-15690	{	*[469]	PUBLICATION[469]
180-210	15690-15693	1,2	*[469]	PUBLICATION[469]
180-211	15693-15694	}	*[469]	PUBLICATION[469]
180-212	15695-15707	data.y\_train	*[469]	PUBLICATION[469]
180-213	15707-15708	(	*[469]	PUBLICATION[469]
180-214	15708-15720	data.y\_train	*[469]	PUBLICATION[469]
180-215	15720-15721	=	*[469]	PUBLICATION[469]
180-216	15721-15722	=	*[469]	PUBLICATION[469]
180-217	15722-15723	-	*[469]	PUBLICATION[469]
180-218	15723-15724	1	*[469]	PUBLICATION[469]
180-219	15724-15725	)	*[469]	PUBLICATION[469]
180-220	15726-15727	=	*[469]	PUBLICATION[469]
180-221	15728-15729	2	*[469]	PUBLICATION[469]
180-222	15729-15730	\;	*[469]	PUBLICATION[469]
180-223	15731-15743	data.y\_train	*[469]	PUBLICATION[469]
180-224	15743-15744	(	*[469]	PUBLICATION[469]
180-225	15744-15756	data.y\_train	*[469]	PUBLICATION[469]
180-226	15756-15757	=	*[469]	PUBLICATION[469]
180-227	15757-15758	=	*[469]	PUBLICATION[469]
180-228	15758-15759	1	*[469]	PUBLICATION[469]
180-229	15759-15760	)	*[469]	PUBLICATION[469]
180-230	15761-15762	=	*[469]	PUBLICATION[469]
180-231	15763-15764	1	*[469]	PUBLICATION[469]
180-232	15764-15765	\;	*[469]	PUBLICATION[469]
180-233	15766-15777	data.y\_test	*[469]	PUBLICATION[469]
180-234	15777-15778	(	*[469]	PUBLICATION[469]
180-235	15778-15789	data.y\_test	*[469]	PUBLICATION[469]
180-236	15789-15790	=	*[469]	PUBLICATION[469]
180-237	15790-15791	=	*[469]	PUBLICATION[469]
180-238	15791-15792	-	*[469]	PUBLICATION[469]
180-239	15792-15793	1	*[469]	PUBLICATION[469]
180-240	15793-15794	)	*[469]	PUBLICATION[469]
180-241	15795-15796	=	*[469]	PUBLICATION[469]
180-242	15797-15798	2	*[469]	PUBLICATION[469]
180-243	15798-15799	\;	*[469]	PUBLICATION[469]
180-244	15800-15811	data.y\_test	*[469]	PUBLICATION[469]
180-245	15811-15812	(	*[469]	PUBLICATION[469]
180-246	15812-15823	data.y\_test	*[469]	PUBLICATION[469]
180-247	15823-15824	=	*[469]	PUBLICATION[469]
180-248	15824-15825	=	*[469]	PUBLICATION[469]
180-249	15825-15826	1	*[469]	PUBLICATION[469]
180-250	15826-15827	)	*[469]	PUBLICATION[469]
180-251	15828-15829	=	*[469]	PUBLICATION[469]
180-252	15830-15831	1	*[469]	PUBLICATION[469]
180-253	15831-15832	\;	*[469]	PUBLICATION[469]
180-254	15835-15836	%	*[469]	PUBLICATION[469]
180-255	15837-15844	display	*[469]	PUBLICATION[469]
180-256	15845-15852	results	*[469]	PUBLICATION[469]
180-257	15853-15882	display\_classification\_result	*[469]	PUBLICATION[469]
180-258	15882-15883	(	*[469]	PUBLICATION[469]
180-259	15883-15890	problem	*[469]	PUBLICATION[469]
180-260	15890-15891	,	*[469]	PUBLICATION[469]
180-261	15892-15893	{	*[469]	PUBLICATION[469]
180-262	15893-15894	'	*[469]	PUBLICATION[469]
180-263	15894-15897	SGD	*[469]	PUBLICATION[469]
180-264	15897-15898	'	*[469]	PUBLICATION[469]
180-265	15898-15899	,	*[469]	PUBLICATION[469]
180-266	15900-15901	'	_	_
180-267	15901-15905	SVRG	_	_
180-268	15905-15906	'	_	_
180-269	15906-15907	}	_	_
180-270	15907-15908	,	_	_
180-271	15909-15910	{	_	_
180-272	15910-15915	w\_sgd	_	_
180-273	15915-15916	,	_	_
180-274	15917-15923	w\_svrg	_	_
180-275	15923-15924	}	_	_
180-276	15924-15925	,	_	_
180-277	15926-15927	{	_	_
180-278	15927-15937	y\_pred\_sgd	_	_
180-279	15937-15938	,	_	_
180-280	15939-15950	y\_pred\_svrg	_	_
180-281	15950-15951	}	_	_
180-282	15951-15952	,	_	_
180-283	15953-15954	{	_	_
180-284	15954-15966	accuracy\_sgd	_	_
180-285	15966-15967	,	_	_
180-286	15968-15981	accuracy\_svrg	_	_
180-287	15981-15982	}	_	_
180-288	15982-15983	,	_	_
180-289	15984-15996	data.x\_train	_	_
180-290	15996-15997	,	_	_
180-291	15998-16010	data.y\_train	_	_
180-292	16010-16011	,	_	_
180-293	16012-16023	data.x\_test	_	_
180-294	16023-16024	,	_	_
180-295	16025-16036	data.y\_test	_	_
180-296	16036-16037	)	_	_
180-297	16037-16038	\;	_	_
180-298	16044-16045	`	_	_
180-299	16045-16046	`	_	_
180-300	16046-16047	`	_	_
180-301	16053-16059	Output	_	_
180-302	16060-16067	results	_	_
180-303	16067-16068	:	_	_
180-304	16070-16071	<	_	_
180-305	16071-16074	img	_	_
180-306	16075-16078	src	_	_
180-307	16078-16079	=	_	_
180-308	16079-16080	"	_	_
180-309	16080-16084	http	_	_
180-310	16084-16085	:	_	_
180-311	16085-16086	/	_	_
180-312	16086-16087	/	_	_
180-313	16087-16103	www.kasailab.com	_	_
180-314	16103-16104	/	_	_
180-315	16104-16110	public	_	_
180-316	16110-16111	/	_	_
180-317	16111-16117	github	_	_
180-318	16117-16118	/	_	_
180-319	16118-16128	SGDLibrary	_	_
180-320	16128-16129	/	_	_
180-321	16129-16135	images	_	_
180-322	16135-16136	/	_	_
180-323	16136-16155	log\_reg\_results.png	_	_
180-324	16155-16156	"	_	_
180-325	16157-16162	width	_	_
180-326	16162-16163	=	_	_
180-327	16163-16164	"	_	_
180-328	16164-16167	900	_	_
180-329	16167-16168	"	_	_
180-330	16168-16169	>	_	_
180-331	16170-16171	<	_	_
180-332	16171-16173	br	_	_
180-333	16174-16175	/	_	_
180-334	16175-16176	>	_	_
180-335	16176-16177	<	_	_
180-336	16177-16179	br	_	_
180-337	16180-16181	/	_	_
180-338	16181-16182	>	_	_
180-339	16185-16186	-	_	_
180-340	16187-16188	\*	_	_
180-341	16188-16189	\*	_	_
180-342	16189-16202	Demonstration	_	_
180-343	16203-16205	of	_	_
180-344	16206-16207	"	_	_
180-345	16207-16218	convergence	_	_
180-346	16219-16228	animation	_	_
180-347	16228-16229	"	_	_
180-348	16229-16230	\*	_	_
180-349	16230-16231	\*	_	_
180-350	16233-16236	You	_	_
180-351	16237-16241	need	_	_
180-352	16242-16249	specify	_	_
180-353	16250-16260	additional	_	_
180-354	16261-16268	options	_	_
180-355	16269-16275	before	_	_
180-356	16276-16285	executing	_	_
180-357	16286-16293	solvers	_	_
180-358	16293-16294	.	_	_

#Text=```Matlab %% set options for convergence animation options.max\_epoch = 100\;     options.store\_w = true\;  ```    Then, `draw\_convergence\_animation()` draws a convergence animation.
181-1	16296-16297	`	_	_
181-2	16297-16298	`	_	_
181-3	16298-16299	`	_	_
181-4	16299-16305	Matlab	_	_
181-5	16306-16307	%	_	_
181-6	16307-16308	%	_	_
181-7	16309-16312	set	_	_
181-8	16313-16320	options	_	_
181-9	16321-16324	for	_	_
181-10	16325-16336	convergence	_	_
181-11	16337-16346	animation	_	_
181-12	16347-16364	options.max\_epoch	_	_
181-13	16365-16366	=	_	_
181-14	16367-16370	100	_	_
181-15	16370-16371	\;	_	_
181-16	16376-16391	options.store\_w	_	_
181-17	16392-16393	=	_	_
181-18	16394-16398	true	_	_
181-19	16398-16399	\;	_	_
181-20	16401-16402	`	_	_
181-21	16402-16403	`	_	_
181-22	16403-16404	`	_	_
181-23	16408-16412	Then	_	_
181-24	16412-16413	,	_	_
181-25	16414-16415	`	_	_
181-26	16415-16441	draw\_convergence\_animation	_	_
181-27	16441-16442	(	_	_
181-28	16442-16443	)	_	_
181-29	16443-16444	`	_	_
181-30	16445-16450	draws	_	_
181-31	16451-16452	a	_	_
181-32	16453-16464	convergence	_	_
181-33	16465-16474	animation	*[544]	EVALMETRIC[544]
181-34	16474-16475	.	_	_

#Text=Note that `draw\_convergence\_animation()` is executable when only the dimension of the parameters is 2.
182-1	16476-16480	Note	_	_
182-2	16481-16485	that	_	_
182-3	16486-16487	`	_	_
182-4	16487-16513	draw\_convergence\_animation	_	_
182-5	16513-16514	(	_	_
182-6	16514-16515	)	_	_
182-7	16515-16516	`	_	_
182-8	16517-16519	is	_	_
182-9	16520-16530	executable	_	_
182-10	16531-16535	when	_	_
182-11	16536-16540	only	_	_
182-12	16541-16544	the	_	_
182-13	16545-16554	dimension	*[470]	PUBLICATION[470]
182-14	16555-16557	of	*[470]	PUBLICATION[470]
182-15	16558-16561	the	*[470]	PUBLICATION[470]
182-16	16562-16572	parameters	_	_
182-17	16573-16575	is	_	_
182-18	16576-16577	2	_	_
182-19	16577-16578	.	_	_

#Text=```Matlab %% display convergence animation draw\_convergence\_animation(problem, {'SGD', 'SVRG'}, {info\_sgd.w, info\_svrg.w}, options.max\_epoch)\;     ```   <br />  Example results of other problems ----------------------------  - Linear regression problem    <img src="http://www.kasailab.com/public/github/SGDLibrary/images/linear\_reg\_results.png" width="900">  - Softmax classifier problem  <img src="http://www.kasailab.com/public/github/SGDLibrary/images/soft\_class\_results.png" width="900">  - Linear SVM problem  <img src="http://www.kasailab.com/public/github/SGDLibrary/images/linear\_svm\_results.png" width="900"> <br /><br />   <br />  Convergence behavior animation example (Linear regression problem) ----------------------------  \*\*"test\_convergence\_animation\_demo.m"\*\* provides you an animation of convergence behaviors of algorithms.
183-1	16580-16581	`	_	_
183-2	16581-16582	`	_	_
183-3	16582-16583	`	_	_
183-4	16583-16589	Matlab	_	_
183-5	16590-16591	%	_	_
183-6	16591-16592	%	_	_
183-7	16593-16600	display	_	_
183-8	16601-16612	convergence	_	_
183-9	16613-16622	animation	_	_
183-10	16623-16649	draw\_convergence\_animation	_	_
183-11	16649-16650	(	_	_
183-12	16650-16657	problem	_	_
183-13	16657-16658	,	_	_
183-14	16659-16660	{	_	_
183-15	16660-16661	'	_	_
183-16	16661-16664	SGD	_	_
183-17	16664-16665	'	_	_
183-18	16665-16666	,	_	_
183-19	16667-16668	'	_	_
183-20	16668-16672	SVRG	_	_
183-21	16672-16673	'	_	_
183-22	16673-16674	}	_	_
183-23	16674-16675	,	_	_
183-24	16676-16677	{	_	_
183-25	16677-16687	info\_sgd.w	_	_
183-26	16687-16688	,	_	_
183-27	16689-16700	info\_svrg.w	_	_
183-28	16700-16701	}	_	_
183-29	16701-16702	,	_	_
183-30	16703-16720	options.max\_epoch	_	_
183-31	16720-16721	)	_	_
183-32	16721-16722	\;	_	_
183-33	16727-16728	`	_	_
183-34	16728-16729	`	_	_
183-35	16729-16730	`	_	_
183-36	16733-16734	<	_	_
183-37	16734-16736	br	_	_
183-38	16737-16738	/	_	_
183-39	16738-16739	>	_	_
183-40	16741-16748	Example	_	_
183-41	16749-16756	results	_	_
183-42	16757-16759	of	_	_
183-43	16760-16765	other	_	_
183-44	16766-16774	problems	_	_
183-45	16775-16776	-	_	_
183-46	16776-16777	-	_	_
183-47	16777-16778	-	_	_
183-48	16778-16779	-	_	_
183-49	16779-16780	-	_	_
183-50	16780-16781	-	_	_
183-51	16781-16782	-	_	_
183-52	16782-16783	-	_	_
183-53	16783-16784	-	_	_
183-54	16784-16785	-	_	_
183-55	16785-16786	-	_	_
183-56	16786-16787	-	_	_
183-57	16787-16788	-	_	_
183-58	16788-16789	-	_	_
183-59	16789-16790	-	_	_
183-60	16790-16791	-	_	_
183-61	16791-16792	-	_	_
183-62	16792-16793	-	_	_
183-63	16793-16794	-	_	_
183-64	16794-16795	-	_	_
183-65	16795-16796	-	_	_
183-66	16796-16797	-	_	_
183-67	16797-16798	-	_	_
183-68	16798-16799	-	_	_
183-69	16799-16800	-	_	_
183-70	16800-16801	-	_	_
183-71	16801-16802	-	_	_
183-72	16802-16803	-	_	_
183-73	16805-16806	-	_	_
183-74	16807-16813	Linear	_	_
183-75	16814-16824	regression	_	_
183-76	16825-16832	problem	_	_
183-77	16836-16837	<	_	_
183-78	16837-16840	img	_	_
183-79	16841-16844	src	_	_
183-80	16844-16845	=	_	_
183-81	16845-16846	"	_	_
183-82	16846-16850	http	_	_
183-83	16850-16851	:	_	_
183-84	16851-16852	/	_	_
183-85	16852-16853	/	_	_
183-86	16853-16869	www.kasailab.com	_	_
183-87	16869-16870	/	_	_
183-88	16870-16876	public	_	_
183-89	16876-16877	/	_	_
183-90	16877-16883	github	_	_
183-91	16883-16884	/	_	_
183-92	16884-16894	SGDLibrary	_	_
183-93	16894-16895	/	_	_
183-94	16895-16901	images	_	_
183-95	16901-16902	/	_	_
183-96	16902-16924	linear\_reg\_results.png	_	_
183-97	16924-16925	"	_	_
183-98	16926-16931	width	_	_
183-99	16931-16932	=	_	_
183-100	16932-16933	"	_	_
183-101	16933-16936	900	_	_
183-102	16936-16937	"	_	_
183-103	16937-16938	>	_	_
183-104	16940-16941	-	_	_
183-105	16942-16949	Softmax	_	_
183-106	16950-16960	classifier	_	_
183-107	16961-16968	problem	_	_
183-108	16970-16971	<	_	_
183-109	16971-16974	img	_	_
183-110	16975-16978	src	_	_
183-111	16978-16979	=	_	_
183-112	16979-16980	"	_	_
183-113	16980-16984	http	_	_
183-114	16984-16985	:	_	_
183-115	16985-16986	/	_	_
183-116	16986-16987	/	_	_
183-117	16987-17003	www.kasailab.com	_	_
183-118	17003-17004	/	_	_
183-119	17004-17010	public	_	_
183-120	17010-17011	/	_	_
183-121	17011-17017	github	_	_
183-122	17017-17018	/	_	_
183-123	17018-17028	SGDLibrary	_	_
183-124	17028-17029	/	_	_
183-125	17029-17035	images	_	_
183-126	17035-17036	/	_	_
183-127	17036-17058	soft\_class\_results.png	_	_
183-128	17058-17059	"	_	_
183-129	17060-17065	width	_	_
183-130	17065-17066	=	_	_
183-131	17066-17067	"	_	_
183-132	17067-17070	900	_	_
183-133	17070-17071	"	_	_
183-134	17071-17072	>	_	_
183-135	17074-17075	-	_	_
183-136	17076-17082	Linear	_	_
183-137	17083-17086	SVM	_	_
183-138	17087-17094	problem	_	_
183-139	17096-17097	<	_	_
183-140	17097-17100	img	_	_
183-141	17101-17104	src	_	_
183-142	17104-17105	=	_	_
183-143	17105-17106	"	_	_
183-144	17106-17110	http	_	_
183-145	17110-17111	:	_	_
183-146	17111-17112	/	_	_
183-147	17112-17113	/	_	_
183-148	17113-17129	www.kasailab.com	_	_
183-149	17129-17130	/	_	_
183-150	17130-17136	public	_	_
183-151	17136-17137	/	_	_
183-152	17137-17143	github	_	_
183-153	17143-17144	/	_	_
183-154	17144-17154	SGDLibrary	_	_
183-155	17154-17155	/	_	_
183-156	17155-17161	images	_	_
183-157	17161-17162	/	_	_
183-158	17162-17184	linear\_svm\_results.png	_	_
183-159	17184-17185	"	_	_
183-160	17186-17191	width	_	_
183-161	17191-17192	=	_	_
183-162	17192-17193	"	_	_
183-163	17193-17196	900	_	_
183-164	17196-17197	"	_	_
183-165	17197-17198	>	_	_
183-166	17199-17200	<	_	_
183-167	17200-17202	br	_	_
183-168	17203-17204	/	_	_
183-169	17204-17205	>	_	_
183-170	17205-17206	<	_	_
183-171	17206-17208	br	_	_
183-172	17209-17210	/	_	_
183-173	17210-17211	>	_	_
183-174	17214-17215	<	*[545]	EVALMETRIC[545]
183-175	17215-17217	br	*[545]	EVALMETRIC[545]
183-176	17218-17219	/	*[545]	EVALMETRIC[545]
183-177	17219-17220	>	*[545]	EVALMETRIC[545]
183-178	17222-17233	Convergence	*[545]	EVALMETRIC[545]
183-179	17234-17242	behavior	*[545]	EVALMETRIC[545]
183-180	17243-17252	animation	*[545]	EVALMETRIC[545]
183-181	17253-17260	example	*[545]	EVALMETRIC[545]
183-182	17261-17262	(	*[545]	EVALMETRIC[545]
183-183	17262-17268	Linear	*[545]	EVALMETRIC[545]
183-184	17269-17279	regression	*[545]	EVALMETRIC[545]
183-185	17280-17287	problem	*[545]	EVALMETRIC[545]
183-186	17287-17288	)	*[545]	EVALMETRIC[545]
183-187	17289-17290	-	*[545]	EVALMETRIC[545]
183-188	17290-17291	-	*[545]	EVALMETRIC[545]
183-189	17291-17292	-	*[545]	EVALMETRIC[545]
183-190	17292-17293	-	*[545]	EVALMETRIC[545]
183-191	17293-17294	-	*[545]	EVALMETRIC[545]
183-192	17294-17295	-	*[545]	EVALMETRIC[545]
183-193	17295-17296	-	*[545]	EVALMETRIC[545]
183-194	17296-17297	-	*[545]	EVALMETRIC[545]
183-195	17297-17298	-	*[545]	EVALMETRIC[545]
183-196	17298-17299	-	*[545]	EVALMETRIC[545]
183-197	17299-17300	-	*[545]	EVALMETRIC[545]
183-198	17300-17301	-	*[545]	EVALMETRIC[545]
183-199	17301-17302	-	*[545]	EVALMETRIC[545]
183-200	17302-17303	-	*[545]	EVALMETRIC[545]
183-201	17303-17304	-	*[545]	EVALMETRIC[545]
183-202	17304-17305	-	*[545]	EVALMETRIC[545]
183-203	17305-17306	-	*[545]	EVALMETRIC[545]
183-204	17306-17307	-	*[545]	EVALMETRIC[545]
183-205	17307-17308	-	*[545]	EVALMETRIC[545]
183-206	17308-17309	-	*[545]	EVALMETRIC[545]
183-207	17309-17310	-	*[545]	EVALMETRIC[545]
183-208	17310-17311	-	*[545]	EVALMETRIC[545]
183-209	17311-17312	-	*[545]	EVALMETRIC[545]
183-210	17312-17313	-	*[545]	EVALMETRIC[545]
183-211	17313-17314	-	*[545]	EVALMETRIC[545]
183-212	17314-17315	-	*[545]	EVALMETRIC[545]
183-213	17315-17316	-	*[545]	EVALMETRIC[545]
183-214	17316-17317	-	*[545]	EVALMETRIC[545]
183-215	17319-17320	\*	*[545]	EVALMETRIC[545]
183-216	17320-17321	\*	*[545]	EVALMETRIC[545]
183-217	17321-17322	"	*[545]	EVALMETRIC[545]
183-218	17322-17355	test\_convergence\_animation\_demo.m	_	_
183-219	17355-17356	"	_	_
183-220	17356-17357	\*	_	_
183-221	17357-17358	\*	_	_
183-222	17359-17367	provides	_	_
183-223	17368-17371	you	_	_
183-224	17372-17374	an	_	_
183-225	17375-17384	animation	_	_
183-226	17385-17387	of	_	_
183-227	17388-17399	convergence	_	_
183-228	17400-17409	behaviors	_	_
183-229	17410-17412	of	_	_
183-230	17413-17423	algorithms	_	_
183-231	17423-17424	.	_	_

#Text=Please click the image below to see its animation.
184-1	17425-17431	Please	_	_
184-2	17432-17437	click	*[488]	DATASET[488]
184-3	17438-17441	the	*[488]	DATASET[488]
184-4	17442-17447	image	_	_
184-5	17448-17453	below	_	_
184-6	17454-17456	to	_	_
184-7	17457-17460	see	_	_
184-8	17461-17464	its	_	_
184-9	17465-17474	animation	_	_
184-10	17474-17475	.	_	_

#Text=\[<img src="http://www.kasailab.com/public/github/SGDLibrary/images/convergence\_anime\_screenshot.png" width="900">\](http://www.kasailab.com/public/github/SGDLibrary/gifs/convergence\_anime\_new.gif) <br /><br />   <br />  License ------- - The SGDLibrary is \*\*free\*\* and \*\*open\*\* source. - The code provided iin SGDLibrary should only be used for \*\*academic/research purposes\*\*. - The codes provided by original papers are included.
185-1	17477-17478	\[	_	_
185-2	17478-17479	<	_	_
185-3	17479-17482	img	_	_
185-4	17483-17486	src	_	_
185-5	17486-17487	=	_	_
185-6	17487-17488	"	_	_
185-7	17488-17492	http	_	_
185-8	17492-17493	:	_	_
185-9	17493-17494	/	_	_
185-10	17494-17495	/	_	_
185-11	17495-17511	www.kasailab.com	_	_
185-12	17511-17512	/	_	_
185-13	17512-17518	public	_	_
185-14	17518-17519	/	_	_
185-15	17519-17525	github	_	_
185-16	17525-17526	/	_	_
185-17	17526-17536	SGDLibrary	_	_
185-18	17536-17537	/	_	_
185-19	17537-17543	images	_	_
185-20	17543-17544	/	_	_
185-21	17544-17576	convergence\_anime\_screenshot.png	_	_
185-22	17576-17577	"	_	_
185-23	17578-17583	width	_	_
185-24	17583-17584	=	_	_
185-25	17584-17585	"	_	_
185-26	17585-17588	900	_	_
185-27	17588-17589	"	_	_
185-28	17589-17590	>	_	_
185-29	17590-17591	\]	_	_
185-30	17591-17592	(	_	_
185-31	17592-17596	http	_	_
185-32	17596-17597	:	_	_
185-33	17597-17598	/	_	_
185-34	17598-17599	/	_	_
185-35	17599-17615	www.kasailab.com	_	_
185-36	17615-17616	/	_	_
185-37	17616-17622	public	_	_
185-38	17622-17623	/	_	_
185-39	17623-17629	github	_	_
185-40	17629-17630	/	_	_
185-41	17630-17640	SGDLibrary	_	_
185-42	17640-17641	/	_	_
185-43	17641-17645	gifs	_	_
185-44	17645-17646	/	_	_
185-45	17646-17671	convergence\_anime\_new.gif	_	_
185-46	17671-17672	)	_	_
185-47	17673-17674	<	_	_
185-48	17674-17676	br	_	_
185-49	17677-17678	/	_	_
185-50	17678-17679	>	_	_
185-51	17679-17680	<	_	_
185-52	17680-17682	br	_	_
185-53	17683-17684	/	_	_
185-54	17684-17685	>	_	_
185-55	17688-17689	<	_	_
185-56	17689-17691	br	_	_
185-57	17692-17693	/	_	_
185-58	17693-17694	>	_	_
185-59	17696-17703	License	_	_
185-60	17704-17705	-	_	_
185-61	17705-17706	-	_	_
185-62	17706-17707	-	_	_
185-63	17707-17708	-	_	_
185-64	17708-17709	-	_	_
185-65	17709-17710	-	_	_
185-66	17710-17711	-	_	_
185-67	17712-17713	-	_	_
185-68	17714-17717	The	_	_
185-69	17718-17728	SGDLibrary	_	_
185-70	17729-17731	is	_	_
185-71	17732-17733	\*	_	_
185-72	17733-17734	\*	_	_
185-73	17734-17738	free	_	_
185-74	17738-17739	\*	_	_
185-75	17739-17740	\*	_	_
185-76	17741-17744	and	_	_
185-77	17745-17746	\*	_	_
185-78	17746-17747	\*	_	_
185-79	17747-17751	open	_	_
185-80	17751-17752	\*	_	_
185-81	17752-17753	\*	_	_
185-82	17754-17760	source	_	_
185-83	17760-17761	.	_	_
185-84	17762-17763	-	_	_
185-85	17764-17767	The	_	_
185-86	17768-17772	code	_	_
185-87	17773-17781	provided	_	_
185-88	17782-17785	iin	_	_
185-89	17786-17796	SGDLibrary	_	_
185-90	17797-17803	should	_	_
185-91	17804-17808	only	_	_
185-92	17809-17811	be	_	_
185-93	17812-17816	used	_	_
185-94	17817-17820	for	_	_
185-95	17821-17822	\*	_	_
185-96	17822-17823	\*	_	_
185-97	17823-17831	academic	_	_
185-98	17831-17832	/	_	_
185-99	17832-17840	research	_	_
185-100	17841-17849	purposes	_	_
185-101	17849-17850	\*	_	_
185-102	17850-17851	\*	_	_
185-103	17851-17852	.	_	_
185-104	17853-17854	-	_	_
185-105	17855-17858	The	_	_
185-106	17859-17864	codes	_	_
185-107	17865-17873	provided	_	_
185-108	17874-17876	by	_	_
185-109	17877-17885	original	_	_
185-110	17886-17892	papers	_	_
185-111	17893-17896	are	_	_
185-112	17897-17905	included	_	_
185-113	17905-17906	.	_	_

#Text=(Big thanks !!!)
186-1	17907-17908	(	_	_
186-2	17908-17911	Big	_	_
186-3	17912-17918	thanks	_	_
186-4	17919-17920	!	_	_
186-5	17920-17921	!	_	_
186-6	17921-17922	!	_	_
186-7	17922-17923	)	_	_

#Text=- iqn.m: originally created by \[A.
187-1	17928-17929	-	_	_
187-2	17930-17935	iqn.m	_	_
187-3	17935-17936	:	_	_
187-4	17937-17947	originally	_	_
187-5	17948-17955	created	_	_
187-6	17956-17958	by	_	_
187-7	17959-17960	\[	_	_
187-8	17960-17961	A	_	_
187-9	17961-17962	.	_	_

#Text=Mokhtari\](https://fling.seas.upenn.edu/~aryanm/wiki/index.php?
188-1	17963-17971	Mokhtari	_	_
188-2	17971-17972	\]	_	_
188-3	17972-17973	(	_	_
188-4	17973-17978	https	_	_
188-5	17978-17979	:	_	_
188-6	17979-17980	/	_	_
188-7	17980-17981	/	_	_
188-8	17981-18001	fling.seas.upenn.edu	_	_
188-9	18001-18002	/	*[488]	PROJECT[488]
188-10	18002-18003	~	*[488]	PROJECT[488]
188-11	18003-18009	aryanm	*[488]	PROJECT[488]
188-12	18009-18010	/	*[488]	PROJECT[488]
188-13	18010-18014	wiki	_	_
188-14	18014-18015	/	_	_
188-15	18015-18024	index.php	_	_
188-16	18024-18025	?	_	_

#Text=n=Main.HomePage)
189-1	18025-18026	n	_	_
189-2	18026-18027	=	_	_
189-3	18027-18040	Main.HomePage	_	_
189-4	18040-18041	)	_	_

#Text=.
190-1	18041-18042	.	_	_

#Text=- The codes ported from original python codes are included.
191-1	18044-18045	-	_	_
191-2	18046-18049	The	_	_
191-3	18050-18055	codes	_	_
191-4	18056-18062	ported	_	_
191-5	18063-18067	from	_	_
191-6	18068-18076	original	_	_
191-7	18077-18083	python	_	_
191-8	18084-18089	codes	_	_
191-9	18090-18093	are	_	_
191-10	18094-18102	included	_	_
191-11	18102-18103	.	_	_

#Text=(Big thanks !!!)
192-1	18104-18105	(	_	_
192-2	18105-18108	Big	_	_
192-3	18109-18115	thanks	_	_
192-4	18116-18117	!	_	_
192-5	18117-18118	!	_	_
192-6	18118-18119	!	_	_
192-7	18119-18120	)	_	_

#Text=- scr.m, cr\_subsolver.m, subsamp\_tr.m, tr\_subsolver.m: Python codes are originally created by \[J.
193-1	18125-18126	-	_	_
193-2	18127-18132	scr.m	_	_
193-3	18132-18133	,	_	_
193-4	18134-18148	cr\_subsolver.m	_	_
193-5	18148-18149	,	_	_
193-6	18150-18162	subsamp\_tr.m	_	_
193-7	18162-18163	,	_	_
193-8	18164-18178	tr\_subsolver.m	_	_
193-9	18178-18179	:	_	_
193-10	18180-18186	Python	_	_
193-11	18187-18192	codes	_	_
193-12	18193-18196	are	_	_
193-13	18197-18207	originally	_	_
193-14	18208-18215	created	_	_
193-15	18216-18218	by	_	_
193-16	18219-18220	\[	_	_
193-17	18220-18221	J	_	_
193-18	18221-18222	.	_	_

#Text=M.
194-1	18223-18224	M	_	_
194-2	18224-18225	.	_	_

#Text=Kohler and A.
195-1	18226-18232	Kohler	_	_
195-2	18233-18236	and	_	_
195-3	18237-18238	A	*[499]	CONFERENCE[499]
195-4	18238-18239	.	_	_

#Text=Lucchi\](https://github.com/dalab/subsampled\_cubic\_regularization).
196-1	18240-18246	Lucchi	_	_
196-2	18246-18247	\]	_	_
196-3	18247-18248	(	_	_
196-4	18248-18253	https	_	_
196-5	18253-18254	:	_	_
196-6	18254-18255	/	_	_
196-7	18255-18256	/	_	_
196-8	18256-18266	github.com	_	_
196-9	18266-18267	/	_	_
196-10	18267-18272	dalab	_	_
196-11	18272-18273	/	_	_
196-12	18273-18304	subsampled\_cubic\_regularization	_	_
196-13	18304-18305	)	_	_
196-14	18305-18306	.	_	_

#Text=These MATLAB codes are ported with original authors' big helps. - Third party files are included
197-1	18307-18312	These	_	_
197-2	18313-18319	MATLAB	_	_
197-3	18320-18325	codes	_	_
197-4	18326-18329	are	_	_
197-5	18330-18336	ported	_	_
197-6	18337-18341	with	_	_
197-7	18342-18350	original	_	_
197-8	18351-18358	authors	_	_
197-9	18358-18359	'	_	_
197-10	18360-18363	big	_	_
197-11	18364-18369	helps	_	_
197-12	18369-18370	.	*[500]	CONFERENCE[500]
197-13	18371-18372	-	*[500]	CONFERENCE[500]
197-14	18373-18378	Third	*[500]	CONFERENCE[500]
197-15	18379-18384	party	*[500]	CONFERENCE[500]
197-16	18385-18390	files	_	_
197-17	18391-18394	are	_	_
197-18	18395-18403	included	_	_

#Text=.
198-1	18403-18404	.	_	_

#Text=- subsamp\_newton.m: originally created by Peng Xu and Jiyan Yang  in \[Subsampled-Newton\](https://github.com/git-xp/Subsampled-Newton).
199-1	18409-18410	-	_	_
199-2	18411-18427	subsamp\_newton.m	_	_
199-3	18427-18428	:	_	_
199-4	18429-18439	originally	_	_
199-5	18440-18447	created	_	_
199-6	18448-18450	by	_	_
199-7	18451-18455	Peng	_	_
199-8	18456-18458	Xu	_	_
199-9	18459-18462	and	_	_
199-10	18463-18468	Jiyan	_	_
199-11	18469-18473	Yang	_	_
199-12	18475-18477	in	*[471]	PUBLICATION[471]
199-13	18478-18479	\[	*[471]	PUBLICATION[471]
199-14	18479-18496	Subsampled-Newton	_	_
199-15	18496-18497	\]	_	_
199-16	18497-18498	(	_	_
199-17	18498-18503	https	_	_
199-18	18503-18504	:	_	_
199-19	18504-18505	/	_	_
199-20	18505-18506	/	_	_
199-21	18506-18516	github.com	_	_
199-22	18516-18517	/	_	_
199-23	18517-18523	git-xp	_	_
199-24	18523-18524	/	_	_
199-25	18524-18541	Subsampled-Newton	_	_
199-26	18541-18542	)	_	_
199-27	18542-18543	.	_	_

#Text=This is modifided to handle other problems like linear regression
200-1	18544-18548	This	_	_
200-2	18549-18551	is	_	_
200-3	18552-18561	modifided	_	_
200-4	18562-18564	to	_	_
200-5	18565-18571	handle	_	_
200-6	18572-18577	other	_	_
200-7	18578-18586	problems	_	_
200-8	18587-18591	like	_	_
200-9	18592-18598	linear	_	_
200-10	18599-18609	regression	_	_

#Text=.
201-1	18609-18610	.	_	_

#Text=- Proximal Solver from \[FOM\](https://sites.google.com/site/fomsolver/)  <br />  Notes ------- - As always, parameters such as the step size should be configured properly in each algorithm and each problem
202-1	18617-18618	-	_	_
202-2	18619-18627	Proximal	_	_
202-3	18628-18634	Solver	_	_
202-4	18635-18639	from	_	_
202-5	18640-18641	\[	_	_
202-6	18641-18644	FOM	_	_
202-7	18644-18645	\]	_	_
202-8	18645-18646	(	_	_
202-9	18646-18651	https	_	_
202-10	18651-18652	:	_	_
202-11	18652-18653	/	_	_
202-12	18653-18654	/	_	_
202-13	18654-18670	sites.google.com	_	_
202-14	18670-18671	/	_	_
202-15	18671-18675	site	_	_
202-16	18675-18676	/	_	_
202-17	18676-18685	fomsolver	_	_
202-18	18685-18686	/	*[519]	PROGLANG[519]
202-19	18686-18687	)	*[519]	PROGLANG[519]
202-20	18689-18690	<	*[519]	PROGLANG[519]
202-21	18690-18692	br	_	_
202-22	18693-18694	/	_	_
202-23	18694-18695	>	_	_
202-24	18697-18702	Notes	_	_
202-25	18703-18704	-	_	_
202-26	18704-18705	-	_	_
202-27	18705-18706	-	_	_
202-28	18706-18707	-	_	_
202-29	18707-18708	-	_	_
202-30	18708-18709	-	_	_
202-31	18709-18710	-	_	_
202-32	18711-18712	-	_	_
202-33	18713-18715	As	_	_
202-34	18716-18722	always	_	_
202-35	18722-18723	,	_	_
202-36	18724-18734	parameters	_	_
202-37	18735-18739	such	_	_
202-38	18740-18742	as	_	_
202-39	18743-18746	the	_	_
202-40	18747-18751	step	_	_
202-41	18752-18756	size	_	_
202-42	18757-18763	should	_	_
202-43	18764-18766	be	_	_
202-44	18767-18777	configured	_	_
202-45	18778-18786	properly	_	_
202-46	18787-18789	in	_	_
202-47	18790-18794	each	_	_
202-48	18795-18804	algorithm	_	_
202-49	18805-18808	and	_	_
202-50	18809-18813	each	_	_
202-51	18814-18821	problem	_	_

#Text=.
203-1	18821-18822	.	_	_

#Text=- Softmax classification problem does not support "Hessian-vector product" type algorithms, i.e., SQN, SVRG-SQN and SVRG-LBFGS. - This SGDLibrary internally contains the \[GDLibrary\](https://github.com/hiroyuki-kasai/GDLibrary).
204-1	18824-18825	-	_	_
204-2	18826-18833	Softmax	_	_
204-3	18834-18848	classification	_	_
204-4	18849-18856	problem	_	_
204-5	18857-18861	does	_	_
204-6	18862-18865	not	_	_
204-7	18866-18873	support	_	_
204-8	18874-18875	"	_	_
204-9	18875-18889	Hessian-vector	_	_
204-10	18890-18897	product	*[546]	EVALMETRIC[546]
204-11	18897-18898	"	*[546]	EVALMETRIC[546]
204-12	18899-18903	type	*[546]	EVALMETRIC[546]
204-13	18904-18914	algorithms	*[546]	EVALMETRIC[546]
204-14	18914-18915	,	*[546]	EVALMETRIC[546]
204-15	18916-18919	i.e	*[546]	EVALMETRIC[546]
204-16	18919-18920	.	*[546]	EVALMETRIC[546]
204-17	18920-18921	,	*[546]	EVALMETRIC[546]
204-18	18922-18925	SQN	*[546]	EVALMETRIC[546]
204-19	18925-18926	,	_	_
204-20	18927-18935	SVRG-SQN	_	_
204-21	18936-18939	and	_	_
204-22	18940-18950	SVRG-LBFGS	_	_
204-23	18950-18951	.	_	_
204-24	18952-18953	-	_	_
204-25	18954-18958	This	_	_
204-26	18959-18969	SGDLibrary	_	_
204-27	18970-18980	internally	_	_
204-28	18981-18989	contains	_	_
204-29	18990-18993	the	_	_
204-30	18994-18995	\[	_	_
204-31	18995-19004	GDLibrary	_	_
204-32	19004-19005	\]	_	_
204-33	19005-19006	(	_	_
204-34	19006-19011	https	_	_
204-35	19011-19012	:	_	_
204-36	19012-19013	/	_	_
204-37	19013-19014	/	_	_
204-38	19014-19024	github.com	_	_
204-39	19024-19025	/	_	_
204-40	19025-19039	hiroyuki-kasai	_	_
204-41	19039-19040	/	_	_
204-42	19040-19049	GDLibrary	_	_
204-43	19049-19050	)	_	_
204-44	19050-19051	.	_	_

#Text=<br />  Problems or questions --------------------- If you have any problems or questions, please contact the author: \[Hiroyuki Kasai\](http://kasai.comm.waseda.ac.jp/kasai/) (email: hiroyuki \*\*dot\*\* kasai \*\*at\*\* waseda \*\*dot\*\* jp)  <br />  Release Notes -------------- \* Version 1.0.20 (Nov. 10, 2020)     - Buf fixed, and some files are added. \* Version 1.0.19 (Oct. 27, 2020)     - Buf fixed, and some files are added. \* Version 1.0.17 (Apr. 17, 2018)     - Sub-sampled CR (including ARC) and Sub-sampled TR are nely added. \* Version 1.0.16 (Apr. 01, 2018)     - GNU Octave is supported
205-1	19053-19054	<	_	_
205-2	19054-19056	br	_	_
205-3	19057-19058	/	_	_
205-4	19058-19059	>	_	_
205-5	19061-19069	Problems	_	_
205-6	19070-19072	or	_	_
205-7	19073-19082	questions	_	_
205-8	19083-19084	-	_	_
205-9	19084-19085	-	_	_
205-10	19085-19086	-	_	_
205-11	19086-19087	-	_	_
205-12	19087-19088	-	_	_
205-13	19088-19089	-	_	_
205-14	19089-19090	-	_	_
205-15	19090-19091	-	_	_
205-16	19091-19092	-	_	_
205-17	19092-19093	-	_	_
205-18	19093-19094	-	_	_
205-19	19094-19095	-	_	_
205-20	19095-19096	-	_	_
205-21	19096-19097	-	_	_
205-22	19097-19098	-	_	_
205-23	19098-19099	-	_	_
205-24	19099-19100	-	_	_
205-25	19100-19101	-	_	_
205-26	19101-19102	-	_	_
205-27	19102-19103	-	_	_
205-28	19103-19104	-	_	_
205-29	19105-19107	If	_	_
205-30	19108-19111	you	_	_
205-31	19112-19116	have	_	_
205-32	19117-19120	any	_	_
205-33	19121-19129	problems	_	_
205-34	19130-19132	or	_	_
205-35	19133-19142	questions	_	_
205-36	19142-19143	,	_	_
205-37	19144-19150	please	_	_
205-38	19151-19158	contact	_	_
205-39	19159-19162	the	_	_
205-40	19163-19169	author	_	_
205-41	19169-19170	:	_	_
205-42	19171-19172	\[	_	_
205-43	19172-19180	Hiroyuki	_	_
205-44	19181-19186	Kasai	_	_
205-45	19186-19187	\]	_	_
205-46	19187-19188	(	_	_
205-47	19188-19192	http	_	_
205-48	19192-19193	:	_	_
205-49	19193-19194	/	_	_
205-50	19194-19195	/	_	_
205-51	19195-19218	kasai.comm.waseda.ac.jp	_	_
205-52	19218-19219	/	_	_
205-53	19219-19224	kasai	_	_
205-54	19224-19225	/	_	_
205-55	19225-19226	)	_	_
205-56	19227-19228	(	_	_
205-57	19228-19233	email	_	_
205-58	19233-19234	:	_	_
205-59	19235-19243	hiroyuki	_	_
205-60	19244-19245	\*	_	_
205-61	19245-19246	\*	_	_
205-62	19246-19249	dot	_	_
205-63	19249-19250	\*	_	_
205-64	19250-19251	\*	_	_
205-65	19252-19257	kasai	_	_
205-66	19258-19259	\*	_	_
205-67	19259-19260	\*	_	_
205-68	19260-19262	at	_	_
205-69	19262-19263	\*	_	_
205-70	19263-19264	\*	_	_
205-71	19265-19271	waseda	_	_
205-72	19272-19273	\*	_	_
205-73	19273-19274	\*	_	_
205-74	19274-19277	dot	_	_
205-75	19277-19278	\*	_	_
205-76	19278-19279	\*	_	_
205-77	19280-19282	jp	_	_
205-78	19282-19283	)	_	_
205-79	19285-19286	<	_	_
205-80	19286-19288	br	_	_
205-81	19289-19290	/	_	_
205-82	19290-19291	>	_	_
205-83	19293-19300	Release	_	_
205-84	19301-19306	Notes	_	_
205-85	19307-19308	-	_	_
205-86	19308-19309	-	_	_
205-87	19309-19310	-	_	_
205-88	19310-19311	-	_	_
205-89	19311-19312	-	_	_
205-90	19312-19313	-	_	_
205-91	19313-19314	-	_	_
205-92	19314-19315	-	_	_
205-93	19315-19316	-	_	_
205-94	19316-19317	-	_	_
205-95	19317-19318	-	_	_
205-96	19318-19319	-	_	_
205-97	19319-19320	-	_	_
205-98	19320-19321	-	_	_
205-99	19322-19323	\*	_	_
205-100	19324-19331	Version	_	_
205-101	19332-19338	1.0.20	_	_
205-102	19339-19340	(	_	_
205-103	19340-19343	Nov	_	_
205-104	19343-19344	.	_	_
205-105	19345-19347	10	_	_
205-106	19347-19348	,	_	_
205-107	19349-19353	2020	_	_
205-108	19353-19354	)	_	_
205-109	19359-19360	-	_	_
205-110	19361-19364	Buf	_	_
205-111	19365-19370	fixed	_	_
205-112	19370-19371	,	_	_
205-113	19372-19375	and	_	_
205-114	19376-19380	some	_	_
205-115	19381-19386	files	_	_
205-116	19387-19390	are	_	_
205-117	19391-19396	added	_	_
205-118	19396-19397	.	_	_
205-119	19398-19399	\*	_	_
205-120	19400-19407	Version	_	_
205-121	19408-19414	1.0.19	_	_
205-122	19415-19416	(	_	_
205-123	19416-19419	Oct	_	_
205-124	19419-19420	.	_	_
205-125	19421-19423	27	_	_
205-126	19423-19424	,	_	_
205-127	19425-19429	2020	_	_
205-128	19429-19430	)	_	_
205-129	19435-19436	-	_	_
205-130	19437-19440	Buf	_	_
205-131	19441-19446	fixed	_	_
205-132	19446-19447	,	_	_
205-133	19448-19451	and	_	_
205-134	19452-19456	some	_	_
205-135	19457-19462	files	_	_
205-136	19463-19466	are	_	_
205-137	19467-19472	added	_	_
205-138	19472-19473	.	_	_
205-139	19474-19475	\*	_	_
205-140	19476-19483	Version	_	_
205-141	19484-19490	1.0.17	_	_
205-142	19491-19492	(	_	_
205-143	19492-19495	Apr	_	_
205-144	19495-19496	.	_	_
205-145	19497-19499	17	_	_
205-146	19499-19500	,	_	_
205-147	19501-19505	2018	_	_
205-148	19505-19506	)	_	_
205-149	19511-19512	-	_	_
205-150	19513-19524	Sub-sampled	_	_
205-151	19525-19527	CR	_	_
205-152	19528-19529	(	_	_
205-153	19529-19538	including	_	_
205-154	19539-19542	ARC	_	_
205-155	19542-19543	)	_	_
205-156	19544-19547	and	_	_
205-157	19548-19559	Sub-sampled	_	_
205-158	19560-19562	TR	_	_
205-159	19563-19566	are	_	_
205-160	19567-19571	nely	_	_
205-161	19572-19577	added	*[501]	CONFERENCE[501]
205-162	19577-19578	.	*[501]	CONFERENCE[501]
205-163	19579-19580	\*	*[501]	CONFERENCE[501]
205-164	19581-19588	Version	*[501]	CONFERENCE[501]
205-165	19589-19595	1.0.16	*[501]	CONFERENCE[501]
205-166	19596-19597	(	*[501]	CONFERENCE[501]
205-167	19597-19600	Apr	*[501]	CONFERENCE[501]
205-168	19600-19601	.	*[501]	CONFERENCE[501]
205-169	19602-19604	01	*[501]	CONFERENCE[501]
205-170	19604-19605	,	*[501]	CONFERENCE[501]
205-171	19606-19610	2018	*[501]	CONFERENCE[501]
205-172	19610-19611	)	*[501]	CONFERENCE[501]
205-173	19616-19617	-	*[501]	CONFERENCE[501]
205-174	19618-19621	GNU	*[501]	CONFERENCE[501]
205-175	19622-19628	Octave	_	_
205-176	19629-19631	is	_	_
205-177	19632-19641	supported	_	_

#Text=.
206-1	19641-19642	.	_	_

#Text=- Change the functions of problem into class-based definitions
207-1	19647-19648	-	_	_
207-2	19649-19655	Change	_	_
207-3	19656-19659	the	_	_
207-4	19660-19669	functions	_	_
207-5	19670-19672	of	_	_
207-6	19673-19680	problem	_	_
207-7	19681-19685	into	_	_
207-8	19686-19697	class-based	_	_
207-9	19698-19709	definitions	_	_

#Text=.
208-1	19709-19710	.	_	_

#Text=\* Version 1.0.12 (Sep. 29, 2017)     - SARAH is nely added. \* Version 1.0.11 (Sep. 28, 2017)     - SGD-CM and SGD-CM-NAG are nely added. \* Version 1.0.10 (Sep. 26, 2017)     - Options paramter in solvers is re-organized
209-1	19712-19713	\*	_	_
209-2	19714-19721	Version	_	_
209-3	19722-19728	1.0.12	_	_
209-4	19729-19730	(	_	_
209-5	19730-19733	Sep	_	_
209-6	19733-19734	.	_	_
209-7	19735-19737	29	_	_
209-8	19737-19738	,	_	_
209-9	19739-19743	2017	_	_
209-10	19743-19744	)	_	_
209-11	19749-19750	-	_	_
209-12	19751-19756	SARAH	_	_
209-13	19757-19759	is	_	_
209-14	19760-19764	nely	_	_
209-15	19765-19770	added	_	_
209-16	19770-19771	.	_	_
209-17	19772-19773	\*	_	_
209-18	19774-19781	Version	_	_
209-19	19782-19788	1.0.11	_	_
209-20	19789-19790	(	_	_
209-21	19790-19793	Sep	_	_
209-22	19793-19794	.	_	_
209-23	19795-19797	28	_	_
209-24	19797-19798	,	_	_
209-25	19799-19803	2017	_	_
209-26	19803-19804	)	_	_
209-27	19809-19810	-	_	_
209-28	19811-19817	SGD-CM	_	_
209-29	19818-19821	and	_	_
209-30	19822-19832	SGD-CM-NAG	_	_
209-31	19833-19836	are	_	_
209-32	19837-19841	nely	_	_
209-33	19842-19847	added	_	_
209-34	19847-19848	.	_	_
209-35	19849-19850	\*	_	_
209-36	19851-19858	Version	_	_
209-37	19859-19865	1.0.10	_	_
209-38	19866-19867	(	_	_
209-39	19867-19870	Sep	_	_
209-40	19870-19871	.	_	_
209-41	19872-19874	26	_	_
209-42	19874-19875	,	_	_
209-43	19876-19880	2017	_	_
209-44	19880-19881	)	_	_
209-45	19886-19887	-	_	_
209-46	19888-19895	Options	_	_
209-47	19896-19904	paramter	_	_
209-48	19905-19907	in	*[502]	CONFERENCE[502]
209-49	19908-19915	solvers	*[502]	CONFERENCE[502]
209-50	19916-19918	is	*[502]	CONFERENCE[502]
209-51	19919-19931	re-organized	_	_

#Text=.
210-1	19931-19932	.	_	_

#Text=- Separate the function to store statistics information from solver. \* Version 1.0.9 (Sep. 25, 2017)     - Proximal operator is newly added
211-1	19938-19939	-	_	_
211-2	19940-19948	Separate	_	_
211-3	19949-19952	the	_	_
211-4	19953-19961	function	_	_
211-5	19962-19964	to	_	_
211-6	19965-19970	store	_	_
211-7	19971-19981	statistics	_	_
211-8	19982-19993	information	_	_
211-9	19994-19998	from	_	_
211-10	19999-20005	solver	_	_
211-11	20005-20006	.	_	_
211-12	20007-20008	\*	_	_
211-13	20009-20016	Version	_	_
211-14	20017-20022	1.0.9	_	_
211-15	20023-20024	(	*[477]	ONTOLOGY[477]
211-16	20024-20027	Sep	*[477]	ONTOLOGY[477]
211-17	20027-20028	.	*[477]	ONTOLOGY[477]
211-18	20029-20031	25	*[477]	ONTOLOGY[477]
211-19	20031-20032	,	*[477]	ONTOLOGY[477]
211-20	20033-20037	2017	*[477]	ONTOLOGY[477]
211-21	20037-20038	)	*[477]	ONTOLOGY[477]
211-22	20043-20044	-	*[477]	ONTOLOGY[477]
211-23	20045-20053	Proximal	*[477]	ONTOLOGY[477]
211-24	20054-20062	operator	*[477]	ONTOLOGY[477]
211-25	20063-20065	is	*[477]	ONTOLOGY[477]
211-26	20066-20071	newly	*[477]	ONTOLOGY[477]
211-27	20072-20077	added	_	_

#Text=.
212-1	20077-20078	.	_	_

#Text=- Some new problems are added
213-1	20084-20085	-	_	_
213-2	20086-20090	Some	_	_
213-3	20091-20094	new	_	_
213-4	20095-20103	problems	_	_
213-5	20104-20107	are	_	_
213-6	20108-20113	added	_	_

#Text=.
214-1	20113-20114	.	_	_

#Text=- User-defined stepsize algorithm is supported.
215-1	20120-20121	-	_	_
215-2	20122-20134	User-defined	_	_
215-3	20135-20143	stepsize	_	_
215-4	20144-20153	algorithm	_	_
215-5	20154-20156	is	*[489]	PROJECT[489]
215-6	20157-20166	supported	_	_
215-7	20166-20167	.	_	_

#Text=See \[test\_stepsize\_alg\_demo.m\](https://github.com/hiroyuki-kasai/SGDLibrary/blob/master/sgd\_test/test\_stepsize\_alg\_demo.m). \* Version 1.0.8 (Mar. 28, 2017)     - IQN (incremental Quasi-Newton method, iqn.m) is nely included
216-1	20168-20171	See	_	_
216-2	20172-20173	\[	_	_
216-3	20173-20197	test\_stepsize\_alg\_demo.m	_	_
216-4	20197-20198	\]	_	_
216-5	20198-20199	(	_	_
216-6	20199-20204	https	_	_
216-7	20204-20205	:	_	_
216-8	20205-20206	/	_	_
216-9	20206-20207	/	_	_
216-10	20207-20217	github.com	_	_
216-11	20217-20218	/	_	_
216-12	20218-20232	hiroyuki-kasai	_	_
216-13	20232-20233	/	_	_
216-14	20233-20243	SGDLibrary	_	_
216-15	20243-20244	/	_	_
216-16	20244-20248	blob	_	_
216-17	20248-20249	/	_	_
216-18	20249-20255	master	_	_
216-19	20255-20256	/	_	_
216-20	20256-20264	sgd\_test	_	_
216-21	20264-20265	/	_	_
216-22	20265-20289	test\_stepsize\_alg\_demo.m	_	_
216-23	20289-20290	)	_	_
216-24	20290-20291	.	_	_
216-25	20292-20293	\*	_	_
216-26	20294-20301	Version	_	_
216-27	20302-20307	1.0.8	_	_
216-28	20308-20309	(	_	_
216-29	20309-20312	Mar	_	_
216-30	20312-20313	.	_	_
216-31	20314-20316	28	_	_
216-32	20316-20317	,	_	_
216-33	20318-20322	2017	_	_
216-34	20322-20323	)	_	_
216-35	20328-20329	-	_	_
216-36	20330-20333	IQN	_	_
216-37	20334-20335	(	_	_
216-38	20335-20346	incremental	_	_
216-39	20347-20359	Quasi-Newton	_	_
216-40	20360-20366	method	*[490]	PROJECT[490]
216-41	20366-20367	,	*[490]	PROJECT[490]
216-42	20368-20373	iqn.m	*[490]	PROJECT[490]
216-43	20373-20374	)	*[490]	PROJECT[490]
216-44	20375-20377	is	_	_
216-45	20378-20382	nely	_	_
216-46	20383-20391	included	_	_

#Text=.
217-1	20391-20392	.	_	_

#Text=\* Version 1.0.7 (Mar. 17, 2017)     - Add some functions and modify items
218-1	20394-20395	\*	_	_
218-2	20396-20403	Version	_	_
218-3	20404-20409	1.0.7	*[491]	PROJECT[491]
218-4	20410-20411	(	*[491]	PROJECT[491]
218-5	20411-20414	Mar	*[491]	PROJECT[491]
218-6	20414-20415	.	*[491]	PROJECT[491]
218-7	20416-20418	17	*[491]	PROJECT[491]
218-8	20418-20419	,	*[491]	PROJECT[491]
218-9	20420-20424	2017	*[491]	PROJECT[491]
218-10	20424-20425	)	*[491]	PROJECT[491]
218-11	20430-20431	-	*[491]	PROJECT[491]
218-12	20432-20435	Add	*[491]	PROJECT[491]
218-13	20436-20440	some	*[491]	PROJECT[491]
218-14	20441-20450	functions	*[491]	PROJECT[491]
218-15	20451-20454	and	*[491]	PROJECT[491]
218-16	20455-20461	modify	_	_
218-17	20462-20467	items	_	_

#Text=.
219-1	20467-20468	.	_	_

#Text=\* Version 1.0.6 (Mar. 13, 2017)     - Add some functions and modify items.
220-1	20470-20471	\*	_	_
220-2	20472-20479	Version	_	_
220-3	20480-20485	1.0.6	_	_
220-4	20486-20487	(	_	_
220-5	20487-20490	Mar	_	_
220-6	20490-20491	.	_	_
220-7	20492-20494	13	_	_
220-8	20494-20495	,	_	_
220-9	20496-20500	2017	_	_
220-10	20500-20501	)	_	_
220-11	20506-20507	-	_	_
220-12	20508-20511	Add	_	_
220-13	20512-20516	some	_	_
220-14	20517-20526	functions	_	_
220-15	20527-20530	and	*[520]	PROGLANG[520]
220-16	20531-20537	modify	*[520]	PROGLANG[520]
220-17	20538-20543	items	*[520]	PROGLANG[520]
220-18	20543-20544	.	_	_

#Text=Sum quadratic problem is added
221-1	20545-20548	Sum	_	_
221-2	20549-20558	quadratic	_	_
221-3	20559-20566	problem	*[503]	CONFERENCE[503]
221-4	20567-20569	is	*[503]	CONFERENCE[503]
221-5	20570-20575	added	_	_

#Text=.
222-1	20575-20576	.	_	_

#Text=\* Version 1.0.5 (Jan. 12, 2017)     - Add some functions and modify items. \* Version 1.0.4 (Nov. 04, 2016)     - Integrate GDLibrary with SGDLibrary. \* Version 1.0.3 (Nov. 04, 2016)     - Modify many items
223-1	20578-20579	\*	_	_
223-2	20580-20587	Version	_	_
223-3	20588-20593	1.0.5	_	_
223-4	20594-20595	(	_	_
223-5	20595-20598	Jan	_	_
223-6	20598-20599	.	_	_
223-7	20600-20602	12	_	_
223-8	20602-20603	,	_	_
223-9	20604-20608	2017	_	_
223-10	20608-20609	)	_	_
223-11	20614-20615	-	_	_
223-12	20616-20619	Add	_	_
223-13	20620-20624	some	_	_
223-14	20625-20634	functions	_	_
223-15	20635-20638	and	_	_
223-16	20639-20645	modify	_	_
223-17	20646-20651	items	_	_
223-18	20651-20652	.	_	_
223-19	20653-20654	\*	_	_
223-20	20655-20662	Version	_	_
223-21	20663-20668	1.0.4	*[547]	EVALMETRIC[547]
223-22	20669-20670	(	*[547]	EVALMETRIC[547]
223-23	20670-20673	Nov	*[547]	EVALMETRIC[547]
223-24	20673-20674	.	*[547]	EVALMETRIC[547]
223-25	20675-20677	04	*[547]	EVALMETRIC[547]
223-26	20677-20678	,	*[547]	EVALMETRIC[547]
223-27	20679-20683	2016	*[547]	EVALMETRIC[547]
223-28	20683-20684	)	*[547]	EVALMETRIC[547]
223-29	20689-20690	-	*[547]	EVALMETRIC[547]
223-30	20691-20700	Integrate	*[547]	EVALMETRIC[547]
223-31	20701-20710	GDLibrary	*[547]	EVALMETRIC[547]
223-32	20711-20715	with	*[547]	EVALMETRIC[547]
223-33	20716-20726	SGDLibrary	*[547]	EVALMETRIC[547]
223-34	20726-20727	.	*[547]	EVALMETRIC[547]
223-35	20728-20729	\*	*[547]	EVALMETRIC[547]
223-36	20730-20737	Version	_	_
223-37	20738-20743	1.0.3	_	_
223-38	20744-20745	(	_	_
223-39	20745-20748	Nov	_	_
223-40	20748-20749	.	_	_
223-41	20750-20752	04	_	_
223-42	20752-20753	,	_	_
223-43	20754-20758	2016	_	_
223-44	20758-20759	)	_	_
223-45	20764-20765	-	_	_
223-46	20766-20772	Modify	_	_
223-47	20773-20777	many	_	_
223-48	20778-20783	items	_	_

#Text=.
224-1	20783-20784	.	_	_

#Text=\* Version 1.0.2 (Nov. 01, 2016)     - SVRG-BB (SVRG with Barzilai-Borwein) is added. \* Version 1.0.1 (Oct. 28, 2016)     - SS-SVRG (Subsampled Hessian algorithm followed by SVT) is added
225-1	20786-20787	\*	_	_
225-2	20788-20795	Version	_	_
225-3	20796-20801	1.0.2	_	_
225-4	20802-20803	(	_	_
225-5	20803-20806	Nov	_	_
225-6	20806-20807	.	_	_
225-7	20808-20810	01	_	_
225-8	20810-20811	,	_	_
225-9	20812-20816	2016	*[531]	LICENSE[531]
225-10	20816-20817	)	*[531]	LICENSE[531]
225-11	20822-20823	-	*[531]	LICENSE[531]
225-12	20824-20831	SVRG-BB	*[531]	LICENSE[531]
225-13	20832-20833	(	*[531]	LICENSE[531]
225-14	20833-20837	SVRG	*[531]	LICENSE[531]
225-15	20838-20842	with	*[531]	LICENSE[531]
225-16	20843-20859	Barzilai-Borwein	*[531]	LICENSE[531]
225-17	20859-20860	)	*[531]	LICENSE[531]
225-18	20861-20863	is	*[531]	LICENSE[531]
225-19	20864-20869	added	*[531]	LICENSE[531]
225-20	20869-20870	.	*[531]	LICENSE[531]
225-21	20871-20872	\*	*[531]	LICENSE[531]
225-22	20873-20880	Version	*[531]	LICENSE[531]
225-23	20881-20886	1.0.1	*[531]	LICENSE[531]
225-24	20887-20888	(	*[531]	LICENSE[531]
225-25	20888-20891	Oct	*[531]	LICENSE[531]
225-26	20891-20892	.	*[531]	LICENSE[531]
225-27	20893-20895	28	*[531]	LICENSE[531]
225-28	20895-20896	,	*[531]	LICENSE[531]
225-29	20897-20901	2016	*[531]	LICENSE[531]
225-30	20901-20902	)	*[531]	LICENSE[531]
225-31	20907-20908	-	*[531]	LICENSE[531]
225-32	20909-20916	SS-SVRG	*[531]	LICENSE[531]
225-33	20917-20918	(	*[531]	LICENSE[531]
225-34	20918-20928	Subsampled	*[531]	LICENSE[531]
225-35	20929-20936	Hessian	*[531]	LICENSE[531]
225-36	20937-20946	algorithm	*[531]	LICENSE[531]
225-37	20947-20955	followed	_	_
225-38	20956-20958	by	_	_
225-39	20959-20962	SVT	_	_
225-40	20962-20963	)	_	_
225-41	20964-20966	is	_	_
225-42	20967-20972	added	_	_

#Text=.
226-1	20972-20973	.	_	_

#Text=- Convergence behavior animation function is added. \* Version 1.0.0 (Oct. 27, 2016)     - Initial version.
227-1	20978-20979	-	_	_
227-2	20980-20991	Convergence	_	_
227-3	20992-21000	behavior	_	_
227-4	21001-21010	animation	_	_
227-5	21011-21019	function	_	_
227-6	21020-21022	is	_	_
227-7	21023-21028	added	_	_
227-8	21028-21029	.	_	_
227-9	21030-21031	\*	_	_
227-10	21032-21039	Version	_	_
227-11	21040-21045	1.0.0	_	_
227-12	21046-21047	(	_	_
227-13	21047-21050	Oct	_	_
227-14	21050-21051	.	_	_
227-15	21052-21054	27	_	_
227-16	21054-21055	,	_	_
227-17	21056-21060	2016	_	_
227-18	21060-21061	)	_	_
227-19	21066-21067	-	_	_
227-20	21068-21075	Initial	_	_
227-21	21076-21083	version	_	_
227-22	21083-21084	.	_	_