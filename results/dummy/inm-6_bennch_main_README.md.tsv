#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=<!
1-1	0-1	<	_	_
1-2	1-2	!	_	_

#Text=--  beNNch - Unified execution, collection, analysis and comparison of neural network simulation benchmarks.
2-1	2-3	-	_	_
2-2	3-4	-	_	_
2-3	6-12	beNNch	_	_
2-4	13-14	-	_	_
2-5	15-22	Unified	_	_
2-6	23-32	execution	_	_
2-7	32-33	,	*[535]	DATASET[535]
2-8	34-44	collection	*[535]	DATASET[535]
2-9	44-45	,	*[535]	DATASET[535]
2-10	46-54	analysis	*[535]	DATASET[535]
2-11	55-58	and	*[535]	DATASET[535]
2-12	59-69	comparison	_	_
2-13	70-72	of	_	_
2-14	73-79	neural	_	_
2-15	80-87	network	_	_
2-16	88-98	simulation	_	_
2-17	99-109	benchmarks	_	_
2-18	109-110	.	_	_

#Text=Copyright (C) 2021 Forschungszentrum Juelich GmbH, INM-6  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
3-1	111-120	Copyright	_	_
3-2	121-122	(	_	_
3-3	122-123	C	_	_
3-4	123-124	)	_	_
3-5	125-129	2021	_	_
3-6	130-147	Forschungszentrum	_	_
3-7	148-155	Juelich	_	_
3-8	156-160	GmbH	_	_
3-9	160-161	,	_	_
3-10	162-165	INM	_	_
3-11	165-166	-	_	_
3-12	166-167	6	_	_
3-13	169-173	This	_	_
3-14	174-181	program	_	_
3-15	182-184	is	_	_
3-16	185-189	free	_	_
3-17	190-198	software	_	_
3-18	198-199	:	_	_
3-19	200-203	you	_	_
3-20	204-207	can	_	_
3-21	208-220	redistribute	_	_
3-22	221-223	it	_	_
3-23	224-227	and	_	_
3-24	227-228	/	_	_
3-25	228-230	or	_	_
3-26	231-237	modify	_	_
3-27	238-240	it	_	_
3-28	241-246	under	_	_
3-29	247-250	the	*[475]	PROJECT[475]
3-30	251-256	terms	*[475]	PROJECT[475]
3-31	257-259	of	*[475]	PROJECT[475]
3-32	260-263	the	*[475]	PROJECT[475]
3-33	264-267	GNU	*[475]	PROJECT[475]
3-34	268-275	General	*[475]	PROJECT[475]
3-35	276-282	Public	*[475]	PROJECT[475]
3-36	283-290	License	_	_
3-37	291-293	as	_	_
3-38	294-303	published	_	_
3-39	304-306	by	_	_
3-40	307-310	the	_	_
3-41	311-315	Free	_	_
3-42	316-324	Software	_	_
3-43	325-335	Foundation	_	_
3-44	335-336	,	_	_
3-45	337-343	either	_	_
3-46	344-351	version	_	_
3-47	352-353	3	_	_
3-48	354-356	of	_	_
3-49	357-360	the	_	_
3-50	361-368	License	_	_
3-51	368-369	,	_	_
3-52	370-372	or	_	_
3-53	373-374	(	_	_
3-54	374-376	at	_	_
3-55	377-381	your	_	_
3-56	382-388	option	_	_
3-57	388-389	)	_	_
3-58	390-393	any	_	_
3-59	394-399	later	_	_
3-60	400-407	version	_	_
3-61	407-408	.	_	_

#Text=This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY\; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
4-1	409-413	This	_	_
4-2	414-421	program	_	_
4-3	422-424	is	_	_
4-4	425-436	distributed	_	_
4-5	437-439	in	_	_
4-6	440-443	the	_	_
4-7	444-448	hope	_	_
4-8	449-453	that	_	_
4-9	454-456	it	_	_
4-10	457-461	will	_	_
4-11	462-464	be	_	_
4-12	465-471	useful	_	_
4-13	471-472	,	_	_
4-14	473-476	but	_	_
4-15	477-484	WITHOUT	_	_
4-16	485-488	ANY	_	_
4-17	489-497	WARRANTY	_	_
4-18	497-498	\;	_	_
4-19	499-506	without	_	_
4-20	507-511	even	_	_
4-21	512-515	the	_	_
4-22	516-523	implied	_	_
4-23	524-532	warranty	*[449]	PUBLICATION[449]
4-24	533-535	of	*[449]	PUBLICATION[449]
4-25	536-551	MERCHANTABILITY	*[449]	PUBLICATION[449]
4-26	552-554	or	*[449]	PUBLICATION[449]
4-27	555-562	FITNESS	*[449]	PUBLICATION[449]
4-28	563-566	FOR	*[449]	PUBLICATION[449]
4-29	567-568	A	_	_
4-30	569-579	PARTICULAR	_	_
4-31	580-587	PURPOSE	_	_
4-32	587-588	.	_	_

#Text=See the GNU General Public License for more details.
5-1	589-592	See	_	_
5-2	593-596	the	_	_
5-3	597-600	GNU	_	_
5-4	601-608	General	_	_
5-5	609-615	Public	_	_
5-6	616-623	License	_	_
5-7	624-627	for	_	_
5-8	628-632	more	_	_
5-9	633-640	details	_	_
5-10	640-641	.	_	_

#Text=You should have received a copy of the GNU General Public License along with this program.
6-1	642-645	You	_	_
6-2	646-652	should	_	_
6-3	653-657	have	_	_
6-4	658-666	received	_	_
6-5	667-668	a	*[509]	LICENSE[509]
6-6	669-673	copy	*[509]	LICENSE[509]
6-7	674-676	of	*[509]	LICENSE[509]
6-8	677-680	the	*[509]	LICENSE[509]
6-9	681-684	GNU	*[509]	LICENSE[509]
6-10	685-692	General	*[509]	LICENSE[509]
6-11	693-699	Public	_	_
6-12	700-707	License	_	_
6-13	708-713	along	_	_
6-14	714-718	with	_	_
6-15	719-723	this	_	_
6-16	724-731	program	_	_
6-17	731-732	.	_	_

#Text=If not, see <https://www.gnu.org/licenses/>.
7-1	733-735	If	_	_
7-2	736-739	not	_	_
7-3	739-740	,	*[495]	PROGLANG[495]
7-4	741-744	see	*[495]	PROGLANG[495]
7-5	745-746	<	*[495]	PROGLANG[495]
7-6	746-751	https	*[495]	PROGLANG[495]
7-7	751-752	:	*[495]	PROGLANG[495]
7-8	752-753	/	*[495]	PROGLANG[495]
7-9	753-754	/	*[495]	PROGLANG[495]
7-10	754-765	www.gnu.org	*[495]	PROGLANG[495]
7-11	765-766	/	_	_
7-12	766-774	licenses	_	_
7-13	774-775	/	_	_
7-14	775-776	>	_	_
7-15	776-777	.	_	_

#Text=SPDX-License-Identifier: GPL-3.0-or-later -\->  # beNNch  Computational efficiency is essential to simulate complex neuronal networks and study long-term effects such as learning.
8-1	779-802	SPDX-License-Identifier	_	_
8-2	802-803	:	*[528]	EVALMETRIC[528]
8-3	804-807	GPL	*[528]	EVALMETRIC[528]
8-4	807-808	-	*[528]	EVALMETRIC[528]
8-5	808-811	3.0	*[528]	EVALMETRIC[528]
8-6	811-812	-	*[528]	EVALMETRIC[528]
8-7	812-820	or-later	*[528]	EVALMETRIC[528]
8-8	821-822	-	*[528]	EVALMETRIC[528]
8-9	822-823	-	*[528]	EVALMETRIC[528]
8-10	823-824	>	*[528]	EVALMETRIC[528]
8-11	826-827	#	*[528]	EVALMETRIC[528]
8-12	828-834	beNNch	*[528]	EVALMETRIC[528]
8-13	836-849	Computational	*[528]	EVALMETRIC[528]
8-14	850-860	efficiency	*[528]	EVALMETRIC[528]
8-15	861-863	is	*[528]	EVALMETRIC[528]
8-16	864-873	essential	*[528]	EVALMETRIC[528]
8-17	874-876	to	*[528]	EVALMETRIC[528]
8-18	877-885	simulate	*[528]	EVALMETRIC[528]
8-19	886-893	complex	*[528]	EVALMETRIC[528]
8-20	894-902	neuronal	*[528]	EVALMETRIC[528]
8-21	903-911	networks	*[528]	EVALMETRIC[528]
8-22	912-915	and	_	_
8-23	916-921	study	_	_
8-24	922-931	long-term	_	_
8-25	932-939	effects	_	_
8-26	940-944	such	_	_
8-27	945-947	as	_	_
8-28	948-956	learning	_	_
8-29	956-957	.	_	_

#Text=The scaling performance of neuronal network simulators on high-performance computing systems can be assessed with benchmark simulations.
9-1	958-961	The	_	_
9-2	962-969	scaling	_	_
9-3	970-981	performance	_	_
9-4	982-984	of	_	_
9-5	985-993	neuronal	_	_
9-6	994-1001	network	_	_
9-7	1002-1012	simulators	*[450]	PUBLICATION[450]
9-8	1013-1015	on	*[450]	PUBLICATION[450]
9-9	1016-1032	high-performance	_	_
9-10	1033-1042	computing	_	_
9-11	1043-1050	systems	_	_
9-12	1051-1054	can	_	_
9-13	1055-1057	be	_	_
9-14	1058-1066	assessed	_	_
9-15	1067-1071	with	_	_
9-16	1072-1081	benchmark	_	_
9-17	1082-1093	simulations	_	_
9-18	1093-1094	.	_	_

#Text=However, maintaining comparability of benchmark results across different systems, software environments, network models, and researchers from potentially different labs poses a challenge.
10-1	1095-1102	However	_	_
10-2	1102-1103	,	_	_
10-3	1104-1115	maintaining	_	_
10-4	1116-1129	comparability	_	_
10-5	1130-1132	of	_	_
10-6	1133-1142	benchmark	_	_
10-7	1143-1150	results	_	_
10-8	1151-1157	across	_	_
10-9	1158-1167	different	_	_
10-10	1168-1175	systems	_	_
10-11	1175-1176	,	_	_
10-12	1177-1185	software	_	_
10-13	1186-1198	environments	_	_
10-14	1198-1199	,	_	_
10-15	1200-1207	network	_	_
10-16	1208-1214	models	_	_
10-17	1214-1215	,	_	_
10-18	1216-1219	and	_	_
10-19	1220-1231	researchers	_	_
10-20	1232-1236	from	_	_
10-21	1237-1248	potentially	_	_
10-22	1249-1258	different	_	_
10-23	1259-1263	labs	_	_
10-24	1264-1269	poses	*[471]	WORKSHOP[471]
10-25	1270-1271	a	*[471]	WORKSHOP[471]
10-26	1272-1281	challenge	_	_
10-27	1281-1282	.	_	_

#Text=\*\*`beNNch` tackles this challenge by implementing a unified, modular workflow for configuring, executing, and analyzing such benchmarks.\*\*   The software framework builds around the \[JUBE Benchmarking Environment\](https://www.fz-juelich.de/ias/jsc/EN/Expertise/Support/Software/JUBE/\_node.html), installs simulation software, provides an interface to benchmark models, automates data and metadata annotation, and accounts for storage and presentation of results.
11-1	1285-1286	\*	_	_
11-2	1286-1287	\*	_	_
11-3	1287-1288	`	_	_
11-4	1288-1294	beNNch	_	_
11-5	1294-1295	`	_	_
11-6	1296-1303	tackles	_	_
11-7	1304-1308	this	_	_
11-8	1309-1318	challenge	_	_
11-9	1319-1321	by	_	_
11-10	1322-1334	implementing	_	_
11-11	1335-1336	a	_	_
11-12	1337-1344	unified	_	_
11-13	1344-1345	,	_	_
11-14	1346-1353	modular	_	_
11-15	1354-1362	workflow	_	_
11-16	1363-1366	for	_	_
11-17	1367-1378	configuring	_	_
11-18	1378-1379	,	_	_
11-19	1380-1389	executing	_	_
11-20	1389-1390	,	*[460]	ONTOLOGY[460]
11-21	1391-1394	and	*[460]	ONTOLOGY[460]
11-22	1395-1404	analyzing	*[460]	ONTOLOGY[460]
11-23	1405-1409	such	*[460]	ONTOLOGY[460]
11-24	1410-1420	benchmarks	*[460]	ONTOLOGY[460]
11-25	1420-1421	.	*[460]	ONTOLOGY[460]
11-26	1421-1422	\*	*[460]	ONTOLOGY[460]
11-27	1422-1423	\*	*[460]	ONTOLOGY[460]
11-28	1426-1429	The	*[460]	ONTOLOGY[460]
11-29	1430-1438	software	*[460]	ONTOLOGY[460]
11-30	1439-1448	framework	*[460]	ONTOLOGY[460]
11-31	1449-1455	builds	*[460]	ONTOLOGY[460]
11-32	1456-1462	around	*[460]	ONTOLOGY[460]
11-33	1463-1466	the	*[460]	ONTOLOGY[460]
11-34	1467-1468	\[	*[460]	ONTOLOGY[460]
11-35	1468-1472	JUBE	*[460]	ONTOLOGY[460]
11-36	1473-1485	Benchmarking	*[460]	ONTOLOGY[460]
11-37	1486-1497	Environment	*[460]	ONTOLOGY[460]
11-38	1497-1498	\]	*[460]	ONTOLOGY[460]
11-39	1498-1499	(	*[460]	ONTOLOGY[460]
11-40	1499-1504	https	*[460]	ONTOLOGY[460]
11-41	1504-1505	:	*[460]	ONTOLOGY[460]
11-42	1505-1506	/	*[460]	ONTOLOGY[460]
11-43	1506-1507	/	*[460]	ONTOLOGY[460]
11-44	1507-1524	www.fz-juelich.de	*[460]	ONTOLOGY[460]
11-45	1524-1525	/	*[460]	ONTOLOGY[460]
11-46	1525-1528	ias	*[460]	ONTOLOGY[460]
11-47	1528-1529	/	*[460]	ONTOLOGY[460]
11-48	1529-1532	jsc	*[460]	ONTOLOGY[460]
11-49	1532-1533	/	*[460]	ONTOLOGY[460]
11-50	1533-1535	EN	*[460]	ONTOLOGY[460]
11-51	1535-1536	/	*[460]	ONTOLOGY[460]
11-52	1536-1545	Expertise	*[460]	ONTOLOGY[460]
11-53	1545-1546	/	*[460]	ONTOLOGY[460]
11-54	1546-1553	Support	*[460]	ONTOLOGY[460]
11-55	1553-1554	/	*[460]	ONTOLOGY[460]
11-56	1554-1562	Software	*[460]	ONTOLOGY[460]
11-57	1562-1563	/	*[460]	ONTOLOGY[460]
11-58	1563-1567	JUBE	*[460]	ONTOLOGY[460]
11-59	1567-1568	/	*[460]	ONTOLOGY[460]
11-60	1568-1569	\_	*[460]	ONTOLOGY[460]
11-61	1569-1578	node.html	*[460]	ONTOLOGY[460]
11-62	1578-1579	)	*[460]	ONTOLOGY[460]
11-63	1579-1580	,	*[460]	ONTOLOGY[460]
11-64	1581-1589	installs	*[460]	ONTOLOGY[460]
11-65	1590-1600	simulation	*[460]	ONTOLOGY[460]
11-66	1601-1609	software	*[460]	ONTOLOGY[460]
11-67	1609-1610	,	*[460]	ONTOLOGY[460]
11-68	1611-1619	provides	*[460]	ONTOLOGY[460]
11-69	1620-1622	an	*[460]	ONTOLOGY[460]
11-70	1623-1632	interface	*[460]	ONTOLOGY[460]
11-71	1633-1635	to	*[460]	ONTOLOGY[460]
11-72	1636-1645	benchmark	*[460]	ONTOLOGY[460]
11-73	1646-1652	models	*[460]	ONTOLOGY[460]
11-74	1652-1653	,	*[460]	ONTOLOGY[460]
11-75	1654-1663	automates	_	_
11-76	1664-1668	data	_	_
11-77	1669-1672	and	_	_
11-78	1673-1681	metadata	_	_
11-79	1682-1692	annotation	_	_
11-80	1692-1693	,	_	_
11-81	1694-1697	and	_	_
11-82	1698-1706	accounts	_	_
11-83	1707-1710	for	_	_
11-84	1711-1718	storage	_	_
11-85	1719-1722	and	_	_
11-86	1723-1735	presentation	_	_
11-87	1736-1738	of	_	_
11-88	1739-1746	results	_	_
11-89	1746-1747	.	_	_

#Text=For more details on the conceptual ideas behind `beNNch`, refer to our paper:   > Albers J, Pronold J, Kurth AC, Vennemo SB, Haghighi Mood K, Patronis A, Terhorst D, Jordan J, Kunkel S, Tetzlaff T, Diesmann M and Senk J (2022) A Modular Workflow for Performance Benchmarking of Neuronal Network Simulations.
12-1	1749-1752	For	_	_
12-2	1753-1757	more	_	_
12-3	1758-1765	details	_	_
12-4	1766-1768	on	_	_
12-5	1769-1772	the	_	_
12-6	1773-1783	conceptual	_	_
12-7	1784-1789	ideas	_	_
12-8	1790-1796	behind	_	_
12-9	1797-1798	`	_	_
12-10	1798-1804	beNNch	_	_
12-11	1804-1805	`	_	_
12-12	1805-1806	,	_	_
12-13	1807-1812	refer	_	_
12-14	1813-1815	to	_	_
12-15	1816-1819	our	_	_
12-16	1820-1825	paper	_	_
12-17	1825-1826	:	_	_
12-18	1829-1830	>	_	_
12-19	1831-1837	Albers	_	_
12-20	1838-1839	J	_	_
12-21	1839-1840	,	_	_
12-22	1841-1848	Pronold	_	_
12-23	1849-1850	J	_	_
12-24	1850-1851	,	_	_
12-25	1852-1857	Kurth	_	_
12-26	1858-1860	AC	_	_
12-27	1860-1861	,	_	_
12-28	1862-1869	Vennemo	_	_
12-29	1870-1872	SB	_	_
12-30	1872-1873	,	_	_
12-31	1874-1882	Haghighi	_	_
12-32	1883-1887	Mood	_	_
12-33	1888-1889	K	_	_
12-34	1889-1890	,	_	_
12-35	1891-1899	Patronis	_	_
12-36	1900-1901	A	_	_
12-37	1901-1902	,	_	_
12-38	1903-1911	Terhorst	_	_
12-39	1912-1913	D	*[510]	LICENSE[510]
12-40	1913-1914	,	*[510]	LICENSE[510]
12-41	1915-1921	Jordan	*[510]	LICENSE[510]
12-42	1922-1923	J	*[510]	LICENSE[510]
12-43	1923-1924	,	*[510]	LICENSE[510]
12-44	1925-1931	Kunkel	*[510]	LICENSE[510]
12-45	1932-1933	S	*[510]	LICENSE[510]
12-46	1933-1934	,	*[510]	LICENSE[510]
12-47	1935-1943	Tetzlaff	*[510]	LICENSE[510]
12-48	1944-1945	T	*[510]	LICENSE[510]
12-49	1945-1946	,	*[510]	LICENSE[510]
12-50	1947-1955	Diesmann	*[510]	LICENSE[510]
12-51	1956-1957	M	*[510]	LICENSE[510]
12-52	1958-1961	and	*[510]	LICENSE[510]
12-53	1962-1966	Senk	_	_
12-54	1967-1968	J	_	_
12-55	1969-1970	(	_	_
12-56	1970-1974	2022	_	_
12-57	1974-1975	)	_	_
12-58	1976-1977	A	_	_
12-59	1978-1985	Modular	_	_
12-60	1986-1994	Workflow	_	_
12-61	1995-1998	for	_	_
12-62	1999-2010	Performance	_	_
12-63	2011-2023	Benchmarking	_	_
12-64	2024-2026	of	_	_
12-65	2027-2035	Neuronal	_	_
12-66	2036-2043	Network	_	_
12-67	2044-2055	Simulations	_	_
12-68	2055-2056	.	_	_

#Text=Front.
13-1	2057-2062	Front	_	_
13-2	2062-2063	.	_	_

#Text=Neuroinform. 16:837549. doi: \[10.3389/fninf.2022.837549\](https://doi.org/10.3389/fninf.2022.837549)    !
14-1	2064-2075	Neuroinform	_	_
14-2	2075-2076	.	_	_
14-3	2077-2079	16	_	_
14-4	2079-2080	:	_	_
14-5	2080-2086	837549	_	_
14-6	2086-2087	.	_	_
14-7	2088-2091	doi	_	_
14-8	2091-2092	:	_	_
14-9	2093-2094	\[	_	_
14-10	2094-2101	10.3389	_	_
14-11	2101-2102	/	*[523]	SOFTWARE[523]
14-12	2102-2107	fninf	*[523]	SOFTWARE[523]
14-13	2107-2119	.2022.837549	*[523]	SOFTWARE[523]
14-14	2119-2120	\]	*[523]	SOFTWARE[523]
14-15	2120-2121	(	*[523]	SOFTWARE[523]
14-16	2121-2126	https	*[523]	SOFTWARE[523]
14-17	2126-2127	:	*[523]	SOFTWARE[523]
14-18	2127-2128	/	*[523]	SOFTWARE[523]
14-19	2128-2129	/	*[523]	SOFTWARE[523]
14-20	2129-2136	doi.org	_	_
14-21	2136-2137	/	_	_
14-22	2137-2144	10.3389	_	_
14-23	2144-2145	/	_	_
14-24	2145-2150	fninf	_	_
14-25	2150-2162	.2022.837549	_	_
14-26	2162-2163	)	_	_
14-27	2167-2168	!	_	_

#Text=\[\](multi-area-model\_5faa0e9c.png) \*\*\*Example `beNNch` output (Figure 5C of Albers et al., 2022): Strong-scaling performance of the \[multi-area model\](https://github.com/INM-6/multi-area-model) simulated with the neuronal network simulator \[NEST\](https://www.nest-simulator.org) on JURECA-DC.\*\* The left graph shows the absolute wall-clock time measured with Python-level timers for both network construction and state propagation.
15-1	2168-2169	\[	_	_
15-2	2169-2170	\]	_	_
15-3	2170-2171	(	_	_
15-4	2171-2187	multi-area-model	_	_
15-5	2187-2188	\_	_	_
15-6	2188-2200	5faa0e9c.png	_	_
15-7	2200-2201	)	_	_
15-8	2202-2203	\*	_	_
15-9	2203-2204	\*	_	_
15-10	2204-2205	\*	_	_
15-11	2205-2212	Example	_	_
15-12	2213-2214	`	_	_
15-13	2214-2220	beNNch	_	_
15-14	2220-2221	`	_	_
15-15	2222-2228	output	_	_
15-16	2229-2230	(	_	_
15-17	2230-2236	Figure	_	_
15-18	2237-2239	5C	_	_
15-19	2240-2242	of	_	_
15-20	2243-2249	Albers	_	_
15-21	2250-2252	et	_	_
15-22	2253-2255	al	_	_
15-23	2255-2256	.	_	_
15-24	2256-2257	,	_	_
15-25	2258-2262	2022	_	_
15-26	2262-2263	)	_	_
15-27	2263-2264	:	_	_
15-28	2265-2279	Strong-scaling	_	_
15-29	2280-2291	performance	_	_
15-30	2292-2294	of	_	_
15-31	2295-2298	the	_	_
15-32	2299-2300	\[	_	_
15-33	2300-2310	multi-area	_	_
15-34	2311-2316	model	_	_
15-35	2316-2317	\]	_	_
15-36	2317-2318	(	_	_
15-37	2318-2323	https	_	_
15-38	2323-2324	:	_	_
15-39	2324-2325	/	_	_
15-40	2325-2326	/	_	_
15-41	2326-2336	github.com	_	_
15-42	2336-2337	/	_	_
15-43	2337-2340	INM	_	_
15-44	2340-2341	-	_	_
15-45	2341-2342	6	_	_
15-46	2342-2343	/	_	_
15-47	2343-2359	multi-area-model	_	_
15-48	2359-2360	)	_	_
15-49	2361-2370	simulated	_	_
15-50	2371-2375	with	_	_
15-51	2376-2379	the	_	_
15-52	2380-2388	neuronal	_	_
15-53	2389-2396	network	_	_
15-54	2397-2406	simulator	_	_
15-55	2407-2408	\[	*[476]	DATASET[476]
15-56	2408-2412	NEST	*[476]	DATASET[476]
15-57	2412-2413	\]	*[476]	DATASET[476]
15-58	2413-2414	(	*[476]	DATASET[476]
15-59	2414-2419	https	*[476]	DATASET[476]
15-60	2419-2420	:	*[476]	DATASET[476]
15-61	2420-2421	/	*[476]	DATASET[476]
15-62	2421-2422	/	*[476]	DATASET[476]
15-63	2422-2444	www.nest-simulator.org	*[476]	DATASET[476]
15-64	2444-2445	)	*[476]	DATASET[476]
15-65	2446-2448	on	*[476]	DATASET[476]
15-66	2449-2458	JURECA-DC	*[476]	DATASET[476]
15-67	2458-2459	.	*[476]	DATASET[476]
15-68	2459-2460	\*	*[476]	DATASET[476]
15-69	2460-2461	\*	*[476]	DATASET[476]
15-70	2462-2465	The	*[476]	DATASET[476]
15-71	2466-2470	left	*[476]	DATASET[476]
15-72	2471-2476	graph	*[476]	DATASET[476]
15-73	2477-2482	shows	*[476]	DATASET[476]
15-74	2483-2486	the	*[476]	DATASET[476]
15-75	2487-2495	absolute	*[476]	DATASET[476]
15-76	2496-2506	wall-clock	*[476]	DATASET[476]
15-77	2507-2511	time	*[476]	DATASET[476]
15-78	2512-2520	measured	*[476]	DATASET[476]
15-79	2521-2525	with	*[476]	DATASET[476]
15-80	2526-2538	Python-level	*[476]	DATASET[476]
15-80	2526-2532	Python	*[476]	DATASET[476]
15-81	2539-2545	timers	*[476]	DATASET[476]
15-82	2546-2549	for	*[476]	DATASET[476]
15-83	2550-2554	both	*[476]	DATASET[476]
15-84	2555-2562	network	_	_
15-85	2563-2575	construction	_	_
15-86	2576-2579	and	_	_
15-87	2580-2585	state	_	_
15-88	2586-2597	propagation	_	_
15-89	2597-2598	.	_	_

#Text=Error bars indicate variability across three simulation repeats with different random seeds.
16-1	2599-2604	Error	_	_
16-2	2605-2609	bars	_	_
16-3	2610-2618	indicate	_	_
16-4	2619-2630	variability	_	_
16-5	2631-2637	across	_	_
16-6	2638-2643	three	_	_
16-7	2644-2654	simulation	_	_
16-8	2655-2662	repeats	*[483]	CONFERENCE[483]
16-9	2663-2667	with	*[483]	CONFERENCE[483]
16-10	2668-2677	different	*[483]	CONFERENCE[483]
16-11	2678-2684	random	_	_
16-12	2685-2690	seeds	_	_
16-13	2690-2691	.	_	_

#Text=The top right graph displays the real-time factor defined as wall-clock time normalized by the model time.
17-1	2692-2695	The	_	_
17-2	2696-2699	top	_	_
17-3	2700-2705	right	_	_
17-4	2706-2711	graph	_	_
17-5	2712-2720	displays	_	_
17-6	2721-2724	the	_	_
17-7	2725-2734	real-time	_	_
17-8	2735-2741	factor	_	_
17-9	2742-2749	defined	_	_
17-10	2750-2752	as	_	_
17-11	2753-2763	wall-clock	_	_
17-12	2764-2768	time	_	_
17-13	2769-2779	normalized	_	_
17-14	2780-2782	by	_	_
17-15	2783-2786	the	_	_
17-16	2787-2792	model	_	_
17-17	2793-2797	time	_	_
17-18	2797-2798	.	_	_

#Text=Built-in timers resolve four different phases of the state propagation: update, collocation, communication, and delivery.
18-1	2799-2807	Built-in	_	_
18-2	2808-2814	timers	_	_
18-3	2815-2822	resolve	_	_
18-4	2823-2827	four	_	_
18-5	2828-2837	different	_	_
18-6	2838-2844	phases	_	_
18-7	2845-2847	of	_	_
18-8	2848-2851	the	_	_
18-9	2852-2857	state	_	_
18-10	2858-2869	propagation	_	_
18-11	2869-2870	:	_	_
18-12	2871-2877	update	_	_
18-13	2877-2878	,	_	_
18-14	2879-2890	collocation	_	_
18-15	2890-2891	,	*[484]	CONFERENCE[484]
18-16	2892-2905	communication	*[484]	CONFERENCE[484]
18-17	2905-2906	,	*[484]	CONFERENCE[484]
18-18	2907-2910	and	*[484]	CONFERENCE[484]
18-19	2911-2919	delivery	_	_
18-20	2919-2920	.	_	_

#Text=Pink error bars show the same variability of state propagation as the left graph.
19-1	2921-2925	Pink	_	_
19-2	2926-2931	error	_	_
19-3	2932-2936	bars	_	_
19-4	2937-2941	show	_	_
19-5	2942-2945	the	*[511]	LICENSE[511]
19-6	2946-2950	same	_	_
19-7	2951-2962	variability	_	_
19-8	2963-2965	of	_	_
19-9	2966-2971	state	_	_
19-10	2972-2983	propagation	_	_
19-11	2984-2986	as	_	_
19-12	2987-2990	the	_	_
19-13	2991-2995	left	_	_
19-14	2996-3001	graph	_	_
19-15	3001-3002	.	_	_

#Text=The lower right graph shows the relative contribution of these phases to the state-propagation time.\*  See also the accompanying \[GitHub Page\](https://inm-6.github.io/beNNch) for further `beNNch` results in flip-book format.  ## Structure  \| directory      \| description \| \|--------   \|-------------\| \| \[analysis\](.
20-1	3003-3006	The	_	_
20-2	3007-3012	lower	_	_
20-3	3013-3018	right	_	_
20-4	3019-3024	graph	_	_
20-5	3025-3030	shows	_	_
20-6	3031-3034	the	_	_
20-7	3035-3043	relative	_	_
20-8	3044-3056	contribution	_	_
20-9	3057-3059	of	_	_
20-10	3060-3065	these	_	_
20-11	3066-3072	phases	_	_
20-12	3073-3075	to	_	_
20-13	3076-3079	the	_	_
20-14	3080-3097	state-propagation	_	_
20-15	3098-3102	time	_	_
20-16	3102-3103	.	_	_
20-17	3103-3104	\*	_	_
20-18	3106-3109	See	_	_
20-19	3110-3114	also	_	_
20-20	3115-3118	the	_	_
20-21	3119-3131	accompanying	_	_
20-22	3132-3133	\[	_	_
20-23	3133-3139	GitHub	_	_
20-24	3140-3144	Page	_	_
20-25	3144-3145	\]	_	_
20-26	3145-3146	(	_	_
20-27	3146-3151	https	_	_
20-28	3151-3152	:	_	_
20-29	3152-3153	/	_	_
20-30	3153-3154	/	_	_
20-31	3154-3157	inm	_	_
20-32	3157-3158	-	_	_
20-33	3158-3159	6	_	_
20-34	3159-3160	.	_	_
20-35	3160-3169	github.io	_	_
20-36	3169-3170	/	_	_
20-37	3170-3176	beNNch	_	_
20-38	3176-3177	)	_	_
20-39	3178-3181	for	_	_
20-40	3182-3189	further	_	_
20-41	3190-3191	`	_	_
20-42	3191-3197	beNNch	_	_
20-43	3197-3198	`	_	_
20-44	3199-3206	results	_	_
20-45	3207-3209	in	_	_
20-46	3210-3219	flip-book	*[512]	LICENSE[512]
20-47	3220-3226	format	*[512]	LICENSE[512]
20-48	3226-3227	.	*[512]	LICENSE[512]
20-49	3229-3230	#	*[512]	LICENSE[512]
20-50	3230-3231	#	*[512]	LICENSE[512]
20-51	3232-3241	Structure	_	_
20-52	3243-3244	\|	_	_
20-53	3245-3254	directory	_	_
20-54	3260-3261	\|	_	_
20-55	3262-3273	description	_	_
20-56	3274-3275	\|	_	_
20-57	3276-3277	\|	_	_
20-58	3277-3278	-	_	_
20-59	3278-3279	-	_	_
20-60	3279-3280	-	_	_
20-61	3280-3281	-	_	_
20-62	3281-3282	-	_	_
20-63	3282-3283	-	_	_
20-64	3283-3284	-	_	_
20-65	3284-3285	-	_	_
20-66	3288-3289	\|	_	_
20-67	3289-3290	-	_	_
20-68	3290-3291	-	_	_
20-69	3291-3292	-	_	_
20-70	3292-3293	-	_	_
20-71	3293-3294	-	_	_
20-72	3294-3295	-	_	_
20-73	3295-3296	-	_	_
20-74	3296-3297	-	_	_
20-75	3297-3298	-	_	_
20-76	3298-3299	-	_	_
20-77	3299-3300	-	_	_
20-78	3300-3301	-	_	_
20-79	3301-3302	-	_	_
20-80	3302-3303	\|	_	_
20-81	3304-3305	\|	_	_
20-82	3306-3307	\[	_	_
20-83	3307-3315	analysis	_	_
20-84	3315-3316	\]	_	_
20-85	3316-3317	(	_	_
20-86	3317-3318	.	_	_

#Text=/analysis/)    \| scripts for data and metadata analysis \| \| \[benchmarks\](.
21-1	3318-3319	/	_	_
21-2	3319-3327	analysis	_	_
21-3	3327-3328	/	_	_
21-4	3328-3329	)	_	_
21-5	3333-3334	\|	_	_
21-6	3335-3342	scripts	_	_
21-7	3343-3346	for	_	_
21-8	3347-3351	data	_	_
21-9	3352-3355	and	_	_
21-10	3356-3364	metadata	_	_
21-11	3365-3373	analysis	_	_
21-12	3374-3375	\|	_	_
21-13	3376-3377	\|	_	_
21-14	3378-3379	\[	_	_
21-15	3379-3389	benchmarks	_	_
21-16	3389-3390	\]	_	_
21-17	3390-3391	(	_	_
21-18	3391-3392	.	_	_

#Text=/benchmarks/)  \| JUBE benchmark scripts for select neuroscientific models \| \| \[config\](.
22-1	3392-3393	/	_	_
22-2	3393-3403	benchmarks	_	_
22-3	3403-3404	/	_	_
22-4	3404-3405	)	_	_
22-5	3407-3408	\|	_	_
22-6	3409-3413	JUBE	_	_
22-7	3414-3423	benchmark	_	_
22-8	3424-3431	scripts	_	_
22-9	3432-3435	for	_	_
22-10	3436-3442	select	*[513]	LICENSE[513]
22-11	3443-3458	neuroscientific	*[513]	LICENSE[513]
22-12	3459-3465	models	*[513]	LICENSE[513]
22-13	3466-3467	\|	*[513]	LICENSE[513]
22-14	3468-3469	\|	*[513]	LICENSE[513]
22-15	3470-3471	\[	*[513]	LICENSE[513]
22-16	3471-3477	config	_	_
22-17	3477-3478	\]	_	_
22-18	3478-3479	(	_	_
22-19	3479-3480	.	_	_

#Text=/config/)      \| templates for user configuration files to be copied and adapted \| \| \[flipbook\](.
23-1	3480-3481	/	_	_
23-2	3481-3487	config	_	_
23-3	3487-3488	/	_	_
23-4	3488-3489	)	_	_
23-5	3495-3496	\|	_	_
23-6	3497-3506	templates	_	_
23-7	3507-3510	for	_	_
23-8	3511-3515	user	_	_
23-9	3516-3529	configuration	_	_
23-10	3530-3535	files	_	_
23-11	3536-3538	to	_	_
23-12	3539-3541	be	_	_
23-13	3542-3548	copied	_	_
23-14	3549-3552	and	_	_
23-15	3553-3560	adapted	_	_
23-16	3561-3562	\|	_	_
23-17	3563-3564	\|	_	_
23-18	3565-3566	\[	_	_
23-19	3566-3574	flipbook	_	_
23-20	3574-3575	\]	_	_
23-21	3575-3576	(	_	_
23-22	3576-3577	.	_	_

#Text=/flipbook/)    \| script for generating a comparative flip book \| \| \[helpers\](.
24-1	3577-3578	/	_	_
24-2	3578-3586	flipbook	_	_
24-3	3586-3587	/	_	_
24-4	3587-3588	)	_	_
24-5	3592-3593	\|	_	_
24-6	3594-3600	script	_	_
24-7	3601-3604	for	_	_
24-8	3605-3615	generating	_	_
24-9	3616-3617	a	*[476]	PROJECT[476]
24-10	3618-3629	comparative	_	_
24-11	3630-3634	flip	_	_
24-12	3635-3639	book	_	_
24-13	3640-3641	\|	_	_
24-14	3642-3643	\|	_	_
24-15	3644-3645	\[	_	_
24-16	3645-3652	helpers	_	_
24-17	3652-3653	\]	_	_
24-18	3653-3654	(	_	_
24-19	3654-3655	.	_	_

#Text=/helpers/)     \| JUBE helper functions and parameter sets \| \| \[models\](.
25-1	3655-3656	/	_	_
25-2	3656-3663	helpers	_	_
25-3	3663-3664	/	_	_
25-4	3664-3665	)	_	_
25-5	3670-3671	\|	_	_
25-6	3672-3676	JUBE	_	_
25-7	3677-3683	helper	_	_
25-8	3684-3693	functions	_	_
25-9	3694-3697	and	_	_
25-10	3698-3707	parameter	_	_
25-11	3708-3712	sets	_	_
25-12	3713-3714	\|	_	_
25-13	3715-3716	\|	_	_
25-14	3717-3718	\[	_	_
25-15	3718-3724	models	_	_
25-16	3724-3725	\]	_	_
25-17	3725-3726	(	_	_
25-18	3726-3727	.	_	_

#Text=/models/)      \| git submodule\; the linked repository (`https://github.com/INM-6/beNNch-models`) contains NEST network models adapted to work with `beNNch` \| \| \[plot\](.
26-1	3727-3728	/	_	_
26-2	3728-3734	models	_	_
26-3	3734-3735	/	_	_
26-4	3735-3736	)	_	_
26-5	3742-3743	\|	_	_
26-6	3744-3747	git	_	_
26-7	3748-3757	submodule	_	_
26-8	3757-3758	\;	*[496]	PROGLANG[496]
26-9	3759-3762	the	*[496]	PROGLANG[496]
26-10	3763-3769	linked	*[496]	PROGLANG[496]
26-11	3770-3780	repository	_	_
26-12	3781-3782	(	_	_
26-13	3782-3783	`	_	_
26-14	3783-3788	https	_	_
26-15	3788-3789	:	_	_
26-16	3789-3790	/	_	_
26-17	3790-3791	/	_	_
26-18	3791-3801	github.com	_	_
26-19	3801-3802	/	_	_
26-20	3802-3805	INM	_	_
26-21	3805-3806	-	_	_
26-22	3806-3807	6	_	_
26-23	3807-3808	/	_	_
26-24	3808-3821	beNNch-models	_	_
26-25	3821-3822	`	_	_
26-26	3822-3823	)	_	_
26-27	3824-3832	contains	_	_
26-28	3833-3837	NEST	_	_
26-29	3838-3845	network	_	_
26-30	3846-3852	models	_	_
26-31	3853-3860	adapted	_	_
26-32	3861-3863	to	_	_
26-33	3864-3868	work	_	_
26-34	3869-3873	with	_	_
26-35	3874-3875	`	_	_
26-36	3875-3881	beNNch	_	_
26-37	3881-3882	`	_	_
26-38	3883-3884	\|	_	_
26-39	3885-3886	\|	_	_
26-40	3887-3888	\[	_	_
26-41	3888-3892	plot	_	_
26-42	3892-3893	\]	_	_
26-43	3893-3894	(	_	_
26-44	3894-3895	.	_	_

#Text=/plot/)        \| git submodule\; the linked repository (`https://github.com/INM-6/beNNch-plot`) contains predefined plotting routines designed to process the performance results and provide a standardized plotting format \| \| \[results\](.
27-1	3895-3896	/	_	_
27-2	3896-3900	plot	_	_
27-3	3900-3901	/	_	_
27-4	3901-3902	)	_	_
27-5	3910-3911	\|	_	_
27-6	3912-3915	git	_	_
27-7	3916-3925	submodule	_	_
27-8	3925-3926	\;	_	_
27-9	3927-3930	the	_	_
27-10	3931-3937	linked	_	_
27-11	3938-3948	repository	_	_
27-12	3949-3950	(	_	_
27-13	3950-3951	`	_	_
27-14	3951-3956	https	_	_
27-15	3956-3957	:	_	_
27-16	3957-3958	/	_	_
27-17	3958-3959	/	_	_
27-18	3959-3969	github.com	_	_
27-19	3969-3970	/	_	_
27-20	3970-3973	INM	_	_
27-21	3973-3974	-	_	_
27-22	3974-3975	6	_	_
27-23	3975-3976	/	_	_
27-24	3976-3987	beNNch-plot	_	_
27-25	3987-3988	`	_	_
27-26	3988-3989	)	_	_
27-27	3990-3998	contains	_	_
27-28	3999-4009	predefined	_	_
27-29	4010-4018	plotting	_	_
27-30	4019-4027	routines	_	_
27-31	4028-4036	designed	_	_
27-32	4037-4039	to	_	_
27-33	4040-4047	process	_	_
27-34	4048-4051	the	_	_
27-35	4052-4063	performance	_	_
27-36	4064-4071	results	*[526]	SOFTWARE[526]
27-37	4072-4075	and	*[526]	SOFTWARE[526]
27-38	4076-4083	provide	*[526]	SOFTWARE[526]
27-39	4084-4085	a	*[526]	SOFTWARE[526]
27-40	4086-4098	standardized	_	_
27-41	4099-4107	plotting	_	_
27-42	4108-4114	format	_	_
27-43	4115-4116	\|	_	_
27-44	4117-4118	\|	_	_
27-45	4119-4120	\[	_	_
27-46	4120-4127	results	_	_
27-47	4127-4128	\]	_	_
27-48	4128-4129	(	_	_
27-49	4129-4130	.	_	_

#Text=/results/)     \| git submodule\; the repository linked by default (`https://gin.g-node.org/nest/beNNch-results.git`) is private.
28-1	4130-4131	/	_	_
28-2	4131-4138	results	_	_
28-3	4138-4139	/	_	_
28-4	4139-4140	)	_	_
28-5	4145-4146	\|	_	_
28-6	4147-4150	git	_	_
28-7	4151-4160	submodule	_	_
28-8	4160-4161	\;	_	_
28-9	4162-4165	the	_	_
28-10	4166-4176	repository	_	_
28-11	4177-4183	linked	_	_
28-12	4184-4186	by	*[527]	SOFTWARE[527]
28-13	4187-4194	default	_	_
28-14	4195-4196	(	_	_
28-15	4196-4197	`	_	_
28-16	4197-4202	https	_	_
28-17	4202-4203	:	_	_
28-18	4203-4204	/	_	_
28-19	4204-4205	/	_	_
28-20	4205-4219	gin.g-node.org	_	_
28-21	4219-4220	/	_	_
28-22	4220-4224	nest	_	_
28-23	4224-4225	/	_	_
28-24	4225-4243	beNNch-results.git	_	_
28-25	4243-4244	`	_	_
28-26	4244-4245	)	_	_
28-27	4246-4248	is	_	_
28-28	4249-4256	private	_	_
28-29	4256-4257	.	_	_

#Text=To see how to change this link to your own results repository, see the optional step in \*\*Initialization\*\*.
29-1	4258-4260	To	_	_
29-2	4261-4264	see	_	_
29-3	4265-4268	how	_	_
29-4	4269-4271	to	_	_
29-5	4272-4278	change	_	_
29-6	4279-4283	this	_	_
29-7	4284-4288	link	_	_
29-8	4289-4291	to	_	_
29-9	4292-4296	your	_	_
29-10	4297-4300	own	_	_
29-11	4301-4308	results	_	_
29-12	4309-4319	repository	_	_
29-13	4319-4320	,	*[497]	PROGLANG[497]
29-14	4321-4324	see	*[497]	PROGLANG[497]
29-15	4325-4328	the	*[497]	PROGLANG[497]
29-16	4329-4337	optional	_	_
29-17	4338-4342	step	_	_
29-18	4343-4345	in	_	_
29-19	4346-4347	\*	_	_
29-20	4347-4348	\*	_	_
29-21	4348-4362	Initialization	_	_
29-22	4362-4363	\*	_	_
29-23	4363-4364	\*	_	_
29-24	4364-4365	.	_	_

#Text=Make sure your repository works with `git-annex`. \|  ## User guide  There are two distinct sets of instructions on how to install beNNch:  - the general documentation provided by the \[User guide\](https://github.com/INM-6/beNNch#user-guide) in this README - a \[walk-through on our GitHub Page\](https://inm-6.github.io/beNNch/walk-through.html)  The former is a set of complete, abstract instructions with general placeholders where the user needs to insert information.
30-1	4366-4370	Make	_	_
30-2	4371-4375	sure	_	_
30-3	4376-4380	your	_	_
30-4	4381-4391	repository	_	_
30-5	4392-4397	works	_	_
30-6	4398-4402	with	*[485]	CONFERENCE[485]
30-7	4403-4404	`	*[485]	CONFERENCE[485]
30-8	4404-4413	git-annex	*[485]	CONFERENCE[485]
30-9	4413-4414	`	*[485]	CONFERENCE[485]
30-10	4414-4415	.	*[485]	CONFERENCE[485]
30-11	4416-4417	\|	*[485]	CONFERENCE[485]
30-12	4419-4420	#	*[485]	CONFERENCE[485]
30-13	4420-4421	#	*[485]	CONFERENCE[485]
30-14	4422-4426	User	*[485]	CONFERENCE[485]
30-15	4427-4432	guide	*[485]	CONFERENCE[485]
30-16	4434-4439	There	*[485]	CONFERENCE[485]
30-17	4440-4443	are	*[485]	CONFERENCE[485]
30-18	4444-4447	two	*[485]	CONFERENCE[485]
30-19	4448-4456	distinct	*[485]	CONFERENCE[485]
30-20	4457-4461	sets	*[485]	CONFERENCE[485]
30-21	4462-4464	of	*[485]	CONFERENCE[485]
30-22	4465-4477	instructions	*[485]	CONFERENCE[485]
30-23	4478-4480	on	*[485]	CONFERENCE[485]
30-24	4481-4484	how	*[485]	CONFERENCE[485]
30-25	4485-4487	to	*[485]	CONFERENCE[485]
30-26	4488-4495	install	*[485]	CONFERENCE[485]
30-27	4496-4502	beNNch	*[485]	CONFERENCE[485]
30-28	4502-4503	:	*[485]	CONFERENCE[485]
30-29	4505-4506	-	*[485]	CONFERENCE[485]
30-30	4507-4510	the	*[485]	CONFERENCE[485]
30-31	4511-4518	general	*[485]	CONFERENCE[485]
30-32	4519-4532	documentation	*[485]	CONFERENCE[485]
30-33	4533-4541	provided	*[485]	CONFERENCE[485]
30-34	4542-4544	by	*[485]	CONFERENCE[485]
30-35	4545-4548	the	*[485]	CONFERENCE[485]
30-36	4549-4550	\[	*[485]	CONFERENCE[485]
30-37	4550-4554	User	*[485]	CONFERENCE[485]
30-38	4555-4560	guide	*[485]	CONFERENCE[485]
30-39	4560-4561	\]	*[485]	CONFERENCE[485]
30-40	4561-4562	(	*[485]	CONFERENCE[485]
30-41	4562-4567	https	*[485]	CONFERENCE[485]
30-42	4567-4568	:	*[485]	CONFERENCE[485]
30-43	4568-4569	/	*[485]	CONFERENCE[485]
30-44	4569-4570	/	*[485]	CONFERENCE[485]
30-45	4570-4580	github.com	*[485]	CONFERENCE[485]
30-46	4580-4581	/	*[485]	CONFERENCE[485]
30-47	4581-4584	INM	*[485]	CONFERENCE[485]
30-48	4584-4585	-	*[485]	CONFERENCE[485]
30-49	4585-4586	6	*[485]	CONFERENCE[485]
30-50	4586-4587	/	*[485]	CONFERENCE[485]
30-51	4587-4593	beNNch	*[485]	CONFERENCE[485]
30-52	4593-4594	#	*[485]	CONFERENCE[485]
30-53	4594-4604	user-guide	*[485]	CONFERENCE[485]
30-54	4604-4605	)	*[485]	CONFERENCE[485]
30-55	4606-4608	in	*[485]	CONFERENCE[485]
30-56	4609-4613	this	*[485]	CONFERENCE[485]
30-57	4614-4620	README	*[485]	CONFERENCE[485]
30-58	4621-4622	-	*[485]	CONFERENCE[485]
30-59	4623-4624	a	*[485]	CONFERENCE[485]
30-60	4625-4626	\[	*[485]	CONFERENCE[485]
30-61	4626-4638	walk-through	*[485]	CONFERENCE[485]
30-62	4639-4641	on	*[485]	CONFERENCE[485]
30-63	4642-4645	our	*[485]	CONFERENCE[485]
30-64	4646-4652	GitHub	*[485]	CONFERENCE[485]
30-65	4653-4657	Page	*[485]	CONFERENCE[485]
30-66	4657-4658	\]	*[485]	CONFERENCE[485]
30-67	4658-4659	(	*[485]	CONFERENCE[485]
30-68	4659-4664	https	*[485]	CONFERENCE[485]
30-69	4664-4665	:	*[485]	CONFERENCE[485]
30-70	4665-4666	/	*[485]	CONFERENCE[485]
30-71	4666-4667	/	*[485]	CONFERENCE[485]
30-72	4667-4670	inm	*[485]	CONFERENCE[485]
30-73	4670-4671	-	*[485]	CONFERENCE[485]
30-74	4671-4672	6	*[485]	CONFERENCE[485]
30-75	4672-4673	.	*[485]	CONFERENCE[485]
30-76	4673-4682	github.io	*[485]	CONFERENCE[485]
30-77	4682-4683	/	*[485]	CONFERENCE[485]
30-78	4683-4689	beNNch	*[485]	CONFERENCE[485]
30-79	4689-4690	/	*[485]	CONFERENCE[485]
30-80	4690-4707	walk-through.html	*[485]	CONFERENCE[485]
30-81	4707-4708	)	*[485]	CONFERENCE[485]
30-82	4710-4713	The	*[485]	CONFERENCE[485]
30-83	4714-4720	former	*[485]	CONFERENCE[485]
30-84	4721-4723	is	*[485]	CONFERENCE[485]
30-85	4724-4725	a	*[485]	CONFERENCE[485]
30-86	4726-4729	set	_	_
30-87	4730-4732	of	_	_
30-88	4733-4741	complete	_	_
30-89	4741-4742	,	_	_
30-90	4743-4751	abstract	_	_
30-91	4752-4764	instructions	_	_
30-92	4765-4769	with	_	_
30-93	4770-4777	general	_	_
30-94	4778-4790	placeholders	_	_
30-95	4791-4796	where	_	_
30-96	4797-4800	the	_	_
30-97	4801-4805	user	_	_
30-98	4806-4811	needs	_	_
30-99	4812-4814	to	_	_
30-100	4815-4821	insert	_	_
30-101	4822-4833	information	_	_
30-102	4833-4834	.	_	_

#Text=The latter focuses on a concrete example and guides the reader with screen-shots while discussing small issues and best practices that have emerged when using beNNch in production.
31-1	4835-4838	The	_	_
31-2	4839-4845	latter	_	_
31-3	4846-4853	focuses	_	_
31-4	4854-4856	on	_	_
31-5	4857-4858	a	_	_
31-6	4859-4867	concrete	_	_
31-7	4868-4875	example	_	_
31-8	4876-4879	and	_	_
31-9	4880-4886	guides	_	_
31-10	4887-4890	the	_	_
31-11	4891-4897	reader	_	_
31-12	4898-4902	with	_	_
31-13	4903-4915	screen-shots	_	_
31-14	4916-4921	while	_	_
31-15	4922-4932	discussing	_	_
31-16	4933-4938	small	_	_
31-17	4939-4945	issues	_	_
31-18	4946-4949	and	_	_
31-19	4950-4954	best	_	_
31-20	4955-4964	practices	_	_
31-21	4965-4969	that	_	_
31-22	4970-4974	have	_	_
31-23	4975-4982	emerged	_	_
31-24	4983-4987	when	_	_
31-25	4988-4993	using	_	_
31-26	4994-5000	beNNch	_	_
31-27	5001-5003	in	_	_
31-28	5004-5014	production	_	_
31-29	5014-5015	.	_	_

#Text=Depending on your previous experience you may find one or the other more intuitive.
32-1	5016-5025	Depending	_	_
32-2	5026-5028	on	_	_
32-3	5029-5033	your	_	_
32-4	5034-5042	previous	_	_
32-5	5043-5053	experience	*[452]	PUBLICATION[452]
32-6	5054-5057	you	*[452]	PUBLICATION[452]
32-7	5058-5061	may	*[452]	PUBLICATION[452]
32-8	5062-5066	find	*[452]	PUBLICATION[452]
32-9	5067-5070	one	*[452]	PUBLICATION[452]
32-10	5071-5073	or	*[452]	PUBLICATION[452]
32-11	5074-5077	the	*[452]	PUBLICATION[452]
32-12	5078-5083	other	_	_
32-13	5084-5088	more	_	_
32-14	5089-5098	intuitive	_	_
32-15	5098-5099	.	_	_

#Text=If set-up problems persist after following both approaches, don't hesitate to get into contact via the \[Community discussion\](https://github.com/INM-6/beNNch#community-discussion).   ### Initialization  - Download git submodules:  ```bash git submodule init ```   + \_optional: if you want to change the url of any of the submodules (requires `git v2.25.0`):\_     `git submodule set-url -- <submodule> <new\_url>`  ```bash git submodule update --remote ```  - Install benchplot as Python module:  ```bash pip install -e plot --user ```    ### Software dependencies  - \[git annex\](https://git-annex.branchable.com)   + can e.g. be installed via  ```bash wget 'http://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-amd64.tar.gz' tar -xzf git-annex-standalone-amd64.tar.gz export PATH=$PATH:<install\_path>/git-annex.linux ``` - \[JUBE\](https://www.fz-juelich.de/ias/jsc/EN/Expertise/Support/Software/JUBE/\_node.html)   \_Note that  JUBE version 2.4.2 or later is necessary\_   - \[Builder\](https://github.com/INM-6/Builder)   + see Builder documentation for installation guide  - Python 3.X  ### Models  For the following network models, there is currently a NEST implementation in the \*models\* submodule and corresponding JUBE benchmark script in the `benchmarks/` folder:  - \*\*Multi-Area Model\*\*    - `multi-area-model\_2` for usage with NEST 2
33-1	5100-5102	If	_	_
33-2	5103-5109	set-up	_	_
33-3	5110-5118	problems	_	_
33-4	5119-5126	persist	_	_
33-5	5127-5132	after	_	_
33-6	5133-5142	following	_	_
33-7	5143-5147	both	_	_
33-8	5148-5158	approaches	_	_
33-9	5158-5159	,	_	_
33-10	5160-5165	don't	_	_
33-11	5166-5174	hesitate	_	_
33-12	5175-5177	to	_	_
33-13	5178-5181	get	_	_
33-14	5182-5186	into	_	_
33-15	5187-5194	contact	_	_
33-16	5195-5198	via	_	_
33-17	5199-5202	the	_	_
33-18	5203-5204	\[	_	_
33-19	5204-5213	Community	_	_
33-20	5214-5224	discussion	*[461]	ONTOLOGY[461]
33-21	5224-5225	\]	*[461]	ONTOLOGY[461]
33-22	5225-5226	(	*[461]	ONTOLOGY[461]
33-23	5226-5231	https	*[461]	ONTOLOGY[461]
33-24	5231-5232	:	*[461]	ONTOLOGY[461]
33-25	5232-5233	/	*[461]	ONTOLOGY[461]
33-26	5233-5234	/	*[461]	ONTOLOGY[461]
33-27	5234-5244	github.com	*[461]	ONTOLOGY[461]
33-28	5244-5245	/	*[461]	ONTOLOGY[461]
33-29	5245-5248	INM	*[461]	ONTOLOGY[461]
33-30	5248-5249	-	*[461]	ONTOLOGY[461]
33-31	5249-5250	6	*[461]	ONTOLOGY[461]
33-32	5250-5251	/	*[461]	ONTOLOGY[461]
33-33	5251-5257	beNNch	*[461]	ONTOLOGY[461]
33-34	5257-5258	#	*[461]	ONTOLOGY[461]
33-35	5258-5278	community-discussion	*[461]	ONTOLOGY[461]
33-36	5278-5279	)	*[461]	ONTOLOGY[461]
33-37	5279-5280	.	*[461]	ONTOLOGY[461]
33-38	5283-5284	#	*[461]	ONTOLOGY[461]
33-39	5284-5285	#	*[461]	ONTOLOGY[461]
33-40	5285-5286	#	*[461]	ONTOLOGY[461]
33-41	5287-5301	Initialization	*[461]	ONTOLOGY[461]
33-42	5303-5304	-	*[461]	ONTOLOGY[461]
33-43	5305-5313	Download	*[461]	ONTOLOGY[461]
33-44	5314-5317	git	*[461]	ONTOLOGY[461]
33-45	5318-5328	submodules	*[461]	ONTOLOGY[461]
33-46	5328-5329	:	*[461]	ONTOLOGY[461]
33-47	5331-5332	`	*[461]	ONTOLOGY[461]
33-48	5332-5333	`	*[461]	ONTOLOGY[461]
33-49	5333-5334	`	*[461]	ONTOLOGY[461]
33-50	5334-5338	bash	*[461]	ONTOLOGY[461]
33-51	5339-5342	git	*[461]	ONTOLOGY[461]
33-52	5343-5352	submodule	*[461]	ONTOLOGY[461]
33-53	5353-5357	init	*[461]	ONTOLOGY[461]
33-54	5358-5359	`	*[461]	ONTOLOGY[461]
33-55	5359-5360	`	*[461]	ONTOLOGY[461]
33-56	5360-5361	`	*[461]	ONTOLOGY[461]
33-57	5364-5365	+	*[461]	ONTOLOGY[461]
33-58	5366-5367	\_	*[461]	ONTOLOGY[461]
33-59	5367-5375	optional	*[461]	ONTOLOGY[461]
33-60	5375-5376	:	*[461]	ONTOLOGY[461]
33-61	5377-5379	if	*[461]	ONTOLOGY[461]
33-62	5380-5383	you	*[461]	ONTOLOGY[461]
33-63	5384-5388	want	*[461]	ONTOLOGY[461]
33-64	5389-5391	to	*[461]	ONTOLOGY[461]
33-65	5392-5398	change	_	_
33-66	5399-5402	the	_	_
33-67	5403-5406	url	_	_
33-68	5407-5409	of	_	_
33-69	5410-5413	any	_	_
33-70	5414-5416	of	_	_
33-71	5417-5420	the	_	_
33-72	5421-5431	submodules	_	_
33-73	5432-5433	(	_	_
33-74	5433-5441	requires	_	_
33-75	5442-5443	`	_	_
33-76	5443-5446	git	_	_
33-77	5447-5454	v2.25.0	_	_
33-78	5454-5455	`	_	_
33-79	5455-5456	)	_	_
33-80	5456-5457	:	_	_
33-81	5457-5458	\_	_	_
33-82	5463-5464	`	_	_
33-83	5464-5467	git	_	_
33-84	5468-5477	submodule	_	_
33-85	5478-5485	set-url	_	_
33-86	5486-5487	-	_	_
33-87	5487-5488	-	_	_
33-88	5489-5490	<	_	_
33-89	5490-5499	submodule	_	_
33-90	5499-5500	>	_	_
33-91	5501-5502	<	_	_
33-92	5502-5509	new\_url	_	_
33-93	5509-5510	>	_	_
33-94	5510-5511	`	_	_
33-95	5513-5514	`	_	_
33-96	5514-5515	`	_	_
33-97	5515-5516	`	_	_
33-98	5516-5520	bash	_	_
33-99	5521-5524	git	_	_
33-100	5525-5534	submodule	_	_
33-101	5535-5541	update	_	_
33-102	5542-5543	-	_	_
33-103	5543-5544	-	_	_
33-104	5544-5550	remote	_	_
33-105	5551-5552	`	_	_
33-106	5552-5553	`	_	_
33-107	5553-5554	`	_	_
33-108	5556-5557	-	_	_
33-109	5558-5565	Install	_	_
33-110	5566-5575	benchplot	_	_
33-111	5576-5578	as	_	_
33-112	5579-5585	Python	_	_
33-113	5586-5592	module	_	_
33-114	5592-5593	:	_	_
33-115	5595-5596	`	_	_
33-116	5596-5597	`	_	_
33-117	5597-5598	`	_	_
33-118	5598-5602	bash	_	_
33-119	5603-5606	pip	_	_
33-120	5607-5614	install	_	_
33-121	5615-5616	-	_	_
33-122	5616-5617	e	_	_
33-123	5618-5622	plot	_	_
33-124	5623-5624	-	_	_
33-125	5624-5625	-	_	_
33-126	5625-5629	user	_	_
33-127	5630-5631	`	_	_
33-128	5631-5632	`	_	_
33-129	5632-5633	`	_	_
33-130	5637-5638	#	_	_
33-131	5638-5639	#	_	_
33-132	5639-5640	#	_	_
33-133	5641-5649	Software	_	_
33-134	5650-5662	dependencies	_	_
33-135	5664-5665	-	_	_
33-136	5666-5667	\[	_	_
33-137	5667-5670	git	_	_
33-138	5671-5676	annex	_	_
33-139	5676-5677	\]	_	_
33-140	5677-5678	(	_	_
33-141	5678-5683	https	_	_
33-142	5683-5684	:	_	_
33-143	5684-5685	/	_	_
33-144	5685-5686	/	_	_
33-145	5686-5710	git-annex.branchable.com	_	_
33-146	5710-5711	)	_	_
33-147	5714-5715	+	_	_
33-148	5716-5719	can	_	_
33-149	5720-5723	e.g	_	_
33-150	5723-5724	.	_	_
33-151	5725-5727	be	_	_
33-152	5728-5737	installed	_	_
33-153	5738-5741	via	_	_
33-154	5743-5744	`	_	_
33-155	5744-5745	`	_	_
33-156	5745-5746	`	_	_
33-157	5746-5750	bash	_	_
33-158	5751-5755	wget	_	_
33-159	5756-5757	'	_	_
33-160	5757-5761	http	_	_
33-161	5761-5762	:	_	_
33-162	5762-5763	/	_	_
33-163	5763-5764	/	_	_
33-164	5764-5785	downloads.kitenet.net	_	_
33-165	5785-5786	/	_	_
33-166	5786-5795	git-annex	_	_
33-167	5795-5796	/	_	_
33-168	5796-5801	linux	_	_
33-169	5801-5802	/	_	_
33-170	5802-5809	current	_	_
33-171	5809-5810	/	_	_
33-172	5810-5836	git-annex-standalone-amd64	_	_
33-173	5836-5837	.	_	_
33-174	5837-5843	tar.gz	_	_
33-175	5843-5844	'	_	_
33-176	5845-5848	tar	_	_
33-177	5849-5850	-	_	_
33-178	5850-5853	xzf	_	_
33-179	5854-5880	git-annex-standalone-amd64	_	_
33-180	5880-5881	.	_	_
33-181	5881-5887	tar.gz	_	_
33-182	5888-5894	export	_	_
33-183	5895-5899	PATH	_	_
33-184	5899-5900	=	_	_
33-185	5900-5901	$	_	_
33-186	5901-5905	PATH	_	_
33-187	5905-5906	:	_	_
33-188	5906-5907	<	_	_
33-189	5907-5919	install\_path	_	_
33-190	5919-5920	>	_	_
33-191	5920-5921	/	_	_
33-192	5921-5936	git-annex.linux	_	_
33-193	5937-5938	`	_	_
33-194	5938-5939	`	_	_
33-195	5939-5940	`	_	_
33-196	5941-5942	-	_	_
33-197	5943-5944	\[	_	_
33-198	5944-5948	JUBE	_	_
33-199	5948-5949	\]	_	_
33-200	5949-5950	(	_	_
33-201	5950-5955	https	_	_
33-202	5955-5956	:	_	_
33-203	5956-5957	/	_	_
33-204	5957-5958	/	_	_
33-205	5958-5975	www.fz-juelich.de	_	_
33-206	5975-5976	/	_	_
33-207	5976-5979	ias	_	_
33-208	5979-5980	/	_	_
33-209	5980-5983	jsc	_	_
33-210	5983-5984	/	_	_
33-211	5984-5986	EN	_	_
33-212	5986-5987	/	_	_
33-213	5987-5996	Expertise	_	_
33-214	5996-5997	/	_	_
33-215	5997-6004	Support	_	_
33-216	6004-6005	/	_	_
33-217	6005-6013	Software	_	_
33-218	6013-6014	/	_	_
33-219	6014-6018	JUBE	_	_
33-220	6018-6019	/	_	_
33-221	6019-6020	\_	_	_
33-222	6020-6029	node.html	_	_
33-223	6029-6030	)	_	_
33-224	6033-6034	\_	_	_
33-225	6034-6038	Note	_	_
33-226	6039-6043	that	_	_
33-227	6045-6049	JUBE	_	_
33-228	6050-6057	version	_	_
33-229	6058-6063	2.4.2	_	_
33-230	6064-6066	or	_	_
33-231	6067-6072	later	_	_
33-232	6073-6075	is	_	_
33-233	6076-6085	necessary	_	_
33-234	6085-6086	\_	_	_
33-235	6089-6090	-	_	_
33-236	6091-6092	\[	_	_
33-237	6092-6099	Builder	_	_
33-238	6099-6100	\]	_	_
33-239	6100-6101	(	_	_
33-240	6101-6106	https	_	_
33-241	6106-6107	:	_	_
33-242	6107-6108	/	_	_
33-243	6108-6109	/	_	_
33-244	6109-6119	github.com	_	_
33-245	6119-6120	/	_	_
33-246	6120-6123	INM	_	_
33-247	6123-6124	-	_	_
33-248	6124-6125	6	_	_
33-249	6125-6126	/	_	_
33-250	6126-6133	Builder	_	_
33-251	6133-6134	)	_	_
33-252	6137-6138	+	_	_
33-253	6139-6142	see	_	_
33-254	6143-6150	Builder	_	_
33-255	6151-6164	documentation	_	_
33-256	6165-6168	for	_	_
33-257	6169-6181	installation	_	_
33-258	6182-6187	guide	_	_
33-259	6189-6190	-	_	_
33-260	6191-6197	Python	_	_
33-261	6198-6199	3	_	_
33-262	6199-6200	.	_	_
33-263	6200-6201	X	_	_
33-264	6203-6204	#	_	_
33-265	6204-6205	#	_	_
33-266	6205-6206	#	_	_
33-267	6207-6213	Models	_	_
33-268	6215-6218	For	_	_
33-269	6219-6222	the	_	_
33-270	6223-6232	following	_	_
33-271	6233-6240	network	_	_
33-272	6241-6247	models	_	_
33-273	6247-6248	,	_	_
33-274	6249-6254	there	_	_
33-275	6255-6257	is	_	_
33-276	6258-6267	currently	_	_
33-277	6268-6269	a	_	_
33-278	6270-6274	NEST	_	_
33-279	6275-6289	implementation	_	_
33-280	6290-6292	in	_	_
33-281	6293-6296	the	_	_
33-282	6297-6298	\*	_	_
33-283	6298-6304	models	_	_
33-284	6304-6305	\*	_	_
33-285	6306-6315	submodule	_	_
33-286	6316-6319	and	_	_
33-287	6320-6333	corresponding	_	_
33-288	6334-6338	JUBE	_	_
33-289	6339-6348	benchmark	_	_
33-290	6349-6355	script	_	_
33-291	6356-6358	in	_	_
33-292	6359-6362	the	_	_
33-293	6363-6364	`	_	_
33-294	6364-6374	benchmarks	_	_
33-295	6374-6375	/	_	_
33-296	6375-6376	`	_	_
33-297	6377-6383	folder	_	_
33-298	6383-6384	:	_	_
33-299	6386-6387	-	_	_
33-300	6388-6389	\*	_	_
33-301	6389-6390	\*	_	_
33-302	6390-6400	Multi-Area	_	_
33-303	6401-6406	Model	_	_
33-304	6406-6407	\*	_	_
33-305	6407-6408	\*	_	_
33-306	6412-6413	-	_	_
33-307	6414-6415	`	_	_
33-308	6415-6431	multi-area-model	_	_
33-309	6431-6432	\_	_	_
33-310	6432-6433	2	_	_
33-311	6433-6434	`	_	_
33-312	6435-6438	for	_	_
33-313	6439-6444	usage	_	_
33-314	6445-6449	with	_	_
33-315	6450-6454	NEST	_	_
33-316	6455-6456	2	_	_

#Text=.
34-1	6456-6457	.	_	_

#Text=- `multi-area-model\_3` for usage with NEST 3
35-1	6460-6461	-	_	_
35-2	6462-6463	`	_	_
35-3	6463-6479	multi-area-model	_	_
35-4	6479-6480	\_	_	_
35-5	6480-6481	3	_	_
35-6	6481-6482	`	_	_
35-7	6483-6486	for	_	_
35-8	6487-6492	usage	*[486]	CONFERENCE[486]
35-9	6493-6497	with	*[486]	CONFERENCE[486]
35-10	6498-6502	NEST	_	_
35-11	6503-6504	3	_	_

#Text=.
36-1	6504-6505	.	_	_

#Text=- \*\*Microcircuit\*\*    - `microcircuit`  - \*\*HPC Benchmark\*\*    - `hpc\_benchmark\_2` for usage with NEST 2
37-1	6507-6508	-	_	_
37-2	6509-6510	\*	_	_
37-3	6510-6511	\*	_	_
37-4	6511-6523	Microcircuit	_	_
37-5	6523-6524	\*	_	_
37-6	6524-6525	\*	_	_
37-7	6529-6530	-	_	_
37-8	6531-6532	`	_	_
37-9	6532-6544	microcircuit	_	_
37-10	6544-6545	`	_	_
37-11	6547-6548	-	_	_
37-12	6549-6550	\*	_	_
37-13	6550-6551	\*	_	_
37-14	6551-6554	HPC	_	_
37-15	6555-6564	Benchmark	_	_
37-16	6564-6565	\*	_	_
37-17	6565-6566	\*	_	_
37-18	6570-6571	-	_	_
37-19	6572-6573	`	_	_
37-20	6573-6586	hpc\_benchmark	_	_
37-21	6586-6587	\_	_	_
37-22	6587-6588	2	_	_
37-23	6588-6589	`	_	_
37-24	6590-6593	for	_	_
37-25	6594-6599	usage	_	_
37-26	6600-6604	with	_	_
37-27	6605-6609	NEST	_	_
37-28	6610-6611	2	_	_

#Text=.
38-1	6611-6612	.	_	_

#Text=- `hpc\_benchmark\_3` for usage with NEST 3.0
39-1	6615-6616	-	_	_
39-2	6617-6618	`	_	_
39-3	6618-6631	hpc\_benchmark	_	_
39-4	6631-6632	\_	_	_
39-5	6632-6633	3	_	_
39-6	6633-6634	`	_	_
39-7	6635-6638	for	_	_
39-8	6639-6644	usage	_	_
39-9	6645-6649	with	_	_
39-10	6650-6654	NEST	_	_
39-11	6655-6658	3.0	_	_

#Text=.
40-1	6658-6659	.	_	_

#Text=- `hpc\_benchmark\_31` for usage with NEST 3.1.  ### First steps: configure your simulation  Make a copy of the template config file for user parameters and fill it:  ```bash cp config/templates/user\_config\_template.yaml config/user\_config.yaml ```  Copy and fill also the parameter file with model-specific parameters:  ```bash cp config/templates/<model>\_config\_template.yaml config/<model>\_config.yaml ```  In the model config file, you can specify the ```software``` (i.e. the simulator), its ```version```, and a ```variant``` (allowing to install the software with different dependencies) you want to benchmark.
41-1	6662-6663	-	_	_
41-2	6664-6665	`	_	_
41-3	6665-6678	hpc\_benchmark	_	_
41-4	6678-6679	\_	_	_
41-5	6679-6681	31	_	_
41-6	6681-6682	`	_	_
41-7	6683-6686	for	_	_
41-8	6687-6692	usage	_	_
41-9	6693-6697	with	_	_
41-10	6698-6702	NEST	_	_
41-11	6703-6706	3.1	_	_
41-12	6706-6707	.	_	_
41-13	6709-6710	#	_	_
41-14	6710-6711	#	_	_
41-15	6711-6712	#	_	_
41-16	6713-6718	First	_	_
41-17	6719-6724	steps	_	_
41-18	6724-6725	:	_	_
41-19	6726-6735	configure	_	_
41-20	6736-6740	your	_	_
41-21	6741-6751	simulation	_	_
41-22	6753-6757	Make	_	_
41-23	6758-6759	a	_	_
41-24	6760-6764	copy	_	_
41-25	6765-6767	of	_	_
41-26	6768-6771	the	_	_
41-27	6772-6780	template	_	_
41-28	6781-6787	config	_	_
41-29	6788-6792	file	_	_
41-30	6793-6796	for	_	_
41-31	6797-6801	user	_	_
41-32	6802-6812	parameters	_	_
41-33	6813-6816	and	_	_
41-34	6817-6821	fill	_	_
41-35	6822-6824	it	_	_
41-36	6824-6825	:	_	_
41-37	6827-6828	`	_	_
41-38	6828-6829	`	_	_
41-39	6829-6830	`	_	_
41-40	6830-6834	bash	_	_
41-41	6835-6837	cp	_	_
41-42	6838-6844	config	_	_
41-43	6844-6845	/	_	_
41-44	6845-6854	templates	_	_
41-45	6854-6855	/	_	_
41-46	6855-6880	user\_config\_template.yaml	_	_
41-47	6881-6887	config	_	_
41-48	6887-6888	/	_	_
41-49	6888-6904	user\_config.yaml	_	_
41-50	6905-6906	`	_	_
41-51	6906-6907	`	_	_
41-52	6907-6908	`	_	_
41-53	6910-6914	Copy	_	_
41-54	6915-6918	and	_	_
41-55	6919-6923	fill	_	_
41-56	6924-6928	also	*[530]	EVALMETRIC[530]
41-57	6929-6932	the	*[530]	EVALMETRIC[530]
41-58	6933-6942	parameter	*[530]	EVALMETRIC[530]
41-59	6943-6947	file	*[530]	EVALMETRIC[530]
41-60	6948-6952	with	*[530]	EVALMETRIC[530]
41-61	6953-6967	model-specific	*[530]	EVALMETRIC[530]
41-62	6968-6978	parameters	*[530]	EVALMETRIC[530]
41-63	6978-6979	:	*[530]	EVALMETRIC[530]
41-64	6981-6982	`	*[530]	EVALMETRIC[530]
41-65	6982-6983	`	*[530]	EVALMETRIC[530]
41-66	6983-6984	`	*[530]	EVALMETRIC[530]
41-67	6984-6988	bash	*[530]	EVALMETRIC[530]
41-68	6989-6991	cp	*[530]	EVALMETRIC[530]
41-69	6992-6998	config	*[530]	EVALMETRIC[530]
41-70	6998-6999	/	*[530]	EVALMETRIC[530]
41-71	6999-7008	templates	*[530]	EVALMETRIC[530]
41-72	7008-7009	/	*[530]	EVALMETRIC[530]
41-73	7009-7010	<	*[530]	EVALMETRIC[530]
41-74	7010-7015	model	*[530]	EVALMETRIC[530]
41-75	7015-7016	>	*[530]	EVALMETRIC[530]
41-76	7016-7017	\_	*[530]	EVALMETRIC[530]
41-77	7017-7037	config\_template.yaml	*[530]	EVALMETRIC[530]
41-78	7038-7044	config	*[530]	EVALMETRIC[530]
41-79	7044-7045	/	*[530]	EVALMETRIC[530]
41-80	7045-7046	<	*[530]	EVALMETRIC[530]
41-81	7046-7051	model	*[530]	EVALMETRIC[530]
41-82	7051-7052	>	*[530]	EVALMETRIC[530]
41-83	7052-7053	\_	*[530]	EVALMETRIC[530]
41-84	7053-7064	config.yaml	*[530]	EVALMETRIC[530]
41-85	7065-7066	`	*[530]	EVALMETRIC[530]
41-86	7066-7067	`	*[530]	EVALMETRIC[530]
41-87	7067-7068	`	*[530]	EVALMETRIC[530]
41-88	7070-7072	In	*[530]	EVALMETRIC[530]
41-89	7073-7076	the	*[530]	EVALMETRIC[530]
41-90	7077-7082	model	*[530]	EVALMETRIC[530]
41-91	7083-7089	config	*[530]	EVALMETRIC[530]
41-92	7090-7094	file	*[530]	EVALMETRIC[530]
41-93	7094-7095	,	*[530]	EVALMETRIC[530]
41-94	7096-7099	you	*[530]	EVALMETRIC[530]
41-95	7100-7103	can	*[530]	EVALMETRIC[530]
41-96	7104-7111	specify	*[530]	EVALMETRIC[530]
41-97	7112-7115	the	*[530]	EVALMETRIC[530]
41-98	7116-7117	`	*[530]	EVALMETRIC[530]
41-99	7117-7118	`	*[530]	EVALMETRIC[530]
41-100	7118-7119	`	*[530]	EVALMETRIC[530]
41-101	7119-7127	software	*[530]	EVALMETRIC[530]
41-102	7127-7128	`	*[530]	EVALMETRIC[530]
41-103	7128-7129	`	*[530]	EVALMETRIC[530]
41-104	7129-7130	`	*[530]	EVALMETRIC[530]
41-105	7131-7132	(	*[530]	EVALMETRIC[530]
41-106	7132-7135	i.e	*[530]	EVALMETRIC[530]
41-107	7135-7136	.	*[530]	EVALMETRIC[530]
41-108	7137-7140	the	*[530]	EVALMETRIC[530]
41-109	7141-7150	simulator	_	_
41-110	7150-7151	)	_	_
41-111	7151-7152	,	_	_
41-112	7153-7156	its	_	_
41-113	7157-7158	`	_	_
41-114	7158-7159	`	_	_
41-115	7159-7160	`	_	_
41-116	7160-7167	version	_	_
41-117	7167-7168	`	_	_
41-118	7168-7169	`	_	_
41-119	7169-7170	`	_	_
41-120	7170-7171	,	_	_
41-121	7172-7175	and	_	_
41-122	7176-7177	a	_	_
41-123	7178-7179	`	_	_
41-124	7179-7180	`	_	_
41-125	7180-7181	`	_	_
41-126	7181-7188	variant	_	_
41-127	7188-7189	`	_	_
41-128	7189-7190	`	_	_
41-129	7190-7191	`	_	_
41-130	7192-7193	(	_	_
41-131	7193-7201	allowing	_	_
41-132	7202-7204	to	_	_
41-133	7205-7212	install	_	_
41-134	7213-7216	the	_	_
41-135	7217-7225	software	_	_
41-136	7226-7230	with	_	_
41-137	7231-7240	different	_	_
41-138	7241-7253	dependencies	_	_
41-139	7253-7254	)	_	_
41-140	7255-7258	you	_	_
41-141	7259-7263	want	_	_
41-142	7264-7266	to	_	_
41-143	7267-7276	benchmark	_	_
41-144	7276-7277	.	_	_

#Text=For example: `software = nest-simulator`, `version = 3.0`, `variant = gcc9.3`.
42-1	7278-7281	For	_	_
42-2	7282-7289	example	_	_
42-3	7289-7290	:	_	_
42-4	7291-7292	`	_	_
42-5	7292-7300	software	_	_
42-6	7301-7302	=	*[472]	WORKSHOP[472]
42-7	7303-7317	nest-simulator	*[472]	WORKSHOP[472]
42-7	7303-7316	nest-simulato	*[472]	WORKSHOP[472]
42-8	7317-7318	`	*[472]	WORKSHOP[472]
42-9	7318-7319	,	*[472]	WORKSHOP[472]
42-10	7320-7321	`	*[472]	WORKSHOP[472]
42-11	7321-7328	version	*[472]	WORKSHOP[472]
42-12	7329-7330	=	*[472]	WORKSHOP[472]
42-13	7331-7334	3.0	*[472]	WORKSHOP[472]
42-14	7334-7335	`	*[472]	WORKSHOP[472]
42-15	7335-7336	,	*[472]	WORKSHOP[472]
42-16	7337-7338	`	*[472]	WORKSHOP[472]
42-17	7338-7345	variant	*[472]	WORKSHOP[472]
42-18	7346-7347	=	*[472]	WORKSHOP[472]
42-19	7348-7354	gcc9.3	_	_
42-20	7354-7355	`	_	_
42-21	7355-7356	.	_	_

#Text=For convenience, you may also add a ```suffix```.
43-1	7357-7360	For	_	_
43-2	7361-7372	convenience	_	_
43-3	7372-7373	,	*[514]	LICENSE[514]
43-4	7374-7377	you	*[514]	LICENSE[514]
43-5	7378-7381	may	*[514]	LICENSE[514]
43-6	7382-7386	also	_	_
43-7	7387-7390	add	_	_
43-8	7391-7392	a	_	_
43-9	7393-7394	`	_	_
43-10	7394-7395	`	_	_
43-11	7395-7396	`	_	_
43-12	7396-7402	suffix	_	_
43-13	7402-7403	`	_	_
43-14	7403-7404	`	_	_
43-15	7404-7405	`	_	_
43-16	7405-7406	.	_	_

#Text=To install software for which a plan file does not yet exist (e.g. a new dependency or simulator), you need to configure Builder by adding a ```common``` file explicating the necessary steps of installation that is shared between all variants to  ```bash <path/to/Builder>/plans/<software>/common ```  Note that Builder already provides a `common` file for `nest-simulator`.
44-1	7409-7411	To	_	_
44-2	7412-7419	install	_	_
44-3	7420-7428	software	_	_
44-4	7429-7432	for	_	_
44-5	7433-7438	which	_	_
44-6	7439-7440	a	_	_
44-7	7441-7445	plan	_	_
44-8	7446-7450	file	_	_
44-9	7451-7455	does	_	_
44-10	7456-7459	not	_	_
44-11	7460-7463	yet	_	_
44-12	7464-7469	exist	_	_
44-13	7470-7471	(	_	_
44-14	7471-7474	e.g	_	_
44-15	7474-7475	.	_	_
44-16	7476-7477	a	_	_
44-17	7478-7481	new	_	_
44-18	7482-7492	dependency	_	_
44-19	7493-7495	or	*[473]	WORKSHOP[473]
44-20	7496-7505	simulator	*[473]	WORKSHOP[473]
44-21	7505-7506	)	*[473]	WORKSHOP[473]
44-22	7506-7507	,	*[473]	WORKSHOP[473]
44-23	7508-7511	you	*[473]	WORKSHOP[473]
44-24	7512-7516	need	*[473]	WORKSHOP[473]
44-25	7517-7519	to	*[473]	WORKSHOP[473]
44-26	7520-7529	configure	*[473]	WORKSHOP[473]
44-27	7530-7537	Builder	*[473]	WORKSHOP[473]
44-28	7538-7540	by	*[473]	WORKSHOP[473]
44-29	7541-7547	adding	*[473]	WORKSHOP[473]
44-30	7548-7549	a	*[473]	WORKSHOP[473]
44-31	7550-7551	`	*[473]	WORKSHOP[473]
44-32	7551-7552	`	*[473]	WORKSHOP[473]
44-33	7552-7553	`	*[473]	WORKSHOP[473]
44-34	7553-7559	common	*[473]	WORKSHOP[473]
44-35	7559-7560	`	*[473]	WORKSHOP[473]
44-36	7560-7561	`	*[473]	WORKSHOP[473]
44-37	7561-7562	`	*[473]	WORKSHOP[473]
44-38	7563-7567	file	*[473]	WORKSHOP[473]
44-39	7568-7579	explicating	*[473]	WORKSHOP[473]
44-40	7580-7583	the	*[473]	WORKSHOP[473]
44-41	7584-7593	necessary	*[473]	WORKSHOP[473]
44-42	7594-7599	steps	*[473]	WORKSHOP[473]
44-43	7600-7602	of	*[473]	WORKSHOP[473]
44-44	7603-7615	installation	_	_
44-45	7616-7620	that	_	_
44-46	7621-7623	is	_	_
44-47	7624-7630	shared	_	_
44-48	7631-7638	between	_	_
44-49	7639-7642	all	_	_
44-50	7643-7651	variants	_	_
44-51	7652-7654	to	_	_
44-52	7656-7657	`	_	_
44-53	7657-7658	`	_	_
44-54	7658-7659	`	_	_
44-55	7659-7663	bash	_	_
44-56	7664-7665	<	_	_
44-57	7665-7669	path	_	_
44-58	7669-7670	/	_	_
44-59	7670-7672	to	_	_
44-60	7672-7673	/	_	_
44-61	7673-7680	Builder	_	_
44-62	7680-7681	>	_	_
44-63	7681-7682	/	_	_
44-64	7682-7687	plans	_	_
44-65	7687-7688	/	_	_
44-66	7688-7689	<	_	_
44-67	7689-7697	software	_	_
44-68	7697-7698	>	_	_
44-69	7698-7699	/	_	_
44-70	7699-7705	common	_	_
44-71	7706-7707	`	_	_
44-72	7707-7708	`	_	_
44-73	7708-7709	`	_	_
44-74	7711-7715	Note	_	_
44-75	7716-7720	that	_	_
44-76	7721-7728	Builder	_	_
44-77	7729-7736	already	_	_
44-78	7737-7745	provides	_	_
44-79	7746-7747	a	_	_
44-80	7748-7749	`	_	_
44-81	7749-7755	common	_	_
44-82	7755-7756	`	_	_
44-83	7757-7761	file	_	_
44-84	7762-7765	for	_	_
44-85	7766-7767	`	_	_
44-86	7767-7781	nest-simulator	_	_
44-87	7781-7782	`	_	_
44-88	7782-7783	.	_	_

#Text=If the `common` file for the simulator or software you wish to install already exists and you only want to add a new version or variant, add both a plan file and a module file template to  ```bash <path/to/Builder>/plans/<software>/<version>/<{variant, variant.module}> ```  In ```variant```, you state the source location of the software as well as the chosen dependencies.
45-1	7786-7788	If	_	_
45-2	7789-7792	the	_	_
45-3	7793-7794	`	_	_
45-4	7794-7800	common	_	_
45-5	7800-7801	`	_	_
45-6	7802-7806	file	_	_
45-7	7807-7810	for	_	_
45-8	7811-7814	the	_	_
45-9	7815-7824	simulator	_	_
45-10	7825-7827	or	_	_
45-11	7828-7836	software	_	_
45-12	7837-7840	you	_	_
45-13	7841-7845	wish	_	_
45-14	7846-7848	to	_	_
45-15	7849-7856	install	_	_
45-16	7857-7864	already	_	_
45-17	7865-7871	exists	_	_
45-18	7872-7875	and	_	_
45-19	7876-7879	you	_	_
45-20	7880-7884	only	_	_
45-21	7885-7889	want	_	_
45-22	7890-7892	to	_	_
45-23	7893-7896	add	_	_
45-24	7897-7898	a	_	_
45-25	7899-7902	new	_	_
45-26	7903-7910	version	_	_
45-27	7911-7913	or	_	_
45-28	7914-7921	variant	_	_
45-29	7921-7922	,	_	_
45-30	7923-7926	add	_	_
45-31	7927-7931	both	_	_
45-32	7932-7933	a	_	_
45-33	7934-7938	plan	_	_
45-34	7939-7943	file	_	_
45-35	7944-7947	and	_	_
45-36	7948-7949	a	_	_
45-37	7950-7956	module	_	_
45-38	7957-7961	file	_	_
45-39	7962-7970	template	_	_
45-40	7971-7973	to	_	_
45-41	7975-7976	`	_	_
45-42	7976-7977	`	_	_
45-43	7977-7978	`	_	_
45-44	7978-7982	bash	_	_
45-45	7983-7984	<	_	_
45-46	7984-7988	path	_	_
45-47	7988-7989	/	_	_
45-48	7989-7991	to	_	_
45-49	7991-7992	/	_	_
45-50	7992-7999	Builder	_	_
45-51	7999-8000	>	_	_
45-52	8000-8001	/	_	_
45-53	8001-8006	plans	_	_
45-54	8006-8007	/	_	_
45-55	8007-8008	<	_	_
45-56	8008-8016	software	_	_
45-57	8016-8017	>	_	_
45-58	8017-8018	/	_	_
45-59	8018-8019	<	_	_
45-60	8019-8026	version	_	_
45-61	8026-8027	>	_	_
45-62	8027-8028	/	_	_
45-63	8028-8029	<	_	_
45-64	8029-8030	{	_	_
45-65	8030-8037	variant	_	_
45-66	8037-8038	,	_	_
45-67	8039-8053	variant.module	_	_
45-68	8053-8054	}	_	_
45-69	8054-8055	>	_	_
45-70	8056-8057	`	_	_
45-71	8057-8058	`	_	_
45-72	8058-8059	`	_	_
45-73	8061-8063	In	_	_
45-74	8064-8065	`	_	_
45-75	8065-8066	`	_	_
45-76	8066-8067	`	_	_
45-77	8067-8074	variant	_	_
45-78	8074-8075	`	_	_
45-79	8075-8076	`	_	_
45-80	8076-8077	`	_	_
45-81	8077-8078	,	_	_
45-82	8079-8082	you	_	_
45-83	8083-8088	state	_	_
45-84	8089-8092	the	_	_
45-85	8093-8099	source	_	_
45-86	8100-8108	location	_	_
45-87	8109-8111	of	_	_
45-88	8112-8115	the	_	_
45-89	8116-8124	software	_	_
45-90	8125-8127	as	_	_
45-91	8128-8132	well	_	_
45-92	8133-8135	as	_	_
45-93	8136-8139	the	_	_
45-94	8140-8146	chosen	_	_
45-95	8147-8159	dependencies	_	_
45-96	8159-8160	.	_	_

#Text=If you use the `module` system for loading dependencies, add the corresponding `module load` commands to this file.
46-1	8161-8163	If	_	_
46-2	8164-8167	you	_	_
46-3	8168-8171	use	_	_
46-4	8172-8175	the	_	_
46-5	8176-8177	`	_	_
46-6	8177-8183	module	_	_
46-7	8183-8184	`	_	_
46-8	8185-8191	system	_	_
46-9	8192-8195	for	_	_
46-10	8196-8203	loading	_	_
46-11	8204-8216	dependencies	_	_
46-12	8216-8217	,	_	_
46-13	8218-8221	add	_	_
46-14	8222-8225	the	_	_
46-15	8226-8239	corresponding	_	_
46-16	8240-8241	`	*[477]	PROJECT[477]
46-17	8241-8247	module	*[477]	PROJECT[477]
46-18	8248-8252	load	_	_
46-19	8252-8253	`	_	_
46-20	8254-8262	commands	_	_
46-21	8263-8265	to	_	_
46-22	8266-8270	this	_	_
46-23	8271-8275	file	_	_
46-24	8275-8276	.	_	_

#Text=See as an example the ```nest-simulator``` plan files that Builder ships with.
47-1	8277-8280	See	_	_
47-2	8281-8283	as	_	_
47-3	8284-8286	an	_	_
47-4	8287-8294	example	_	_
47-5	8295-8298	the	_	_
47-6	8299-8300	`	_	_
47-7	8300-8301	`	_	_
47-8	8301-8302	`	_	_
47-9	8302-8316	nest-simulator	_	_
47-10	8316-8317	`	_	_
47-11	8317-8318	`	_	_
47-12	8318-8319	`	_	_
47-13	8320-8324	plan	_	_
47-14	8325-8330	files	_	_
47-15	8331-8335	that	_	_
47-16	8336-8343	Builder	*[498]	PROGLANG[498]
47-17	8344-8349	ships	_	_
47-18	8350-8354	with	_	_
47-19	8354-8355	.	_	_

#Text=\_Specific to NEST benchmarking: don't forget to include `-Dwith-detailed-timers=ON` in the `CMAKEFLAGS` if you want to have access to C++ level timers.\_   ### Run benchmarks  The JUBE benchmarking scripts can be found in `benchmarks/`.
48-1	8358-8359	\_	_	_
48-2	8359-8367	Specific	_	_
48-3	8368-8370	to	_	_
48-4	8371-8375	NEST	_	_
48-5	8376-8388	benchmarking	_	_
48-6	8388-8389	:	_	_
48-7	8390-8395	don't	_	_
48-8	8396-8402	forget	_	_
48-9	8403-8405	to	_	_
48-10	8406-8413	include	_	_
48-11	8414-8415	`	_	_
48-12	8415-8416	-	_	_
48-13	8416-8437	Dwith-detailed-timers	_	_
48-14	8437-8438	=	_	_
48-15	8438-8440	ON	_	_
48-16	8440-8441	`	_	_
48-17	8442-8444	in	_	_
48-18	8445-8448	the	_	_
48-19	8449-8450	`	_	_
48-20	8450-8460	CMAKEFLAGS	_	_
48-21	8460-8461	`	*[462]	ONTOLOGY[462]
48-22	8462-8464	if	*[462]	ONTOLOGY[462]
48-23	8465-8468	you	*[462]	ONTOLOGY[462]
48-24	8469-8473	want	*[462]	ONTOLOGY[462]
48-25	8474-8476	to	*[462]	ONTOLOGY[462]
48-26	8477-8481	have	*[462]	ONTOLOGY[462]
48-27	8482-8488	access	*[462]	ONTOLOGY[462]
48-28	8489-8491	to	*[462]	ONTOLOGY[462]
48-29	8492-8493	C	*[462]	ONTOLOGY[462]
48-30	8493-8494	+	*[462]	ONTOLOGY[462]
48-31	8494-8495	+	*[462]	ONTOLOGY[462]
48-32	8496-8501	level	*[462]	ONTOLOGY[462]
48-33	8502-8508	timers	*[462]	ONTOLOGY[462]
48-34	8508-8509	.	*[462]	ONTOLOGY[462]
48-35	8509-8510	\_	*[462]	ONTOLOGY[462]
48-36	8513-8514	#	*[462]	ONTOLOGY[462]
48-37	8514-8515	#	*[462]	ONTOLOGY[462]
48-38	8515-8516	#	*[462]	ONTOLOGY[462]
48-39	8517-8520	Run	*[462]	ONTOLOGY[462]
48-40	8521-8531	benchmarks	*[462]	ONTOLOGY[462]
48-41	8533-8536	The	*[462]	ONTOLOGY[462]
48-42	8537-8541	JUBE	*[462]	ONTOLOGY[462]
48-43	8542-8554	benchmarking	_	_
48-44	8555-8562	scripts	_	_
48-45	8563-8566	can	_	_
48-46	8567-8569	be	_	_
48-47	8570-8575	found	_	_
48-48	8576-8578	in	_	_
48-49	8579-8580	`	_	_
48-50	8580-8590	benchmarks	_	_
48-51	8590-8591	/	_	_
48-52	8591-8592	`	_	_
48-53	8592-8593	.	_	_

#Text=To run a benchmark, execute:  ```bash jube run benchmarks/<model>.yaml ```  JUBE displays a table summarizing the submitted job(s) and the corresponding `job id`.  ### Analyze benchmarks  First, create a new instance of the analysis configuration with ```bash cp config/templates/analysis\_config\_template.yaml config/analysis\_config.yaml ``` Here, fill in - whether the scaling benchmark runs across threads or nodes.
49-1	8595-8597	To	_	_
49-2	8598-8601	run	_	_
49-3	8602-8603	a	_	_
49-4	8604-8613	benchmark	_	_
49-5	8613-8614	,	_	_
49-6	8615-8622	execute	_	_
49-7	8622-8623	:	_	_
49-8	8625-8626	`	_	_
49-9	8626-8627	`	_	_
49-10	8627-8628	`	_	_
49-11	8628-8632	bash	_	_
49-12	8633-8637	jube	_	_
49-13	8638-8641	run	_	_
49-14	8642-8652	benchmarks	_	_
49-15	8652-8653	/	_	_
49-16	8653-8654	<	_	_
49-17	8654-8659	model	_	_
49-18	8659-8660	>	_	_
49-19	8660-8661	.	_	_
49-20	8661-8665	yaml	_	_
49-21	8666-8667	`	_	_
49-22	8667-8668	`	_	_
49-23	8668-8669	`	_	_
49-24	8671-8675	JUBE	_	_
49-25	8676-8684	displays	_	_
49-26	8685-8686	a	_	_
49-27	8687-8692	table	_	_
49-28	8693-8704	summarizing	_	_
49-29	8705-8708	the	_	_
49-30	8709-8718	submitted	_	_
49-31	8719-8722	job	_	_
49-32	8722-8723	(	_	_
49-33	8723-8724	s	_	_
49-34	8724-8725	)	_	_
49-35	8726-8729	and	_	_
49-36	8730-8733	the	_	_
49-37	8734-8747	corresponding	_	_
49-38	8748-8749	`	_	_
49-39	8749-8752	job	_	_
49-40	8753-8755	id	_	_
49-41	8755-8756	`	_	_
49-42	8756-8757	.	_	_
49-43	8759-8760	#	_	_
49-44	8760-8761	#	_	_
49-45	8761-8762	#	_	_
49-46	8763-8770	Analyze	_	_
49-47	8771-8781	benchmarks	_	_
49-48	8783-8788	First	_	_
49-49	8788-8789	,	_	_
49-50	8790-8796	create	_	_
49-51	8797-8798	a	_	_
49-52	8799-8802	new	_	_
49-53	8803-8811	instance	_	_
49-54	8812-8814	of	_	_
49-55	8815-8818	the	_	_
49-56	8819-8827	analysis	_	_
49-57	8828-8841	configuration	_	_
49-58	8842-8846	with	_	_
49-59	8847-8848	`	_	_
49-60	8848-8849	`	_	_
49-61	8849-8850	`	_	_
49-62	8850-8854	bash	_	_
49-63	8855-8857	cp	_	_
49-64	8858-8864	config	_	_
49-65	8864-8865	/	_	_
49-66	8865-8874	templates	_	_
49-67	8874-8875	/	_	_
49-68	8875-8904	analysis\_config\_template.yaml	_	_
49-69	8905-8911	config	_	_
49-70	8911-8912	/	_	_
49-71	8912-8932	analysis\_config.yaml	_	_
49-72	8933-8934	`	_	_
49-73	8934-8935	`	_	_
49-74	8935-8936	`	_	_
49-75	8937-8941	Here	*[532]	EVALMETRIC[532]
49-76	8941-8942	,	*[532]	EVALMETRIC[532]
49-77	8943-8947	fill	_	_
49-78	8948-8950	in	_	_
49-79	8951-8952	-	_	_
49-80	8953-8960	whether	_	_
49-81	8961-8964	the	_	_
49-82	8965-8972	scaling	_	_
49-83	8973-8982	benchmark	_	_
49-84	8983-8987	runs	_	_
49-85	8988-8994	across	_	_
49-86	8995-9002	threads	_	_
49-87	9003-9005	or	_	_
49-88	9006-9011	nodes	_	_
49-89	9011-9012	.	_	_

#Text=This sets up a quick, glanceable plot of the benchmark to confirm that no substantial errors occurred.
50-1	9013-9017	This	_	_
50-2	9018-9022	sets	_	_
50-3	9023-9025	up	_	_
50-4	9026-9027	a	_	_
50-5	9028-9033	quick	_	_
50-6	9033-9034	,	*[478]	PROJECT[478]
50-7	9035-9045	glanceable	_	_
50-8	9046-9050	plot	_	_
50-9	9051-9053	of	_	_
50-10	9054-9057	the	_	_
50-11	9058-9067	benchmark	_	_
50-12	9068-9070	to	_	_
50-13	9071-9078	confirm	_	_
50-14	9079-9083	that	_	_
50-15	9084-9086	no	_	_
50-16	9087-9098	substantial	_	_
50-17	9099-9105	errors	_	_
50-18	9106-9114	occurred	_	_
50-19	9114-9115	.	_	_

#Text=`beNNch` provides defaults for plotting timers across `nodes` and `threads`, but alternatives can be readily implemented by adding to `analysis/plot\_helpers.py`. - the path to the JUBE output (usually the same as the `outpath` of the `<benchmark>` in `benchmarks/<model>`)  To start the analysis, execute ```bash cd results ``` - \_optional: initialize for the first time\_   + `git pull origin main`   + `git checkout main`   + `git annex init`   + `git annex sync` ```bash python ..
51-1	9116-9117	`	_	_
51-2	9117-9123	beNNch	_	_
51-3	9123-9124	`	_	_
51-4	9125-9133	provides	_	_
51-5	9134-9142	defaults	_	_
51-6	9143-9146	for	_	_
51-7	9147-9155	plotting	_	_
51-8	9156-9162	timers	_	_
51-9	9163-9169	across	_	_
51-10	9170-9171	`	_	_
51-11	9171-9176	nodes	_	_
51-12	9176-9177	`	_	_
51-13	9178-9181	and	_	_
51-14	9182-9183	`	_	_
51-15	9183-9190	threads	_	_
51-16	9190-9191	`	_	_
51-17	9191-9192	,	_	_
51-18	9193-9196	but	_	_
51-19	9197-9209	alternatives	_	_
51-20	9210-9213	can	_	_
51-21	9214-9216	be	_	_
51-22	9217-9224	readily	_	_
51-23	9225-9236	implemented	_	_
51-24	9237-9239	by	_	_
51-25	9240-9246	adding	_	_
51-26	9247-9249	to	_	_
51-27	9250-9251	`	_	_
51-28	9251-9259	analysis	_	_
51-29	9259-9260	/	_	_
51-30	9260-9275	plot\_helpers.py	_	_
51-31	9275-9276	`	_	_
51-32	9276-9277	.	_	_
51-33	9278-9279	-	_	_
51-34	9280-9283	the	_	_
51-35	9284-9288	path	_	_
51-36	9289-9291	to	_	_
51-37	9292-9295	the	_	_
51-38	9296-9300	JUBE	_	_
51-39	9301-9307	output	_	_
51-40	9308-9309	(	_	_
51-41	9309-9316	usually	_	_
51-42	9317-9320	the	_	_
51-43	9321-9325	same	_	_
51-44	9326-9328	as	_	_
51-45	9329-9332	the	_	_
51-46	9333-9334	`	_	_
51-47	9334-9341	outpath	_	_
51-48	9341-9342	`	_	_
51-49	9343-9345	of	_	_
51-50	9346-9349	the	_	_
51-51	9350-9351	`	_	_
51-52	9351-9352	<	_	_
51-53	9352-9361	benchmark	_	_
51-54	9361-9362	>	_	_
51-55	9362-9363	`	_	_
51-56	9364-9366	in	_	_
51-57	9367-9368	`	_	_
51-58	9368-9378	benchmarks	_	_
51-59	9378-9379	/	_	_
51-60	9379-9380	<	_	_
51-61	9380-9385	model	_	_
51-62	9385-9386	>	_	_
51-63	9386-9387	`	_	_
51-64	9387-9388	)	_	_
51-65	9390-9392	To	_	_
51-66	9393-9398	start	_	_
51-67	9399-9402	the	_	_
51-68	9403-9411	analysis	_	_
51-69	9411-9412	,	_	_
51-70	9413-9420	execute	_	_
51-71	9421-9422	`	_	_
51-72	9422-9423	`	_	_
51-73	9423-9424	`	_	_
51-74	9424-9428	bash	_	_
51-75	9429-9431	cd	_	_
51-76	9432-9439	results	_	_
51-77	9440-9441	`	_	_
51-78	9441-9442	`	_	_
51-79	9442-9443	`	_	_
51-80	9444-9445	-	_	_
51-81	9446-9447	\_	_	_
51-82	9447-9455	optional	_	_
51-83	9455-9456	:	_	_
51-84	9457-9467	initialize	*[453]	PUBLICATION[453]
51-85	9468-9471	for	*[453]	PUBLICATION[453]
51-86	9472-9475	the	*[453]	PUBLICATION[453]
51-87	9476-9481	first	*[453]	PUBLICATION[453]
51-88	9482-9486	time	*[453]	PUBLICATION[453]
51-89	9486-9487	\_	*[453]	PUBLICATION[453]
51-90	9490-9491	+	*[453]	PUBLICATION[453]
51-91	9492-9493	`	*[453]	PUBLICATION[453]
51-92	9493-9496	git	*[453]	PUBLICATION[453]
51-93	9497-9501	pull	*[453]	PUBLICATION[453]
51-94	9502-9508	origin	*[453]	PUBLICATION[453]
51-95	9509-9513	main	*[453]	PUBLICATION[453]
51-96	9513-9514	`	*[453]	PUBLICATION[453]
51-97	9517-9518	+	*[453]	PUBLICATION[453]
51-98	9519-9520	`	*[453]	PUBLICATION[453]
51-99	9520-9523	git	*[453]	PUBLICATION[453]
51-100	9524-9532	checkout	*[453]	PUBLICATION[453]
51-101	9533-9537	main	*[453]	PUBLICATION[453]
51-102	9537-9538	`	*[453]	PUBLICATION[453]
51-103	9541-9542	+	*[453]	PUBLICATION[453]
51-104	9543-9544	`	*[453]	PUBLICATION[453]
51-105	9544-9547	git	*[453]	PUBLICATION[453]
51-106	9548-9553	annex	_	_
51-107	9554-9558	init	_	_
51-108	9558-9559	`	_	_
51-109	9562-9563	+	_	_
51-110	9564-9565	`	_	_
51-111	9565-9568	git	_	_
51-112	9569-9574	annex	_	_
51-113	9575-9579	sync	_	_
51-114	9579-9580	`	_	_
51-115	9581-9582	`	_	_
51-116	9582-9583	`	_	_
51-117	9583-9584	`	_	_
51-118	9584-9588	bash	_	_
51-119	9589-9595	python	_	_
51-120	9596-9597	.	_	_
51-121	9597-9598	.	_	_

#Text=/analysis/analysis.py <id> ``` where `<id>` is the `job id` of the benchmark you want to analyze.
52-1	9598-9599	/	_	_
52-2	9599-9607	analysis	_	_
52-3	9607-9608	/	_	_
52-4	9608-9619	analysis.py	_	_
52-5	9620-9621	<	_	_
52-6	9621-9623	id	_	_
52-7	9623-9624	>	_	_
52-8	9625-9626	`	_	_
52-9	9626-9627	`	_	_
52-10	9627-9628	`	_	_
52-11	9629-9634	where	_	_
52-12	9635-9636	`	_	_
52-13	9636-9637	<	_	_
52-14	9637-9639	id	_	_
52-15	9639-9640	>	_	_
52-16	9640-9641	`	_	_
52-17	9642-9644	is	_	_
52-18	9645-9648	the	_	_
52-19	9649-9650	`	_	_
52-20	9650-9653	job	_	_
52-21	9654-9656	id	_	_
52-22	9656-9657	`	_	_
52-23	9658-9660	of	_	_
52-24	9661-9664	the	_	_
52-25	9665-9674	benchmark	_	_
52-26	9675-9678	you	_	_
52-27	9679-9683	want	*[533]	EVALMETRIC[533]
52-28	9684-9686	to	_	_
52-29	9687-9694	analyze	_	_
52-30	9694-9695	.	_	_

#Text=For sharing, upload the results to the central repository via ```bash git annex sync ```  ### Get remote benchmark results  ```bash cd results ``` - \_optional: add a new remote\_    + `git add remote <name> <location>`, e.g.
53-1	9697-9700	For	_	_
53-2	9701-9708	sharing	_	_
53-3	9708-9709	,	_	_
53-4	9710-9716	upload	_	_
53-5	9717-9720	the	_	_
53-6	9721-9728	results	_	_
53-7	9729-9731	to	_	_
53-8	9732-9735	the	_	_
53-9	9736-9743	central	_	_
53-10	9744-9754	repository	_	_
53-11	9755-9758	via	_	_
53-12	9759-9760	`	_	_
53-13	9760-9761	`	_	_
53-14	9761-9762	`	_	_
53-15	9762-9766	bash	_	_
53-16	9767-9770	git	_	_
53-17	9771-9776	annex	_	_
53-18	9777-9781	sync	_	_
53-19	9782-9783	`	_	_
53-20	9783-9784	`	_	_
53-21	9784-9785	`	_	_
53-22	9787-9788	#	_	_
53-23	9788-9789	#	_	_
53-24	9789-9790	#	_	_
53-25	9791-9794	Get	_	_
53-26	9795-9801	remote	_	_
53-27	9802-9811	benchmark	_	_
53-28	9812-9819	results	_	_
53-29	9821-9822	`	_	_
53-30	9822-9823	`	_	_
53-31	9823-9824	`	_	_
53-32	9824-9828	bash	_	_
53-33	9829-9831	cd	*[463]	ONTOLOGY[463]
53-34	9832-9839	results	*[463]	ONTOLOGY[463]
53-35	9840-9841	`	*[463]	ONTOLOGY[463]
53-36	9841-9842	`	*[463]	ONTOLOGY[463]
53-37	9842-9843	`	*[463]	ONTOLOGY[463]
53-38	9844-9845	-	*[463]	ONTOLOGY[463]
53-39	9846-9847	\_	*[463]	ONTOLOGY[463]
53-40	9847-9855	optional	*[463]	ONTOLOGY[463]
53-41	9855-9856	:	*[463]	ONTOLOGY[463]
53-42	9857-9860	add	*[463]	ONTOLOGY[463]
53-43	9861-9862	a	_	_
53-44	9863-9866	new	_	_
53-45	9867-9873	remote	_	_
53-46	9873-9874	\_	_	_
53-47	9878-9879	+	_	_
53-48	9880-9881	`	_	_
53-49	9881-9884	git	_	_
53-50	9885-9888	add	_	_
53-51	9889-9895	remote	_	_
53-52	9896-9897	<	_	_
53-53	9897-9901	name	_	_
53-54	9901-9902	>	_	_
53-55	9903-9904	<	_	_
53-56	9904-9912	location	_	_
53-57	9912-9913	>	_	_
53-58	9913-9914	`	_	_
53-59	9914-9915	,	_	_
53-60	9916-9919	e.g	_	_
53-61	9919-9920	.	_	_

#Text=`git add remote jureca <username>@jureca.fz-juelich.de:<PATH/TO/REPO>/results`   + `git fetch <name>` ```bash git annex get ```  ### Visualization  ```bash cd results ```  First, filter which benchmarks to plot using the following syntax: ```bash git annex view <common\_metadata>="<value\_of\_metadata>" <differing\_metadata>="\*" ``` Here, `common\_metadata` refers to a key that should be the same value for all benchmarks, e.g. the `"machine"`.
54-1	9921-9922	`	_	_
54-2	9922-9925	git	_	_
54-3	9926-9929	add	_	_
54-4	9930-9936	remote	_	_
54-5	9937-9943	jureca	_	_
54-6	9944-9945	<	_	_
54-7	9945-9953	username	*[515]	LICENSE[515]
54-8	9953-9954	>	*[515]	LICENSE[515]
54-9	9954-9955	@	*[515]	LICENSE[515]
54-10	9955-9975	jureca.fz-juelich.de	*[515]	LICENSE[515]
54-11	9975-9976	:	*[515]	LICENSE[515]
54-12	9976-9977	<	*[515]	LICENSE[515]
54-13	9977-9981	PATH	*[515]	LICENSE[515]
54-14	9981-9982	/	*[515]	LICENSE[515]
54-15	9982-9984	TO	*[515]	LICENSE[515]
54-16	9984-9985	/	*[515]	LICENSE[515]
54-17	9985-9989	REPO	*[515]	LICENSE[515]
54-18	9989-9990	>	*[515]	LICENSE[515]
54-19	9990-9991	/	*[515]	LICENSE[515]
54-20	9991-9998	results	*[515]	LICENSE[515]
54-21	9998-9999	`	*[515]	LICENSE[515]
54-22	10002-10003	+	*[515]	LICENSE[515]
54-23	10004-10005	`	*[515]	LICENSE[515]
54-24	10005-10008	git	*[515]	LICENSE[515]
54-25	10009-10014	fetch	*[515]	LICENSE[515]
54-26	10015-10016	<	*[515]	LICENSE[515]
54-27	10016-10020	name	*[515]	LICENSE[515]
54-28	10020-10021	>	*[515]	LICENSE[515]
54-29	10021-10022	`	*[515]	LICENSE[515]
54-30	10023-10024	`	*[515]	LICENSE[515]
54-31	10024-10025	`	*[515]	LICENSE[515]
54-32	10025-10026	`	*[515]	LICENSE[515]
54-33	10026-10030	bash	*[515]	LICENSE[515]
54-34	10031-10034	git	*[515]	LICENSE[515]
54-35	10035-10040	annex	*[515]	LICENSE[515]
54-36	10041-10044	get	*[515]	LICENSE[515]
54-37	10045-10046	`	*[515]	LICENSE[515]
54-38	10046-10047	`	*[515]	LICENSE[515]
54-39	10047-10048	`	*[515]	LICENSE[515]
54-40	10050-10051	#	*[515]	LICENSE[515]
54-41	10051-10052	#	*[515]	LICENSE[515]
54-42	10052-10053	#	*[515]	LICENSE[515]
54-43	10054-10067	Visualization	*[515]	LICENSE[515]
54-44	10069-10070	`	*[515]	LICENSE[515]
54-45	10070-10071	`	*[515]	LICENSE[515]
54-46	10071-10072	`	*[515]	LICENSE[515]
54-47	10072-10076	bash	*[515]	LICENSE[515]
54-48	10077-10079	cd	*[515]	LICENSE[515]
54-49	10080-10087	results	*[515]	LICENSE[515]
54-50	10088-10089	`	*[515]	LICENSE[515]
54-51	10089-10090	`	*[515]	LICENSE[515]
54-52	10090-10091	`	*[515]	LICENSE[515]
54-53	10093-10098	First	*[515]	LICENSE[515]
54-54	10098-10099	,	*[515]	LICENSE[515]
54-55	10100-10106	filter	*[515]	LICENSE[515]
54-56	10107-10112	which	*[515]	LICENSE[515]
54-57	10113-10123	benchmarks	*[515]	LICENSE[515]
54-58	10124-10126	to	*[515]	LICENSE[515]
54-59	10127-10131	plot	*[515]	LICENSE[515]
54-60	10132-10137	using	*[515]	LICENSE[515]
54-61	10138-10141	the	*[515]	LICENSE[515]
54-62	10142-10151	following	*[515]	LICENSE[515]
54-63	10152-10158	syntax	*[515]	LICENSE[515]
54-64	10158-10159	:	*[515]	LICENSE[515]
54-65	10160-10161	`	*[515]	LICENSE[515]
54-66	10161-10162	`	*[515]	LICENSE[515]
54-67	10162-10163	`	*[515]	LICENSE[515]
54-68	10163-10167	bash	*[515]	LICENSE[515]
54-69	10168-10171	git	*[515]	LICENSE[515]
54-70	10172-10177	annex	*[515]	LICENSE[515]
54-71	10178-10182	view	*[515]	LICENSE[515]
54-72	10183-10184	<	*[515]	LICENSE[515]
54-73	10184-10199	common\_metadata	*[515]	LICENSE[515]
54-74	10199-10200	>	*[515]	LICENSE[515]
54-75	10200-10201	=	*[515]	LICENSE[515]
54-76	10201-10202	"	*[515]	LICENSE[515]
54-77	10202-10203	<	*[515]	LICENSE[515]
54-78	10203-10220	value\_of\_metadata	*[515]	LICENSE[515]
54-79	10220-10221	>	*[515]	LICENSE[515]
54-80	10221-10222	"	*[515]	LICENSE[515]
54-81	10223-10224	<	*[515]	LICENSE[515]
54-82	10224-10242	differing\_metadata	*[515]	LICENSE[515]
54-83	10242-10243	>	*[515]	LICENSE[515]
54-84	10243-10244	=	*[515]	LICENSE[515]
54-85	10244-10245	"	*[515]	LICENSE[515]
54-86	10245-10246	\*	*[515]	LICENSE[515]
54-87	10246-10247	"	*[515]	LICENSE[515]
54-88	10248-10249	`	*[515]	LICENSE[515]
54-89	10249-10250	`	*[515]	LICENSE[515]
54-90	10250-10251	`	*[515]	LICENSE[515]
54-91	10252-10256	Here	*[515]	LICENSE[515]
54-92	10256-10257	,	*[515]	LICENSE[515]
54-93	10258-10259	`	*[515]	LICENSE[515]
54-94	10259-10274	common\_metadata	_	_
54-95	10274-10275	`	_	_
54-96	10276-10282	refers	_	_
54-97	10283-10285	to	_	_
54-98	10286-10287	a	_	_
54-99	10288-10291	key	_	_
54-100	10292-10296	that	_	_
54-101	10297-10303	should	_	_
54-102	10304-10306	be	_	_
54-103	10307-10310	the	_	_
54-104	10311-10315	same	_	_
54-105	10316-10321	value	_	_
54-106	10322-10325	for	_	_
54-107	10326-10329	all	_	_
54-108	10330-10340	benchmarks	_	_
54-109	10340-10341	,	_	_
54-110	10342-10345	e.g	_	_
54-111	10345-10346	.	_	_
54-112	10347-10350	the	_	_
54-113	10351-10352	`	_	_
54-114	10352-10353	"	_	_
54-115	10353-10360	machine	_	_
54-116	10360-10361	"	_	_
54-117	10361-10362	`	_	_
54-118	10362-10363	.	_	_

#Text=A list of all available metadata keys can be obtained via `git annex metadata <uuidgen\_hash>.csv`.
55-1	10364-10365	A	_	_
55-2	10366-10370	list	_	_
55-3	10371-10373	of	_	_
55-4	10374-10377	all	_	_
55-5	10378-10387	available	_	_
55-6	10388-10396	metadata	*[516]	LICENSE[516]
55-7	10397-10401	keys	*[516]	LICENSE[516]
55-8	10402-10405	can	*[516]	LICENSE[516]
55-9	10406-10408	be	*[516]	LICENSE[516]
55-10	10409-10417	obtained	*[516]	LICENSE[516]
55-11	10418-10421	via	*[516]	LICENSE[516]
55-12	10422-10423	`	*[516]	LICENSE[516]
55-13	10423-10426	git	*[516]	LICENSE[516]
55-14	10427-10432	annex	*[516]	LICENSE[516]
55-15	10433-10441	metadata	*[516]	LICENSE[516]
55-16	10442-10443	<	*[516]	LICENSE[516]
55-17	10443-10455	uuidgen\_hash	*[516]	LICENSE[516]
55-18	10455-10456	>	*[516]	LICENSE[516]
55-19	10456-10457	.	*[516]	LICENSE[516]
55-20	10457-10460	csv	_	_
55-21	10460-10461	`	_	_
55-22	10461-10462	.	_	_

#Text=One can use `\*` here as well, e.g. when filtering out all runs that include simulations done on 10 nodes via `num\_nodes='\*,10\*'` or all machines that have `jureca` in their name via `machine='\*jureca\*`.
56-1	10463-10466	One	_	_
56-2	10467-10470	can	_	_
56-3	10471-10474	use	_	_
56-4	10475-10476	`	_	_
56-5	10476-10477	\*	_	_
56-6	10477-10478	`	_	_
56-7	10479-10483	here	_	_
56-8	10484-10486	as	_	_
56-9	10487-10491	well	_	_
56-10	10491-10492	,	_	_
56-11	10493-10496	e.g	_	_
56-12	10496-10497	.	_	_
56-13	10498-10502	when	_	_
56-14	10503-10512	filtering	_	_
56-15	10513-10516	out	_	_
56-16	10517-10520	all	_	_
56-17	10521-10525	runs	_	_
56-18	10526-10530	that	_	_
56-19	10531-10538	include	_	_
56-20	10539-10550	simulations	_	_
56-21	10551-10555	done	_	_
56-22	10556-10558	on	*[517]	LICENSE[517]
56-23	10559-10561	10	*[517]	LICENSE[517]
56-24	10562-10567	nodes	*[517]	LICENSE[517]
56-25	10568-10571	via	*[517]	LICENSE[517]
56-26	10572-10573	`	*[517]	LICENSE[517]
56-27	10573-10582	num\_nodes	*[517]	LICENSE[517]
56-28	10582-10583	=	*[517]	LICENSE[517]
56-29	10583-10584	'	*[517]	LICENSE[517]
56-30	10584-10585	\*	*[517]	LICENSE[517]
56-31	10585-10586	,	*[517]	LICENSE[517]
56-32	10586-10588	10	*[517]	LICENSE[517]
56-33	10588-10589	\*	*[517]	LICENSE[517]
56-34	10589-10590	'	*[517]	LICENSE[517]
56-35	10590-10591	`	*[517]	LICENSE[517]
56-36	10592-10594	or	_	_
56-37	10595-10598	all	_	_
56-38	10599-10607	machines	_	_
56-39	10608-10612	that	_	_
56-40	10613-10617	have	_	_
56-41	10618-10619	`	_	_
56-42	10619-10625	jureca	_	_
56-43	10625-10626	`	_	_
56-44	10627-10629	in	_	_
56-45	10630-10635	their	_	_
56-46	10636-10640	name	_	_
56-47	10641-10644	via	_	_
56-48	10645-10646	`	_	_
56-49	10646-10653	machine	_	_
56-50	10653-10654	=	_	_
56-51	10654-10655	'	_	_
56-52	10655-10656	\*	_	_
56-53	10656-10662	jureca	_	_
56-54	10662-10663	\*	_	_
56-55	10663-10664	`	_	_
56-56	10664-10665	.	_	_

#Text=To specify multiple numerical values use `keyword={value1,value2}`. - example: `git annex view machine="jureca" model\_name="microcircuit" nest="\*" num\_vps="\*"`.
57-1	10666-10668	To	_	_
57-2	10669-10676	specify	_	_
57-3	10677-10685	multiple	_	_
57-4	10686-10695	numerical	_	_
57-5	10696-10702	values	_	_
57-6	10703-10706	use	_	_
57-7	10707-10708	`	_	_
57-8	10708-10715	keyword	_	_
57-9	10715-10716	=	_	_
57-10	10716-10717	{	_	_
57-11	10717-10723	value1	_	_
57-12	10723-10724	,	_	_
57-13	10724-10730	value2	_	_
57-14	10730-10731	}	_	_
57-15	10731-10732	`	_	_
57-16	10732-10733	.	_	_
57-17	10734-10735	-	_	_
57-18	10736-10743	example	_	_
57-19	10743-10744	:	_	_
57-20	10745-10746	`	_	_
57-21	10746-10749	git	_	_
57-22	10750-10755	annex	_	_
57-23	10756-10760	view	_	_
57-24	10761-10768	machine	_	_
57-25	10768-10769	=	_	_
57-26	10769-10770	"	_	_
57-27	10770-10776	jureca	_	_
57-28	10776-10777	"	_	_
57-29	10778-10788	model\_name	_	_
57-30	10788-10789	=	_	_
57-31	10789-10790	"	_	_
57-32	10790-10802	microcircuit	_	_
57-33	10802-10803	"	_	_
57-34	10804-10808	nest	_	_
57-35	10808-10809	=	_	_
57-36	10809-10810	"	_	_
57-37	10810-10811	\*	_	_
57-38	10811-10812	"	_	_
57-39	10813-10820	num\_vps	_	_
57-40	10820-10821	=	_	_
57-41	10821-10822	"	_	_
57-42	10822-10823	\*	_	_
57-43	10823-10824	"	_	_
57-44	10824-10825	`	_	_
57-45	10825-10826	.	_	_

#Text=Note that this changes the local file structure\; the values corresponding to the `<differing\_metadata>` determine the names of the folders in a hierarchical fashion.
58-1	10828-10832	Note	_	_
58-2	10833-10837	that	_	_
58-3	10838-10842	this	_	_
58-4	10843-10850	changes	_	_
58-5	10851-10854	the	_	_
58-6	10855-10860	local	_	_
58-7	10861-10865	file	_	_
58-8	10866-10875	structure	_	_
58-9	10875-10876	\;	_	_
58-10	10877-10880	the	_	_
58-11	10881-10887	values	_	_
58-12	10888-10901	corresponding	_	_
58-13	10902-10904	to	_	_
58-14	10905-10908	the	_	_
58-15	10909-10910	`	_	_
58-16	10910-10911	<	_	_
58-17	10911-10929	differing\_metadata	_	_
58-18	10929-10930	>	_	_
58-19	10930-10931	`	_	_
58-20	10932-10941	determine	_	_
58-21	10942-10945	the	_	_
58-22	10946-10951	names	_	_
58-23	10952-10954	of	_	_
58-24	10955-10958	the	_	_
58-25	10959-10966	folders	_	_
58-26	10967-10969	in	_	_
58-27	10970-10971	a	_	_
58-28	10972-10984	hierarchical	_	_
58-29	10985-10992	fashion	_	_
58-30	10992-10993	.	_	_

#Text=In the example above, the top level would consist of folders named after the values of `nest` (e.g.
59-1	10994-10996	In	_	_
59-2	10997-11000	the	_	_
59-3	11001-11008	example	_	_
59-4	11009-11014	above	_	_
59-5	11014-11015	,	_	_
59-6	11016-11019	the	*[454]	PUBLICATION[454]
59-7	11020-11023	top	*[454]	PUBLICATION[454]
59-8	11024-11029	level	*[454]	PUBLICATION[454]
59-9	11030-11035	would	*[454]	PUBLICATION[454]
59-10	11036-11043	consist	*[454]	PUBLICATION[454]
59-11	11044-11046	of	*[454]	PUBLICATION[454]
59-12	11047-11054	folders	_	_
59-13	11055-11060	named	_	_
59-14	11061-11066	after	_	_
59-15	11067-11070	the	_	_
59-16	11071-11077	values	_	_
59-17	11078-11080	of	_	_
59-18	11081-11082	`	_	_
59-19	11082-11086	nest	_	_
59-20	11086-11087	`	_	_
59-21	11088-11089	(	_	_
59-22	11089-11092	e.g	_	_
59-23	11092-11093	.	_	_

#Text=`nest-simulator/2.14.1`, `nest-simulator/2.20.2` and `nest-simulator/3.1`), with each of those containing folders named after the number of virtual processes of the simulations (e.g. `4`, `8`, `16`).
60-1	11094-11095	`	_	_
60-2	11095-11109	nest-simulator	_	_
60-3	11109-11110	/	*[499]	PROGLANG[499]
60-4	11110-11116	2.14.1	*[499]	PROGLANG[499]
60-5	11116-11117	`	*[499]	PROGLANG[499]
60-6	11117-11118	,	*[499]	PROGLANG[499]
60-7	11119-11120	`	*[499]	PROGLANG[499]
60-8	11120-11134	nest-simulator	*[499]	PROGLANG[499]
60-9	11134-11135	/	*[499]	PROGLANG[499]
60-10	11135-11141	2.20.2	*[499]	PROGLANG[499]
60-11	11141-11142	`	*[499]	PROGLANG[499]
60-12	11143-11146	and	_	_
60-13	11147-11148	`	_	_
60-14	11148-11162	nest-simulator	_	_
60-15	11162-11163	/	_	_
60-16	11163-11166	3.1	_	_
60-17	11166-11167	`	_	_
60-18	11167-11168	)	_	_
60-19	11168-11169	,	_	_
60-20	11170-11174	with	_	_
60-21	11175-11179	each	_	_
60-22	11180-11182	of	_	_
60-23	11183-11188	those	_	_
60-24	11189-11199	containing	_	_
60-25	11200-11207	folders	_	_
60-26	11208-11213	named	_	_
60-27	11214-11219	after	_	_
60-28	11220-11223	the	_	_
60-29	11224-11230	number	_	_
60-30	11231-11233	of	_	_
60-31	11234-11241	virtual	_	_
60-32	11242-11251	processes	_	_
60-33	11252-11254	of	_	_
60-34	11255-11258	the	_	_
60-35	11259-11270	simulations	_	_
60-36	11271-11272	(	_	_
60-37	11272-11275	e.g	_	_
60-38	11275-11276	.	_	_
60-39	11277-11278	`	_	_
60-40	11278-11279	4	_	_
60-41	11279-11280	`	_	_
60-42	11280-11281	,	_	_
60-43	11282-11283	`	_	_
60-44	11283-11284	8	_	_
60-45	11284-11285	`	_	_
60-46	11285-11286	,	_	_
60-47	11287-11288	`	_	_
60-48	11288-11290	16	_	_
60-49	11290-11291	`	_	_
60-50	11291-11292	)	_	_
60-51	11292-11293	.	_	_

#Text=Rearranging the order of `<differing\_metadata>` in the command above also reorders the hierarchical file structure.
61-1	11294-11305	Rearranging	_	_
61-2	11306-11309	the	_	_
61-3	11310-11315	order	_	_
61-4	11316-11318	of	_	_
61-5	11319-11320	`	_	_
61-6	11320-11321	<	_	_
61-7	11321-11339	differing\_metadata	_	_
61-8	11339-11340	>	_	_
61-9	11340-11341	`	_	_
61-10	11342-11344	in	_	_
61-11	11345-11348	the	_	_
61-12	11349-11356	command	_	_
61-13	11357-11362	above	_	_
61-14	11363-11367	also	_	_
61-15	11368-11376	reorders	_	_
61-16	11377-11380	the	_	_
61-17	11381-11393	hierarchical	_	_
61-18	11394-11398	file	_	_
61-19	11399-11408	structure	_	_
61-20	11408-11409	.	_	_

#Text=To "go back" a view, execute ```bash git annex vpop ``` After choosing which benchmarks to display via filtering above and ordering them via `<differing\_metadata>`, you can create a flip book of all plots with ```bash python ..
62-1	11410-11412	To	_	_
62-2	11413-11414	"	_	_
62-3	11414-11416	go	_	_
62-4	11417-11421	back	_	_
62-5	11421-11422	"	_	_
62-6	11423-11424	a	_	_
62-7	11425-11429	view	_	_
62-8	11429-11430	,	_	_
62-9	11431-11438	execute	_	_
62-10	11439-11440	`	_	_
62-11	11440-11441	`	_	_
62-12	11441-11442	`	_	_
62-13	11442-11446	bash	_	_
62-14	11447-11450	git	_	_
62-15	11451-11456	annex	_	_
62-16	11457-11461	vpop	_	_
62-17	11462-11463	`	_	_
62-18	11463-11464	`	_	_
62-19	11464-11465	`	_	_
62-20	11466-11471	After	_	_
62-21	11472-11480	choosing	_	_
62-22	11481-11486	which	_	_
62-23	11487-11497	benchmarks	_	_
62-24	11498-11500	to	*[455]	PUBLICATION[455]
62-25	11501-11508	display	*[455]	PUBLICATION[455]
62-26	11509-11512	via	*[455]	PUBLICATION[455]
62-27	11513-11522	filtering	*[455]	PUBLICATION[455]
62-28	11523-11528	above	*[455]	PUBLICATION[455]
62-29	11529-11532	and	*[455]	PUBLICATION[455]
62-30	11533-11541	ordering	*[455]	PUBLICATION[455]
62-31	11542-11546	them	*[455]	PUBLICATION[455]
62-32	11547-11550	via	*[455]	PUBLICATION[455]
62-33	11551-11552	`	*[455]	PUBLICATION[455]
62-34	11552-11553	<	*[455]	PUBLICATION[455]
62-35	11553-11571	differing\_metadata	*[455]	PUBLICATION[455]
62-36	11571-11572	>	*[455]	PUBLICATION[455]
62-37	11572-11573	`	*[455]	PUBLICATION[455]
62-38	11573-11574	,	*[455]	PUBLICATION[455]
62-39	11575-11578	you	*[455]	PUBLICATION[455]
62-40	11579-11582	can	_	_
62-41	11583-11589	create	_	_
62-42	11590-11591	a	_	_
62-43	11592-11596	flip	_	_
62-44	11597-11601	book	_	_
62-45	11602-11604	of	_	_
62-46	11605-11608	all	_	_
62-47	11609-11614	plots	_	_
62-48	11615-11619	with	_	_
62-49	11620-11621	`	_	_
62-50	11621-11622	`	_	_
62-51	11622-11623	`	_	_
62-52	11623-11627	bash	_	_
62-53	11628-11634	python	_	_
62-54	11635-11636	.	_	_
62-55	11636-11637	.	_	_

#Text=/flipbook/flipbook.py <scaling\_type> <bullet\_1> <bullet\_2> ... ``` with an arbitrarily long list of bullet items (consisting of metadata keys) that appear as bullet points on the slides for comparison.
63-1	11637-11638	/	_	_
63-2	11638-11646	flipbook	_	_
63-3	11646-11647	/	_	_
63-4	11647-11658	flipbook.py	_	_
63-5	11659-11660	<	_	_
63-6	11660-11672	scaling\_type	_	_
63-7	11672-11673	>	_	_
63-8	11674-11675	<	_	_
63-9	11675-11681	bullet	_	_
63-10	11681-11682	\_	_	_
63-11	11682-11683	1	_	_
63-12	11683-11684	>	_	_
63-13	11685-11686	<	_	_
63-14	11686-11692	bullet	_	_
63-15	11692-11693	\_	_	_
63-16	11693-11694	2	_	_
63-17	11694-11695	>	_	_
63-18	11696-11697	.	_	_
63-19	11697-11698	.	_	_
63-20	11698-11699	.	_	_
63-21	11700-11701	`	_	_
63-22	11701-11702	`	_	_
63-23	11702-11703	`	_	_
63-24	11704-11708	with	_	_
63-25	11709-11711	an	_	_
63-26	11712-11723	arbitrarily	_	_
63-27	11724-11728	long	_	_
63-28	11729-11733	list	_	_
63-29	11734-11736	of	_	_
63-30	11737-11743	bullet	_	_
63-31	11744-11749	items	_	_
63-32	11750-11751	(	_	_
63-33	11751-11761	consisting	_	_
63-34	11762-11764	of	_	_
63-35	11765-11773	metadata	*[487]	CONFERENCE[487]
63-36	11774-11778	keys	*[487]	CONFERENCE[487]
63-37	11778-11779	)	*[487]	CONFERENCE[487]
63-38	11780-11784	that	*[487]	CONFERENCE[487]
63-39	11785-11791	appear	*[487]	CONFERENCE[487]
63-40	11792-11794	as	*[487]	CONFERENCE[487]
63-41	11795-11801	bullet	*[487]	CONFERENCE[487]
63-42	11802-11808	points	*[487]	CONFERENCE[487]
63-43	11809-11811	on	*[487]	CONFERENCE[487]
63-44	11812-11815	the	*[487]	CONFERENCE[487]
63-45	11816-11822	slides	*[487]	CONFERENCE[487]
63-46	11823-11826	for	*[487]	CONFERENCE[487]
63-47	11827-11837	comparison	_	_
63-48	11837-11838	.	_	_

#Text=`<scaling\_type>` defines the style of plotting, c.f. section on \[Analyze Benchmarks\](#analyze-benchmarks).  ### Known issues - error `jinja2.exceptions.TemplateNotFound: index.html.j2`   + \[issue\](https://github.com/jupyter/nbconvert/issues/1394) with a recent version of `nbconvert`, try to install version `5.6.1` instead (e.g.
64-1	11839-11840	`	_	_
64-2	11840-11841	<	_	_
64-3	11841-11853	scaling\_type	_	_
64-4	11853-11854	>	_	_
64-5	11854-11855	`	_	_
64-6	11856-11863	defines	_	_
64-7	11864-11867	the	_	_
64-8	11868-11873	style	_	_
64-9	11874-11876	of	_	_
64-10	11877-11885	plotting	_	_
64-11	11885-11886	,	_	_
64-12	11887-11890	c.f	_	_
64-13	11890-11891	.	_	_
64-14	11892-11899	section	_	_
64-15	11900-11902	on	_	_
64-16	11903-11904	\[	_	_
64-17	11904-11911	Analyze	_	_
64-18	11912-11922	Benchmarks	_	_
64-19	11922-11923	\]	_	_
64-20	11923-11924	(	_	_
64-21	11924-11925	#	_	_
64-22	11925-11943	analyze-benchmarks	_	_
64-23	11943-11944	)	_	_
64-24	11944-11945	.	_	_
64-25	11947-11948	#	_	_
64-26	11948-11949	#	_	_
64-27	11949-11950	#	_	_
64-28	11951-11956	Known	_	_
64-29	11957-11963	issues	_	_
64-30	11964-11965	-	_	_
64-31	11966-11971	error	_	_
64-32	11972-11973	`	_	_
64-33	11973-11979	jinja2	_	_
64-34	11979-11980	.	_	_
64-35	11980-12007	exceptions.TemplateNotFound	_	_
64-36	12007-12008	:	_	_
64-37	12009-12022	index.html.j2	_	_
64-38	12022-12023	`	_	_
64-39	12026-12027	+	_	_
64-40	12028-12029	\[	_	_
64-41	12029-12034	issue	_	_
64-42	12034-12035	\]	_	_
64-43	12035-12036	(	_	_
64-44	12036-12041	https	_	_
64-45	12041-12042	:	_	_
64-46	12042-12043	/	_	_
64-47	12043-12044	/	_	_
64-48	12044-12054	github.com	_	_
64-49	12054-12055	/	_	_
64-50	12055-12062	jupyter	_	_
64-51	12062-12063	/	_	_
64-52	12063-12072	nbconvert	_	_
64-53	12072-12073	/	_	_
64-54	12073-12079	issues	_	_
64-55	12079-12080	/	_	_
64-56	12080-12084	1394	_	_
64-57	12084-12085	)	_	_
64-58	12086-12090	with	_	_
64-59	12091-12092	a	_	_
64-60	12093-12099	recent	_	_
64-61	12100-12107	version	_	_
64-62	12108-12110	of	_	_
64-63	12111-12112	`	_	_
64-64	12112-12121	nbconvert	_	_
64-65	12121-12122	`	_	_
64-66	12122-12123	,	_	_
64-67	12124-12127	try	_	_
64-68	12128-12130	to	_	_
64-69	12131-12138	install	_	_
64-70	12139-12146	version	*[500]	PROGLANG[500]
64-71	12147-12148	`	*[500]	PROGLANG[500]
64-72	12148-12153	5.6.1	*[500]	PROGLANG[500]
64-73	12153-12154	`	*[500]	PROGLANG[500]
64-74	12155-12162	instead	_	_
64-75	12163-12164	(	_	_
64-76	12164-12167	e.g	_	_
64-77	12167-12168	.	_	_

#Text=`pip install nbconvert==5.6.1 --user`)  ### Community discussion  We organize a discussion with a focus on both community usage and development synchronization.
65-1	12169-12170	`	_	_
65-2	12170-12173	pip	_	_
65-3	12174-12181	install	*[478]	DATASET[478]
65-4	12182-12191	nbconvert	*[478]	DATASET[478]
65-5	12191-12192	=	*[478]	DATASET[478]
65-6	12192-12193	=	*[478]	DATASET[478]
65-7	12193-12198	5.6.1	*[478]	DATASET[478]
65-8	12199-12200	-	*[478]	DATASET[478]
65-9	12200-12201	-	*[478]	DATASET[478]
65-10	12201-12205	user	*[478]	DATASET[478]
65-11	12205-12206	`	*[478]	DATASET[478]
65-12	12206-12207	)	*[478]	DATASET[478]
65-13	12209-12210	#	*[478]	DATASET[478]
65-14	12210-12211	#	*[478]	DATASET[478]
65-15	12211-12212	#	*[478]	DATASET[478]
65-16	12213-12222	Community	*[478]	DATASET[478]
65-17	12223-12233	discussion	_	_
65-18	12235-12237	We	_	_
65-19	12238-12246	organize	_	_
65-20	12247-12248	a	_	_
65-21	12249-12259	discussion	_	_
65-22	12260-12264	with	_	_
65-23	12265-12266	a	_	_
65-24	12267-12272	focus	_	_
65-25	12273-12275	on	_	_
65-26	12276-12280	both	_	_
65-27	12281-12290	community	_	_
65-28	12291-12296	usage	_	_
65-29	12297-12300	and	_	_
65-30	12301-12312	development	_	_
65-31	12313-12328	synchronization	_	_
65-32	12328-12329	.	_	_

#Text=For details regarding space-time coordinates, contact \[Jasper Albers\](mailto:j.albers@fz-juelich.de?
66-1	12330-12333	For	_	_
66-2	12334-12341	details	_	_
66-3	12342-12351	regarding	_	_
66-4	12352-12362	space-time	_	_
66-5	12363-12374	coordinates	_	_
66-6	12374-12375	,	_	_
66-7	12376-12383	contact	_	_
66-8	12384-12385	\[	_	_
66-9	12385-12391	Jasper	_	_
66-10	12392-12398	Albers	_	_
66-11	12398-12399	\]	_	_
66-12	12399-12400	(	_	_
66-13	12400-12406	mailto	_	_
66-14	12406-12407	:	_	_
66-15	12407-12415	j.albers	_	_
66-16	12415-12416	@	_	_
66-17	12416-12429	fz-juelich.de	_	_
66-18	12429-12430	?	_	_

#Text=subject=\[beNNch\]%20Community%20Discussion%20Meeting).  \_\_\_ ## Developer guide  ### Add a new model  `benchmarks/template.yaml` provides a template for a JUBE benchmarking script and can be used as a starting point for adding a new model.
67-1	12430-12437	subject	_	_
67-2	12437-12438	=	_	_
67-3	12438-12439	\[	_	_
67-4	12439-12445	beNNch	_	_
67-5	12445-12446	\]	_	_
67-6	12446-12447	%	_	_
67-7	12447-12458	20Community	_	_
67-8	12458-12459	%	_	_
67-9	12459-12471	20Discussion	_	_
67-10	12471-12472	%	_	_
67-11	12472-12481	20Meeting	_	_
67-12	12481-12482	)	_	_
67-13	12482-12483	.	_	_
67-14	12485-12486	\_	_	_
67-15	12486-12487	\_	_	_
67-16	12487-12488	\_	_	_
67-17	12489-12490	#	_	_
67-18	12490-12491	#	_	_
67-19	12492-12501	Developer	_	_
67-20	12502-12507	guide	_	_
67-21	12509-12510	#	*[480]	PROJECT[480]
67-22	12510-12511	#	*[480]	PROJECT[480]
67-23	12511-12512	#	*[480]	PROJECT[480]
67-24	12513-12516	Add	*[480]	PROJECT[480]
67-25	12517-12518	a	*[480]	PROJECT[480]
67-26	12519-12522	new	*[480]	PROJECT[480]
67-27	12523-12528	model	*[480]	PROJECT[480]
67-28	12530-12531	`	*[480]	PROJECT[480]
67-29	12531-12541	benchmarks	*[480]	PROJECT[480]
67-30	12541-12542	/	*[480]	PROJECT[480]
67-31	12542-12555	template.yaml	*[480]	PROJECT[480]
67-32	12555-12556	`	*[480]	PROJECT[480]
67-33	12557-12565	provides	*[480]	PROJECT[480]
67-34	12566-12567	a	*[480]	PROJECT[480]
67-35	12568-12576	template	*[480]	PROJECT[480]
67-36	12577-12580	for	*[480]	PROJECT[480]
67-37	12581-12582	a	*[480]	PROJECT[480]
67-38	12583-12587	JUBE	*[480]	PROJECT[480]
67-39	12588-12600	benchmarking	*[480]	PROJECT[480]
67-40	12601-12607	script	_	_
67-41	12608-12611	and	_	_
67-42	12612-12615	can	_	_
67-43	12616-12618	be	_	_
67-44	12619-12623	used	_	_
67-45	12624-12626	as	_	_
67-46	12627-12628	a	_	_
67-47	12629-12637	starting	_	_
67-48	12638-12643	point	_	_
67-49	12644-12647	for	_	_
67-50	12648-12654	adding	_	_
67-51	12655-12656	a	_	_
67-52	12657-12660	new	_	_
67-53	12661-12666	model	_	_
67-54	12666-12667	.	_	_

#Text=Here, only the marked section needs to be adapted.
68-1	12668-12672	Here	_	_
68-2	12672-12673	,	_	_
68-3	12674-12678	only	_	_
68-4	12679-12682	the	_	_
68-5	12683-12689	marked	_	_
68-6	12690-12697	section	_	_
68-7	12698-12703	needs	_	_
68-8	12704-12706	to	_	_
68-9	12707-12709	be	_	_
68-10	12710-12717	adapted	_	_
68-11	12717-12718	.	_	_

#Text=As a reference, see the implementation of the microcircuit in `benchmarks/microcircuit.yaml`.
69-1	12719-12721	As	_	_
69-2	12722-12723	a	_	_
69-3	12724-12733	reference	_	_
69-4	12733-12734	,	_	_
69-5	12735-12738	see	_	_
69-6	12739-12742	the	_	_
69-7	12743-12757	implementation	_	_
69-8	12758-12760	of	_	_
69-9	12761-12764	the	_	_
69-10	12765-12777	microcircuit	_	_
69-11	12778-12780	in	_	_
69-12	12781-12782	`	_	_
69-13	12782-12792	benchmarks	_	_
69-14	12792-12793	/	_	_
69-15	12793-12810	microcircuit.yaml	_	_
69-16	12810-12811	`	_	_
69-17	12811-12812	.	_	_

#Text=In addition, minor modifications to a regular network model need to be made in order to comply with `beNNch`'s standards.
70-1	12814-12816	In	_	_
70-2	12817-12825	addition	_	_
70-3	12825-12826	,	_	_
70-4	12827-12832	minor	_	_
70-5	12833-12846	modifications	_	_
70-6	12847-12849	to	_	_
70-7	12850-12851	a	_	_
70-8	12852-12859	regular	_	_
70-9	12860-12867	network	_	_
70-10	12868-12873	model	_	_
70-11	12874-12878	need	_	_
70-12	12879-12881	to	*[474]	WORKSHOP[474]
70-13	12882-12884	be	*[474]	WORKSHOP[474]
70-14	12885-12889	made	_	_
70-15	12890-12892	in	_	_
70-16	12893-12898	order	_	_
70-17	12899-12901	to	_	_
70-18	12902-12908	comply	_	_
70-19	12909-12913	with	_	_
70-20	12914-12915	`	_	_
70-21	12915-12921	beNNch	_	_
70-22	12921-12922	`	_	_
70-23	12922-12923	'	_	_
70-24	12923-12924	s	_	_
70-25	12925-12934	standards	_	_
70-26	12934-12935	.	_	_

#Text=In particular, this concerns how JUBE feeds the configuration parameters to the network and how JUBE reads the performance measurement output.  #### Input  A new model needs to be able to receive input from JUBE for setting parameters.
71-1	12936-12938	In	_	_
71-2	12939-12949	particular	_	_
71-3	12949-12950	,	_	_
71-4	12951-12955	this	_	_
71-5	12956-12964	concerns	_	_
71-6	12965-12968	how	_	_
71-7	12969-12973	JUBE	_	_
71-8	12974-12979	feeds	_	_
71-9	12980-12983	the	_	_
71-10	12984-12997	configuration	_	_
71-11	12998-13008	parameters	_	_
71-12	13009-13011	to	*[465]	ONTOLOGY[465]
71-13	13012-13015	the	*[465]	ONTOLOGY[465]
71-14	13016-13023	network	*[465]	ONTOLOGY[465]
71-15	13024-13027	and	*[465]	ONTOLOGY[465]
71-16	13028-13031	how	_	_
71-17	13032-13036	JUBE	_	_
71-18	13037-13042	reads	_	_
71-19	13043-13046	the	_	_
71-20	13047-13058	performance	_	_
71-21	13059-13070	measurement	_	_
71-22	13071-13077	output	_	_
71-23	13077-13078	.	_	_
71-24	13080-13081	#	_	_
71-25	13081-13082	#	_	_
71-26	13082-13083	#	_	_
71-27	13083-13084	#	_	_
71-28	13085-13090	Input	_	_
71-29	13092-13093	A	_	_
71-30	13094-13097	new	_	_
71-31	13098-13103	model	_	_
71-32	13104-13109	needs	_	_
71-33	13110-13112	to	_	_
71-34	13113-13115	be	_	_
71-35	13116-13120	able	_	_
71-36	13121-13123	to	_	_
71-37	13124-13131	receive	_	_
71-38	13132-13137	input	_	_
71-39	13138-13142	from	_	_
71-40	13143-13147	JUBE	_	_
71-41	13148-13151	for	_	_
71-42	13152-13159	setting	_	_
71-43	13160-13170	parameters	_	_
71-44	13170-13171	.	_	_

#Text=Following the `substituteset` defined in `benchmarks/template.yaml`, all listed source keys need to be initialized.
72-1	13172-13181	Following	_	_
72-2	13182-13185	the	_	_
72-3	13186-13187	`	_	_
72-4	13187-13200	substituteset	_	_
72-5	13200-13201	`	*[456]	PUBLICATION[456]
72-6	13202-13209	defined	_	_
72-7	13210-13212	in	_	_
72-8	13213-13214	`	_	_
72-9	13214-13224	benchmarks	_	_
72-10	13224-13225	/	_	_
72-11	13225-13238	template.yaml	_	_
72-12	13238-13239	`	_	_
72-13	13239-13240	,	_	_
72-14	13241-13244	all	_	_
72-15	13245-13251	listed	_	_
72-16	13252-13258	source	_	_
72-17	13259-13263	keys	_	_
72-18	13264-13268	need	_	_
72-19	13269-13271	to	_	_
72-20	13272-13274	be	_	_
72-21	13275-13286	initialized	_	_
72-22	13286-13287	.	_	_

#Text=In addition, the corresponding target keys need to be defined in a config file.
73-1	13288-13290	In	_	_
73-2	13291-13299	addition	_	_
73-3	13299-13300	,	_	_
73-4	13301-13304	the	_	_
73-5	13305-13318	corresponding	_	_
73-6	13319-13325	target	_	_
73-7	13326-13330	keys	_	_
73-8	13331-13335	need	_	_
73-9	13336-13338	to	_	_
73-10	13339-13341	be	_	_
73-11	13342-13349	defined	_	_
73-12	13350-13352	in	_	_
73-13	13353-13354	a	_	_
73-14	13355-13361	config	_	_
73-15	13362-13366	file	_	_
73-16	13366-13367	.	_	_

#Text=Use `models/Potjans\_2014/run\_bm\_microcircuit.py` for the former and `config/templates/microcircuit\_config\_template.yaml` as a reference.  #### Output  As current releases of NEST (including 2.14.1, 2.20.2 and 3.0+) include timers on the C++ level for measuring the simulation performance, the model only needs to output this information in a way compliant with `beNNch`.
74-1	13368-13371	Use	_	_
74-2	13372-13373	`	_	_
74-3	13373-13379	models	_	_
74-4	13379-13380	/	_	_
74-5	13380-13387	Potjans	_	_
74-6	13387-13388	\_	_	_
74-7	13388-13392	2014	_	_
74-8	13392-13393	/	_	_
74-9	13393-13415	run\_bm\_microcircuit.py	_	_
74-10	13415-13416	`	_	_
74-11	13417-13420	for	_	_
74-12	13421-13424	the	_	_
74-13	13425-13431	former	_	_
74-14	13432-13435	and	_	_
74-15	13436-13437	`	_	_
74-16	13437-13443	config	_	_
74-17	13443-13444	/	_	_
74-18	13444-13453	templates	_	_
74-19	13453-13454	/	_	_
74-20	13454-13487	microcircuit\_config\_template.yaml	_	_
74-21	13487-13488	`	*[481]	PROJECT[481]
74-22	13489-13491	as	*[481]	PROJECT[481]
74-23	13492-13493	a	*[481]	PROJECT[481]
74-24	13494-13503	reference	*[481]	PROJECT[481]
74-25	13503-13504	.	*[481]	PROJECT[481]
74-26	13506-13507	#	*[481]	PROJECT[481]
74-27	13507-13508	#	*[481]	PROJECT[481]
74-28	13508-13509	#	*[481]	PROJECT[481]
74-29	13509-13510	#	*[481]	PROJECT[481]
74-30	13511-13517	Output	*[481]	PROJECT[481]
74-31	13519-13521	As	*[481]	PROJECT[481]
74-32	13522-13529	current	*[481]	PROJECT[481]
74-33	13530-13538	releases	*[481]	PROJECT[481]
74-34	13539-13541	of	*[481]	PROJECT[481]
74-35	13542-13546	NEST	*[481]	PROJECT[481]
74-36	13547-13548	(	*[481]	PROJECT[481]
74-37	13548-13557	including	*[481]	PROJECT[481]
74-38	13558-13564	2.14.1	_	_
74-39	13564-13565	,	_	_
74-40	13566-13572	2.20.2	_	_
74-41	13573-13576	and	_	_
74-42	13577-13580	3.0	_	_
74-43	13580-13581	+	_	_
74-44	13581-13582	)	_	_
74-45	13583-13590	include	_	_
74-46	13591-13597	timers	_	_
74-47	13598-13600	on	_	_
74-48	13601-13604	the	_	_
74-49	13605-13606	C	_	_
74-50	13606-13607	+	_	_
74-51	13607-13608	+	_	_
74-52	13609-13614	level	_	_
74-53	13615-13618	for	_	_
74-54	13619-13628	measuring	_	_
74-55	13629-13632	the	_	_
74-56	13633-13643	simulation	_	_
74-57	13644-13655	performance	_	_
74-58	13655-13656	,	_	_
74-59	13657-13660	the	_	_
74-60	13661-13666	model	_	_
74-61	13667-13671	only	_	_
74-62	13672-13677	needs	_	_
74-63	13678-13680	to	_	_
74-64	13681-13687	output	_	_
74-65	13688-13692	this	_	_
74-66	13693-13704	information	_	_
74-67	13705-13707	in	_	_
74-68	13708-13709	a	_	_
74-69	13710-13713	way	_	_
74-70	13714-13723	compliant	_	_
74-71	13724-13728	with	_	_
74-72	13729-13730	`	_	_
74-73	13730-13736	beNNch	_	_
74-74	13736-13737	`	_	_
74-75	13737-13738	.	_	_

#Text=This can be done via adding a call to the `logging` function defined in `models/Potjans\_2014/bm\_helpers.py`.
75-1	13739-13743	This	_	_
75-2	13744-13747	can	_	_
75-3	13748-13750	be	*[488]	CONFERENCE[488]
75-4	13751-13755	done	*[488]	CONFERENCE[488]
75-5	13756-13759	via	*[488]	CONFERENCE[488]
75-6	13760-13766	adding	*[488]	CONFERENCE[488]
75-7	13767-13768	a	*[488]	CONFERENCE[488]
75-8	13769-13773	call	*[488]	CONFERENCE[488]
75-9	13774-13776	to	*[488]	CONFERENCE[488]
75-10	13777-13780	the	*[488]	CONFERENCE[488]
75-11	13781-13782	`	*[488]	CONFERENCE[488]
75-12	13782-13789	logging	*[488]	CONFERENCE[488]
75-13	13789-13790	`	*[488]	CONFERENCE[488]
75-14	13791-13799	function	*[488]	CONFERENCE[488]
75-15	13800-13807	defined	*[488]	CONFERENCE[488]
75-16	13808-13810	in	*[488]	CONFERENCE[488]
75-17	13811-13812	`	*[488]	CONFERENCE[488]
75-18	13812-13818	models	*[488]	CONFERENCE[488]
75-19	13818-13819	/	*[488]	CONFERENCE[488]
75-20	13819-13826	Potjans	*[488]	CONFERENCE[488]
75-21	13826-13827	\_	*[488]	CONFERENCE[488]
75-22	13827-13831	2014	*[488]	CONFERENCE[488]
75-23	13831-13832	/	*[488]	CONFERENCE[488]
75-24	13832-13845	bm\_helpers.py	_	_
75-25	13845-13846	`	_	_
75-26	13846-13847	.	_	_

#Text=Note that this also provides the optional functionality to include python level timers as well as memory information.  ## How to cite beNNch  Please cite our paper:   > Albers J, Pronold J, Kurth AC, Vennemo SB, Haghighi Mood K, Patronis A, Terhorst D, Jordan J, Kunkel S, Tetzlaff T, Diesmann M and Senk J (2022) A Modular Workflow for Performance Benchmarking of Neuronal Network Simulations.
76-1	13848-13852	Note	_	_
76-2	13853-13857	that	_	_
76-3	13858-13862	this	_	_
76-4	13863-13867	also	_	_
76-5	13868-13876	provides	_	_
76-6	13877-13880	the	_	_
76-7	13881-13889	optional	_	_
76-8	13890-13903	functionality	_	_
76-9	13904-13906	to	_	_
76-10	13907-13914	include	_	_
76-11	13915-13921	python	_	_
76-12	13922-13927	level	_	_
76-13	13928-13934	timers	_	_
76-14	13935-13937	as	_	_
76-15	13938-13942	well	_	_
76-16	13943-13945	as	_	_
76-17	13946-13952	memory	_	_
76-18	13953-13964	information	_	_
76-19	13964-13965	.	_	_
76-20	13967-13968	#	_	_
76-21	13968-13969	#	_	_
76-22	13970-13973	How	_	_
76-23	13974-13976	to	_	_
76-24	13977-13981	cite	_	_
76-25	13982-13988	beNNch	_	_
76-26	13990-13996	Please	_	_
76-27	13997-14001	cite	_	_
76-28	14002-14005	our	_	_
76-29	14006-14011	paper	_	_
76-30	14011-14012	:	_	_
76-31	14015-14016	>	_	_
76-32	14017-14023	Albers	_	_
76-33	14024-14025	J	_	_
76-34	14025-14026	,	_	_
76-35	14027-14034	Pronold	_	_
76-36	14035-14036	J	_	_
76-37	14036-14037	,	_	_
76-38	14038-14043	Kurth	_	_
76-39	14044-14046	AC	_	_
76-40	14046-14047	,	_	_
76-41	14048-14055	Vennemo	_	_
76-42	14056-14058	SB	_	_
76-43	14058-14059	,	_	_
76-44	14060-14068	Haghighi	_	_
76-45	14069-14073	Mood	_	_
76-46	14074-14075	K	_	_
76-47	14075-14076	,	_	_
76-48	14077-14085	Patronis	_	_
76-49	14086-14087	A	*[482]	PROJECT[482]
76-50	14087-14088	,	*[482]	PROJECT[482]
76-51	14089-14097	Terhorst	*[482]	PROJECT[482]
76-52	14098-14099	D	*[482]	PROJECT[482]
76-53	14099-14100	,	*[482]	PROJECT[482]
76-54	14101-14107	Jordan	*[482]	PROJECT[482]
76-55	14108-14109	J	*[482]	PROJECT[482]
76-56	14109-14110	,	*[482]	PROJECT[482]
76-57	14111-14117	Kunkel	*[482]	PROJECT[482]
76-58	14118-14119	S	*[482]	PROJECT[482]
76-59	14119-14120	,	*[482]	PROJECT[482]
76-60	14121-14129	Tetzlaff	*[482]	PROJECT[482]
76-61	14130-14131	T	*[482]	PROJECT[482]
76-62	14131-14132	,	*[482]	PROJECT[482]
76-63	14133-14141	Diesmann	*[482]	PROJECT[482]
76-64	14142-14143	M	*[482]	PROJECT[482]
76-65	14144-14147	and	*[482]	PROJECT[482]
76-66	14148-14152	Senk	*[482]	PROJECT[482]
76-67	14153-14154	J	*[482]	PROJECT[482]
76-68	14155-14156	(	*[482]	PROJECT[482]
76-69	14156-14160	2022	*[482]	PROJECT[482]
76-70	14160-14161	)	_	_
76-71	14162-14163	A	_	_
76-72	14164-14171	Modular	_	_
76-73	14172-14180	Workflow	_	_
76-74	14181-14184	for	_	_
76-75	14185-14196	Performance	_	_
76-76	14197-14209	Benchmarking	_	_
76-77	14210-14212	of	_	_
76-78	14213-14221	Neuronal	_	_
76-79	14222-14229	Network	_	_
76-80	14230-14241	Simulations	_	_
76-81	14241-14242	.	_	_

#Text=Front.
77-1	14243-14248	Front	_	_
77-2	14248-14249	.	_	_

#Text=Neuroinform. 16:837549. doi: \[10.3389/fninf.2022.837549\](https://doi.org/10.3389/fninf.2022.837549)  To refer to a specific version of beNNch, name the release or provide a link to this repository with the hash of the respective commit.
78-1	14250-14261	Neuroinform	_	_
78-2	14261-14262	.	_	_
78-3	14263-14265	16	_	_
78-4	14265-14266	:	_	_
78-5	14266-14272	837549	_	_
78-6	14272-14273	.	_	_
78-7	14274-14277	doi	_	_
78-8	14277-14278	:	_	_
78-9	14279-14280	\[	_	_
78-10	14280-14287	10.3389	_	_
78-11	14287-14288	/	_	_
78-12	14288-14293	fninf	_	_
78-13	14293-14305	.2022.837549	_	_
78-14	14305-14306	\]	_	_
78-15	14306-14307	(	_	_
78-16	14307-14312	https	_	_
78-17	14312-14313	:	_	_
78-18	14313-14314	/	_	_
78-19	14314-14315	/	_	_
78-20	14315-14322	doi.org	_	_
78-21	14322-14323	/	_	_
78-22	14323-14330	10.3389	_	_
78-23	14330-14331	/	_	_
78-24	14331-14336	fninf	_	_
78-25	14336-14348	.2022.837549	_	_
78-26	14348-14349	)	_	_
78-27	14351-14353	To	_	_
78-28	14354-14359	refer	_	_
78-29	14360-14362	to	_	_
78-30	14363-14364	a	_	_
78-31	14365-14373	specific	_	_
78-32	14374-14381	version	_	_
78-33	14382-14384	of	*[501]	PROGLANG[501]
78-34	14385-14391	beNNch	*[501]	PROGLANG[501]
78-35	14391-14392	,	*[501]	PROGLANG[501]
78-36	14393-14397	name	*[501]	PROGLANG[501]
78-37	14398-14401	the	*[501]	PROGLANG[501]
78-38	14402-14409	release	*[501]	PROGLANG[501]
78-39	14410-14412	or	*[501]	PROGLANG[501]
78-40	14413-14420	provide	*[501]	PROGLANG[501]
78-41	14421-14422	a	*[501]	PROGLANG[501]
78-42	14423-14427	link	_	_
78-43	14428-14430	to	_	_
78-44	14431-14435	this	_	_
78-45	14436-14446	repository	_	_
78-46	14447-14451	with	_	_
78-47	14452-14455	the	_	_
78-48	14456-14460	hash	_	_
78-49	14461-14463	of	_	_
78-50	14464-14467	the	_	_
78-51	14468-14478	respective	_	_
78-52	14479-14485	commit	_	_
78-53	14485-14486	.	_	_