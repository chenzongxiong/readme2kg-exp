#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# reachml  \[!
1-1	0-1	#	_	_
1-2	2-9	reachml	_	_
1-3	11-12	\[	_	_
1-4	12-13	!	_	_

#Text=\[python\](https://img.shields.io/badge/Python-3.10-3776AB.svg?
2-1	13-14	\[	_	_
2-2	14-20	python	_	_
2-3	20-21	\]	_	_
2-4	21-22	(	_	_
2-5	22-27	https	_	_
2-6	27-28	:	_	_
2-7	28-29	/	_	_
2-8	29-30	/	_	_
2-9	30-44	img.shields.io	_	_
2-10	44-45	/	_	_
2-11	45-50	badge	_	_
2-12	50-51	/	_	_
2-13	51-57	Python	_	_
2-14	57-58	-	_	_
2-15	58-62	3.10	_	_
2-16	62-63	-	_	_
2-17	63-73	3776AB.svg	_	_
2-18	73-74	?	_	_

#Text=style=flat&logo=python&logoColor=white)\](https://www.python.org) \[!
3-1	74-79	style	_	_
3-2	79-80	=	_	_
3-3	80-84	flat	_	_
3-4	84-85	&	_	_
3-5	85-89	logo	_	_
3-6	89-90	=	_	_
3-7	90-96	python	_	_
3-8	96-97	&	_	_
3-9	97-106	logoColor	_	_
3-10	106-107	=	_	_
3-11	107-112	white	_	_
3-12	112-113	)	_	_
3-13	113-114	\]	_	_
3-14	114-115	(	_	_
3-15	115-120	https	_	_
3-16	120-121	:	_	_
3-17	121-122	/	_	_
3-18	122-123	/	_	_
3-19	123-137	www.python.org	_	_
3-19	127-133	python	_	_
3-20	137-138	)	_	_
3-21	139-140	\[	_	_
3-22	140-141	!	_	_

#Text=\[License: MIT\](https://img.shields.io/badge/License-MIT-yellow.svg)\](https://opensource.org/licenses/MIT) \[!
4-1	141-142	\[	_	_
4-2	142-149	License	_	_
4-3	149-150	:	_	_
4-4	151-154	MIT	_	_
4-5	154-155	\]	_	_
4-6	155-156	(	*[327]	PROGLANG[327]
4-7	156-161	https	*[327]	PROGLANG[327]
4-8	161-162	:	*[327]	PROGLANG[327]
4-9	162-163	/	*[327]	PROGLANG[327]
4-10	163-164	/	*[327]	PROGLANG[327]
4-11	164-178	img.shields.io	*[327]	PROGLANG[327]
4-12	178-179	/	*[327]	PROGLANG[327]
4-13	179-184	badge	_	_
4-14	184-185	/	_	_
4-15	185-207	License-MIT-yellow.svg	_	_
4-15	193-196	MIT	_	_
4-16	207-208	)	_	_
4-17	208-209	\]	_	_
4-18	209-210	(	_	_
4-19	210-215	https	_	_
4-20	215-216	:	_	_
4-21	216-217	/	_	_
4-22	217-218	/	_	_
4-23	218-232	opensource.org	_	_
4-24	232-233	/	_	_
4-25	233-241	licenses	_	_
4-26	241-242	/	_	_
4-27	242-245	MIT	_	_
4-28	245-246	)	_	_
4-29	247-248	\[	_	_
4-30	248-249	!	_	_

#Text=\[arXiv\](https://img.shields.io/badge/arXiv-2308.12820-b31b1b.svg)\](https://arxiv.org/abs/2308.12820) \[!
5-1	249-250	\[	_	_
5-2	250-255	arXiv	_	_
5-3	255-256	\]	_	_
5-4	256-257	(	_	_
5-5	257-262	https	_	_
5-6	262-263	:	_	_
5-7	263-264	/	_	_
5-8	264-265	/	_	_
5-9	265-279	img.shields.io	_	_
5-10	279-280	/	_	_
5-11	280-285	badge	_	_
5-12	285-286	/	_	_
5-13	286-291	arXiv	_	_
5-14	291-292	-	*[297]	DATASET[297]
5-15	292-302	2308.12820	*[297]	DATASET[297]
5-16	302-303	-	*[297]	DATASET[297]
5-17	303-313	b31b1b.svg	*[297]	DATASET[297]
5-18	313-314	)	*[297]	DATASET[297]
5-19	314-315	\]	_	_
5-20	315-316	(	_	_
5-21	316-321	https	_	_
5-22	321-322	:	_	_
5-23	322-323	/	_	_
5-24	323-324	/	_	_
5-25	324-333	arxiv.org	_	_
5-26	333-334	/	_	_
5-27	334-337	abs	_	_
5-28	337-338	/	_	_
5-29	338-348	2308.12820	_	_
5-30	348-349	)	_	_
5-31	350-351	\[	_	_
5-32	351-352	!	_	_

#Text=\[CI\](https://github.com/ustunb/reachml/actions/workflows/ci.yml/badge.svg?
6-1	352-353	\[	_	_
6-2	353-355	CI	_	_
6-3	355-356	\]	_	_
6-4	356-357	(	_	_
6-5	357-362	https	_	_
6-6	362-363	:	_	_
6-7	363-364	/	_	_
6-8	364-365	/	_	_
6-9	365-375	github.com	_	_
6-10	375-376	/	_	_
6-11	376-382	ustunb	_	_
6-12	382-383	/	_	_
6-13	383-390	reachml	_	_
6-14	390-391	/	_	_
6-15	391-398	actions	_	_
6-16	398-399	/	_	_
6-17	399-408	workflows	_	_
6-18	408-409	/	_	_
6-19	409-415	ci.yml	_	_
6-20	415-416	/	_	_
6-21	416-425	badge.svg	*[315]	EVALMETRIC[315]
6-22	425-426	?	_	_

#Text=branch=main)\](https://github.com/ustunb/reachml/actions/workflows/ci.yml)  `reachml` is a library for recourse verification.  ## Background  \*Recourse\* is the ability of a decision subject to change the prediction of a machine learning model through actions on their features.
7-1	426-432	branch	_	_
7-2	432-433	=	_	_
7-3	433-437	main	_	_
7-4	437-438	)	_	_
7-5	438-439	\]	_	_
7-6	439-440	(	_	_
7-7	440-445	https	_	_
7-8	445-446	:	_	_
7-9	446-447	/	_	_
7-10	447-448	/	_	_
7-11	448-458	github.com	_	_
7-12	458-459	/	_	_
7-13	459-465	ustunb	_	_
7-14	465-466	/	_	_
7-15	466-473	reachml	_	_
7-16	473-474	/	_	_
7-17	474-481	actions	_	_
7-18	481-482	/	_	_
7-19	482-491	workflows	_	_
7-20	491-492	/	_	_
7-21	492-498	ci.yml	_	_
7-22	498-499	)	_	_
7-23	501-502	`	_	_
7-24	502-509	reachml	_	_
7-25	509-510	`	_	_
7-26	511-513	is	_	_
7-27	514-515	a	_	_
7-28	516-523	library	_	_
7-29	524-527	for	_	_
7-30	528-536	recourse	_	_
7-31	537-549	verification	_	_
7-32	549-550	.	_	_
7-33	552-553	#	_	_
7-34	553-554	#	_	_
7-35	555-565	Background	_	_
7-36	567-568	\*	_	_
7-37	568-576	Recourse	_	_
7-38	576-577	\*	_	_
7-39	578-580	is	_	_
7-40	581-584	the	_	_
7-41	585-592	ability	_	_
7-42	593-595	of	_	_
7-43	596-597	a	_	_
7-44	598-606	decision	_	_
7-45	607-614	subject	_	_
7-46	615-617	to	_	_
7-47	618-624	change	_	_
7-48	625-628	the	_	_
7-49	629-639	prediction	_	_
7-50	640-642	of	_	_
7-51	643-644	a	_	_
7-52	645-652	machine	_	_
7-53	653-661	learning	_	_
7-54	662-667	model	_	_
7-55	668-675	through	_	_
7-56	676-683	actions	_	_
7-57	684-686	on	_	_
7-58	687-692	their	_	_
7-59	693-701	features	_	_
7-60	701-702	.	_	_

#Text=\*Recourse verification\* aims to tell if a decision subject is assigned a prediction that is fixed.  ## Installation  You can install the library as follows: ``` pip install "git+https://github.com/ustunb/reachml#egg=reachml\[cplex\]" ```  Many of the functions in `reach-ml` will require \[CPLEX\](https://www.ibm.com/products/ilog-cplex-optimization-studio) to run properly.
8-1	703-704	\*	_	_
8-2	704-712	Recourse	_	_
8-3	713-725	verification	_	_
8-4	725-726	\*	_	_
8-5	727-731	aims	_	_
8-6	732-734	to	_	_
8-7	735-739	tell	_	_
8-8	740-742	if	_	_
8-9	743-744	a	*[303]	PROJECT[303]
8-10	745-753	decision	*[303]	PROJECT[303]
8-11	754-761	subject	*[303]	PROJECT[303]
8-12	762-764	is	*[303]	PROJECT[303]
8-13	765-773	assigned	*[303]	PROJECT[303]
8-14	774-775	a	*[303]	PROJECT[303]
8-15	776-786	prediction	*[303]	PROJECT[303]
8-16	787-791	that	*[303]	PROJECT[303]
8-17	792-794	is	*[303]	PROJECT[303]
8-18	795-800	fixed	*[303]	PROJECT[303]
8-19	800-801	.	*[303]	PROJECT[303]
8-20	803-804	#	*[303]	PROJECT[303]
8-21	804-805	#	*[303]	PROJECT[303]
8-22	806-818	Installation	*[303]	PROJECT[303]
8-23	820-823	You	*[303]	PROJECT[303]
8-24	824-827	can	*[303]	PROJECT[303]
8-25	828-835	install	*[303]	PROJECT[303]
8-26	836-839	the	*[303]	PROJECT[303]
8-27	840-847	library	*[303]	PROJECT[303]
8-28	848-850	as	*[303]	PROJECT[303]
8-29	851-858	follows	*[303]	PROJECT[303]
8-30	858-859	:	*[303]	PROJECT[303]
8-31	860-861	`	*[303]	PROJECT[303]
8-32	861-862	`	*[303]	PROJECT[303]
8-33	862-863	`	*[303]	PROJECT[303]
8-34	864-867	pip	*[303]	PROJECT[303]
8-35	868-875	install	*[303]	PROJECT[303]
8-36	876-877	"	*[303]	PROJECT[303]
8-37	877-880	git	*[303]	PROJECT[303]
8-38	880-881	+	*[303]	PROJECT[303]
8-39	881-886	https	*[303]	PROJECT[303]
8-40	886-887	:	*[303]	PROJECT[303]
8-41	887-888	/	*[303]	PROJECT[303]
8-42	888-889	/	*[303]	PROJECT[303]
8-43	889-899	github.com	*[303]	PROJECT[303]
8-44	899-900	/	*[303]	PROJECT[303]
8-45	900-906	ustunb	*[303]	PROJECT[303]
8-46	906-907	/	*[303]	PROJECT[303]
8-47	907-914	reachml	*[303]	PROJECT[303]
8-48	914-915	#	*[303]	PROJECT[303]
8-49	915-918	egg	*[303]	PROJECT[303]
8-50	918-919	=	*[303]	PROJECT[303]
8-51	919-926	reachml	*[303]	PROJECT[303]
8-52	926-927	\[	*[303]	PROJECT[303]
8-53	927-932	cplex	*[303]	PROJECT[303]
8-54	932-933	\]	*[303]	PROJECT[303]
8-55	933-934	"	*[303]	PROJECT[303]
8-56	935-936	`	*[303]	PROJECT[303]
8-57	936-937	`	*[303]	PROJECT[303]
8-58	937-938	`	*[303]	PROJECT[303]
8-59	940-944	Many	*[303]	PROJECT[303]
8-60	945-947	of	*[303]	PROJECT[303]
8-61	948-951	the	*[303]	PROJECT[303]
8-62	952-961	functions	*[303]	PROJECT[303]
8-63	962-964	in	*[303]	PROJECT[303]
8-64	965-966	`	*[303]	PROJECT[303]
8-65	966-974	reach-ml	*[303]	PROJECT[303]
8-66	974-975	`	*[303]	PROJECT[303]
8-67	976-980	will	_	_
8-68	981-988	require	_	_
8-69	989-990	\[	_	_
8-70	990-995	CPLEX	_	_
8-71	995-996	\]	_	_
8-72	996-997	(	_	_
8-73	997-1002	https	_	_
8-74	1002-1003	:	_	_
8-75	1003-1004	/	_	_
8-76	1004-1005	/	_	_
8-77	1005-1016	www.ibm.com	_	_
8-78	1016-1017	/	_	_
8-79	1017-1025	products	_	_
8-80	1025-1026	/	_	_
8-81	1026-1056	ilog-cplex-optimization-studio	_	_
8-82	1056-1057	)	_	_
8-83	1058-1060	to	_	_
8-84	1061-1064	run	_	_
8-85	1065-1073	properly	_	_
8-86	1073-1074	.	_	_

#Text=The command above will install CPLEX Community Edition.
9-1	1075-1078	The	_	_
9-2	1079-1086	command	_	_
9-3	1087-1092	above	_	_
9-4	1093-1097	will	_	_
9-5	1098-1105	install	_	_
9-6	1106-1111	CPLEX	*[294]	PUBLICATION[294]
9-7	1112-1121	Community	*[294]	PUBLICATION[294]
9-8	1122-1129	Edition	*[294]	PUBLICATION[294]
9-9	1129-1130	.	_	_

#Text=The community edition has a strict limit on the number of constraints it can support.
10-1	1131-1134	The	_	_
10-2	1135-1144	community	_	_
10-3	1145-1152	edition	_	_
10-4	1153-1156	has	_	_
10-5	1157-1158	a	_	_
10-6	1159-1165	strict	_	_
10-7	1166-1171	limit	_	_
10-8	1172-1174	on	_	_
10-9	1175-1178	the	_	_
10-10	1179-1185	number	_	_
10-11	1186-1188	of	_	_
10-12	1189-1200	constraints	_	_
10-13	1201-1203	it	_	_
10-14	1204-1207	can	_	_
10-15	1208-1215	support	_	_
10-16	1215-1216	.	_	_

#Text=To avoid these, you will want install reachml without the cplex option, and download and install the full version of IBM CPLEX \[following these instructions\](https://github.com/ustunb/risk-slim/blob/master/docs/cplex\_instructions.md).  ## Quickstart  The following example shows how to specify actionability constraints using `ActionSet` and to build a database of `ReachableSet` for each point.
11-1	1217-1219	To	_	_
11-2	1220-1225	avoid	_	_
11-3	1226-1231	these	_	_
11-4	1231-1232	,	_	_
11-5	1233-1236	you	_	_
11-6	1237-1241	will	_	_
11-7	1242-1246	want	_	_
11-8	1247-1254	install	_	_
11-9	1255-1262	reachml	_	_
11-10	1263-1270	without	_	_
11-11	1271-1274	the	_	_
11-12	1275-1280	cplex	_	_
11-13	1281-1287	option	_	_
11-14	1287-1288	,	_	_
11-15	1289-1292	and	_	_
11-16	1293-1301	download	_	_
11-17	1302-1305	and	_	_
11-18	1306-1313	install	*[316]	CONFERENCE[316]
11-19	1314-1317	the	*[316]	CONFERENCE[316]
11-20	1318-1322	full	*[316]	CONFERENCE[316]
11-21	1323-1330	version	*[316]	CONFERENCE[316]
11-22	1331-1333	of	*[316]	CONFERENCE[316]
11-23	1334-1337	IBM	*[316]	CONFERENCE[316]
11-24	1338-1343	CPLEX	*[316]	CONFERENCE[316]
11-25	1344-1345	\[	*[316]	CONFERENCE[316]
11-26	1345-1354	following	*[316]	CONFERENCE[316]
11-27	1355-1360	these	*[316]	CONFERENCE[316]
11-28	1361-1373	instructions	*[316]	CONFERENCE[316]
11-29	1373-1374	\]	*[316]	CONFERENCE[316]
11-30	1374-1375	(	*[316]	CONFERENCE[316]
11-31	1375-1380	https	*[316]	CONFERENCE[316]
11-32	1380-1381	:	*[316]	CONFERENCE[316]
11-33	1381-1382	/	*[316]	CONFERENCE[316]
11-34	1382-1383	/	*[316]	CONFERENCE[316]
11-35	1383-1393	github.com	*[316]	CONFERENCE[316]
11-36	1393-1394	/	*[316]	CONFERENCE[316]
11-37	1394-1400	ustunb	_	_
11-38	1400-1401	/	_	_
11-39	1401-1410	risk-slim	_	_
11-40	1410-1411	/	_	_
11-41	1411-1415	blob	_	_
11-42	1415-1416	/	_	_
11-43	1416-1422	master	_	_
11-44	1422-1423	/	_	_
11-45	1423-1427	docs	_	_
11-46	1427-1428	/	_	_
11-47	1428-1449	cplex\_instructions.md	_	_
11-48	1449-1450	)	_	_
11-49	1450-1451	.	_	_
11-50	1453-1454	#	_	_
11-51	1454-1455	#	_	_
11-52	1456-1466	Quickstart	_	_
11-53	1468-1471	The	_	_
11-54	1472-1481	following	_	_
11-55	1482-1489	example	_	_
11-56	1490-1495	shows	_	_
11-57	1496-1499	how	_	_
11-58	1500-1502	to	_	_
11-59	1503-1510	specify	_	_
11-60	1511-1524	actionability	_	_
11-61	1525-1536	constraints	_	_
11-62	1537-1542	using	_	_
11-63	1543-1544	`	_	_
11-64	1544-1553	ActionSet	_	_
11-65	1553-1554	`	_	_
11-66	1555-1558	and	_	_
11-67	1559-1561	to	_	_
11-68	1562-1567	build	_	_
11-69	1568-1569	a	_	_
11-70	1570-1578	database	_	_
11-71	1579-1581	of	_	_
11-72	1582-1583	`	_	_
11-73	1583-1595	ReachableSet	_	_
11-74	1595-1596	`	_	_
11-75	1597-1600	for	_	_
11-76	1601-1605	each	_	_
11-77	1606-1611	point	_	_
11-78	1611-1612	.	_	_

#Text=```python import pandas as pd from reachml import ActionSet, ReachableSet, ReachableDatabase from reachml.constraints import OneHotEncoding, DirectionalLinkage  # feature matrix with 3 points X = pd.DataFrame(     {         "age": \[32, 19, 52\],         "marital\_status": \[1, 0, 0\],         "years\_since\_last\_default": \[5, 0, 21\],         "job\_type\_a": \[0, 1, 1\], # categorical feature with one-hot encoding         "job\_type\_b": \[1, 0, 0\],         "job\_type\_c": \[0, 0, 0\],     } )  # Create an action set action\_set = ActionSet(X)  # `ActionSet` infers the type and bounds on each feature from `X`.
12-1	1614-1615	`	_	_
12-2	1615-1616	`	_	_
12-3	1616-1617	`	_	_
12-4	1617-1623	python	_	_
12-5	1624-1630	import	_	_
12-6	1631-1637	pandas	_	_
12-7	1638-1640	as	_	_
12-8	1641-1643	pd	_	_
12-9	1644-1648	from	_	_
12-10	1649-1656	reachml	_	_
12-11	1657-1663	import	_	_
12-12	1664-1673	ActionSet	_	_
12-13	1673-1674	,	_	_
12-14	1675-1687	ReachableSet	_	_
12-15	1687-1688	,	_	_
12-16	1689-1706	ReachableDatabase	_	_
12-17	1707-1711	from	_	_
12-18	1712-1731	reachml.constraints	_	_
12-18	1712-1719	reachml	_	_
12-19	1732-1738	import	_	_
12-20	1739-1753	OneHotEncoding	_	_
12-21	1753-1754	,	_	_
12-22	1755-1773	DirectionalLinkage	_	_
12-23	1775-1776	#	_	_
12-24	1777-1784	feature	_	_
12-25	1785-1791	matrix	_	_
12-26	1792-1796	with	_	_
12-27	1797-1798	3	_	_
12-28	1799-1805	points	_	_
12-29	1806-1807	X	_	_
12-30	1808-1809	=	_	_
12-31	1810-1822	pd.DataFrame	_	_
12-32	1822-1823	(	_	_
12-33	1828-1829	{	_	_
12-34	1838-1839	"	_	_
12-35	1839-1842	age	_	_
12-36	1842-1843	"	_	_
12-37	1843-1844	:	_	_
12-38	1845-1846	\[	_	_
12-39	1846-1848	32	_	_
12-40	1848-1849	,	_	_
12-41	1850-1852	19	_	_
12-42	1852-1853	,	_	_
12-43	1854-1856	52	_	_
12-44	1856-1857	\]	_	_
12-45	1857-1858	,	_	_
12-46	1867-1868	"	_	_
12-47	1868-1882	marital\_status	_	_
12-48	1882-1883	"	_	_
12-49	1883-1884	:	_	_
12-50	1885-1886	\[	_	_
12-51	1886-1887	1	_	_
12-52	1887-1888	,	_	_
12-53	1889-1890	0	_	_
12-54	1890-1891	,	_	_
12-55	1892-1893	0	_	_
12-56	1893-1894	\]	_	_
12-57	1894-1895	,	_	_
12-58	1904-1905	"	_	_
12-59	1905-1929	years\_since\_last\_default	_	_
12-60	1929-1930	"	_	_
12-61	1930-1931	:	_	_
12-62	1932-1933	\[	_	_
12-63	1933-1934	5	_	_
12-64	1934-1935	,	_	_
12-65	1936-1937	0	_	_
12-66	1937-1938	,	_	_
12-67	1939-1941	21	_	_
12-68	1941-1942	\]	_	_
12-69	1942-1943	,	_	_
12-70	1952-1953	"	_	_
12-71	1953-1963	job\_type\_a	_	_
12-72	1963-1964	"	_	_
12-73	1964-1965	:	_	_
12-74	1966-1967	\[	_	_
12-75	1967-1968	0	_	_
12-76	1968-1969	,	_	_
12-77	1970-1971	1	_	_
12-78	1971-1972	,	_	_
12-79	1973-1974	1	_	_
12-80	1974-1975	\]	_	_
12-81	1975-1976	,	_	_
12-82	1977-1978	#	_	_
12-83	1979-1990	categorical	_	_
12-84	1991-1998	feature	_	_
12-85	1999-2003	with	_	_
12-86	2004-2011	one-hot	_	_
12-87	2012-2020	encoding	*[304]	ONTOLOGY[304]
12-88	2029-2030	"	*[304]	ONTOLOGY[304]
12-89	2030-2040	job\_type\_b	*[304]	ONTOLOGY[304]
12-90	2040-2041	"	*[304]	ONTOLOGY[304]
12-91	2041-2042	:	*[304]	ONTOLOGY[304]
12-92	2043-2044	\[	*[304]	ONTOLOGY[304]
12-93	2044-2045	1	*[304]	ONTOLOGY[304]
12-94	2045-2046	,	*[304]	ONTOLOGY[304]
12-95	2047-2048	0	*[304]	ONTOLOGY[304]
12-96	2048-2049	,	*[304]	ONTOLOGY[304]
12-97	2050-2051	0	*[304]	ONTOLOGY[304]
12-98	2051-2052	\]	*[304]	ONTOLOGY[304]
12-99	2052-2053	,	*[304]	ONTOLOGY[304]
12-100	2062-2063	"	*[304]	ONTOLOGY[304]
12-101	2063-2073	job\_type\_c	*[304]	ONTOLOGY[304]
12-102	2073-2074	"	*[304]	ONTOLOGY[304]
12-103	2074-2075	:	*[304]	ONTOLOGY[304]
12-104	2076-2077	\[	*[304]	ONTOLOGY[304]
12-105	2077-2078	0	*[304]	ONTOLOGY[304]
12-106	2078-2079	,	*[304]	ONTOLOGY[304]
12-107	2080-2081	0	*[304]	ONTOLOGY[304]
12-108	2081-2082	,	*[304]	ONTOLOGY[304]
12-109	2083-2084	0	*[304]	ONTOLOGY[304]
12-110	2084-2085	\]	*[304]	ONTOLOGY[304]
12-111	2085-2086	,	_	_
12-112	2091-2092	}	_	_
12-113	2093-2094	)	_	_
12-114	2096-2097	#	_	_
12-115	2098-2104	Create	_	_
12-116	2105-2107	an	_	_
12-117	2108-2114	action	_	_
12-118	2115-2118	set	_	_
12-119	2119-2129	action\_set	_	_
12-120	2130-2131	=	_	_
12-121	2132-2141	ActionSet	_	_
12-122	2141-2142	(	_	_
12-123	2142-2143	X	_	_
12-124	2143-2144	)	_	_
12-125	2146-2147	#	_	_
12-126	2148-2149	`	_	_
12-127	2149-2158	ActionSet	_	_
12-128	2158-2159	`	_	_
12-129	2160-2166	infers	_	_
12-130	2167-2170	the	_	_
12-131	2171-2175	type	_	_
12-132	2176-2179	and	_	_
12-133	2180-2186	bounds	_	_
12-134	2187-2189	on	_	_
12-135	2190-2194	each	_	_
12-136	2195-2202	feature	_	_
12-137	2203-2207	from	_	_
12-138	2208-2209	`	_	_
12-139	2209-2210	X	_	_
12-140	2210-2211	`	_	_
12-141	2211-2212	.	_	_

#Text=To see them: print(action\_set)  ## print(action\_set) should return the following output ##+---+--------------------------+--------+------------+----+----+----------------+---------+---------+ ##\|   \| name                     \|  type  \| actionable \| lb \| ub \| step\_direction \| step\_ub \| step\_lb \| ##+---+--------------------------+--------+------------+----+----+----------------+---------+---------+ ##\| 0 \| age                      \| <int>  \|   False    \| 19 \| 52 \|              0 \|         \|         \| ##\| 1 \| marital\_status           \| <bool> \|   False    \| 0  \| 1  \|              0 \|         \|         \| ##\| 2 \| years\_since\_last\_default \| <int>  \|    True    \| 0  \| 21 \|              1 \|         \|         \| ##\| 3 \| job\_type\_a               \| <bool> \|    True    \| 0  \| 1  \|              0 \|         \|         \| ##\| 4 \| job\_type\_b               \| <bool> \|    True    \| 0  \| 1  \|              0 \|         \|         \| ##\| 5 \| job\_type\_c               \| <bool> \|    True    \| 0  \| 1  \|              0 \|         \|         \| ##+---+--------------------------+--------+------------+----+----+----------------+---------+---------+  # Specify constraints on individual features action\_set\[\["age", "marital\_status"\]\].actionable = False # these features cannot or should not change action\_set\["years\_since\_last\_default"\].ub = 100 # set maximum value of feature to 100 action\_set\["years\_since\_last\_default"\].step\_direction = 1 # actions can only increase value action\_set\["years\_since\_last\_default"\].step\_ub = 1 # limit actions to changes value by 1  # Specify constraint to maintain one hot-encoding on `job\_type` action\_set.constraints.add(     constraint=OneHotEncoding(names=\["job\_type\_a", "job\_type\_b", "job\_type\_c"\]) )  # Specify deterministic causal relationships # if `years\_since\_last\_default` increases, then `age` must increase commensurately # This will force `age` to change even though it is not immediately actionable action\_set.constraints.add(     constraint=DirectionalLinkage(         names=\["years\_since\_last\_default", "age"\], scales=\[1, 1\]     ) )  # Check that `ActionSet` is consistent with observed data # For example, if features must obey one-hot encoding, this should be the case for X assert action\_set.validate(X)  # Build a database of reachable sets for all points db = ReachableSetDatabase(action\_set, path="reachable\_db.h5") #database stored in file `.
13-1	2213-2215	To	_	_
13-2	2216-2219	see	_	_
13-3	2220-2224	them	_	_
13-4	2224-2225	:	_	_
13-5	2226-2231	print	_	_
13-6	2231-2232	(	_	_
13-7	2232-2242	action\_set	_	_
13-8	2242-2243	)	_	_
13-9	2245-2246	#	_	_
13-10	2246-2247	#	_	_
13-11	2248-2253	print	_	_
13-12	2253-2254	(	_	_
13-13	2254-2264	action\_set	_	_
13-14	2264-2265	)	_	_
13-15	2266-2272	should	_	_
13-16	2273-2279	return	_	_
13-17	2280-2283	the	_	_
13-18	2284-2293	following	_	_
13-19	2294-2300	output	_	_
13-20	2301-2302	#	_	_
13-21	2302-2303	#	_	_
13-22	2303-2304	+	_	_
13-23	2304-2305	-	_	_
13-24	2305-2306	-	_	_
13-25	2306-2307	-	_	_
13-26	2307-2308	+	_	_
13-27	2308-2309	-	_	_
13-28	2309-2310	-	_	_
13-29	2310-2311	-	_	_
13-30	2311-2312	-	_	_
13-31	2312-2313	-	_	_
13-32	2313-2314	-	_	_
13-33	2314-2315	-	_	_
13-34	2315-2316	-	_	_
13-35	2316-2317	-	_	_
13-36	2317-2318	-	_	_
13-37	2318-2319	-	_	_
13-38	2319-2320	-	_	_
13-39	2320-2321	-	_	_
13-40	2321-2322	-	_	_
13-41	2322-2323	-	_	_
13-42	2323-2324	-	_	_
13-43	2324-2325	-	_	_
13-44	2325-2326	-	_	_
13-45	2326-2327	-	_	_
13-46	2327-2328	-	_	_
13-47	2328-2329	-	_	_
13-48	2329-2330	-	_	_
13-49	2330-2331	-	_	_
13-50	2331-2332	-	_	_
13-51	2332-2333	-	_	_
13-52	2333-2334	-	_	_
13-53	2334-2335	+	_	_
13-54	2335-2336	-	_	_
13-55	2336-2337	-	_	_
13-56	2337-2338	-	_	_
13-57	2338-2339	-	_	_
13-58	2339-2340	-	_	_
13-59	2340-2341	-	_	_
13-60	2341-2342	-	_	_
13-61	2342-2343	-	_	_
13-62	2343-2344	+	_	_
13-63	2344-2345	-	_	_
13-64	2345-2346	-	_	_
13-65	2346-2347	-	_	_
13-66	2347-2348	-	_	_
13-67	2348-2349	-	_	_
13-68	2349-2350	-	_	_
13-69	2350-2351	-	_	_
13-70	2351-2352	-	_	_
13-71	2352-2353	-	_	_
13-72	2353-2354	-	_	_
13-73	2354-2355	-	_	_
13-74	2355-2356	-	_	_
13-75	2356-2357	+	_	_
13-76	2357-2358	-	_	_
13-77	2358-2359	-	_	_
13-78	2359-2360	-	_	_
13-79	2360-2361	-	_	_
13-80	2361-2362	+	_	_
13-81	2362-2363	-	_	_
13-82	2363-2364	-	_	_
13-83	2364-2365	-	_	_
13-84	2365-2366	-	_	_
13-85	2366-2367	+	_	_
13-86	2367-2368	-	_	_
13-87	2368-2369	-	_	_
13-88	2369-2370	-	_	_
13-89	2370-2371	-	_	_
13-90	2371-2372	-	_	_
13-91	2372-2373	-	_	_
13-92	2373-2374	-	_	_
13-93	2374-2375	-	_	_
13-94	2375-2376	-	_	_
13-95	2376-2377	-	_	_
13-96	2377-2378	-	_	_
13-97	2378-2379	-	_	_
13-98	2379-2380	-	_	_
13-99	2380-2381	-	_	_
13-100	2381-2382	-	_	_
13-101	2382-2383	-	_	_
13-102	2383-2384	+	_	_
13-103	2384-2385	-	_	_
13-104	2385-2386	-	_	_
13-105	2386-2387	-	_	_
13-106	2387-2388	-	_	_
13-107	2388-2389	-	_	_
13-108	2389-2390	-	_	_
13-109	2390-2391	-	_	_
13-110	2391-2392	-	_	_
13-111	2392-2393	-	_	_
13-112	2393-2394	+	_	_
13-113	2394-2395	-	_	_
13-114	2395-2396	-	_	_
13-115	2396-2397	-	_	_
13-116	2397-2398	-	_	_
13-117	2398-2399	-	_	_
13-118	2399-2400	-	_	_
13-119	2400-2401	-	_	_
13-120	2401-2402	-	_	_
13-121	2402-2403	-	_	_
13-122	2403-2404	+	_	_
13-123	2405-2406	#	_	_
13-124	2406-2407	#	_	_
13-125	2407-2408	\|	_	_
13-126	2411-2412	\|	_	_
13-127	2413-2417	name	_	_
13-128	2438-2439	\|	_	_
13-129	2441-2445	type	_	_
13-130	2447-2448	\|	_	_
13-131	2449-2459	actionable	_	_
13-132	2460-2461	\|	_	_
13-133	2462-2464	lb	_	_
13-134	2465-2466	\|	_	_
13-135	2467-2469	ub	_	_
13-136	2470-2471	\|	_	_
13-137	2472-2486	step\_direction	_	_
13-138	2487-2488	\|	_	_
13-139	2489-2496	step\_ub	_	_
13-140	2497-2498	\|	_	_
13-141	2499-2506	step\_lb	_	_
13-142	2507-2508	\|	_	_
13-143	2509-2510	#	_	_
13-144	2510-2511	#	_	_
13-145	2511-2512	+	_	_
13-146	2512-2513	-	_	_
13-147	2513-2514	-	_	_
13-148	2514-2515	-	_	_
13-149	2515-2516	+	_	_
13-150	2516-2517	-	_	_
13-151	2517-2518	-	_	_
13-152	2518-2519	-	_	_
13-153	2519-2520	-	_	_
13-154	2520-2521	-	_	_
13-155	2521-2522	-	_	_
13-156	2522-2523	-	_	_
13-157	2523-2524	-	_	_
13-158	2524-2525	-	_	_
13-159	2525-2526	-	_	_
13-160	2526-2527	-	_	_
13-161	2527-2528	-	_	_
13-162	2528-2529	-	_	_
13-163	2529-2530	-	_	_
13-164	2530-2531	-	_	_
13-165	2531-2532	-	_	_
13-166	2532-2533	-	_	_
13-167	2533-2534	-	_	_
13-168	2534-2535	-	_	_
13-169	2535-2536	-	_	_
13-170	2536-2537	-	_	_
13-171	2537-2538	-	_	_
13-172	2538-2539	-	_	_
13-173	2539-2540	-	_	_
13-174	2540-2541	-	_	_
13-175	2541-2542	-	_	_
13-176	2542-2543	+	_	_
13-177	2543-2544	-	_	_
13-178	2544-2545	-	_	_
13-179	2545-2546	-	_	_
13-180	2546-2547	-	_	_
13-181	2547-2548	-	_	_
13-182	2548-2549	-	_	_
13-183	2549-2550	-	_	_
13-184	2550-2551	-	_	_
13-185	2551-2552	+	_	_
13-186	2552-2553	-	_	_
13-187	2553-2554	-	_	_
13-188	2554-2555	-	_	_
13-189	2555-2556	-	_	_
13-190	2556-2557	-	_	_
13-191	2557-2558	-	_	_
13-192	2558-2559	-	_	_
13-193	2559-2560	-	_	_
13-194	2560-2561	-	_	_
13-195	2561-2562	-	_	_
13-196	2562-2563	-	_	_
13-197	2563-2564	-	_	_
13-198	2564-2565	+	_	_
13-199	2565-2566	-	_	_
13-200	2566-2567	-	_	_
13-201	2567-2568	-	_	_
13-202	2568-2569	-	_	_
13-203	2569-2570	+	_	_
13-204	2570-2571	-	_	_
13-205	2571-2572	-	_	_
13-206	2572-2573	-	_	_
13-207	2573-2574	-	_	_
13-208	2574-2575	+	_	_
13-209	2575-2576	-	_	_
13-210	2576-2577	-	_	_
13-211	2577-2578	-	_	_
13-212	2578-2579	-	_	_
13-213	2579-2580	-	_	_
13-214	2580-2581	-	_	_
13-215	2581-2582	-	_	_
13-216	2582-2583	-	_	_
13-217	2583-2584	-	_	_
13-218	2584-2585	-	_	_
13-219	2585-2586	-	_	_
13-220	2586-2587	-	_	_
13-221	2587-2588	-	_	_
13-222	2588-2589	-	_	_
13-223	2589-2590	-	_	_
13-224	2590-2591	-	_	_
13-225	2591-2592	+	_	_
13-226	2592-2593	-	_	_
13-227	2593-2594	-	_	_
13-228	2594-2595	-	_	_
13-229	2595-2596	-	_	_
13-230	2596-2597	-	_	_
13-231	2597-2598	-	_	_
13-232	2598-2599	-	_	_
13-233	2599-2600	-	_	_
13-234	2600-2601	-	_	_
13-235	2601-2602	+	_	_
13-236	2602-2603	-	_	_
13-237	2603-2604	-	_	_
13-238	2604-2605	-	_	_
13-239	2605-2606	-	_	_
13-240	2606-2607	-	_	_
13-241	2607-2608	-	_	_
13-242	2608-2609	-	_	_
13-243	2609-2610	-	_	_
13-244	2610-2611	-	_	_
13-245	2611-2612	+	_	_
13-246	2613-2614	#	_	_
13-247	2614-2615	#	_	_
13-248	2615-2616	\|	_	_
13-249	2617-2618	0	_	_
13-250	2619-2620	\|	_	_
13-251	2621-2624	age	_	_
13-252	2646-2647	\|	_	_
13-253	2648-2649	<	_	_
13-254	2649-2652	int	_	_
13-255	2652-2653	>	_	_
13-256	2655-2656	\|	_	_
13-257	2659-2664	False	_	_
13-258	2668-2669	\|	_	_
13-259	2670-2672	19	_	_
13-260	2673-2674	\|	_	_
13-261	2675-2677	52	_	_
13-262	2678-2679	\|	_	_
13-263	2693-2694	0	_	_
13-264	2695-2696	\|	_	_
13-265	2705-2706	\|	_	_
13-266	2715-2716	\|	_	_
13-267	2717-2718	#	_	_
13-268	2718-2719	#	_	_
13-269	2719-2720	\|	_	_
13-270	2721-2722	1	_	_
13-271	2723-2724	\|	_	_
13-272	2725-2739	marital\_status	_	_
13-273	2750-2751	\|	_	_
13-274	2752-2753	<	_	_
13-275	2753-2757	bool	_	_
13-276	2757-2758	>	_	_
13-277	2759-2760	\|	_	_
13-278	2763-2768	False	_	_
13-279	2772-2773	\|	_	_
13-280	2774-2775	0	_	_
13-281	2777-2778	\|	_	_
13-282	2779-2780	1	_	_
13-283	2782-2783	\|	_	_
13-284	2797-2798	0	_	_
13-285	2799-2800	\|	_	_
13-286	2809-2810	\|	_	_
13-287	2819-2820	\|	_	_
13-288	2821-2822	#	_	_
13-289	2822-2823	#	_	_
13-290	2823-2824	\|	_	_
13-291	2825-2826	2	_	_
13-292	2827-2828	\|	_	_
13-293	2829-2853	years\_since\_last\_default	_	_
13-294	2854-2855	\|	_	_
13-295	2856-2857	<	_	_
13-296	2857-2860	int	_	_
13-297	2860-2861	>	_	_
13-298	2863-2864	\|	_	_
13-299	2868-2872	True	_	_
13-300	2876-2877	\|	_	_
13-301	2878-2879	0	_	_
13-302	2881-2882	\|	_	_
13-303	2883-2885	21	_	_
13-304	2886-2887	\|	_	_
13-305	2901-2902	1	_	_
13-306	2903-2904	\|	_	_
13-307	2913-2914	\|	_	_
13-308	2923-2924	\|	_	_
13-309	2925-2926	#	_	_
13-310	2926-2927	#	_	_
13-311	2927-2928	\|	_	_
13-312	2929-2930	3	_	_
13-313	2931-2932	\|	_	_
13-314	2933-2943	job\_type\_a	_	_
13-315	2958-2959	\|	_	_
13-316	2960-2961	<	_	_
13-317	2961-2965	bool	_	_
13-318	2965-2966	>	_	_
13-319	2967-2968	\|	_	_
13-320	2972-2976	True	_	_
13-321	2980-2981	\|	_	_
13-322	2982-2983	0	_	_
13-323	2985-2986	\|	_	_
13-324	2987-2988	1	_	_
13-325	2990-2991	\|	_	_
13-326	3005-3006	0	_	_
13-327	3007-3008	\|	_	_
13-328	3017-3018	\|	_	_
13-329	3027-3028	\|	_	_
13-330	3029-3030	#	_	_
13-331	3030-3031	#	_	_
13-332	3031-3032	\|	_	_
13-333	3033-3034	4	_	_
13-334	3035-3036	\|	_	_
13-335	3037-3047	job\_type\_b	_	_
13-336	3062-3063	\|	_	_
13-337	3064-3065	<	_	_
13-338	3065-3069	bool	_	_
13-339	3069-3070	>	_	_
13-340	3071-3072	\|	_	_
13-341	3076-3080	True	_	_
13-342	3084-3085	\|	_	_
13-343	3086-3087	0	_	_
13-344	3089-3090	\|	_	_
13-345	3091-3092	1	_	_
13-346	3094-3095	\|	_	_
13-347	3109-3110	0	_	_
13-348	3111-3112	\|	_	_
13-349	3121-3122	\|	_	_
13-350	3131-3132	\|	_	_
13-351	3133-3134	#	_	_
13-352	3134-3135	#	_	_
13-353	3135-3136	\|	_	_
13-354	3137-3138	5	_	_
13-355	3139-3140	\|	_	_
13-356	3141-3151	job\_type\_c	_	_
13-357	3166-3167	\|	_	_
13-358	3168-3169	<	_	_
13-359	3169-3173	bool	_	_
13-360	3173-3174	>	_	_
13-361	3175-3176	\|	_	_
13-362	3180-3184	True	_	_
13-363	3188-3189	\|	_	_
13-364	3190-3191	0	_	_
13-365	3193-3194	\|	_	_
13-366	3195-3196	1	_	_
13-367	3198-3199	\|	_	_
13-368	3213-3214	0	_	_
13-369	3215-3216	\|	_	_
13-370	3225-3226	\|	_	_
13-371	3235-3236	\|	_	_
13-372	3237-3238	#	_	_
13-373	3238-3239	#	_	_
13-374	3239-3240	+	_	_
13-375	3240-3241	-	_	_
13-376	3241-3242	-	_	_
13-377	3242-3243	-	_	_
13-378	3243-3244	+	_	_
13-379	3244-3245	-	_	_
13-380	3245-3246	-	_	_
13-381	3246-3247	-	_	_
13-382	3247-3248	-	_	_
13-383	3248-3249	-	_	_
13-384	3249-3250	-	_	_
13-385	3250-3251	-	_	_
13-386	3251-3252	-	_	_
13-387	3252-3253	-	_	_
13-388	3253-3254	-	_	_
13-389	3254-3255	-	_	_
13-390	3255-3256	-	_	_
13-391	3256-3257	-	_	_
13-392	3257-3258	-	_	_
13-393	3258-3259	-	_	_
13-394	3259-3260	-	_	_
13-395	3260-3261	-	_	_
13-396	3261-3262	-	_	_
13-397	3262-3263	-	_	_
13-398	3263-3264	-	_	_
13-399	3264-3265	-	_	_
13-400	3265-3266	-	_	_
13-401	3266-3267	-	_	_
13-402	3267-3268	-	_	_
13-403	3268-3269	-	_	_
13-404	3269-3270	-	_	_
13-405	3270-3271	+	_	_
13-406	3271-3272	-	_	_
13-407	3272-3273	-	_	_
13-408	3273-3274	-	_	_
13-409	3274-3275	-	_	_
13-410	3275-3276	-	_	_
13-411	3276-3277	-	_	_
13-412	3277-3278	-	_	_
13-413	3278-3279	-	_	_
13-414	3279-3280	+	_	_
13-415	3280-3281	-	_	_
13-416	3281-3282	-	_	_
13-417	3282-3283	-	_	_
13-418	3283-3284	-	_	_
13-419	3284-3285	-	_	_
13-420	3285-3286	-	_	_
13-421	3286-3287	-	_	_
13-422	3287-3288	-	_	_
13-423	3288-3289	-	_	_
13-424	3289-3290	-	_	_
13-425	3290-3291	-	_	_
13-426	3291-3292	-	_	_
13-427	3292-3293	+	_	_
13-428	3293-3294	-	_	_
13-429	3294-3295	-	_	_
13-430	3295-3296	-	_	_
13-431	3296-3297	-	_	_
13-432	3297-3298	+	_	_
13-433	3298-3299	-	_	_
13-434	3299-3300	-	_	_
13-435	3300-3301	-	_	_
13-436	3301-3302	-	_	_
13-437	3302-3303	+	_	_
13-438	3303-3304	-	_	_
13-439	3304-3305	-	_	_
13-440	3305-3306	-	_	_
13-441	3306-3307	-	_	_
13-442	3307-3308	-	_	_
13-443	3308-3309	-	_	_
13-444	3309-3310	-	_	_
13-445	3310-3311	-	_	_
13-446	3311-3312	-	_	_
13-447	3312-3313	-	_	_
13-448	3313-3314	-	_	_
13-449	3314-3315	-	_	_
13-450	3315-3316	-	_	_
13-451	3316-3317	-	_	_
13-452	3317-3318	-	_	_
13-453	3318-3319	-	_	_
13-454	3319-3320	+	_	_
13-455	3320-3321	-	_	_
13-456	3321-3322	-	_	_
13-457	3322-3323	-	_	_
13-458	3323-3324	-	_	_
13-459	3324-3325	-	_	_
13-460	3325-3326	-	_	_
13-461	3326-3327	-	_	_
13-462	3327-3328	-	_	_
13-463	3328-3329	-	_	_
13-464	3329-3330	+	_	_
13-465	3330-3331	-	_	_
13-466	3331-3332	-	_	_
13-467	3332-3333	-	_	_
13-468	3333-3334	-	_	_
13-469	3334-3335	-	_	_
13-470	3335-3336	-	_	_
13-471	3336-3337	-	_	_
13-472	3337-3338	-	_	_
13-473	3338-3339	-	_	_
13-474	3339-3340	+	_	_
13-475	3342-3343	#	_	_
13-476	3344-3351	Specify	_	_
13-477	3352-3363	constraints	_	_
13-478	3364-3366	on	_	_
13-479	3367-3377	individual	_	_
13-480	3378-3386	features	_	_
13-481	3387-3397	action\_set	_	_
13-482	3397-3398	\[	_	_
13-483	3398-3399	\[	_	_
13-484	3399-3400	"	_	_
13-485	3400-3403	age	_	_
13-486	3403-3404	"	_	_
13-487	3404-3405	,	_	_
13-488	3406-3407	"	_	_
13-489	3407-3421	marital\_status	_	_
13-490	3421-3422	"	_	_
13-491	3422-3423	\]	_	_
13-492	3423-3424	\]	_	_
13-493	3424-3425	.	_	_
13-494	3425-3435	actionable	_	_
13-495	3436-3437	=	_	_
13-496	3438-3443	False	_	_
13-497	3444-3445	#	_	_
13-498	3446-3451	these	_	_
13-499	3452-3460	features	_	_
13-500	3461-3467	cannot	_	_
13-501	3468-3470	or	_	_
13-502	3471-3477	should	_	_
13-503	3478-3481	not	_	_
13-504	3482-3488	change	_	_
13-505	3489-3499	action\_set	_	_
13-506	3499-3500	\[	_	_
13-507	3500-3501	"	_	_
13-508	3501-3525	years\_since\_last\_default	_	_
13-509	3525-3526	"	_	_
13-510	3526-3527	\]	_	_
13-511	3527-3528	.	_	_
13-512	3528-3530	ub	_	_
13-513	3531-3532	=	_	_
13-514	3533-3536	100	_	_
13-515	3537-3538	#	_	_
13-516	3539-3542	set	_	_
13-517	3543-3550	maximum	_	_
13-518	3551-3556	value	_	_
13-519	3557-3559	of	_	_
13-520	3560-3567	feature	_	_
13-521	3568-3570	to	_	_
13-522	3571-3574	100	_	_
13-523	3575-3585	action\_set	_	_
13-524	3585-3586	\[	_	_
13-525	3586-3587	"	_	_
13-526	3587-3611	years\_since\_last\_default	_	_
13-527	3611-3612	"	_	_
13-528	3612-3613	\]	_	_
13-529	3613-3614	.	_	_
13-530	3614-3628	step\_direction	_	_
13-531	3629-3630	=	_	_
13-532	3631-3632	1	_	_
13-533	3633-3634	#	_	_
13-534	3635-3642	actions	_	_
13-535	3643-3646	can	_	_
13-536	3647-3651	only	_	_
13-537	3652-3660	increase	_	_
13-538	3661-3666	value	_	_
13-539	3667-3677	action\_set	_	_
13-540	3677-3678	\[	_	_
13-541	3678-3679	"	_	_
13-542	3679-3703	years\_since\_last\_default	_	_
13-543	3703-3704	"	_	_
13-544	3704-3705	\]	_	_
13-545	3705-3706	.	_	_
13-546	3706-3713	step\_ub	_	_
13-547	3714-3715	=	_	_
13-548	3716-3717	1	_	_
13-549	3718-3719	#	_	_
13-550	3720-3725	limit	_	_
13-551	3726-3733	actions	_	_
13-552	3734-3736	to	_	_
13-553	3737-3744	changes	_	_
13-554	3745-3750	value	_	_
13-555	3751-3753	by	_	_
13-556	3754-3755	1	_	_
13-557	3757-3758	#	_	_
13-558	3759-3766	Specify	_	_
13-559	3767-3777	constraint	_	_
13-560	3778-3780	to	_	_
13-561	3781-3789	maintain	_	_
13-562	3790-3793	one	_	_
13-563	3794-3806	hot-encoding	_	_
13-564	3807-3809	on	_	_
13-565	3810-3811	`	_	_
13-566	3811-3819	job\_type	_	_
13-567	3819-3820	`	_	_
13-568	3821-3847	action\_set.constraints.add	_	_
13-569	3847-3848	(	_	_
13-570	3853-3863	constraint	_	_
13-571	3863-3864	=	_	_
13-572	3864-3878	OneHotEncoding	_	_
13-573	3878-3879	(	_	_
13-574	3879-3884	names	_	_
13-575	3884-3885	=	_	_
13-576	3885-3886	\[	_	_
13-577	3886-3887	"	_	_
13-578	3887-3897	job\_type\_a	_	_
13-579	3897-3898	"	_	_
13-580	3898-3899	,	_	_
13-581	3900-3901	"	_	_
13-582	3901-3911	job\_type\_b	_	_
13-583	3911-3912	"	_	_
13-584	3912-3913	,	_	_
13-585	3914-3915	"	_	_
13-586	3915-3925	job\_type\_c	_	_
13-587	3925-3926	"	_	_
13-588	3926-3927	\]	_	_
13-589	3927-3928	)	_	_
13-590	3929-3930	)	_	_
13-591	3932-3933	#	_	_
13-592	3934-3941	Specify	_	_
13-593	3942-3955	deterministic	_	_
13-594	3956-3962	causal	_	_
13-595	3963-3976	relationships	_	_
13-596	3977-3978	#	_	_
13-597	3979-3981	if	_	_
13-598	3982-3983	`	_	_
13-599	3983-4007	years\_since\_last\_default	_	_
13-600	4007-4008	`	_	_
13-601	4009-4018	increases	_	_
13-602	4018-4019	,	_	_
13-603	4020-4024	then	_	_
13-604	4025-4026	`	_	_
13-605	4026-4029	age	_	_
13-606	4029-4030	`	_	_
13-607	4031-4035	must	_	_
13-608	4036-4044	increase	_	_
13-609	4045-4059	commensurately	_	_
13-610	4060-4061	#	_	_
13-611	4062-4066	This	_	_
13-612	4067-4071	will	_	_
13-613	4072-4077	force	_	_
13-614	4078-4079	`	_	_
13-615	4079-4082	age	_	_
13-616	4082-4083	`	_	_
13-617	4084-4086	to	_	_
13-618	4087-4093	change	_	_
13-619	4094-4098	even	_	_
13-620	4099-4105	though	_	_
13-621	4106-4108	it	_	_
13-622	4109-4111	is	_	_
13-623	4112-4115	not	_	_
13-624	4116-4127	immediately	_	_
13-625	4128-4138	actionable	_	_
13-626	4139-4165	action\_set.constraints.add	_	_
13-627	4165-4166	(	_	_
13-628	4171-4181	constraint	_	_
13-629	4181-4182	=	_	_
13-630	4182-4200	DirectionalLinkage	_	_
13-631	4200-4201	(	_	_
13-632	4210-4215	names	_	_
13-633	4215-4216	=	_	_
13-634	4216-4217	\[	_	_
13-635	4217-4218	"	_	_
13-636	4218-4242	years\_since\_last\_default	_	_
13-637	4242-4243	"	_	_
13-638	4243-4244	,	_	_
13-639	4245-4246	"	_	_
13-640	4246-4249	age	_	_
13-641	4249-4250	"	_	_
13-642	4250-4251	\]	_	_
13-643	4251-4252	,	_	_
13-644	4253-4259	scales	_	_
13-645	4259-4260	=	_	_
13-646	4260-4261	\[	_	_
13-647	4261-4262	1	_	_
13-648	4262-4263	,	_	_
13-649	4264-4265	1	_	_
13-650	4265-4266	\]	_	_
13-651	4271-4272	)	_	_
13-652	4273-4274	)	_	_
13-653	4276-4277	#	_	_
13-654	4278-4283	Check	_	_
13-655	4284-4288	that	_	_
13-656	4289-4290	`	_	_
13-657	4290-4299	ActionSet	_	_
13-658	4299-4300	`	_	_
13-659	4301-4303	is	_	_
13-660	4304-4314	consistent	_	_
13-661	4315-4319	with	_	_
13-662	4320-4328	observed	_	_
13-663	4329-4333	data	_	_
13-664	4334-4335	#	_	_
13-665	4336-4339	For	_	_
13-666	4340-4347	example	_	_
13-667	4347-4348	,	_	_
13-668	4349-4351	if	_	_
13-669	4352-4360	features	_	_
13-670	4361-4365	must	_	_
13-671	4366-4370	obey	_	_
13-672	4371-4378	one-hot	_	_
13-673	4379-4387	encoding	_	_
13-674	4387-4388	,	_	_
13-675	4389-4393	this	_	_
13-676	4394-4400	should	_	_
13-677	4401-4403	be	_	_
13-678	4404-4407	the	_	_
13-679	4408-4412	case	_	_
13-680	4413-4416	for	_	_
13-681	4417-4418	X	_	_
13-682	4419-4425	assert	_	_
13-683	4426-4445	action\_set.validate	_	_
13-684	4445-4446	(	_	_
13-685	4446-4447	X	_	_
13-686	4447-4448	)	_	_
13-687	4450-4451	#	_	_
13-688	4452-4457	Build	_	_
13-689	4458-4459	a	_	_
13-690	4460-4468	database	_	_
13-691	4469-4471	of	_	_
13-692	4472-4481	reachable	_	_
13-693	4482-4486	sets	_	_
13-694	4487-4490	for	_	_
13-695	4491-4494	all	_	_
13-696	4495-4501	points	_	_
13-697	4502-4504	db	_	_
13-698	4505-4506	=	_	_
13-699	4507-4527	ReachableSetDatabase	_	_
13-700	4527-4528	(	_	_
13-701	4528-4538	action\_set	_	_
13-702	4538-4539	,	_	_
13-703	4540-4544	path	_	_
13-704	4544-4545	=	_	_
13-705	4545-4546	"	_	_
13-706	4546-4561	reachable\_db.h5	_	_
13-707	4561-4562	"	*[320]	LICENSE[320]
13-708	4562-4563	)	*[320]	LICENSE[320]
13-709	4564-4565	#	*[320]	LICENSE[320]
13-710	4565-4573	database	*[320]	LICENSE[320]
13-711	4574-4580	stored	*[320]	LICENSE[320]
13-712	4581-4583	in	*[320]	LICENSE[320]
13-713	4584-4588	file	*[320]	LICENSE[320]
13-714	4589-4590	`	*[320]	LICENSE[320]
13-715	4590-4591	.	_	_

#Text=/reachable\_db.h5` db.generate(data, overwrite=True)  # Pull reachable set for first point in dataset x = data.iloc\[0\] reachable\_set = db\[x\] print(reachable\_set) # should return the following output: ##    age  marital\_status  years\_since\_last\_default  job\_type\_a  job\_type\_b  job\_type\_c ## 0  32.0             1.0                       5.0         0.0         1.0         0.0 ## 1  32.0             1.0                       5.0         0.0         0.0         1.0 ## 2  32.0             1.0                       5.0         1.0         0.0         0.0 ## 3  33.0             1.0                       6.0         0.0         0.0         1.0 ## 4  33.0             1.0                       6.0         0.0         1.0         0.0 ## 5  33.0             1.0                       6.0         1.0         0.0         0.0 ``` Given a classifier `clf` with a predict method, you can test if a point has recourse as `np.any(clf.predict(reachable\_set.X))`  For more examples, check out \[this script\](https://github.com/ustunb/reachml/blob/main/research/iclr2024/scripts/setup\_dataset\_actionset\_fico.py) which sets up the action set for the FICO dataset.  ### Resources and Citation  For more about recourse verification, check out our paper ICLR 2024 spotlight paper: \[Prediction without Preclusion\](https://openreview.net/forum?
14-1	4591-4592	/	_	_
14-2	4592-4607	reachable\_db.h5	_	_
14-3	4607-4608	`	_	_
14-4	4609-4620	db.generate	_	_
14-5	4620-4621	(	_	_
14-6	4621-4625	data	_	_
14-7	4625-4626	,	_	_
14-8	4627-4636	overwrite	_	_
14-9	4636-4637	=	_	_
14-10	4637-4641	True	_	_
14-11	4641-4642	)	_	_
14-12	4644-4645	#	_	_
14-13	4646-4650	Pull	_	_
14-14	4651-4660	reachable	_	_
14-15	4661-4664	set	_	_
14-16	4665-4668	for	_	_
14-17	4669-4674	first	_	_
14-18	4675-4680	point	_	_
14-19	4681-4683	in	_	_
14-20	4684-4691	dataset	_	_
14-21	4692-4693	x	_	_
14-22	4694-4695	=	_	_
14-23	4696-4705	data.iloc	_	_
14-24	4705-4706	\[	_	_
14-25	4706-4707	0	_	_
14-26	4707-4708	\]	_	_
14-27	4709-4722	reachable\_set	_	_
14-28	4723-4724	=	_	_
14-29	4725-4727	db	_	_
14-30	4727-4728	\[	_	_
14-31	4728-4729	x	_	_
14-32	4729-4730	\]	_	_
14-33	4731-4736	print	_	_
14-34	4736-4737	(	_	_
14-35	4737-4750	reachable\_set	_	_
14-36	4750-4751	)	_	_
14-37	4752-4753	#	_	_
14-38	4754-4760	should	_	_
14-39	4761-4767	return	_	_
14-40	4768-4771	the	_	_
14-41	4772-4781	following	_	_
14-42	4782-4788	output	_	_
14-43	4788-4789	:	_	_
14-44	4790-4791	#	_	_
14-45	4791-4792	#	_	_
14-46	4796-4799	age	_	_
14-47	4801-4815	marital\_status	_	_
14-48	4817-4841	years\_since\_last\_default	_	_
14-49	4843-4853	job\_type\_a	_	_
14-50	4855-4865	job\_type\_b	_	_
14-51	4867-4877	job\_type\_c	_	_
14-52	4878-4879	#	_	_
14-53	4879-4880	#	_	_
14-54	4881-4882	0	_	_
14-55	4884-4888	32.0	_	_
14-56	4901-4904	1.0	_	_
14-57	4927-4930	5.0	_	_
14-58	4939-4942	0.0	_	_
14-59	4951-4954	1.0	_	_
14-60	4963-4966	0.0	_	_
14-61	4967-4968	#	_	_
14-62	4968-4969	#	_	_
14-63	4970-4971	1	_	_
14-64	4973-4977	32.0	_	_
14-65	4990-4993	1.0	_	_
14-66	5016-5019	5.0	_	_
14-67	5028-5031	0.0	_	_
14-68	5040-5043	0.0	_	_
14-69	5052-5055	1.0	_	_
14-70	5056-5057	#	_	_
14-71	5057-5058	#	_	_
14-72	5059-5060	2	_	_
14-73	5062-5066	32.0	_	_
14-74	5079-5082	1.0	_	_
14-75	5105-5108	5.0	_	_
14-76	5117-5120	1.0	_	_
14-77	5129-5132	0.0	_	_
14-78	5141-5144	0.0	_	_
14-79	5145-5146	#	_	_
14-80	5146-5147	#	_	_
14-81	5148-5149	3	_	_
14-82	5151-5155	33.0	_	_
14-83	5168-5171	1.0	_	_
14-84	5194-5197	6.0	_	_
14-85	5206-5209	0.0	_	_
14-86	5218-5221	0.0	_	_
14-87	5230-5233	1.0	_	_
14-88	5234-5235	#	_	_
14-89	5235-5236	#	_	_
14-90	5237-5238	4	_	_
14-91	5240-5244	33.0	_	_
14-92	5257-5260	1.0	_	_
14-93	5283-5286	6.0	_	_
14-94	5295-5298	0.0	_	_
14-95	5307-5310	1.0	*[317]	EVALMETRIC[317]
14-96	5319-5322	0.0	*[317]	EVALMETRIC[317]
14-97	5323-5324	#	*[317]	EVALMETRIC[317]
14-98	5324-5325	#	*[317]	EVALMETRIC[317]
14-99	5326-5327	5	*[317]	EVALMETRIC[317]
14-100	5329-5333	33.0	*[317]	EVALMETRIC[317]
14-101	5346-5349	1.0	*[317]	EVALMETRIC[317]
14-102	5372-5375	6.0	*[317]	EVALMETRIC[317]
14-103	5384-5387	1.0	*[317]	EVALMETRIC[317]
14-104	5396-5399	0.0	*[317]	EVALMETRIC[317]
14-105	5408-5411	0.0	*[317]	EVALMETRIC[317]
14-106	5412-5413	`	*[317]	EVALMETRIC[317]
14-107	5413-5414	`	*[317]	EVALMETRIC[317]
14-108	5414-5415	`	*[317]	EVALMETRIC[317]
14-109	5416-5421	Given	*[317]	EVALMETRIC[317]
14-110	5422-5423	a	*[317]	EVALMETRIC[317]
14-111	5424-5434	classifier	*[317]	EVALMETRIC[317]
14-112	5435-5436	`	*[317]	EVALMETRIC[317]
14-113	5436-5439	clf	*[317]	EVALMETRIC[317]
14-114	5439-5440	`	*[317]	EVALMETRIC[317]
14-115	5441-5445	with	*[317]	EVALMETRIC[317]
14-116	5446-5447	a	*[317]	EVALMETRIC[317]
14-117	5448-5455	predict	*[317]	EVALMETRIC[317]
14-118	5456-5462	method	*[317]	EVALMETRIC[317]
14-119	5462-5463	,	*[317]	EVALMETRIC[317]
14-120	5464-5467	you	*[317]	EVALMETRIC[317]
14-121	5468-5471	can	*[317]	EVALMETRIC[317]
14-122	5472-5476	test	*[317]	EVALMETRIC[317]
14-123	5477-5479	if	*[317]	EVALMETRIC[317]
14-124	5480-5481	a	*[317]	EVALMETRIC[317]
14-125	5482-5487	point	*[317]	EVALMETRIC[317]
14-126	5488-5491	has	*[317]	EVALMETRIC[317]
14-127	5492-5500	recourse	*[317]	EVALMETRIC[317]
14-128	5501-5503	as	*[317]	EVALMETRIC[317]
14-129	5504-5505	`	*[317]	EVALMETRIC[317]
14-130	5505-5511	np.any	*[317]	EVALMETRIC[317]
14-131	5511-5512	(	*[317]	EVALMETRIC[317]
14-132	5512-5523	clf.predict	*[317]	EVALMETRIC[317]
14-133	5523-5524	(	*[317]	EVALMETRIC[317]
14-134	5524-5539	reachable\_set.X	*[317]	EVALMETRIC[317]
14-135	5539-5540	)	*[317]	EVALMETRIC[317]
14-136	5540-5541	)	*[317]	EVALMETRIC[317]
14-137	5541-5542	`	*[317]	EVALMETRIC[317]
14-138	5544-5547	For	*[317]	EVALMETRIC[317]
14-139	5548-5552	more	*[317]	EVALMETRIC[317]
14-140	5553-5561	examples	*[317]	EVALMETRIC[317]
14-141	5561-5562	,	*[317]	EVALMETRIC[317]
14-142	5563-5568	check	*[317]	EVALMETRIC[317]
14-143	5569-5572	out	*[317]	EVALMETRIC[317]
14-144	5573-5574	\[	*[317]	EVALMETRIC[317]
14-145	5574-5578	this	*[317]	EVALMETRIC[317]
14-146	5579-5585	script	*[317]	EVALMETRIC[317]
14-147	5585-5586	\]	*[317]	EVALMETRIC[317]
14-148	5586-5587	(	*[317]	EVALMETRIC[317]
14-149	5587-5592	https	*[317]	EVALMETRIC[317]
14-150	5592-5593	:	*[317]	EVALMETRIC[317]
14-151	5593-5594	/	*[317]	EVALMETRIC[317]
14-152	5594-5595	/	*[317]	EVALMETRIC[317]
14-153	5595-5605	github.com	*[317]	EVALMETRIC[317]
14-154	5605-5606	/	*[317]	EVALMETRIC[317]
14-155	5606-5612	ustunb	*[317]	EVALMETRIC[317]
14-156	5612-5613	/	*[317]	EVALMETRIC[317]
14-157	5613-5620	reachml	*[317]	EVALMETRIC[317]
14-158	5620-5621	/	*[317]	EVALMETRIC[317]
14-159	5621-5625	blob	*[317]	EVALMETRIC[317]
14-160	5625-5626	/	*[317]	EVALMETRIC[317]
14-161	5626-5630	main	*[317]	EVALMETRIC[317]
14-162	5630-5631	/	*[317]	EVALMETRIC[317]
14-163	5631-5639	research	*[317]	EVALMETRIC[317]
14-164	5639-5640	/	*[317]	EVALMETRIC[317]
14-165	5640-5648	iclr2024	*[317]	EVALMETRIC[317]
14-166	5648-5649	/	*[317]	EVALMETRIC[317]
14-167	5649-5656	scripts	*[317]	EVALMETRIC[317]
14-168	5656-5657	/	*[317]	EVALMETRIC[317]
14-169	5657-5688	setup\_dataset\_actionset\_fico.py	*[317]	EVALMETRIC[317]
14-170	5688-5689	)	*[317]	EVALMETRIC[317]
14-171	5690-5695	which	*[317]	EVALMETRIC[317]
14-172	5696-5700	sets	*[317]	EVALMETRIC[317]
14-173	5701-5703	up	*[317]	EVALMETRIC[317]
14-174	5704-5707	the	*[317]	EVALMETRIC[317]
14-175	5708-5714	action	*[317]	EVALMETRIC[317]
14-176	5715-5718	set	*[317]	EVALMETRIC[317]
14-177	5719-5722	for	*[317]	EVALMETRIC[317]
14-178	5723-5726	the	*[317]	EVALMETRIC[317]
14-179	5727-5731	FICO	*[317]	EVALMETRIC[317]
14-180	5732-5739	dataset	*[317]	EVALMETRIC[317]
14-181	5739-5740	.	*[317]	EVALMETRIC[317]
14-182	5742-5743	#	*[317]	EVALMETRIC[317]
14-183	5743-5744	#	*[317]	EVALMETRIC[317]
14-184	5744-5745	#	*[317]	EVALMETRIC[317]
14-185	5746-5755	Resources	*[317]	EVALMETRIC[317]
14-186	5756-5759	and	*[317]	EVALMETRIC[317]
14-187	5760-5768	Citation	*[317]	EVALMETRIC[317]
14-188	5770-5773	For	*[317]	EVALMETRIC[317]
14-189	5774-5778	more	*[317]	EVALMETRIC[317]
14-190	5779-5784	about	*[317]	EVALMETRIC[317]
14-191	5785-5793	recourse	*[317]	EVALMETRIC[317]
14-192	5794-5806	verification	*[317]	EVALMETRIC[317]
14-193	5806-5807	,	*[317]	EVALMETRIC[317]
14-194	5808-5813	check	*[317]	EVALMETRIC[317]
14-195	5814-5817	out	*[317]	EVALMETRIC[317]
14-196	5818-5821	our	*[317]	EVALMETRIC[317]
14-197	5822-5827	paper	*[317]	EVALMETRIC[317]
14-198	5828-5832	ICLR	*[317]	EVALMETRIC[317]
14-199	5833-5837	2024	*[317]	EVALMETRIC[317]
14-200	5838-5847	spotlight	*[317]	EVALMETRIC[317]
14-201	5848-5853	paper	*[317]	EVALMETRIC[317]
14-202	5853-5854	:	*[317]	EVALMETRIC[317]
14-203	5855-5856	\[	*[317]	EVALMETRIC[317]
14-204	5856-5866	Prediction	*[317]	EVALMETRIC[317]
14-205	5867-5874	without	*[317]	EVALMETRIC[317]
14-206	5875-5885	Preclusion	*[317]	EVALMETRIC[317]
14-207	5885-5886	\]	*[317]	EVALMETRIC[317]
14-208	5886-5887	(	*[317]	EVALMETRIC[317]
14-209	5887-5892	https	*[317]	EVALMETRIC[317]
14-210	5892-5893	:	*[317]	EVALMETRIC[317]
14-211	5893-5894	/	*[317]	EVALMETRIC[317]
14-212	5894-5895	/	*[317]	EVALMETRIC[317]
14-213	5895-5909	openreview.net	*[317]	EVALMETRIC[317]
14-214	5909-5910	/	*[317]	EVALMETRIC[317]
14-215	5910-5915	forum	_	_
14-216	5915-5916	?	_	_

#Text=id=SCQfYpdoGE)  If you use this library in your research, we would appreciate a citation: ``` @inproceedings{kothari2024prediction,     title={Prediction without Preclusion: Recourse Verification with Reachable Sets},     author={Avni Kothari and Bogdan Kulynych and Tsui-Wei Weng and Berk Ustun},     booktitle={The Twelfth International Conference on Learning Representations},     year={2024},     url={https://openreview.net/forum?
15-1	5916-5918	id	_	_
15-2	5918-5919	=	_	_
15-3	5919-5929	SCQfYpdoGE	_	_
15-4	5929-5930	)	_	_
15-5	5932-5934	If	_	_
15-6	5935-5938	you	_	_
15-7	5939-5942	use	_	_
15-8	5943-5947	this	_	_
15-9	5948-5955	library	_	_
15-10	5956-5958	in	_	_
15-11	5959-5963	your	_	_
15-12	5964-5972	research	_	_
15-13	5972-5973	,	_	_
15-14	5974-5976	we	_	_
15-15	5977-5982	would	_	_
15-16	5983-5993	appreciate	_	_
15-17	5994-5995	a	_	_
15-18	5996-6004	citation	_	_
15-19	6004-6005	:	_	_
15-20	6006-6007	`	_	_
15-21	6007-6008	`	_	_
15-22	6008-6009	`	_	_
15-23	6010-6011	@	_	_
15-24	6011-6024	inproceedings	_	_
15-25	6024-6025	{	_	_
15-26	6025-6046	kothari2024prediction	_	_
15-27	6046-6047	,	_	_
15-28	6052-6057	title	_	_
15-29	6057-6058	=	_	_
15-30	6058-6059	{	_	_
15-31	6059-6069	Prediction	_	_
15-32	6070-6077	without	_	_
15-33	6078-6088	Preclusion	_	_
15-34	6088-6089	:	_	_
15-35	6090-6098	Recourse	_	_
15-36	6099-6111	Verification	_	_
15-37	6112-6116	with	_	_
15-38	6117-6126	Reachable	_	_
15-39	6127-6131	Sets	_	_
15-40	6131-6132	}	_	_
15-41	6132-6133	,	_	_
15-42	6138-6144	author	_	_
15-43	6144-6145	=	_	_
15-44	6145-6146	{	_	_
15-45	6146-6150	Avni	_	_
15-46	6151-6158	Kothari	_	_
15-47	6159-6162	and	_	_
15-48	6163-6169	Bogdan	_	_
15-49	6170-6178	Kulynych	_	_
15-50	6179-6182	and	_	_
15-51	6183-6191	Tsui-Wei	_	_
15-52	6192-6196	Weng	_	_
15-53	6197-6200	and	_	_
15-54	6201-6205	Berk	_	_
15-55	6206-6211	Ustun	_	_
15-56	6211-6212	}	_	_
15-57	6212-6213	,	_	_
15-58	6218-6227	booktitle	_	_
15-59	6227-6228	=	_	_
15-60	6228-6229	{	_	_
15-61	6229-6232	The	_	_
15-62	6233-6240	Twelfth	_	_
15-63	6241-6254	International	_	_
15-64	6255-6265	Conference	_	_
15-65	6266-6268	on	_	_
15-66	6269-6277	Learning	_	_
15-67	6278-6293	Representations	_	_
15-68	6293-6294	}	*[318]	EVALMETRIC[318]
15-69	6294-6295	,	*[318]	EVALMETRIC[318]
15-70	6300-6304	year	*[318]	EVALMETRIC[318]
15-71	6304-6305	=	*[318]	EVALMETRIC[318]
15-72	6305-6306	{	*[318]	EVALMETRIC[318]
15-73	6306-6310	2024	_	_
15-74	6310-6311	}	_	_
15-75	6311-6312	,	_	_
15-76	6317-6320	url	_	_
15-77	6320-6321	=	_	_
15-78	6321-6322	{	_	_
15-79	6322-6327	https	_	_
15-80	6327-6328	:	_	_
15-81	6328-6329	/	_	_
15-82	6329-6330	/	_	_
15-83	6330-6344	openreview.net	_	_
15-84	6344-6345	/	_	_
15-85	6345-6350	forum	_	_
15-86	6350-6351	?	_	_

#Text=id=SCQfYpdoGE} } ```  The code for the paper is available under \[research/iclr2024\](https://github.com/ustunb/reachml/tree/main/research/iclr2024/).
16-1	6351-6353	id	_	_
16-2	6353-6354	=	_	_
16-3	6354-6364	SCQfYpdoGE	_	_
16-4	6364-6365	}	_	_
16-5	6366-6367	}	_	_
16-6	6368-6369	`	_	_
16-7	6369-6370	`	_	_
16-8	6370-6371	`	_	_
16-9	6373-6376	The	_	_
16-10	6377-6381	code	_	_
16-11	6382-6385	for	_	_
16-12	6386-6389	the	_	_
16-13	6390-6395	paper	_	_
16-14	6396-6398	is	_	_
16-15	6399-6408	available	_	_
16-16	6409-6414	under	_	_
16-17	6415-6416	\[	_	_
16-18	6416-6424	research	_	_
16-19	6424-6425	/	_	_
16-20	6425-6433	iclr2024	_	_
16-21	6433-6434	\]	_	_
16-22	6434-6435	(	_	_
16-23	6435-6440	https	_	_
16-24	6440-6441	:	_	_
16-25	6441-6442	/	_	_
16-26	6442-6443	/	_	_
16-27	6443-6453	github.com	_	_
16-28	6453-6454	/	*[305]	ONTOLOGY[305]
16-29	6454-6460	ustunb	*[305]	ONTOLOGY[305]
16-30	6460-6461	/	*[305]	ONTOLOGY[305]
16-31	6461-6468	reachml	*[305]	ONTOLOGY[305]
16-32	6468-6469	/	*[305]	ONTOLOGY[305]
16-33	6469-6473	tree	*[305]	ONTOLOGY[305]
16-34	6473-6474	/	*[305]	ONTOLOGY[305]
16-35	6474-6478	main	*[305]	ONTOLOGY[305]
16-36	6478-6479	/	*[305]	ONTOLOGY[305]
16-37	6479-6487	research	*[305]	ONTOLOGY[305]
16-38	6487-6488	/	*[305]	ONTOLOGY[305]
16-39	6488-6496	iclr2024	*[305]	ONTOLOGY[305]
16-40	6496-6497	/	*[305]	ONTOLOGY[305]
16-41	6497-6498	)	_	_
16-42	6498-6499	.	_	_