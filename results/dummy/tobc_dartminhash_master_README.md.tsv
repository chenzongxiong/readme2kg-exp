#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# DartMinHash: Fast Sketching for Weighted Sets  This repository contains experiments for comparing the estimation accuracy and running times of the following weighted minwise hashing algorithms:  \* DartMinHash https://arxiv.org/abs/2005.11547  \* ICWS and FastICWS https://research.google/pubs/pub36928/ \* BagMinHash https://arxiv.org/abs/1802.03914  For BagMinHash and ICWS we use the implementation from here https://github.com/oertl/bagminhash with the relevant files included in the /bagminhash folder.
1-1	0-1	#	_	_
1-2	2-13	DartMinHash	_	_
1-3	13-14	:	_	_
1-4	15-19	Fast	_	_
1-5	20-29	Sketching	_	_
1-6	30-33	for	_	_
1-7	34-42	Weighted	_	_
1-8	43-47	Sets	_	_
1-9	49-53	This	_	_
1-10	54-64	repository	_	_
1-11	65-73	contains	_	_
1-12	74-85	experiments	_	_
1-13	86-89	for	_	_
1-14	90-99	comparing	_	_
1-15	100-103	the	_	_
1-16	104-114	estimation	_	_
1-17	115-123	accuracy	_	_
1-18	124-127	and	_	_
1-19	128-135	running	_	_
1-20	136-141	times	_	_
1-21	142-144	of	_	_
1-22	145-148	the	_	_
1-23	149-158	following	_	_
1-24	159-167	weighted	_	_
1-25	168-175	minwise	_	_
1-26	176-183	hashing	_	_
1-27	184-194	algorithms	_	_
1-28	194-195	:	_	_
1-29	197-198	\*	_	_
1-30	199-210	DartMinHash	_	_
1-31	211-216	https	_	_
1-32	216-217	:	_	_
1-33	217-218	/	_	_
1-34	218-219	/	_	_
1-35	219-228	arxiv.org	_	_
1-36	228-229	/	_	_
1-37	229-232	abs	_	_
1-38	232-233	/	_	_
1-39	233-243	2005.11547	_	_
1-40	245-246	\*	_	_
1-41	247-251	ICWS	_	_
1-42	252-255	and	_	_
1-43	256-264	FastICWS	_	_
1-44	265-270	https	_	_
1-45	270-271	:	_	_
1-46	271-272	/	_	_
1-47	272-273	/	_	_
1-48	273-288	research.google	_	_
1-49	288-289	/	_	_
1-50	289-293	pubs	_	_
1-51	293-294	/	_	_
1-52	294-302	pub36928	_	_
1-53	302-303	/	_	_
1-54	304-305	\*	_	_
1-55	306-316	BagMinHash	_	_
1-56	317-322	https	_	_
1-57	322-323	:	_	_
1-58	323-324	/	_	_
1-59	324-325	/	_	_
1-60	325-334	arxiv.org	_	_
1-61	334-335	/	_	_
1-62	335-338	abs	_	_
1-63	338-339	/	_	_
1-64	339-349	1802.03914	_	_
1-65	351-354	For	_	_
1-66	355-365	BagMinHash	_	_
1-67	366-369	and	_	_
1-68	370-374	ICWS	*[285]	DATASET[285]
1-69	375-377	we	*[285]	DATASET[285]
1-70	378-381	use	*[285]	DATASET[285]
1-71	382-385	the	*[285]	DATASET[285]
1-72	386-400	implementation	*[285]	DATASET[285]
1-73	401-405	from	*[285]	DATASET[285]
1-74	406-410	here	*[285]	DATASET[285]
1-75	411-416	https	*[285]	DATASET[285]
1-76	416-417	:	*[285]	DATASET[285]
1-77	417-418	/	*[285]	DATASET[285]
1-78	418-419	/	*[285]	DATASET[285]
1-79	419-429	github.com	*[285]	DATASET[285]
1-80	429-430	/	*[285]	DATASET[285]
1-81	430-435	oertl	*[285]	DATASET[285]
1-82	435-436	/	*[285]	DATASET[285]
1-83	436-446	bagminhash	_	_
1-84	447-451	with	_	_
1-85	452-455	the	_	_
1-86	456-464	relevant	_	_
1-87	465-470	files	_	_
1-88	471-479	included	_	_
1-89	480-482	in	_	_
1-90	483-486	the	_	_
1-91	487-488	/	_	_
1-92	488-498	bagminhash	_	_
1-93	499-505	folder	_	_
1-94	505-506	.	_	_

#Text=See the DartMinHash paper https://arxiv.org/abs/2005.11547 for a description of the algorithm and further results of experiments.  ## Requirements The BagMinHash algorithm uses XXHash64 which must be installed:  1.
2-1	508-511	See	_	_
2-2	512-515	the	_	_
2-3	516-527	DartMinHash	_	_
2-4	528-533	paper	_	_
2-5	534-539	https	_	_
2-6	539-540	:	_	_
2-7	540-541	/	_	_
2-8	541-542	/	_	_
2-9	542-551	arxiv.org	_	_
2-10	551-552	/	_	_
2-11	552-555	abs	_	_
2-12	555-556	/	_	_
2-13	556-566	2005.11547	_	_
2-14	567-570	for	_	_
2-15	571-572	a	_	_
2-16	573-584	description	_	_
2-17	585-587	of	_	_
2-18	588-591	the	_	_
2-19	592-601	algorithm	_	_
2-20	602-605	and	*[296]	PROJECT[296]
2-21	606-613	further	_	_
2-22	614-621	results	_	_
2-23	622-624	of	_	_
2-24	625-636	experiments	_	_
2-25	636-637	.	_	_
2-26	639-640	#	_	_
2-27	640-641	#	_	_
2-28	642-654	Requirements	_	_
2-29	655-658	The	_	_
2-30	659-669	BagMinHash	_	_
2-31	670-679	algorithm	_	_
2-32	680-684	uses	_	_
2-33	685-693	XXHash64	_	_
2-34	694-699	which	_	_
2-35	700-704	must	_	_
2-36	705-707	be	_	_
2-37	708-717	installed	_	_
2-38	717-718	:	_	_
2-39	720-721	1	_	_
2-40	721-722	.	_	_

#Text=Get xxhash from https://github.com/Cyan4973/xxHash, e.g. using `git clone https://github.com/Cyan4973/xxHash.git` 2.
3-1	723-726	Get	_	_
3-2	727-733	xxhash	_	_
3-3	734-738	from	_	_
3-4	739-744	https	_	_
3-5	744-745	:	_	_
3-6	745-746	/	_	_
3-7	746-747	/	_	_
3-8	747-757	github.com	_	_
3-9	757-758	/	*[308]	CONFERENCE[308]
3-10	758-766	Cyan4973	_	_
3-11	766-767	/	_	_
3-12	767-773	xxHash	_	_
3-13	773-774	,	_	_
3-14	775-778	e.g	_	_
3-15	778-779	.	_	_
3-16	780-785	using	_	_
3-17	786-787	`	_	_
3-18	787-790	git	_	_
3-19	791-796	clone	_	_
3-20	797-802	https	_	_
3-21	802-803	:	_	_
3-22	803-804	/	_	_
3-23	804-805	/	_	_
3-24	805-815	github.com	_	_
3-25	815-816	/	_	_
3-26	816-824	Cyan4973	_	_
3-27	824-825	/	_	_
3-28	825-835	xxHash.git	_	_
3-28	825-831	xxHash	_	_
3-29	835-836	`	_	_
3-30	837-838	2	_	_
3-31	838-839	.	_	_

#Text=Build using `make lib` 3.
4-1	840-845	Build	_	_
4-2	846-851	using	_	_
4-3	852-853	`	_	_
4-4	853-857	make	_	_
4-5	858-861	lib	_	_
4-6	861-862	`	_	_
4-7	863-864	3	_	_
4-8	864-865	.	_	_

#Text=Place xxhash.h and libxxhash.a into the directory /bagminhash/xxhash  The code compiles under GCC version 7.5.0 https://gcc.gnu.org/ with relevant commands in the makefile https://www.gnu.org/software/make/.  ## Commands  `make run` compiles and executes the main function in main.cpp.
5-1	866-871	Place	_	_
5-2	872-880	xxhash.h	_	_
5-3	881-884	and	_	_
5-4	885-896	libxxhash.a	_	_
5-5	897-901	into	_	_
5-6	902-905	the	_	_
5-7	906-915	directory	_	_
5-8	916-917	/	_	_
5-9	917-927	bagminhash	_	_
5-10	927-928	/	_	_
5-11	928-934	xxhash	_	_
5-12	936-939	The	_	_
5-13	940-944	code	_	_
5-14	945-953	compiles	_	_
5-15	954-959	under	_	_
5-16	960-963	GCC	_	_
5-17	964-971	version	_	_
5-18	972-977	7.5.0	_	_
5-19	978-983	https	_	_
5-20	983-984	:	*[309]	CONFERENCE[309]
5-21	984-985	/	*[309]	CONFERENCE[309]
5-22	985-986	/	*[309]	CONFERENCE[309]
5-23	986-997	gcc.gnu.org	*[309]	CONFERENCE[309]
5-24	997-998	/	*[309]	CONFERENCE[309]
5-25	999-1003	with	*[309]	CONFERENCE[309]
5-26	1004-1012	relevant	*[309]	CONFERENCE[309]
5-27	1013-1021	commands	*[309]	CONFERENCE[309]
5-28	1022-1024	in	*[309]	CONFERENCE[309]
5-29	1025-1028	the	*[309]	CONFERENCE[309]
5-30	1029-1037	makefile	*[309]	CONFERENCE[309]
5-31	1038-1043	https	*[309]	CONFERENCE[309]
5-32	1043-1044	:	*[309]	CONFERENCE[309]
5-33	1044-1045	/	*[309]	CONFERENCE[309]
5-34	1045-1046	/	*[309]	CONFERENCE[309]
5-35	1046-1057	www.gnu.org	*[309]	CONFERENCE[309]
5-36	1057-1058	/	*[309]	CONFERENCE[309]
5-37	1058-1066	software	*[309]	CONFERENCE[309]
5-38	1066-1067	/	*[309]	CONFERENCE[309]
5-39	1067-1071	make	*[309]	CONFERENCE[309]
5-40	1071-1072	/	*[309]	CONFERENCE[309]
5-41	1072-1073	.	*[309]	CONFERENCE[309]
5-42	1075-1076	#	*[309]	CONFERENCE[309]
5-43	1076-1077	#	*[309]	CONFERENCE[309]
5-44	1078-1086	Commands	*[309]	CONFERENCE[309]
5-45	1088-1089	`	*[309]	CONFERENCE[309]
5-46	1089-1093	make	*[309]	CONFERENCE[309]
5-47	1094-1097	run	*[309]	CONFERENCE[309]
5-48	1097-1098	`	*[309]	CONFERENCE[309]
5-49	1099-1107	compiles	*[309]	CONFERENCE[309]
5-50	1108-1111	and	*[309]	CONFERENCE[309]
5-51	1112-1120	executes	*[309]	CONFERENCE[309]
5-52	1121-1124	the	_	_
5-53	1125-1129	main	_	_
5-54	1130-1138	function	_	_
5-55	1139-1141	in	_	_
5-56	1142-1150	main.cpp	_	_
5-57	1150-1151	.	_	_

#Text=`make test` compiles and run unit tests.  ## Experiments The different experiments are all placed in the main.cpp and write their output to stdout in CSV format.   1.
6-1	1153-1154	`	_	_
6-2	1154-1158	make	_	_
6-3	1159-1163	test	_	_
6-4	1163-1164	`	_	_
6-5	1165-1173	compiles	_	_
6-6	1174-1177	and	_	_
6-7	1178-1181	run	_	_
6-8	1182-1186	unit	_	_
6-9	1187-1192	tests	_	_
6-10	1192-1193	.	_	_
6-11	1195-1196	#	_	_
6-12	1196-1197	#	_	_
6-13	1198-1209	Experiments	_	_
6-14	1210-1213	The	_	_
6-15	1214-1223	different	_	_
6-16	1224-1235	experiments	_	_
6-17	1236-1239	are	_	_
6-18	1240-1243	all	_	_
6-19	1244-1250	placed	_	_
6-20	1251-1253	in	_	_
6-21	1254-1257	the	_	_
6-22	1258-1266	main.cpp	_	_
6-23	1267-1270	and	_	_
6-24	1271-1276	write	*[319]	PROGLANG[319]
6-25	1277-1282	their	*[319]	PROGLANG[319]
6-26	1283-1289	output	*[319]	PROGLANG[319]
6-27	1290-1292	to	*[319]	PROGLANG[319]
6-28	1293-1299	stdout	_	_
6-29	1300-1302	in	_	_
6-30	1303-1306	CSV	_	_
6-31	1307-1313	format	_	_
6-32	1313-1314	.	_	_
6-33	1317-1318	1	_	_
6-34	1318-1319	.	_	_

#Text=`time\_performance`: Times different algorithms on synthetic data for all combinations of sketch lengths, and L0 and L1 norms chosen.  2.
7-1	1320-1321	`	_	_
7-2	1321-1337	time\_performance	_	_
7-3	1337-1338	`	_	_
7-4	1338-1339	:	_	_
7-5	1340-1345	Times	_	_
7-6	1346-1355	different	_	_
7-7	1356-1366	algorithms	_	_
7-8	1367-1369	on	_	_
7-9	1370-1379	synthetic	_	_
7-10	1380-1384	data	_	_
7-11	1385-1388	for	_	_
7-12	1389-1392	all	_	_
7-13	1393-1405	combinations	_	_
7-14	1406-1408	of	_	_
7-15	1409-1415	sketch	_	_
7-16	1416-1423	lengths	_	_
7-17	1423-1424	,	_	_
7-18	1425-1428	and	_	_
7-19	1429-1431	L0	_	_
7-20	1432-1435	and	_	_
7-21	1436-1438	L1	_	_
7-22	1439-1444	norms	_	_
7-23	1445-1451	chosen	_	_
7-24	1451-1452	.	_	_
7-25	1454-1455	2	_	_
7-26	1455-1456	.	_	_

#Text=`time\_performance\_specific`: Same as above, but only runs on specified tuples of parameters. 3.
8-1	1457-1458	`	_	_
8-2	1458-1483	time\_performance\_specific	_	_
8-3	1483-1484	`	_	_
8-4	1484-1485	:	_	_
8-5	1486-1490	Same	_	_
8-6	1491-1493	as	_	_
8-7	1494-1499	above	_	_
8-8	1499-1500	,	_	_
8-9	1501-1504	but	_	_
8-10	1505-1509	only	_	_
8-11	1510-1514	runs	_	_
8-12	1515-1517	on	_	_
8-13	1518-1527	specified	_	_
8-14	1528-1534	tuples	_	_
8-15	1535-1537	of	_	_
8-16	1538-1548	parameters	_	_
8-17	1548-1549	.	_	_
8-18	1550-1551	3	_	_
8-19	1551-1552	.	_	_

#Text=`measure\_similarity`: Returns the estimated Jaccard similarity of different algorithms on synthetic pairs of weighted sets with a specific similarity.
9-1	1553-1554	`	_	_
9-2	1554-1572	measure\_similarity	_	_
9-3	1572-1573	`	_	_
9-4	1573-1574	:	_	_
9-5	1575-1582	Returns	_	_
9-6	1583-1586	the	_	_
9-7	1587-1596	estimated	_	_
9-8	1597-1604	Jaccard	_	_
9-9	1605-1615	similarity	_	_
9-10	1616-1618	of	_	_
9-11	1619-1628	different	_	_
9-12	1629-1639	algorithms	_	_
9-13	1640-1642	on	*[299]	WORKSHOP[299]
9-14	1643-1652	synthetic	*[299]	WORKSHOP[299]
9-15	1653-1658	pairs	*[299]	WORKSHOP[299]
9-16	1659-1661	of	*[299]	WORKSHOP[299]
9-17	1662-1670	weighted	*[299]	WORKSHOP[299]
9-18	1671-1675	sets	*[299]	WORKSHOP[299]
9-19	1676-1680	with	*[299]	WORKSHOP[299]
9-20	1681-1682	a	*[299]	WORKSHOP[299]
9-21	1683-1691	specific	_	_
9-22	1692-1702	similarity	_	_
9-23	1702-1703	.	_	_

#Text=By default `make run` will run `time\_performance\_specific` on a subset of the settings used in Table 1 in the paper.
10-1	1705-1707	By	_	_
10-2	1708-1715	default	_	_
10-3	1716-1717	`	_	_
10-4	1717-1721	make	_	_
10-5	1722-1725	run	_	_
10-6	1725-1726	`	_	_
10-7	1727-1731	will	_	_
10-8	1732-1735	run	_	_
10-9	1736-1737	`	_	_
10-10	1737-1762	time\_performance\_specific	_	_
10-11	1762-1763	`	_	_
10-12	1764-1766	on	_	_
10-13	1767-1768	a	_	_
10-14	1769-1775	subset	_	_
10-15	1776-1778	of	_	_
10-16	1779-1782	the	_	_
10-17	1783-1791	settings	_	_
10-18	1792-1796	used	_	_
10-19	1797-1799	in	*[348]	SOFTWARE[348]
10-20	1800-1805	Table	*[348]	SOFTWARE[348]
10-21	1806-1807	1	*[348]	SOFTWARE[348]
10-22	1808-1810	in	*[348]	SOFTWARE[348]
10-23	1811-1814	the	_	_
10-24	1815-1820	paper	_	_
10-25	1820-1821	.	_	_

#Text=In order to pipe the output to the file `data.csv` use command `make run > data.csv`.  ## Example output  Notation:  \* t denotes the sketch length (usually k in the paper). \* ICWS is a simple and unoptimized version of ICWS using tabulation hashing. \* ICWS\_xxhash is the implementation from the BagMinHash repository which uses the ziggurat algorithm for fast sampling: https://en.wikipedia.org/wiki/Ziggurat\_algorithm \* FastICWS is our own highly optimized implementation of ICWS that tabulates expensive operations and only computes the logarithms of weights once. \* BagMinHash1 and BagMinHash2: BagMinHash variants described in the BagMinHash paper.
11-1	1823-1825	In	_	_
11-2	1826-1831	order	_	_
11-3	1832-1834	to	_	_
11-4	1835-1839	pipe	_	_
11-5	1840-1843	the	_	_
11-6	1844-1850	output	_	_
11-7	1851-1853	to	_	_
11-8	1854-1857	the	_	_
11-9	1858-1862	file	_	_
11-10	1863-1864	`	_	_
11-11	1864-1872	data.csv	_	_
11-12	1872-1873	`	_	_
11-13	1874-1877	use	_	_
11-14	1878-1885	command	_	_
11-15	1886-1887	`	_	_
11-16	1887-1891	make	_	_
11-17	1892-1895	run	_	_
11-18	1896-1897	>	_	_
11-19	1898-1906	data.csv	_	_
11-20	1906-1907	`	_	_
11-21	1907-1908	.	_	_
11-22	1910-1911	#	_	_
11-23	1911-1912	#	_	_
11-24	1913-1920	Example	_	_
11-25	1921-1927	output	_	_
11-26	1929-1937	Notation	_	_
11-27	1937-1938	:	_	_
11-28	1940-1941	\*	_	_
11-29	1942-1943	t	_	_
11-30	1944-1951	denotes	_	_
11-31	1952-1955	the	_	_
11-32	1956-1962	sketch	_	_
11-33	1963-1969	length	_	_
11-34	1970-1971	(	_	_
11-35	1971-1978	usually	_	_
11-36	1979-1980	k	_	_
11-37	1981-1983	in	_	_
11-38	1984-1987	the	_	_
11-39	1988-1993	paper	_	_
11-40	1993-1994	)	_	_
11-41	1994-1995	.	_	_
11-42	1996-1997	\*	_	_
11-43	1998-2002	ICWS	_	_
11-44	2003-2005	is	_	_
11-45	2006-2007	a	_	_
11-46	2008-2014	simple	_	_
11-47	2015-2018	and	_	_
11-48	2019-2030	unoptimized	_	_
11-49	2031-2038	version	_	_
11-50	2039-2041	of	_	_
11-51	2042-2046	ICWS	_	_
11-52	2047-2052	using	_	_
11-53	2053-2063	tabulation	_	_
11-54	2064-2071	hashing	_	_
11-55	2071-2072	.	_	_
11-56	2073-2074	\*	_	_
11-57	2075-2086	ICWS\_xxhash	_	_
11-58	2087-2089	is	_	_
11-59	2090-2093	the	_	_
11-60	2094-2108	implementation	_	_
11-61	2109-2113	from	_	_
11-62	2114-2117	the	_	_
11-63	2118-2128	BagMinHash	_	_
11-64	2129-2139	repository	_	_
11-65	2140-2145	which	*[286]	DATASET[286]
11-66	2146-2150	uses	*[286]	DATASET[286]
11-67	2151-2154	the	*[286]	DATASET[286]
11-68	2155-2163	ziggurat	*[286]	DATASET[286]
11-69	2164-2173	algorithm	_	_
11-70	2174-2177	for	_	_
11-71	2178-2182	fast	_	_
11-72	2183-2191	sampling	_	_
11-73	2191-2192	:	_	_
11-74	2193-2198	https	_	_
11-75	2198-2199	:	_	_
11-76	2199-2200	/	_	_
11-77	2200-2201	/	_	_
11-78	2201-2217	en.wikipedia.org	_	_
11-79	2217-2218	/	_	_
11-80	2218-2222	wiki	_	_
11-81	2222-2223	/	_	_
11-82	2223-2241	Ziggurat\_algorithm	_	_
11-83	2242-2243	\*	_	_
11-84	2244-2252	FastICWS	_	_
11-85	2253-2255	is	_	_
11-86	2256-2259	our	_	_
11-87	2260-2263	own	_	_
11-88	2264-2270	highly	_	_
11-89	2271-2280	optimized	_	_
11-90	2281-2295	implementation	_	_
11-91	2296-2298	of	_	_
11-92	2299-2303	ICWS	_	_
11-93	2304-2308	that	_	_
11-94	2309-2318	tabulates	_	_
11-95	2319-2328	expensive	_	_
11-96	2329-2339	operations	_	_
11-97	2340-2343	and	_	_
11-98	2344-2348	only	_	_
11-99	2349-2357	computes	_	_
11-100	2358-2361	the	_	_
11-101	2362-2372	logarithms	_	_
11-102	2373-2375	of	_	_
11-103	2376-2383	weights	_	_
11-104	2384-2388	once	_	_
11-105	2388-2389	.	_	_
11-106	2390-2391	\*	_	_
11-107	2392-2403	BagMinHash1	_	_
11-108	2404-2407	and	_	_
11-109	2408-2419	BagMinHash2	_	_
11-110	2419-2420	:	_	_
11-111	2421-2431	BagMinHash	_	_
11-112	2432-2440	variants	_	_
11-113	2441-2450	described	_	_
11-114	2451-2453	in	_	_
11-115	2454-2457	the	_	_
11-116	2458-2468	BagMinHash	_	_
11-117	2469-2474	paper	_	_
11-118	2474-2475	.	_	_

#Text=BagMinHash2 is essentially always faster and is what we compare against. \* DartMinHash: Optimized implementation following the pseudocode in the paper.  ### Performance timings  \| id \| L0   \| log2\_L1 \| t    \| ICWS    \| FastICWS \| ICWS\_xxhash \| BagMinHash1 \| BagMinHash2 \| DartMinHash \| \|----\|------\|---------\|------\|---------\|----------\|-------------\|-------------\|-------------\|-------------\| \| 0  \| 64   \| 0.000   \| 64   \| 0.899   \| 0.060    \| 0.538       \| 2.439       \| 0.628       \| 0.042       \| \| 1  \| 1024 \| 0.000   \| 64   \| 11.565  \| 0.515    \| 9.604       \| 4.374       \| 1.706       \| 0.145       \| \| 2  \| 64   \| 0.000   \| 1024 \| 19.296  \| 2.885    \| 8.083       \| 48.248      \| 13.279      \| 0.592       \| \| 3  \| 1024 \| 0.000   \| 1024 \| 187.661 \| 12.643   \| 120.135     \| 79.775      \| 16.586      \| 0.824       \| \| 4  \| 256  \| 0.000   \| 1    \| 0.040   \| 0.008    \| 0.040       \| 0.112       \| 0.103       \| 0.021       \| \| 5  \| 256  \| 0.000   \| 256  \| 14.645  \| 0.939    \| 7.716       \| 13.687      \| 3.270       \| 0.187       \| \| 6  \| 1024 \| 0.000   \| 256  \| 45.239  \| 2.703    \| 30.127      \| 18.175      \| 4.296       \| 0.274       \| \| 7  \| 1024 \| 64.000  \| 256  \| 46.717  \| 2.720    \| 30.122      \| 18.241      \| 4.250       \| 2.632       \| \| 8  \| 1024 \| -64.000 \| 256  \| 47.677  \| 2.719    \| 30.117      \| 18.096      \| 4.192       \| 2.333       \|  ### Jaccard similarity estimates  \| sim\_j \| t  \| ICWS\_xxhash \| FastICWS \| BagMinHash2 \| DartMinHash \| \|-------\|----\|-------------\|----------\|-------------\|-------------\| \| 0.500 \| 1  \| 1.000       \| 1.000    \| 0.000       \| 1.000       \| \| 0.500 \| 2  \| 0.500       \| 0.500    \| 0.000       \| 0.500       \| \| 0.500 \| 3  \| 0.333       \| 0.333    \| 0.000       \| 0.333       \| \| 0.500 \| 4  \| 0.500       \| 0.250    \| 0.750       \| 0.750       \| \| 0.500 \| 5  \| 0.000       \| 0.400    \| 0.600       \| 0.200       \| \| 0.500 \| 6  \| 0.667       \| 0.500    \| 0.500       \| 0.000       \| \| 0.500 \| 7  \| 0.571       \| 0.714    \| 0.429       \| 0.429       \| \| 0.500 \| 8  \| 0.250       \| 0.375    \| 0.625       \| 0.500       \| \| 0.500 \| 9  \| 0.889       \| 0.222    \| 0.556       \| 0.444       \| \| 0.500 \| 10 \| 0.600       \| 0.400    \| 0.700       \| 0.400       \|  ## Tests We use Catch2 https://github.com/catchorg/Catch2 for unit testing.
12-1	2476-2487	BagMinHash2	_	_
12-2	2488-2490	is	_	_
12-3	2491-2502	essentially	_	_
12-4	2503-2509	always	_	_
12-5	2510-2516	faster	_	_
12-6	2517-2520	and	_	_
12-7	2521-2523	is	_	_
12-8	2524-2528	what	_	_
12-9	2529-2531	we	_	_
12-10	2532-2539	compare	_	_
12-11	2540-2547	against	_	_
12-12	2547-2548	.	_	_
12-13	2549-2550	\*	_	_
12-14	2551-2562	DartMinHash	_	_
12-15	2562-2563	:	_	_
12-16	2564-2573	Optimized	_	_
12-17	2574-2588	implementation	_	_
12-18	2589-2598	following	_	_
12-19	2599-2602	the	_	_
12-20	2603-2613	pseudocode	_	_
12-21	2614-2616	in	_	_
12-22	2617-2620	the	_	_
12-23	2621-2626	paper	_	_
12-24	2626-2627	.	_	_
12-25	2629-2630	#	_	_
12-26	2630-2631	#	_	_
12-27	2631-2632	#	_	_
12-28	2633-2644	Performance	_	_
12-29	2645-2652	timings	_	_
12-30	2654-2655	\|	_	_
12-31	2656-2658	id	_	_
12-32	2659-2660	\|	_	_
12-33	2661-2663	L0	_	_
12-34	2666-2667	\|	_	_
12-35	2668-2672	log2	_	_
12-36	2672-2673	\_	_	_
12-37	2673-2675	L1	_	_
12-38	2676-2677	\|	_	_
12-39	2678-2679	t	_	_
12-40	2683-2684	\|	_	_
12-41	2685-2689	ICWS	*[287]	DATASET[287]
12-42	2693-2694	\|	*[287]	DATASET[287]
12-43	2695-2703	FastICWS	_	_
12-44	2704-2705	\|	_	_
12-45	2706-2717	ICWS\_xxhash	_	_
12-46	2718-2719	\|	_	_
12-47	2720-2731	BagMinHash1	_	_
12-48	2732-2733	\|	_	_
12-49	2734-2745	BagMinHash2	_	_
12-50	2746-2747	\|	_	_
12-51	2748-2759	DartMinHash	_	_
12-52	2760-2761	\|	_	_
12-53	2762-2763	\|	_	_
12-54	2763-2764	-	_	_
12-55	2764-2765	-	_	_
12-56	2765-2766	-	_	_
12-57	2766-2767	-	_	_
12-58	2767-2768	\|	_	_
12-59	2768-2769	-	_	_
12-60	2769-2770	-	_	_
12-61	2770-2771	-	_	_
12-62	2771-2772	-	_	_
12-63	2772-2773	-	_	_
12-64	2773-2774	-	_	_
12-65	2774-2775	\|	_	_
12-66	2775-2776	-	_	_
12-67	2776-2777	-	_	_
12-68	2777-2778	-	_	_
12-69	2778-2779	-	_	_
12-70	2779-2780	-	_	_
12-71	2780-2781	-	_	_
12-72	2781-2782	-	_	_
12-73	2782-2783	-	_	_
12-74	2783-2784	-	_	_
12-75	2784-2785	\|	_	_
12-76	2785-2786	-	_	_
12-77	2786-2787	-	_	_
12-78	2787-2788	-	_	_
12-79	2788-2789	-	_	_
12-80	2789-2790	-	_	_
12-81	2790-2791	-	_	_
12-82	2791-2792	\|	_	_
12-83	2792-2793	-	_	_
12-84	2793-2794	-	_	_
12-85	2794-2795	-	_	_
12-86	2795-2796	-	_	_
12-87	2796-2797	-	_	_
12-88	2797-2798	-	_	_
12-89	2798-2799	-	_	_
12-90	2799-2800	-	_	_
12-91	2800-2801	-	_	_
12-92	2801-2802	\|	_	_
12-93	2802-2803	-	_	_
12-94	2803-2804	-	_	_
12-95	2804-2805	-	_	_
12-96	2805-2806	-	_	_
12-97	2806-2807	-	_	_
12-98	2807-2808	-	_	_
12-99	2808-2809	-	_	_
12-100	2809-2810	-	_	_
12-101	2810-2811	-	_	_
12-102	2811-2812	-	_	_
12-103	2812-2813	\|	_	_
12-104	2813-2814	-	_	_
12-105	2814-2815	-	_	_
12-106	2815-2816	-	_	_
12-107	2816-2817	-	_	_
12-108	2817-2818	-	_	_
12-109	2818-2819	-	_	_
12-110	2819-2820	-	_	_
12-111	2820-2821	-	_	_
12-112	2821-2822	-	_	_
12-113	2822-2823	-	_	_
12-114	2823-2824	-	_	_
12-115	2824-2825	-	_	_
12-116	2825-2826	-	_	_
12-117	2826-2827	\|	_	_
12-118	2827-2828	-	_	_
12-119	2828-2829	-	_	_
12-120	2829-2830	-	_	_
12-121	2830-2831	-	_	_
12-122	2831-2832	-	_	_
12-123	2832-2833	-	_	_
12-124	2833-2834	-	_	_
12-125	2834-2835	-	_	_
12-126	2835-2836	-	_	_
12-127	2836-2837	-	_	_
12-128	2837-2838	-	_	_
12-129	2838-2839	-	_	_
12-130	2839-2840	-	_	_
12-131	2840-2841	\|	_	_
12-132	2841-2842	-	_	_
12-133	2842-2843	-	_	_
12-134	2843-2844	-	_	_
12-135	2844-2845	-	_	_
12-136	2845-2846	-	_	_
12-137	2846-2847	-	_	_
12-138	2847-2848	-	_	_
12-139	2848-2849	-	_	_
12-140	2849-2850	-	_	_
12-141	2850-2851	-	_	_
12-142	2851-2852	-	_	_
12-143	2852-2853	-	_	_
12-144	2853-2854	-	_	_
12-145	2854-2855	\|	_	_
12-146	2855-2856	-	_	_
12-147	2856-2857	-	_	_
12-148	2857-2858	-	_	_
12-149	2858-2859	-	_	_
12-150	2859-2860	-	_	_
12-151	2860-2861	-	_	_
12-152	2861-2862	-	_	_
12-153	2862-2863	-	_	_
12-154	2863-2864	-	_	_
12-155	2864-2865	-	_	_
12-156	2865-2866	-	_	_
12-157	2866-2867	-	_	_
12-158	2867-2868	-	_	_
12-159	2868-2869	\|	_	_
12-160	2870-2871	\|	_	_
12-161	2872-2873	0	_	_
12-162	2875-2876	\|	_	_
12-163	2877-2879	64	_	_
12-164	2882-2883	\|	_	_
12-165	2884-2889	0.000	_	_
12-166	2892-2893	\|	_	_
12-167	2894-2896	64	_	_
12-168	2899-2900	\|	_	_
12-169	2901-2906	0.899	_	_
12-170	2909-2910	\|	_	_
12-171	2911-2916	0.060	_	_
12-172	2920-2921	\|	_	_
12-173	2922-2927	0.538	_	_
12-174	2934-2935	\|	_	_
12-175	2936-2941	2.439	_	_
12-176	2948-2949	\|	_	_
12-177	2950-2955	0.628	_	_
12-178	2962-2963	\|	_	_
12-179	2964-2969	0.042	_	_
12-180	2976-2977	\|	_	_
12-181	2978-2979	\|	_	_
12-182	2980-2981	1	_	_
12-183	2983-2984	\|	_	_
12-184	2985-2989	1024	_	_
12-185	2990-2991	\|	_	_
12-186	2992-2997	0.000	_	_
12-187	3000-3001	\|	_	_
12-188	3002-3004	64	_	_
12-189	3007-3008	\|	_	_
12-190	3009-3015	11.565	_	_
12-191	3017-3018	\|	_	_
12-192	3019-3024	0.515	_	_
12-193	3028-3029	\|	_	_
12-194	3030-3035	9.604	_	_
12-195	3042-3043	\|	_	_
12-196	3044-3049	4.374	_	_
12-197	3056-3057	\|	_	_
12-198	3058-3063	1.706	_	_
12-199	3070-3071	\|	_	_
12-200	3072-3077	0.145	_	_
12-201	3084-3085	\|	_	_
12-202	3086-3087	\|	_	_
12-203	3088-3089	2	_	_
12-204	3091-3092	\|	_	_
12-205	3093-3095	64	_	_
12-206	3098-3099	\|	_	_
12-207	3100-3105	0.000	_	_
12-208	3108-3109	\|	_	_
12-209	3110-3114	1024	_	_
12-210	3115-3116	\|	_	_
12-211	3117-3123	19.296	_	_
12-212	3125-3126	\|	_	_
12-213	3127-3132	2.885	_	_
12-214	3136-3137	\|	_	_
12-215	3138-3143	8.083	_	_
12-216	3150-3151	\|	_	_
12-217	3152-3158	48.248	_	_
12-218	3164-3165	\|	_	_
12-219	3166-3172	13.279	_	_
12-220	3178-3179	\|	_	_
12-221	3180-3185	0.592	_	_
12-222	3192-3193	\|	_	_
12-223	3194-3195	\|	_	_
12-224	3196-3197	3	_	_
12-225	3199-3200	\|	_	_
12-226	3201-3205	1024	_	_
12-227	3206-3207	\|	_	_
12-228	3208-3213	0.000	_	_
12-229	3216-3217	\|	_	_
12-230	3218-3222	1024	_	_
12-231	3223-3224	\|	_	_
12-232	3225-3232	187.661	_	_
12-233	3233-3234	\|	_	_
12-234	3235-3241	12.643	_	_
12-235	3244-3245	\|	_	_
12-236	3246-3253	120.135	_	_
12-237	3258-3259	\|	_	_
12-238	3260-3266	79.775	_	_
12-239	3272-3273	\|	_	_
12-240	3274-3280	16.586	_	_
12-241	3286-3287	\|	_	_
12-242	3288-3293	0.824	_	_
12-243	3300-3301	\|	_	_
12-244	3302-3303	\|	_	_
12-245	3304-3305	4	_	_
12-246	3307-3308	\|	_	_
12-247	3309-3312	256	_	_
12-248	3314-3315	\|	_	_
12-249	3316-3321	0.000	_	_
12-250	3324-3325	\|	_	_
12-251	3326-3327	1	_	_
12-252	3331-3332	\|	_	_
12-253	3333-3338	0.040	_	_
12-254	3341-3342	\|	_	_
12-255	3343-3348	0.008	_	_
12-256	3352-3353	\|	_	_
12-257	3354-3359	0.040	_	_
12-258	3366-3367	\|	_	_
12-259	3368-3373	0.112	_	_
12-260	3380-3381	\|	_	_
12-261	3382-3387	0.103	_	_
12-262	3394-3395	\|	_	_
12-263	3396-3401	0.021	_	_
12-264	3408-3409	\|	_	_
12-265	3410-3411	\|	_	_
12-266	3412-3413	5	_	_
12-267	3415-3416	\|	_	_
12-268	3417-3420	256	_	_
12-269	3422-3423	\|	_	_
12-270	3424-3429	0.000	_	_
12-271	3432-3433	\|	_	_
12-272	3434-3437	256	_	_
12-273	3439-3440	\|	_	_
12-274	3441-3447	14.645	_	_
12-275	3449-3450	\|	_	_
12-276	3451-3456	0.939	_	_
12-277	3460-3461	\|	_	_
12-278	3462-3467	7.716	_	_
12-279	3474-3475	\|	_	_
12-280	3476-3482	13.687	_	_
12-281	3488-3489	\|	_	_
12-282	3490-3495	3.270	_	_
12-283	3502-3503	\|	_	_
12-284	3504-3509	0.187	_	_
12-285	3516-3517	\|	_	_
12-286	3518-3519	\|	_	_
12-287	3520-3521	6	_	_
12-288	3523-3524	\|	_	_
12-289	3525-3529	1024	_	_
12-290	3530-3531	\|	_	_
12-291	3532-3537	0.000	_	_
12-292	3540-3541	\|	_	_
12-293	3542-3545	256	_	_
12-294	3547-3548	\|	_	_
12-295	3549-3555	45.239	_	_
12-296	3557-3558	\|	_	_
12-297	3559-3564	2.703	_	_
12-298	3568-3569	\|	_	_
12-299	3570-3576	30.127	_	_
12-300	3582-3583	\|	_	_
12-301	3584-3590	18.175	_	_
12-302	3596-3597	\|	_	_
12-303	3598-3603	4.296	_	_
12-304	3610-3611	\|	_	_
12-305	3612-3617	0.274	_	_
12-306	3624-3625	\|	_	_
12-307	3626-3627	\|	_	_
12-308	3628-3629	7	_	_
12-309	3631-3632	\|	_	_
12-310	3633-3637	1024	_	_
12-311	3638-3639	\|	_	_
12-312	3640-3646	64.000	_	_
12-313	3648-3649	\|	_	_
12-314	3650-3653	256	_	_
12-315	3655-3656	\|	_	_
12-316	3657-3663	46.717	_	_
12-317	3665-3666	\|	_	_
12-318	3667-3672	2.720	_	_
12-319	3676-3677	\|	_	_
12-320	3678-3684	30.122	_	_
12-321	3690-3691	\|	_	_
12-322	3692-3698	18.241	_	_
12-323	3704-3705	\|	_	_
12-324	3706-3711	4.250	_	_
12-325	3718-3719	\|	_	_
12-326	3720-3725	2.632	_	_
12-327	3732-3733	\|	_	_
12-328	3734-3735	\|	_	_
12-329	3736-3737	8	_	_
12-330	3739-3740	\|	_	_
12-331	3741-3745	1024	_	_
12-332	3746-3747	\|	_	_
12-333	3748-3749	-	_	_
12-334	3749-3755	64.000	_	_
12-335	3756-3757	\|	_	_
12-336	3758-3761	256	_	_
12-337	3763-3764	\|	_	_
12-338	3765-3771	47.677	_	_
12-339	3773-3774	\|	_	_
12-340	3775-3780	2.719	_	_
12-341	3784-3785	\|	_	_
12-342	3786-3792	30.117	_	_
12-343	3798-3799	\|	_	_
12-344	3800-3806	18.096	_	_
12-345	3812-3813	\|	_	_
12-346	3814-3819	4.192	_	_
12-347	3826-3827	\|	_	_
12-348	3828-3833	2.333	_	_
12-349	3840-3841	\|	_	_
12-350	3843-3844	#	_	_
12-351	3844-3845	#	_	_
12-352	3845-3846	#	_	_
12-353	3847-3854	Jaccard	_	_
12-354	3855-3865	similarity	_	_
12-355	3866-3875	estimates	_	_
12-356	3877-3878	\|	_	_
12-357	3879-3884	sim\_j	_	_
12-358	3885-3886	\|	_	_
12-359	3887-3888	t	_	_
12-360	3890-3891	\|	_	_
12-361	3892-3903	ICWS\_xxhash	_	_
12-362	3904-3905	\|	_	_
12-363	3906-3914	FastICWS	_	_
12-364	3915-3916	\|	_	_
12-365	3917-3928	BagMinHash2	_	_
12-366	3929-3930	\|	_	_
12-367	3931-3942	DartMinHash	_	_
12-368	3943-3944	\|	_	_
12-369	3945-3946	\|	_	_
12-370	3946-3947	-	_	_
12-371	3947-3948	-	_	_
12-372	3948-3949	-	_	_
12-373	3949-3950	-	_	_
12-374	3950-3951	-	_	_
12-375	3951-3952	-	_	_
12-376	3952-3953	-	_	_
12-377	3953-3954	\|	_	_
12-378	3954-3955	-	_	_
12-379	3955-3956	-	_	_
12-380	3956-3957	-	_	_
12-381	3957-3958	-	_	_
12-382	3958-3959	\|	_	_
12-383	3959-3960	-	_	_
12-384	3960-3961	-	_	_
12-385	3961-3962	-	_	_
12-386	3962-3963	-	_	_
12-387	3963-3964	-	_	_
12-388	3964-3965	-	_	_
12-389	3965-3966	-	_	_
12-390	3966-3967	-	_	_
12-391	3967-3968	-	_	_
12-392	3968-3969	-	_	_
12-393	3969-3970	-	_	_
12-394	3970-3971	-	_	_
12-395	3971-3972	-	_	_
12-396	3972-3973	\|	_	_
12-397	3973-3974	-	_	_
12-398	3974-3975	-	_	_
12-399	3975-3976	-	_	_
12-400	3976-3977	-	_	_
12-401	3977-3978	-	_	_
12-402	3978-3979	-	_	_
12-403	3979-3980	-	_	_
12-404	3980-3981	-	_	_
12-405	3981-3982	-	_	_
12-406	3982-3983	-	_	_
12-407	3983-3984	\|	_	_
12-408	3984-3985	-	_	_
12-409	3985-3986	-	_	_
12-410	3986-3987	-	_	_
12-411	3987-3988	-	_	_
12-412	3988-3989	-	_	_
12-413	3989-3990	-	_	_
12-414	3990-3991	-	_	_
12-415	3991-3992	-	_	_
12-416	3992-3993	-	_	_
12-417	3993-3994	-	_	_
12-418	3994-3995	-	_	_
12-419	3995-3996	-	_	_
12-420	3996-3997	-	_	_
12-421	3997-3998	\|	_	_
12-422	3998-3999	-	_	_
12-423	3999-4000	-	_	_
12-424	4000-4001	-	_	_
12-425	4001-4002	-	_	_
12-426	4002-4003	-	_	_
12-427	4003-4004	-	_	_
12-428	4004-4005	-	_	_
12-429	4005-4006	-	_	_
12-430	4006-4007	-	_	_
12-431	4007-4008	-	_	_
12-432	4008-4009	-	_	_
12-433	4009-4010	-	_	_
12-434	4010-4011	-	_	_
12-435	4011-4012	\|	_	_
12-436	4013-4014	\|	_	_
12-437	4015-4020	0.500	_	_
12-438	4021-4022	\|	_	_
12-439	4023-4024	1	_	_
12-440	4026-4027	\|	_	_
12-441	4028-4033	1.000	_	_
12-442	4040-4041	\|	_	_
12-443	4042-4047	1.000	_	_
12-444	4051-4052	\|	_	_
12-445	4053-4058	0.000	_	_
12-446	4065-4066	\|	_	_
12-447	4067-4072	1.000	_	_
12-448	4079-4080	\|	_	_
12-449	4081-4082	\|	_	_
12-450	4083-4088	0.500	_	_
12-451	4089-4090	\|	_	_
12-452	4091-4092	2	_	_
12-453	4094-4095	\|	_	_
12-454	4096-4101	0.500	_	_
12-455	4108-4109	\|	_	_
12-456	4110-4115	0.500	_	_
12-457	4119-4120	\|	_	_
12-458	4121-4126	0.000	_	_
12-459	4133-4134	\|	_	_
12-460	4135-4140	0.500	_	_
12-461	4147-4148	\|	_	_
12-462	4149-4150	\|	_	_
12-463	4151-4156	0.500	_	_
12-464	4157-4158	\|	_	_
12-465	4159-4160	3	_	_
12-466	4162-4163	\|	_	_
12-467	4164-4169	0.333	_	_
12-468	4176-4177	\|	_	_
12-469	4178-4183	0.333	_	_
12-470	4187-4188	\|	_	_
12-471	4189-4194	0.000	_	_
12-472	4201-4202	\|	_	_
12-473	4203-4208	0.333	_	_
12-474	4215-4216	\|	_	_
12-475	4217-4218	\|	_	_
12-476	4219-4224	0.500	_	_
12-477	4225-4226	\|	_	_
12-478	4227-4228	4	_	_
12-479	4230-4231	\|	_	_
12-480	4232-4237	0.500	_	_
12-481	4244-4245	\|	_	_
12-482	4246-4251	0.250	_	_
12-483	4255-4256	\|	_	_
12-484	4257-4262	0.750	_	_
12-485	4269-4270	\|	_	_
12-486	4271-4276	0.750	_	_
12-487	4283-4284	\|	_	_
12-488	4285-4286	\|	_	_
12-489	4287-4292	0.500	_	_
12-490	4293-4294	\|	_	_
12-491	4295-4296	5	_	_
12-492	4298-4299	\|	_	_
12-493	4300-4305	0.000	_	_
12-494	4312-4313	\|	_	_
12-495	4314-4319	0.400	_	_
12-496	4323-4324	\|	_	_
12-497	4325-4330	0.600	_	_
12-498	4337-4338	\|	_	_
12-499	4339-4344	0.200	_	_
12-500	4351-4352	\|	_	_
12-501	4353-4354	\|	_	_
12-502	4355-4360	0.500	_	_
12-503	4361-4362	\|	_	_
12-504	4363-4364	6	_	_
12-505	4366-4367	\|	_	_
12-506	4368-4373	0.667	_	_
12-507	4380-4381	\|	_	_
12-508	4382-4387	0.500	_	_
12-509	4391-4392	\|	_	_
12-510	4393-4398	0.500	_	_
12-511	4405-4406	\|	_	_
12-512	4407-4412	0.000	_	_
12-513	4419-4420	\|	_	_
12-514	4421-4422	\|	_	_
12-515	4423-4428	0.500	_	_
12-516	4429-4430	\|	_	_
12-517	4431-4432	7	_	_
12-518	4434-4435	\|	_	_
12-519	4436-4441	0.571	_	_
12-520	4448-4449	\|	_	_
12-521	4450-4455	0.714	_	_
12-522	4459-4460	\|	_	_
12-523	4461-4466	0.429	_	_
12-524	4473-4474	\|	_	_
12-525	4475-4480	0.429	_	_
12-526	4487-4488	\|	_	_
12-527	4489-4490	\|	_	_
12-528	4491-4496	0.500	_	_
12-529	4497-4498	\|	_	_
12-530	4499-4500	8	_	_
12-531	4502-4503	\|	_	_
12-532	4504-4509	0.250	_	_
12-533	4516-4517	\|	_	_
12-534	4518-4523	0.375	_	_
12-535	4527-4528	\|	_	_
12-536	4529-4534	0.625	_	_
12-537	4541-4542	\|	_	_
12-538	4543-4548	0.500	_	_
12-539	4555-4556	\|	_	_
12-540	4557-4558	\|	_	_
12-541	4559-4564	0.500	_	_
12-542	4565-4566	\|	_	_
12-543	4567-4568	9	_	_
12-544	4570-4571	\|	_	_
12-545	4572-4577	0.889	_	_
12-546	4584-4585	\|	_	_
12-547	4586-4591	0.222	_	_
12-548	4595-4596	\|	_	_
12-549	4597-4602	0.556	_	_
12-550	4609-4610	\|	_	_
12-551	4611-4616	0.444	_	_
12-552	4623-4624	\|	_	_
12-553	4625-4626	\|	_	_
12-554	4627-4632	0.500	_	_
12-555	4633-4634	\|	_	_
12-556	4635-4637	10	_	_
12-557	4638-4639	\|	_	_
12-558	4640-4645	0.600	_	_
12-559	4652-4653	\|	_	_
12-560	4654-4659	0.400	_	_
12-561	4663-4664	\|	_	_
12-562	4665-4670	0.700	_	_
12-563	4677-4678	\|	_	_
12-564	4679-4684	0.400	_	_
12-565	4691-4692	\|	_	_
12-566	4694-4695	#	_	_
12-567	4695-4696	#	_	_
12-568	4697-4702	Tests	_	_
12-569	4703-4705	We	_	_
12-570	4706-4709	use	_	_
12-571	4710-4716	Catch2	_	_
12-572	4717-4722	https	_	_
12-573	4722-4723	:	_	_
12-574	4723-4724	/	_	_
12-575	4724-4725	/	_	_
12-576	4725-4735	github.com	_	_
12-577	4735-4736	/	_	_
12-578	4736-4744	catchorg	_	_
12-579	4744-4745	/	_	_
12-580	4745-4751	Catch2	_	_
12-581	4752-4755	for	_	_
12-582	4756-4760	unit	_	_
12-583	4761-4768	testing	_	_
12-584	4768-4769	.	_	_

#Text=To compile and run tests use the command: `make test`
13-1	4771-4773	To	_	_
13-2	4774-4781	compile	_	_
13-3	4782-4785	and	_	_
13-4	4786-4789	run	_	_
13-5	4790-4795	tests	_	_
13-6	4796-4799	use	_	_
13-7	4800-4803	the	_	_
13-8	4804-4811	command	_	_
13-9	4811-4812	:	*[304]	LICENSE[304]
13-10	4813-4814	`	*[304]	LICENSE[304]
13-11	4814-4818	make	_	_
13-12	4819-4823	test	_	_
13-13	4823-4824	`	_	_