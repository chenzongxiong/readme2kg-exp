#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Swin Transformer for Semantic Segmentation of satellite images  This repo contains the supported code and configuration files to reproduce semantic segmentation results of \[Swin Transformer\](https://arxiv.org/pdf/2103.14030.pdf).
1-1	0-1	#	_	_
1-2	2-6	Swin	_	_
1-3	7-18	Transformer	*[92]	CONFERENCE[92]
1-4	19-22	for	*[92]	CONFERENCE[92]
1-5	23-31	Semantic	*[92]	CONFERENCE[92]
1-6	32-44	Segmentation	*[92]	CONFERENCE[92]
1-7	45-47	of	*[92]	CONFERENCE[92]
1-8	48-57	satellite	*[92]	CONFERENCE[92]
1-9	58-64	images	*[92]	CONFERENCE[92]
1-10	66-70	This	*[92]	CONFERENCE[92]
1-11	71-75	repo	*[92]	CONFERENCE[92]
1-12	76-84	contains	*[92]	CONFERENCE[92]
1-13	85-88	the	*[92]	CONFERENCE[92]
1-14	89-98	supported	*[92]	CONFERENCE[92]
1-15	99-103	code	*[92]	CONFERENCE[92]
1-16	104-107	and	*[92]	CONFERENCE[92]
1-17	108-121	configuration	*[92]	CONFERENCE[92]
1-18	122-127	files	_	_
1-19	128-130	to	_	_
1-20	131-140	reproduce	_	_
1-21	141-149	semantic	_	_
1-22	150-162	segmentation	_	_
1-23	163-170	results	_	_
1-24	171-173	of	_	_
1-25	174-175	\[	_	_
1-26	175-179	Swin	_	_
1-27	180-191	Transformer	_	_
1-28	191-192	\]	_	_
1-29	192-193	(	_	_
1-30	193-198	https	_	_
1-31	198-199	:	_	_
1-32	199-200	/	_	_
1-33	200-201	/	_	_
1-34	201-210	arxiv.org	_	_
1-35	210-211	/	_	_
1-36	211-214	pdf	_	_
1-37	214-215	/	_	_
1-38	215-225	2103.14030	_	_
1-39	225-226	.	_	_
1-40	226-229	pdf	_	_
1-41	229-230	)	_	_
1-42	230-231	.	_	_

#Text=It is based on \[mmsegmentaion\](https://github.com/open-mmlab/mmsegmentation/tree/v0.11.0).
2-1	233-235	It	_	_
2-2	236-238	is	_	_
2-3	239-244	based	_	_
2-4	245-247	on	_	_
2-5	248-249	\[	_	_
2-6	249-262	mmsegmentaion	_	_
2-7	262-263	\]	_	_
2-8	263-264	(	_	_
2-9	264-269	https	_	_
2-10	269-270	:	_	_
2-11	270-271	/	_	_
2-12	271-272	/	_	_
2-13	272-282	github.com	_	_
2-14	282-283	/	_	_
2-15	283-293	open-mmlab	_	_
2-16	293-294	/	_	_
2-17	294-308	mmsegmentation	_	_
2-18	308-309	/	*[96]	PROJECT[96]
2-19	309-313	tree	_	_
2-20	313-314	/	_	_
2-21	314-321	v0.11.0	_	_
2-22	321-322	)	_	_
2-23	322-323	.	_	_

#Text=In addition, we provide pre-trained models for the semantic segmentation of satellite images into basic classes (vegetation, buildings, roads).
3-1	324-326	In	_	_
3-2	327-335	addition	_	_
3-3	335-336	,	_	_
3-4	337-339	we	_	_
3-5	340-347	provide	_	_
3-6	348-359	pre-trained	_	_
3-7	360-366	models	_	_
3-8	367-370	for	_	_
3-9	371-374	the	_	_
3-10	375-383	semantic	_	_
3-11	384-396	segmentation	*[97]	PROJECT[97]
3-12	397-399	of	*[97]	PROJECT[97]
3-13	400-409	satellite	*[97]	PROJECT[97]
3-14	410-416	images	*[97]	PROJECT[97]
3-15	417-421	into	*[97]	PROJECT[97]
3-16	422-427	basic	*[97]	PROJECT[97]
3-17	428-435	classes	*[97]	PROJECT[97]
3-18	436-437	(	*[97]	PROJECT[97]
3-19	437-447	vegetation	_	_
3-20	447-448	,	_	_
3-21	449-458	buildings	_	_
3-22	458-459	,	_	_
3-23	460-465	roads	_	_
3-24	465-466	)	_	_
3-25	466-467	.	_	_

#Text=The full description of this work is \[available on arXiv\](https://arxiv.org/abs/2110.05812).  ## Application on the Ampli ANR project  ### Goal This repo was used as part of the \[Ampli ANR projet\](https://projet.liris.cnrs.fr/ampli/).
4-1	468-471	The	_	_
4-2	472-476	full	_	_
4-3	477-488	description	_	_
4-4	489-491	of	_	_
4-5	492-496	this	_	_
4-6	497-501	work	_	_
4-7	502-504	is	_	_
4-8	505-506	\[	_	_
4-9	506-515	available	_	_
4-10	516-518	on	_	_
4-11	519-524	arXiv	_	_
4-12	524-525	\]	_	_
4-13	525-526	(	_	_
4-14	526-531	https	_	_
4-15	531-532	:	_	_
4-16	532-533	/	_	_
4-17	533-534	/	_	_
4-18	534-543	arxiv.org	_	_
4-19	543-544	/	_	_
4-20	544-547	abs	_	_
4-21	547-548	/	_	_
4-22	548-558	2110.05812	_	_
4-23	558-559	)	_	_
4-24	559-560	.	_	_
4-25	562-563	#	_	_
4-26	563-564	#	_	_
4-27	565-576	Application	_	_
4-28	577-579	on	*[106]	LICENSE[106]
4-29	580-583	the	*[106]	LICENSE[106]
4-30	584-589	Ampli	*[106]	LICENSE[106]
4-31	590-593	ANR	*[106]	LICENSE[106]
4-32	594-601	project	*[106]	LICENSE[106]
4-33	603-604	#	*[106]	LICENSE[106]
4-34	604-605	#	*[106]	LICENSE[106]
4-35	605-606	#	*[106]	LICENSE[106]
4-36	607-611	Goal	*[106]	LICENSE[106]
4-37	612-616	This	*[106]	LICENSE[106]
4-38	617-621	repo	*[106]	LICENSE[106]
4-39	622-625	was	*[106]	LICENSE[106]
4-40	626-630	used	*[106]	LICENSE[106]
4-41	631-633	as	*[106]	LICENSE[106]
4-42	634-638	part	*[106]	LICENSE[106]
4-43	639-641	of	*[106]	LICENSE[106]
4-44	642-645	the	*[106]	LICENSE[106]
4-45	646-647	\[	*[106]	LICENSE[106]
4-46	647-652	Ampli	*[106]	LICENSE[106]
4-47	653-656	ANR	*[106]	LICENSE[106]
4-48	657-663	projet	_	_
4-49	663-664	\]	_	_
4-50	664-665	(	_	_
4-51	665-670	https	_	_
4-52	670-671	:	_	_
4-53	671-672	/	_	_
4-54	672-673	/	_	_
4-55	673-693	projet.liris.cnrs.fr	_	_
4-56	693-694	/	_	_
4-57	694-699	ampli	_	_
4-58	699-700	/	_	_
4-59	700-701	)	_	_
4-60	701-702	.	_	_

#Text=The goal was to do semantic segmentation on satellite photos to precisely identify the species and the density of the trees present in the pictures.
5-1	706-709	The	_	_
5-2	710-714	goal	_	_
5-3	715-718	was	_	_
5-4	719-721	to	_	_
5-5	722-724	do	_	_
5-6	725-733	semantic	_	_
5-7	734-746	segmentation	*[107]	SOFTWARE[107]
5-8	747-749	on	*[107]	SOFTWARE[107]
5-9	750-759	satellite	*[107]	SOFTWARE[107]
5-10	760-766	photos	*[107]	SOFTWARE[107]
5-11	767-769	to	*[107]	SOFTWARE[107]
5-12	770-779	precisely	*[107]	SOFTWARE[107]
5-13	780-788	identify	*[107]	SOFTWARE[107]
5-14	789-792	the	*[107]	SOFTWARE[107]
5-15	793-800	species	*[107]	SOFTWARE[107]
5-16	801-804	and	*[107]	SOFTWARE[107]
5-17	805-808	the	*[107]	SOFTWARE[107]
5-18	809-816	density	*[107]	SOFTWARE[107]
5-19	817-819	of	*[107]	SOFTWARE[107]
5-20	820-823	the	*[107]	SOFTWARE[107]
5-21	824-829	trees	_	_
5-22	830-837	present	_	_
5-23	838-840	in	_	_
5-24	841-844	the	_	_
5-25	845-853	pictures	_	_
5-26	853-854	.	_	_

#Text=However, due to the difficulty of recognizing the exact species of trees in the satellite photos, we decided to reduce the number of classes.    ### Dataset sources To train and test the model, we used data provided by \[IGN\](https://geoservices.ign.fr/) which concerns French departments (Hautes-Alpes in our case).
6-1	855-862	However	_	_
6-2	862-863	,	_	_
6-3	864-867	due	_	_
6-4	868-870	to	_	_
6-5	871-874	the	_	_
6-6	875-885	difficulty	_	_
6-7	886-888	of	_	_
6-8	889-900	recognizing	_	_
6-9	901-904	the	_	_
6-10	905-910	exact	_	_
6-11	911-918	species	_	_
6-12	919-921	of	_	_
6-13	922-927	trees	_	_
6-14	928-930	in	_	_
6-15	931-934	the	_	_
6-16	935-944	satellite	_	_
6-17	945-951	photos	_	_
6-18	951-952	,	_	_
6-19	953-955	we	_	_
6-20	956-963	decided	_	_
6-21	964-966	to	_	_
6-22	967-973	reduce	_	_
6-23	974-977	the	_	_
6-24	978-984	number	_	_
6-25	985-987	of	_	_
6-26	988-995	classes	_	_
6-27	995-996	.	_	_
6-28	1000-1001	#	_	_
6-29	1001-1002	#	_	_
6-30	1002-1003	#	_	_
6-31	1004-1011	Dataset	_	_
6-32	1012-1019	sources	_	_
6-33	1020-1022	To	_	_
6-34	1023-1028	train	_	_
6-35	1029-1032	and	_	_
6-36	1033-1037	test	_	_
6-37	1038-1041	the	_	_
6-38	1042-1047	model	_	_
6-39	1047-1048	,	_	_
6-40	1049-1051	we	_	_
6-41	1052-1056	used	_	_
6-42	1057-1061	data	*[98]	PROJECT[98]
6-43	1062-1070	provided	*[98]	PROJECT[98]
6-44	1071-1073	by	*[98]	PROJECT[98]
6-45	1074-1075	\[	*[98]	PROJECT[98]
6-46	1075-1078	IGN	*[98]	PROJECT[98]
6-47	1078-1079	\]	*[98]	PROJECT[98]
6-48	1079-1080	(	*[98]	PROJECT[98]
6-49	1080-1085	https	*[98]	PROJECT[98]
6-50	1085-1086	:	*[98]	PROJECT[98]
6-51	1086-1087	/	*[98]	PROJECT[98]
6-52	1087-1088	/	*[98]	PROJECT[98]
6-53	1088-1106	geoservices.ign.fr	*[98]	PROJECT[98]
6-54	1106-1107	/	*[98]	PROJECT[98]
6-55	1107-1108	)	*[98]	PROJECT[98]
6-56	1109-1114	which	*[98]	PROJECT[98]
6-57	1115-1123	concerns	*[98]	PROJECT[98]
6-58	1124-1130	French	*[98]	PROJECT[98]
6-59	1131-1142	departments	_	_
6-60	1143-1144	(	_	_
6-61	1144-1156	Hautes-Alpes	_	_
6-62	1157-1159	in	_	_
6-63	1160-1163	our	_	_
6-64	1164-1168	case	_	_
6-65	1168-1169	)	_	_
6-66	1169-1170	.	_	_

#Text=The following datasets have been used to extract the different layers: \* BD Ortho for the satellite images \* BD Foret v2 for vegetation data \* BD Topo for buildings and roads  Important: note that the \*data precision is 50cm per pixel.\*  Initially, lots of classes were present in the dataset.
7-1	1171-1174	The	_	_
7-2	1175-1184	following	_	_
7-3	1185-1193	datasets	_	_
7-4	1194-1198	have	_	_
7-5	1199-1203	been	_	_
7-6	1204-1208	used	_	_
7-7	1209-1211	to	_	_
7-8	1212-1219	extract	_	_
7-9	1220-1223	the	_	_
7-10	1224-1233	different	_	_
7-11	1234-1240	layers	_	_
7-12	1240-1241	:	_	_
7-13	1242-1243	\*	_	_
7-14	1244-1246	BD	_	_
7-15	1247-1252	Ortho	_	_
7-16	1253-1256	for	_	_
7-17	1257-1260	the	_	_
7-18	1261-1270	satellite	_	_
7-19	1271-1277	images	_	_
7-20	1278-1279	\*	_	_
7-21	1280-1282	BD	_	_
7-22	1283-1288	Foret	_	_
7-23	1289-1291	v2	_	_
7-24	1292-1295	for	_	_
7-25	1296-1306	vegetation	_	_
7-26	1307-1311	data	_	_
7-27	1312-1313	\*	_	_
7-28	1314-1316	BD	_	_
7-29	1317-1321	Topo	_	_
7-30	1322-1325	for	_	_
7-31	1326-1335	buildings	_	_
7-32	1336-1339	and	_	_
7-33	1340-1345	roads	_	_
7-34	1347-1356	Important	_	_
7-35	1356-1357	:	_	_
7-36	1358-1362	note	_	_
7-37	1363-1367	that	_	_
7-38	1368-1371	the	_	_
7-39	1372-1373	\*	_	_
7-40	1373-1377	data	_	_
7-41	1378-1387	precision	_	_
7-42	1388-1390	is	_	_
7-43	1391-1395	50cm	_	_
7-44	1396-1399	per	*[99]	PROJECT[99]
7-45	1400-1405	pixel	*[99]	PROJECT[99]
7-46	1405-1406	.	*[99]	PROJECT[99]
7-47	1406-1407	\*	*[99]	PROJECT[99]
7-48	1409-1418	Initially	*[99]	PROJECT[99]
7-49	1418-1419	,	*[99]	PROJECT[99]
7-50	1420-1424	lots	*[99]	PROJECT[99]
7-51	1425-1427	of	*[99]	PROJECT[99]
7-52	1428-1435	classes	_	_
7-53	1436-1440	were	_	_
7-54	1441-1448	present	_	_
7-55	1449-1451	in	_	_
7-56	1452-1455	the	_	_
7-57	1456-1463	dataset	_	_
7-58	1463-1464	.	_	_

#Text=We reduced the number of classes by merging them and finally retained the following ones:   \* Dense forest \* Sparse forest \* Moor \* Herbaceous formation \* Building \* Road  The purpose of the two last classes is twofold.
8-1	1465-1467	We	_	_
8-2	1468-1475	reduced	_	_
8-3	1476-1479	the	_	_
8-4	1480-1486	number	_	_
8-5	1487-1489	of	_	_
8-6	1490-1497	classes	_	_
8-7	1498-1500	by	_	_
8-8	1501-1508	merging	_	_
8-9	1509-1513	them	_	_
8-10	1514-1517	and	_	_
8-11	1518-1525	finally	_	_
8-12	1526-1534	retained	_	_
8-13	1535-1538	the	_	_
8-14	1539-1548	following	_	_
8-15	1549-1553	ones	_	_
8-16	1553-1554	:	_	_
8-17	1557-1558	\*	_	_
8-18	1559-1564	Dense	_	_
8-19	1565-1571	forest	_	_
8-20	1572-1573	\*	_	_
8-21	1574-1580	Sparse	_	_
8-22	1581-1587	forest	_	_
8-23	1588-1589	\*	_	_
8-24	1590-1594	Moor	_	_
8-25	1595-1596	\*	_	_
8-26	1597-1607	Herbaceous	_	_
8-27	1608-1617	formation	_	_
8-28	1618-1619	\*	_	_
8-29	1620-1628	Building	_	_
8-30	1629-1630	\*	*[101]	PROGLANG[101]
8-31	1631-1635	Road	*[101]	PROGLANG[101]
8-32	1637-1640	The	*[101]	PROGLANG[101]
8-33	1641-1648	purpose	*[101]	PROGLANG[101]
8-34	1649-1651	of	*[101]	PROGLANG[101]
8-35	1652-1655	the	*[101]	PROGLANG[101]
8-36	1656-1659	two	_	_
8-37	1660-1664	last	_	_
8-38	1665-1672	classes	_	_
8-39	1673-1675	is	_	_
8-40	1676-1683	twofold	_	_
8-41	1683-1684	.	_	_

#Text=We first wanted to avoid trapping the training into false segmentation, because buildings and roads were visually present in the satellite images and were initially assigned a vegetation class.
9-1	1685-1687	We	_	_
9-2	1688-1693	first	_	_
9-3	1694-1700	wanted	_	_
9-4	1701-1703	to	_	_
9-5	1704-1709	avoid	_	_
9-6	1710-1718	trapping	_	_
9-7	1719-1722	the	_	_
9-8	1723-1731	training	_	_
9-9	1732-1736	into	_	_
9-10	1737-1742	false	_	_
9-11	1743-1755	segmentation	_	_
9-12	1755-1756	,	_	_
9-13	1757-1764	because	_	_
9-14	1765-1774	buildings	_	_
9-15	1775-1778	and	_	_
9-16	1779-1784	roads	_	_
9-17	1785-1789	were	_	_
9-18	1790-1798	visually	_	_
9-19	1799-1806	present	_	_
9-20	1807-1809	in	_	_
9-21	1810-1813	the	_	_
9-22	1814-1823	satellite	_	_
9-23	1824-1830	images	_	_
9-24	1831-1834	and	_	_
9-25	1835-1839	were	_	_
9-26	1840-1849	initially	_	_
9-27	1850-1858	assigned	_	_
9-28	1859-1860	a	*[108]	SOFTWARE[108]
9-29	1861-1871	vegetation	*[108]	SOFTWARE[108]
9-30	1872-1877	class	*[108]	SOFTWARE[108]
9-31	1877-1878	.	_	_

#Text=Second, the segmentation is more precise and gives more identification of the different image elements.  ### Dataset preparation Our training and test datasets are composed of tiles prepared from IGN open data.
10-1	1879-1885	Second	_	_
10-2	1885-1886	,	_	_
10-3	1887-1890	the	_	_
10-4	1891-1903	segmentation	_	_
10-5	1904-1906	is	_	_
10-6	1907-1911	more	_	_
10-7	1912-1919	precise	_	_
10-8	1920-1923	and	_	_
10-9	1924-1929	gives	_	_
10-10	1930-1934	more	_	_
10-11	1935-1949	identification	_	_
10-12	1950-1952	of	*[102]	EVALMETRIC[102]
10-13	1953-1956	the	*[102]	EVALMETRIC[102]
10-14	1957-1966	different	*[102]	EVALMETRIC[102]
10-15	1967-1972	image	*[102]	EVALMETRIC[102]
10-16	1973-1981	elements	*[102]	EVALMETRIC[102]
10-17	1981-1982	.	*[102]	EVALMETRIC[102]
10-18	1984-1985	#	*[102]	EVALMETRIC[102]
10-19	1985-1986	#	*[102]	EVALMETRIC[102]
10-20	1986-1987	#	*[102]	EVALMETRIC[102]
10-21	1988-1995	Dataset	_	_
10-22	1996-2007	preparation	_	_
10-23	2008-2011	Our	_	_
10-24	2012-2020	training	_	_
10-25	2021-2024	and	_	_
10-26	2025-2029	test	_	_
10-27	2030-2038	datasets	_	_
10-28	2039-2042	are	_	_
10-29	2043-2051	composed	_	_
10-30	2052-2054	of	_	_
10-31	2055-2060	tiles	_	_
10-32	2061-2069	prepared	_	_
10-33	2070-2074	from	_	_
10-34	2075-2078	IGN	_	_
10-35	2079-2083	open	_	_
10-36	2084-2088	data	_	_
10-37	2088-2089	.	_	_

#Text=Each tile has a 1000x1000 resolution representing a 500m x 500m footprint (the resolution is 50cm per pixel).
11-1	2090-2094	Each	_	_
11-2	2095-2099	tile	_	_
11-3	2100-2103	has	_	_
11-4	2104-2105	a	_	_
11-5	2106-2115	1000x1000	_	_
11-6	2116-2126	resolution	*[107]	LICENSE[107]
11-7	2127-2139	representing	*[107]	LICENSE[107]
11-8	2140-2141	a	*[107]	LICENSE[107]
11-9	2142-2146	500m	*[107]	LICENSE[107]
11-10	2147-2148	x	*[107]	LICENSE[107]
11-11	2149-2153	500m	*[107]	LICENSE[107]
11-12	2154-2163	footprint	*[107]	LICENSE[107]
11-13	2164-2165	(	*[107]	LICENSE[107]
11-14	2165-2168	the	*[107]	LICENSE[107]
11-15	2169-2179	resolution	*[107]	LICENSE[107]
11-16	2180-2182	is	*[107]	LICENSE[107]
11-17	2183-2187	50cm	*[107]	LICENSE[107]
11-18	2188-2191	per	_	_
11-19	2192-2197	pixel	_	_
11-20	2197-2198	)	_	_
11-21	2198-2199	.	_	_

#Text=We mainly used data from the Hautes-Alpes department, and we took spatially spaced data to have as much diversity as possible and to limit the area without information (unfortunately, some places lack information).
12-1	2201-2203	We	_	_
12-2	2204-2210	mainly	_	_
12-3	2211-2215	used	_	_
12-4	2216-2220	data	_	_
12-5	2221-2225	from	_	_
12-6	2226-2229	the	_	_
12-7	2230-2242	Hautes-Alpes	_	_
12-8	2243-2253	department	_	_
12-9	2253-2254	,	_	_
12-10	2255-2258	and	_	_
12-11	2259-2261	we	_	_
12-12	2262-2266	took	_	_
12-13	2267-2276	spatially	_	_
12-14	2277-2283	spaced	_	_
12-15	2284-2288	data	_	_
12-16	2289-2291	to	_	_
12-17	2292-2296	have	_	_
12-18	2297-2299	as	_	_
12-19	2300-2304	much	_	_
12-20	2305-2314	diversity	_	_
12-21	2315-2317	as	_	_
12-22	2318-2326	possible	_	_
12-23	2327-2330	and	_	_
12-24	2331-2333	to	_	_
12-25	2334-2339	limit	_	_
12-26	2340-2343	the	_	_
12-27	2344-2348	area	_	_
12-28	2349-2356	without	_	_
12-29	2357-2368	information	_	_
12-30	2369-2370	(	_	_
12-31	2370-2383	unfortunately	_	_
12-32	2383-2384	,	*[100]	PROJECT[100]
12-33	2385-2389	some	_	_
12-34	2390-2396	places	_	_
12-35	2397-2401	lack	_	_
12-36	2402-2413	information	_	_
12-37	2413-2414	)	_	_
12-38	2414-2415	.	_	_

#Text=The file structure of the dataset is as follows: ```none ├── data │   ├── ign │   │   ├── annotations │   │   │   ├── training │   │   │   │   ├── xxx.png │   │   │   │   ├── yyy.png │   │   │   │   ├── zzz.png │   │   │   ├── validation │   │   ├── images │   │   │   ├── training │   │   │   │   ├── xxx.png │   │   │   │   ├── yyy.png │   │   │   │   ├── zzz.png │   │   │   ├── validation  ``` The dataset is available on download \[here\](https://drive.google.com/file/d/1y73mUPzS5Hhq1RjPXc9bxch-Nv6HlJem/view?
13-1	2417-2420	The	_	_
13-2	2421-2425	file	_	_
13-3	2426-2435	structure	_	_
13-4	2436-2438	of	_	_
13-5	2439-2442	the	_	_
13-6	2443-2450	dataset	_	_
13-7	2451-2453	is	_	_
13-8	2454-2456	as	_	_
13-9	2457-2464	follows	_	_
13-10	2464-2465	:	_	_
13-11	2466-2467	`	_	_
13-12	2467-2468	`	_	_
13-13	2468-2469	`	_	_
13-14	2469-2473	none	_	_
13-15	2474-2475	├	_	_
13-16	2475-2476	─	_	_
13-17	2476-2477	─	_	_
13-18	2478-2482	data	_	_
13-19	2483-2484	│	_	_
13-20	2487-2488	├	_	_
13-21	2488-2489	─	_	_
13-22	2489-2490	─	_	_
13-23	2491-2494	ign	_	_
13-24	2495-2496	│	_	_
13-25	2499-2500	│	_	_
13-26	2503-2504	├	_	_
13-27	2504-2505	─	_	_
13-28	2505-2506	─	_	_
13-29	2507-2518	annotations	_	_
13-30	2519-2520	│	_	_
13-31	2523-2524	│	_	_
13-32	2527-2528	│	_	_
13-33	2531-2532	├	_	_
13-34	2532-2533	─	_	_
13-35	2533-2534	─	_	_
13-36	2535-2543	training	_	_
13-37	2544-2545	│	_	_
13-38	2548-2549	│	_	_
13-39	2552-2553	│	_	_
13-40	2556-2557	│	_	_
13-41	2560-2561	├	_	_
13-42	2561-2562	─	_	_
13-43	2562-2563	─	_	_
13-44	2564-2571	xxx.png	_	_
13-45	2572-2573	│	_	_
13-46	2576-2577	│	_	_
13-47	2580-2581	│	_	_
13-48	2584-2585	│	_	_
13-49	2588-2589	├	_	_
13-50	2589-2590	─	_	_
13-51	2590-2591	─	_	_
13-52	2592-2599	yyy.png	_	_
13-53	2600-2601	│	_	_
13-54	2604-2605	│	_	_
13-55	2608-2609	│	_	_
13-56	2612-2613	│	_	_
13-57	2616-2617	├	_	_
13-58	2617-2618	─	_	_
13-59	2618-2619	─	_	_
13-60	2620-2627	zzz.png	_	_
13-61	2628-2629	│	_	_
13-62	2632-2633	│	_	_
13-63	2636-2637	│	_	_
13-64	2640-2641	├	_	_
13-65	2641-2642	─	_	_
13-66	2642-2643	─	_	_
13-67	2644-2654	validation	_	_
13-68	2655-2656	│	_	_
13-69	2659-2660	│	_	_
13-70	2663-2664	├	_	_
13-71	2664-2665	─	_	_
13-72	2665-2666	─	_	_
13-73	2667-2673	images	_	_
13-74	2674-2675	│	_	_
13-75	2678-2679	│	_	_
13-76	2682-2683	│	_	_
13-77	2686-2687	├	_	_
13-78	2687-2688	─	_	_
13-79	2688-2689	─	_	_
13-80	2690-2698	training	_	_
13-81	2699-2700	│	*[101]	PROJECT[101]
13-82	2703-2704	│	*[101]	PROJECT[101]
13-83	2707-2708	│	*[101]	PROJECT[101]
13-84	2711-2712	│	*[101]	PROJECT[101]
13-85	2715-2716	├	*[101]	PROJECT[101]
13-86	2716-2717	─	*[101]	PROJECT[101]
13-87	2717-2718	─	*[101]	PROJECT[101]
13-88	2719-2726	xxx.png	*[101]	PROJECT[101]
13-89	2727-2728	│	*[101]	PROJECT[101]
13-90	2731-2732	│	*[101]	PROJECT[101]
13-91	2735-2736	│	*[101]	PROJECT[101]
13-92	2739-2740	│	*[101]	PROJECT[101]
13-93	2743-2744	├	*[101]	PROJECT[101]
13-94	2744-2745	─	*[101]	PROJECT[101]
13-95	2745-2746	─	*[101]	PROJECT[101]
13-96	2747-2754	yyy.png	*[101]	PROJECT[101]
13-97	2755-2756	│	*[101]	PROJECT[101]
13-98	2759-2760	│	*[101]	PROJECT[101]
13-99	2763-2764	│	*[101]	PROJECT[101]
13-100	2767-2768	│	*[101]	PROJECT[101]
13-101	2771-2772	├	*[101]	PROJECT[101]
13-102	2772-2773	─	*[101]	PROJECT[101]
13-103	2773-2774	─	*[101]	PROJECT[101]
13-104	2775-2782	zzz.png	*[101]	PROJECT[101]
13-105	2783-2784	│	*[101]	PROJECT[101]
13-106	2787-2788	│	*[101]	PROJECT[101]
13-107	2791-2792	│	*[101]	PROJECT[101]
13-108	2795-2796	├	*[101]	PROJECT[101]
13-109	2796-2797	─	*[101]	PROJECT[101]
13-110	2797-2798	─	*[101]	PROJECT[101]
13-111	2799-2809	validation	*[101]	PROJECT[101]
13-112	2811-2812	`	*[101]	PROJECT[101]
13-113	2812-2813	`	*[101]	PROJECT[101]
13-114	2813-2814	`	*[101]	PROJECT[101]
13-115	2815-2818	The	*[101]	PROJECT[101]
13-116	2819-2826	dataset	*[101]	PROJECT[101]
13-117	2827-2829	is	*[101]	PROJECT[101]
13-118	2830-2839	available	*[101]	PROJECT[101]
13-119	2840-2842	on	*[101]	PROJECT[101]
13-120	2843-2851	download	*[101]	PROJECT[101]
13-121	2852-2853	\[	*[101]	PROJECT[101]
13-122	2853-2857	here	*[101]	PROJECT[101]
13-123	2857-2858	\]	*[101]	PROJECT[101]
13-124	2858-2859	(	*[101]	PROJECT[101]
13-125	2859-2864	https	*[101]	PROJECT[101]
13-126	2864-2865	:	*[101]	PROJECT[101]
13-127	2865-2866	/	*[101]	PROJECT[101]
13-128	2866-2867	/	*[101]	PROJECT[101]
13-129	2867-2883	drive.google.com	*[101]	PROJECT[101]
13-130	2883-2884	/	*[101]	PROJECT[101]
13-131	2884-2888	file	*[101]	PROJECT[101]
13-132	2888-2889	/	*[101]	PROJECT[101]
13-133	2889-2890	d	*[101]	PROJECT[101]
13-134	2890-2891	/	*[101]	PROJECT[101]
13-135	2891-2924	1y73mUPzS5Hhq1RjPXc9bxch-Nv6HlJem	_	_
13-136	2924-2925	/	_	_
13-137	2925-2929	view	_	_
13-138	2929-2930	?	_	_

#Text=usp=sharing).  ### Information on the training During the training, a ImageNet-22K pretrained model was used (available \[here\](https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin\_large\_patch4\_window12\_384\_22k.pth)) and we added weights on each class because the dataset was not balanced in classes distribution.
14-1	2930-2933	usp	_	_
14-2	2933-2934	=	_	_
14-3	2934-2941	sharing	_	_
14-4	2941-2942	)	_	_
14-5	2942-2943	.	_	_
14-6	2945-2946	#	_	_
14-7	2946-2947	#	_	_
14-8	2947-2948	#	_	_
14-9	2949-2960	Information	_	_
14-10	2961-2963	on	_	_
14-11	2964-2967	the	_	_
14-12	2968-2976	training	_	_
14-13	2977-2983	During	_	_
14-14	2984-2987	the	_	_
14-15	2988-2996	training	*[102]	PROGLANG[102]
14-16	2996-2997	,	*[102]	PROGLANG[102]
14-17	2998-2999	a	*[102]	PROGLANG[102]
14-18	3000-3008	ImageNet	*[102]	PROGLANG[102]
14-19	3008-3009	-	*[102]	PROGLANG[102]
14-20	3009-3012	22K	*[102]	PROGLANG[102]
14-21	3013-3023	pretrained	*[102]	PROGLANG[102]
14-22	3024-3029	model	*[102]	PROGLANG[102]
14-23	3030-3033	was	*[102]	PROGLANG[102]
14-24	3034-3038	used	*[102]	PROGLANG[102]
14-25	3039-3040	(	*[102]	PROGLANG[102]
14-26	3040-3049	available	*[102]	PROGLANG[102]
14-27	3050-3051	\[	*[102]	PROGLANG[102]
14-28	3051-3055	here	*[102]	PROGLANG[102]
14-29	3055-3056	\]	*[102]	PROGLANG[102]
14-30	3056-3057	(	*[102]	PROGLANG[102]
14-31	3057-3062	https	*[102]	PROGLANG[102]
14-32	3062-3063	:	*[102]	PROGLANG[102]
14-33	3063-3064	/	*[102]	PROGLANG[102]
14-34	3064-3065	/	*[102]	PROGLANG[102]
14-35	3065-3075	github.com	*[102]	PROGLANG[102]
14-36	3075-3076	/	*[102]	PROGLANG[102]
14-37	3076-3091	SwinTransformer	*[102]	PROGLANG[102]
14-38	3091-3092	/	*[102]	PROGLANG[102]
14-39	3092-3099	storage	*[102]	PROGLANG[102]
14-40	3099-3100	/	*[102]	PROGLANG[102]
14-41	3100-3108	releases	*[102]	PROGLANG[102]
14-42	3108-3109	/	*[102]	PROGLANG[102]
14-43	3109-3117	download	*[102]	PROGLANG[102]
14-44	3117-3118	/	*[102]	PROGLANG[102]
14-45	3118-3124	v1.0.0	*[102]	PROGLANG[102]
14-46	3124-3125	/	*[102]	PROGLANG[102]
14-47	3125-3142	swin\_large\_patch4	*[102]	PROGLANG[102]
14-48	3142-3143	\_	*[102]	PROGLANG[102]
14-49	3143-3151	window12	*[102]	PROGLANG[102]
14-50	3151-3152	\_	*[102]	PROGLANG[102]
14-51	3152-3155	384	*[102]	PROGLANG[102]
14-52	3155-3156	\_	*[102]	PROGLANG[102]
14-53	3156-3163	22k.pth	*[102]	PROGLANG[102]
14-54	3163-3164	)	*[102]	PROGLANG[102]
14-55	3164-3165	)	*[102]	PROGLANG[102]
14-56	3166-3169	and	*[102]	PROGLANG[102]
14-57	3170-3172	we	*[102]	PROGLANG[102]
14-58	3173-3178	added	*[102]	PROGLANG[102]
14-59	3179-3186	weights	*[102]	PROGLANG[102]
14-60	3187-3189	on	*[102]	PROGLANG[102]
14-61	3190-3194	each	*[102]	PROGLANG[102]
14-62	3195-3200	class	*[102]	PROGLANG[102]
14-63	3201-3208	because	*[102]	PROGLANG[102]
14-64	3209-3212	the	*[102]	PROGLANG[102]
14-65	3213-3220	dataset	*[102]	PROGLANG[102]
14-66	3221-3224	was	*[102]	PROGLANG[102]
14-67	3225-3228	not	*[102]	PROGLANG[102]
14-68	3229-3237	balanced	*[102]	PROGLANG[102]
14-69	3238-3240	in	*[102]	PROGLANG[102]
14-70	3241-3248	classes	*[102]	PROGLANG[102]
14-71	3249-3261	distribution	_	_
14-72	3261-3262	.	_	_

#Text=The weights we have used are:   \* Dense forest => 0.5 \* Sparse forest => 1.31237 \* Moor => 1.38874 \* Herbaceous formation => 1.39761 \* Building => 1.5 \* Road => 1.47807  ### Main results \| Backbone \| Method \| Crop Size \| Lr Schd \| mIoU \| config \| model \| \| :---: \| :---: \| :---: \| :---: \| :---: \| :---: \| :---: \| \| Swin-L \| UPerNet \| 384x384 \| 60K \| 54.22 \| \[config\](configs/swin/config\_upernet\_swin\_large\_patch4\_window12\_384x384\_60k\_ign.py) \| \[model\](https://drive.google.com/file/d/1EarMOBHx6meawa6izNXJUfXRCTzhKT2M/view) \|  Here are some comparison between the original segmentation and the segmentation that has been obtained after the training (Hautes-Alpes dataset):    !
15-1	3263-3266	The	_	_
15-2	3267-3274	weights	_	_
15-3	3275-3277	we	_	_
15-4	3278-3282	have	_	_
15-5	3283-3287	used	_	_
15-6	3288-3291	are	_	_
15-7	3291-3292	:	_	_
15-8	3295-3296	\*	_	_
15-9	3297-3302	Dense	_	_
15-10	3303-3309	forest	_	_
15-11	3310-3311	=	_	_
15-12	3311-3312	>	_	_
15-13	3313-3316	0.5	_	_
15-14	3317-3318	\*	_	_
15-15	3319-3325	Sparse	_	_
15-16	3326-3332	forest	_	_
15-17	3333-3334	=	_	_
15-18	3334-3335	>	_	_
15-19	3336-3343	1.31237	_	_
15-20	3344-3345	\*	_	_
15-21	3346-3350	Moor	_	_
15-22	3351-3352	=	_	_
15-23	3352-3353	>	_	_
15-24	3354-3361	1.38874	_	_
15-25	3362-3363	\*	_	_
15-26	3364-3374	Herbaceous	_	_
15-27	3375-3384	formation	_	_
15-28	3385-3386	=	_	_
15-29	3386-3387	>	_	_
15-30	3388-3395	1.39761	_	_
15-31	3396-3397	\*	_	_
15-32	3398-3406	Building	_	_
15-33	3407-3408	=	_	_
15-34	3408-3409	>	_	_
15-35	3410-3413	1.5	_	_
15-36	3414-3415	\*	_	_
15-37	3416-3420	Road	_	_
15-38	3421-3422	=	_	_
15-39	3422-3423	>	_	_
15-40	3424-3431	1.47807	_	_
15-41	3433-3434	#	_	_
15-42	3434-3435	#	_	_
15-43	3435-3436	#	_	_
15-44	3437-3441	Main	_	_
15-45	3442-3449	results	_	_
15-46	3450-3451	\|	_	_
15-47	3452-3460	Backbone	_	_
15-48	3461-3462	\|	_	_
15-49	3463-3469	Method	_	_
15-50	3470-3471	\|	_	_
15-51	3472-3476	Crop	_	_
15-52	3477-3481	Size	_	_
15-53	3482-3483	\|	_	_
15-54	3484-3486	Lr	_	_
15-55	3487-3491	Schd	_	_
15-56	3492-3493	\|	_	_
15-57	3494-3498	mIoU	_	_
15-58	3499-3500	\|	_	_
15-59	3501-3507	config	_	_
15-60	3508-3509	\|	_	_
15-61	3510-3515	model	_	_
15-62	3516-3517	\|	_	_
15-63	3518-3519	\|	_	_
15-64	3520-3521	:	_	_
15-65	3521-3522	-	_	_
15-66	3522-3523	-	_	_
15-67	3523-3524	-	_	_
15-68	3524-3525	:	_	_
15-69	3526-3527	\|	_	_
15-70	3528-3529	:	_	_
15-71	3529-3530	-	_	_
15-72	3530-3531	-	_	_
15-73	3531-3532	-	_	_
15-74	3532-3533	:	_	_
15-75	3534-3535	\|	_	_
15-76	3536-3537	:	_	_
15-77	3537-3538	-	_	_
15-78	3538-3539	-	_	_
15-79	3539-3540	-	_	_
15-80	3540-3541	:	_	_
15-81	3542-3543	\|	_	_
15-82	3544-3545	:	_	_
15-83	3545-3546	-	_	_
15-84	3546-3547	-	_	_
15-85	3547-3548	-	_	_
15-86	3548-3549	:	_	_
15-87	3550-3551	\|	_	_
15-88	3552-3553	:	_	_
15-89	3553-3554	-	_	_
15-90	3554-3555	-	_	_
15-91	3555-3556	-	_	_
15-92	3556-3557	:	_	_
15-93	3558-3559	\|	_	_
15-94	3560-3561	:	_	_
15-95	3561-3562	-	_	_
15-96	3562-3563	-	_	_
15-97	3563-3564	-	_	_
15-98	3564-3565	:	_	_
15-99	3566-3567	\|	_	_
15-100	3568-3569	:	_	_
15-101	3569-3570	-	_	_
15-102	3570-3571	-	_	_
15-103	3571-3572	-	_	_
15-104	3572-3573	:	_	_
15-105	3574-3575	\|	_	_
15-106	3576-3577	\|	_	_
15-107	3578-3584	Swin-L	_	_
15-108	3585-3586	\|	_	_
15-109	3587-3594	UPerNet	_	_
15-110	3595-3596	\|	_	_
15-111	3597-3604	384x384	_	_
15-112	3605-3606	\|	_	_
15-113	3607-3610	60K	_	_
15-114	3611-3612	\|	_	_
15-115	3613-3618	54.22	_	_
15-116	3619-3620	\|	_	_
15-117	3621-3622	\[	_	_
15-118	3622-3628	config	_	_
15-119	3628-3629	\]	_	_
15-120	3629-3630	(	_	_
15-121	3630-3637	configs	_	_
15-122	3637-3638	/	_	_
15-123	3638-3642	swin	_	_
15-124	3642-3643	/	_	_
15-125	3643-3675	config\_upernet\_swin\_large\_patch4	_	_
15-126	3675-3676	\_	_	_
15-127	3676-3684	window12	_	_
15-128	3684-3685	\_	_	_
15-129	3685-3692	384x384	_	_
15-130	3692-3693	\_	_	_
15-131	3693-3703	60k\_ign.py	_	_
15-132	3703-3704	)	_	_
15-133	3705-3706	\|	_	_
15-134	3707-3708	\[	_	_
15-135	3708-3713	model	_	_
15-136	3713-3714	\]	_	_
15-137	3714-3715	(	_	_
15-138	3715-3720	https	_	_
15-139	3720-3721	:	_	_
15-140	3721-3722	/	_	_
15-141	3722-3723	/	_	_
15-142	3723-3739	drive.google.com	_	_
15-143	3739-3740	/	_	_
15-144	3740-3744	file	_	_
15-145	3744-3745	/	_	_
15-146	3745-3746	d	_	_
15-147	3746-3747	/	_	_
15-148	3747-3780	1EarMOBHx6meawa6izNXJUfXRCTzhKT2M	_	_
15-149	3780-3781	/	_	_
15-150	3781-3785	view	_	_
15-151	3785-3786	)	_	_
15-152	3787-3788	\|	_	_
15-153	3790-3794	Here	_	_
15-154	3795-3798	are	_	_
15-155	3799-3803	some	_	_
15-156	3804-3814	comparison	_	_
15-157	3815-3822	between	_	_
15-158	3823-3826	the	_	_
15-159	3827-3835	original	_	_
15-160	3836-3848	segmentation	_	_
15-161	3849-3852	and	_	_
15-162	3853-3856	the	_	_
15-163	3857-3869	segmentation	_	_
15-164	3870-3874	that	_	_
15-165	3875-3878	has	_	_
15-166	3879-3883	been	_	_
15-167	3884-3892	obtained	_	_
15-168	3893-3898	after	_	_
15-169	3899-3902	the	_	_
15-170	3903-3911	training	_	_
15-171	3912-3913	(	_	_
15-172	3913-3925	Hautes-Alpes	_	_
15-173	3926-3933	dataset	_	_
15-174	3933-3934	)	*[93]	ONTOLOGY[93]
15-175	3934-3935	:	*[93]	ONTOLOGY[93]
15-176	3939-3940	!	_	_

#Text=\[\](resources/caption.png)  \| Original segmentation             \|  Segmentation after training \| :-------------------------:\|:-------------------------: !
16-1	3940-3941	\[	_	_
16-2	3941-3942	\]	_	_
16-3	3942-3943	(	_	_
16-4	3943-3952	resources	_	_
16-5	3952-3953	/	_	_
16-6	3953-3964	caption.png	_	_
16-7	3964-3965	)	_	_
16-8	3967-3968	\|	_	_
16-9	3969-3977	Original	_	_
16-10	3978-3990	segmentation	_	_
16-11	4003-4004	\|	_	_
16-12	4006-4018	Segmentation	_	_
16-13	4019-4024	after	_	_
16-14	4025-4033	training	_	_
16-15	4034-4035	\|	_	_
16-16	4036-4037	:	_	_
16-17	4037-4038	-	_	_
16-18	4038-4039	-	_	_
16-19	4039-4040	-	_	_
16-20	4040-4041	-	_	_
16-21	4041-4042	-	_	_
16-22	4042-4043	-	_	_
16-23	4043-4044	-	_	_
16-24	4044-4045	-	_	_
16-25	4045-4046	-	_	_
16-26	4046-4047	-	_	_
16-27	4047-4048	-	_	_
16-28	4048-4049	-	_	_
16-29	4049-4050	-	_	_
16-30	4050-4051	-	_	_
16-31	4051-4052	-	_	_
16-32	4052-4053	-	_	_
16-33	4053-4054	-	_	_
16-34	4054-4055	-	_	_
16-35	4055-4056	-	_	_
16-36	4056-4057	-	_	_
16-37	4057-4058	-	_	_
16-38	4058-4059	-	_	_
16-39	4059-4060	-	_	_
16-40	4060-4061	-	_	_
16-41	4061-4062	-	_	_
16-42	4062-4063	:	_	_
16-43	4063-4064	\|	_	_
16-44	4064-4065	:	_	_
16-45	4065-4066	-	_	_
16-46	4066-4067	-	_	_
16-47	4067-4068	-	_	_
16-48	4068-4069	-	_	_
16-49	4069-4070	-	_	_
16-50	4070-4071	-	_	_
16-51	4071-4072	-	*[94]	ONTOLOGY[94]
16-52	4072-4073	-	*[94]	ONTOLOGY[94]
16-53	4073-4074	-	*[94]	ONTOLOGY[94]
16-54	4074-4075	-	*[94]	ONTOLOGY[94]
16-55	4075-4076	-	*[94]	ONTOLOGY[94]
16-56	4076-4077	-	*[94]	ONTOLOGY[94]
16-57	4077-4078	-	*[94]	ONTOLOGY[94]
16-58	4078-4079	-	*[94]	ONTOLOGY[94]
16-59	4079-4080	-	*[94]	ONTOLOGY[94]
16-60	4080-4081	-	*[94]	ONTOLOGY[94]
16-61	4081-4082	-	*[94]	ONTOLOGY[94]
16-62	4082-4083	-	*[94]	ONTOLOGY[94]
16-63	4083-4084	-	*[94]	ONTOLOGY[94]
16-64	4084-4085	-	*[94]	ONTOLOGY[94]
16-65	4085-4086	-	*[94]	ONTOLOGY[94]
16-66	4086-4087	-	*[94]	ONTOLOGY[94]
16-67	4087-4088	-	*[94]	ONTOLOGY[94]
16-68	4088-4089	-	*[94]	ONTOLOGY[94]
16-69	4089-4090	-	*[94]	ONTOLOGY[94]
16-70	4090-4091	:	_	_
16-71	4092-4093	!	_	_

#Text=\[\](resources/Hautes-Alpes/original\_c3\_0935\_6390.png)  \|  !
17-1	4093-4094	\[	_	_
17-2	4094-4095	\]	_	_
17-3	4095-4096	(	_	_
17-4	4096-4105	resources	_	_
17-5	4105-4106	/	_	_
17-6	4106-4118	Hautes-Alpes	_	_
17-7	4118-4119	/	_	_
17-8	4119-4130	original\_c3	_	_
17-9	4130-4131	\_	_	_
17-10	4131-4135	0935	_	_
17-11	4135-4136	\_	_	_
17-12	4136-4140	6390	_	_
17-13	4140-4141	.	_	_
17-14	4141-4144	png	_	_
17-15	4144-4145	)	_	_
17-16	4147-4148	\|	_	_
17-17	4150-4151	!	_	_

#Text=\[\](resources/Hautes-Alpes/c3\_0935\_6390.png) !
18-1	4151-4152	\[	_	_
18-2	4152-4153	\]	_	_
18-3	4153-4154	(	_	_
18-4	4154-4163	resources	_	_
18-5	4163-4164	/	_	_
18-6	4164-4176	Hautes-Alpes	_	_
18-7	4176-4177	/	_	_
18-8	4177-4179	c3	_	_
18-9	4179-4180	\_	_	_
18-10	4180-4184	0935	_	_
18-11	4184-4185	\_	_	_
18-12	4185-4189	6390	_	_
18-13	4189-4190	.	_	_
18-14	4190-4193	png	_	_
18-15	4193-4194	)	_	_
18-16	4195-4196	!	_	_

#Text=\[\](resources/Hautes-Alpes/original\_c15\_0955\_6380.png)  \|  !
19-1	4196-4197	\[	_	_
19-2	4197-4198	\]	_	_
19-3	4198-4199	(	_	_
19-4	4199-4208	resources	_	_
19-5	4208-4209	/	_	_
19-6	4209-4221	Hautes-Alpes	_	_
19-7	4221-4222	/	_	_
19-8	4222-4234	original\_c15	_	_
19-9	4234-4235	\_	_	_
19-10	4235-4239	0955	_	_
19-11	4239-4240	\_	_	_
19-12	4240-4244	6380	_	_
19-13	4244-4245	.	_	_
19-14	4245-4248	png	_	_
19-15	4248-4249	)	*[108]	LICENSE[108]
19-16	4251-4252	\|	_	_
19-17	4254-4255	!	_	_

#Text=\[\](resources/Hautes-Alpes/c15\_0955\_6380.png) !
20-1	4255-4256	\[	_	_
20-2	4256-4257	\]	*[109]	LICENSE[109]
20-3	4257-4258	(	*[109]	LICENSE[109]
20-4	4258-4267	resources	_	_
20-5	4267-4268	/	_	_
20-6	4268-4280	Hautes-Alpes	_	_
20-7	4280-4281	/	_	_
20-8	4281-4284	c15	_	_
20-9	4284-4285	\_	_	_
20-10	4285-4289	0955	_	_
20-11	4289-4290	\_	_	_
20-12	4290-4294	6380	_	_
20-13	4294-4295	.	_	_
20-14	4295-4298	png	_	_
20-15	4298-4299	)	_	_
20-16	4300-4301	!	_	_

#Text=\[\](resources/Hautes-Alpes/original\_c19\_0935\_6390.png)  \|  !
21-1	4301-4302	\[	_	_
21-2	4302-4303	\]	_	_
21-3	4303-4304	(	_	_
21-4	4304-4313	resources	_	_
21-5	4313-4314	/	_	_
21-6	4314-4326	Hautes-Alpes	_	_
21-7	4326-4327	/	_	_
21-8	4327-4339	original\_c19	_	_
21-9	4339-4340	\_	_	_
21-10	4340-4344	0935	_	_
21-11	4344-4345	\_	_	_
21-12	4345-4349	6390	_	_
21-13	4349-4350	.	_	_
21-14	4350-4353	png	_	_
21-15	4353-4354	)	_	_
21-16	4356-4357	\|	_	_
21-17	4359-4360	!	_	_

#Text=\[\](resources/Hautes-Alpes/c19\_0935\_6390.png)  We have also tested the model on satellite photos from another French department to see if the trained model generalizes to other locations.
22-1	4360-4361	\[	_	_
22-2	4361-4362	\]	_	_
22-3	4362-4363	(	_	_
22-4	4363-4372	resources	_	_
22-5	4372-4373	/	_	_
22-6	4373-4385	Hautes-Alpes	_	_
22-7	4385-4386	/	_	_
22-8	4386-4389	c19	_	_
22-9	4389-4390	\_	_	_
22-10	4390-4394	0935	_	_
22-11	4394-4395	\_	_	_
22-12	4395-4399	6390	_	_
22-13	4399-4400	.	_	_
22-14	4400-4403	png	_	_
22-15	4403-4404	)	_	_
22-16	4406-4408	We	_	_
22-17	4409-4413	have	*[109]	SOFTWARE[109]
22-18	4414-4418	also	*[109]	SOFTWARE[109]
22-19	4419-4425	tested	*[109]	SOFTWARE[109]
22-20	4426-4429	the	*[109]	SOFTWARE[109]
22-21	4430-4435	model	_	_
22-22	4436-4438	on	_	_
22-23	4439-4448	satellite	_	_
22-24	4449-4455	photos	_	_
22-25	4456-4460	from	_	_
22-26	4461-4468	another	_	_
22-27	4469-4475	French	_	_
22-28	4476-4486	department	_	_
22-29	4487-4489	to	_	_
22-30	4490-4493	see	_	_
22-31	4494-4496	if	_	_
22-32	4497-4500	the	_	_
22-33	4501-4508	trained	_	_
22-34	4509-4514	model	_	_
22-35	4515-4526	generalizes	_	_
22-36	4527-4529	to	_	_
22-37	4530-4535	other	_	_
22-38	4536-4545	locations	_	_
22-39	4545-4546	.	_	_

#Text=We chose Cantal and here are a few samples of the obtained results:   \| Original segmentation             \|  Segmentation after training \| :-------------------------:\|:-------------------------: !
23-1	4548-4550	We	_	_
23-2	4551-4556	chose	_	_
23-3	4557-4563	Cantal	_	_
23-4	4564-4567	and	_	_
23-5	4568-4572	here	_	_
23-6	4573-4576	are	_	_
23-7	4577-4578	a	_	_
23-8	4579-4582	few	_	_
23-9	4583-4590	samples	_	_
23-10	4591-4593	of	_	_
23-11	4594-4597	the	_	_
23-12	4598-4606	obtained	_	_
23-13	4607-4614	results	_	_
23-14	4614-4615	:	_	_
23-15	4618-4619	\|	_	_
23-16	4620-4628	Original	_	_
23-17	4629-4641	segmentation	_	_
23-18	4654-4655	\|	_	_
23-19	4657-4669	Segmentation	_	_
23-20	4670-4675	after	_	_
23-21	4676-4684	training	_	_
23-22	4685-4686	\|	_	_
23-23	4687-4688	:	_	_
23-24	4688-4689	-	_	_
23-25	4689-4690	-	_	_
23-26	4690-4691	-	_	_
23-27	4691-4692	-	_	_
23-28	4692-4693	-	_	_
23-29	4693-4694	-	_	_
23-30	4694-4695	-	_	_
23-31	4695-4696	-	_	_
23-32	4696-4697	-	_	_
23-33	4697-4698	-	_	_
23-34	4698-4699	-	_	_
23-35	4699-4700	-	_	_
23-36	4700-4701	-	_	_
23-37	4701-4702	-	_	_
23-38	4702-4703	-	_	_
23-39	4703-4704	-	_	_
23-40	4704-4705	-	_	_
23-41	4705-4706	-	_	_
23-42	4706-4707	-	_	_
23-43	4707-4708	-	_	_
23-44	4708-4709	-	_	_
23-45	4709-4710	-	_	_
23-46	4710-4711	-	_	_
23-47	4711-4712	-	_	_
23-48	4712-4713	-	*[95]	ONTOLOGY[95]
23-49	4713-4714	:	*[95]	ONTOLOGY[95]
23-50	4714-4715	\|	*[95]	ONTOLOGY[95]
23-51	4715-4716	:	*[95]	ONTOLOGY[95]
23-52	4716-4717	-	*[95]	ONTOLOGY[95]
23-53	4717-4718	-	*[95]	ONTOLOGY[95]
23-54	4718-4719	-	*[95]	ONTOLOGY[95]
23-55	4719-4720	-	*[95]	ONTOLOGY[95]
23-56	4720-4721	-	*[95]	ONTOLOGY[95]
23-57	4721-4722	-	*[95]	ONTOLOGY[95]
23-58	4722-4723	-	*[95]	ONTOLOGY[95]
23-59	4723-4724	-	*[95]	ONTOLOGY[95]
23-60	4724-4725	-	*[95]	ONTOLOGY[95]
23-61	4725-4726	-	*[95]	ONTOLOGY[95]
23-62	4726-4727	-	*[95]	ONTOLOGY[95]
23-63	4727-4728	-	*[95]	ONTOLOGY[95]
23-64	4728-4729	-	*[95]	ONTOLOGY[95]
23-65	4729-4730	-	*[95]	ONTOLOGY[95]
23-66	4730-4731	-	*[95]	ONTOLOGY[95]
23-67	4731-4732	-	*[95]	ONTOLOGY[95]
23-68	4732-4733	-	_	_
23-69	4733-4734	-	_	_
23-70	4734-4735	-	_	_
23-71	4735-4736	-	_	_
23-72	4736-4737	-	_	_
23-73	4737-4738	-	_	_
23-74	4738-4739	-	_	_
23-75	4739-4740	-	_	_
23-76	4740-4741	-	_	_
23-77	4741-4742	:	_	_
23-78	4743-4744	!	_	_

#Text=\[\](resources/Cantal/original\_c7\_0665\_6475.png)  \|  !
24-1	4744-4745	\[	_	_
24-2	4745-4746	\]	_	_
24-3	4746-4747	(	_	_
24-4	4747-4756	resources	_	_
24-5	4756-4757	/	_	_
24-6	4757-4763	Cantal	_	_
24-7	4763-4764	/	_	_
24-8	4764-4775	original\_c7	_	_
24-9	4775-4776	\_	_	_
24-10	4776-4780	0665	_	_
24-11	4780-4781	\_	_	_
24-12	4781-4785	6475	_	_
24-13	4785-4786	.	_	_
24-14	4786-4789	png	_	_
24-15	4789-4790	)	_	_
24-16	4792-4793	\|	_	_
24-17	4795-4796	!	_	_

#Text=\[\](resources/Cantal/c7\_0665\_6475.png) !
25-1	4796-4797	\[	_	_
25-2	4797-4798	\]	_	_
25-3	4798-4799	(	_	_
25-4	4799-4808	resources	_	_
25-5	4808-4809	/	_	_
25-6	4809-4815	Cantal	_	_
25-7	4815-4816	/	_	_
25-8	4816-4818	c7	_	_
25-9	4818-4819	\_	_	_
25-10	4819-4823	0665	_	_
25-11	4823-4824	\_	_	_
25-12	4824-4828	6475	_	_
25-13	4828-4829	.	*[93]	CONFERENCE[93]
25-14	4829-4832	png	*[93]	CONFERENCE[93]
25-15	4832-4833	)	*[93]	CONFERENCE[93]
25-16	4834-4835	!	_	_

#Text=\[\](resources/Cantal/original\_c75\_0665\_6475.png)  \|  !
26-1	4835-4836	\[	_	_
26-2	4836-4837	\]	_	_
26-3	4837-4838	(	_	_
26-4	4838-4847	resources	_	_
26-5	4847-4848	/	_	_
26-6	4848-4854	Cantal	_	_
26-7	4854-4855	/	_	_
26-8	4855-4867	original\_c75	_	_
26-9	4867-4868	\_	_	_
26-10	4868-4872	0665	_	_
26-11	4872-4873	\_	_	_
26-12	4873-4877	6475	_	_
26-13	4877-4878	.	_	_
26-14	4878-4881	png	_	_
26-15	4881-4882	)	_	_
26-16	4884-4885	\|	_	_
26-17	4887-4888	!	_	_

#Text=\[\](resources/Cantal/c75\_0665\_6475.png) !
27-1	4888-4889	\[	_	_
27-2	4889-4890	\]	_	_
27-3	4890-4891	(	_	_
27-4	4891-4900	resources	_	_
27-5	4900-4901	/	_	_
27-6	4901-4907	Cantal	_	_
27-7	4907-4908	/	_	_
27-8	4908-4911	c75	_	_
27-9	4911-4912	\_	*[110]	LICENSE[110]
27-10	4912-4916	0665	*[110]	LICENSE[110]
27-11	4916-4917	\_	*[110]	LICENSE[110]
27-12	4917-4921	6475	*[110]	LICENSE[110]
27-13	4921-4922	.	_	_
27-14	4922-4925	png	_	_
27-15	4925-4926	)	_	_
27-16	4927-4928	!	_	_

#Text=\[\](resources/Cantal/original\_c87\_0665\_6475.png)  \|  !
28-1	4928-4929	\[	_	_
28-2	4929-4930	\]	_	_
28-3	4930-4931	(	_	_
28-4	4931-4940	resources	_	_
28-5	4940-4941	/	_	_
28-6	4941-4947	Cantal	_	_
28-7	4947-4948	/	*[94]	CONFERENCE[94]
28-8	4948-4960	original\_c87	*[94]	CONFERENCE[94]
28-9	4960-4961	\_	*[94]	CONFERENCE[94]
28-10	4961-4965	0665	*[94]	CONFERENCE[94]
28-11	4965-4966	\_	*[94]	CONFERENCE[94]
28-12	4966-4970	6475	*[94]	CONFERENCE[94]
28-13	4970-4971	.	*[94]	CONFERENCE[94]
28-14	4971-4974	png	*[94]	CONFERENCE[94]
28-15	4974-4975	)	*[94]	CONFERENCE[94]
28-16	4977-4978	\|	*[94]	CONFERENCE[94]
28-17	4980-4981	!	_	_

#Text=\[\](resources/Cantal/c87\_0665\_6475.png)  These latest results show that the model is capable of producing a segmentation even if the photos are located in another department and even if there are a lot of pixels without information (in black), which is encouraging.  ### Limitations As illustrated in the previous images that the results are not perfect.
29-1	4981-4982	\[	_	_
29-2	4982-4983	\]	_	_
29-3	4983-4984	(	_	_
29-4	4984-4993	resources	_	_
29-5	4993-4994	/	_	_
29-6	4994-5000	Cantal	_	_
29-7	5000-5001	/	_	_
29-8	5001-5004	c87	_	_
29-9	5004-5005	\_	_	_
29-10	5005-5009	0665	_	_
29-11	5009-5010	\_	_	_
29-12	5010-5014	6475	_	_
29-13	5014-5015	.	_	_
29-14	5015-5018	png	_	_
29-15	5018-5019	)	_	_
29-16	5021-5026	These	_	_
29-17	5027-5033	latest	_	_
29-18	5034-5041	results	_	_
29-19	5042-5046	show	_	_
29-20	5047-5051	that	_	_
29-21	5052-5055	the	_	_
29-22	5056-5061	model	_	_
29-23	5062-5064	is	_	_
29-24	5065-5072	capable	_	_
29-25	5073-5075	of	_	_
29-26	5076-5085	producing	_	_
29-27	5086-5087	a	_	_
29-28	5088-5100	segmentation	_	_
29-29	5101-5105	even	_	_
29-30	5106-5108	if	_	_
29-31	5109-5112	the	_	_
29-32	5113-5119	photos	_	_
29-33	5120-5123	are	_	_
29-34	5124-5131	located	_	_
29-35	5132-5134	in	_	_
29-36	5135-5142	another	_	_
29-37	5143-5153	department	_	_
29-38	5154-5157	and	_	_
29-39	5158-5162	even	_	_
29-40	5163-5165	if	_	_
29-41	5166-5171	there	_	_
29-42	5172-5175	are	_	_
29-43	5176-5177	a	_	_
29-44	5178-5181	lot	*[102]	PROJECT[102]
29-45	5182-5184	of	*[102]	PROJECT[102]
29-46	5185-5191	pixels	*[102]	PROJECT[102]
29-47	5192-5199	without	*[102]	PROJECT[102]
29-48	5200-5211	information	*[102]	PROJECT[102]
29-49	5212-5213	(	*[102]	PROJECT[102]
29-50	5213-5215	in	*[102]	PROJECT[102]
29-51	5216-5221	black	*[102]	PROJECT[102]
29-52	5221-5222	)	*[102]	PROJECT[102]
29-53	5222-5223	,	*[102]	PROJECT[102]
29-54	5224-5229	which	*[102]	PROJECT[102]
29-55	5230-5232	is	*[102]	PROJECT[102]
29-56	5233-5244	encouraging	*[102]	PROJECT[102]
29-57	5244-5245	.	*[102]	PROJECT[102]
29-58	5247-5248	#	*[102]	PROJECT[102]
29-59	5248-5249	#	*[102]	PROJECT[102]
29-60	5249-5250	#	*[102]	PROJECT[102]
29-61	5251-5262	Limitations	_	_
29-62	5263-5265	As	_	_
29-63	5266-5277	illustrated	_	_
29-64	5278-5280	in	_	_
29-65	5281-5284	the	_	_
29-66	5285-5293	previous	_	_
29-67	5294-5300	images	_	_
29-68	5301-5305	that	_	_
29-69	5306-5309	the	_	_
29-70	5310-5317	results	_	_
29-71	5318-5321	are	_	_
29-72	5322-5325	not	_	_
29-73	5326-5333	perfect	_	_
29-74	5333-5334	.	_	_

#Text=This is caused by the inherent limits of the data used during the training phase.
30-1	5335-5339	This	_	_
30-2	5340-5342	is	_	_
30-3	5343-5349	caused	_	_
30-4	5350-5352	by	_	_
30-5	5353-5356	the	_	_
30-6	5357-5365	inherent	_	_
30-7	5366-5372	limits	*[95]	CONFERENCE[95]
30-8	5373-5375	of	*[95]	CONFERENCE[95]
30-9	5376-5379	the	*[95]	CONFERENCE[95]
30-10	5380-5384	data	*[95]	CONFERENCE[95]
30-11	5385-5389	used	*[95]	CONFERENCE[95]
30-12	5390-5396	during	_	_
30-13	5397-5400	the	_	_
30-14	5401-5409	training	_	_
30-15	5410-5415	phase	_	_
30-16	5415-5416	.	_	_

#Text=The two main limitations are:   \* The satellite photos and the original segmentation were not made at the same time, so the segmentation is not always accurate.
31-1	5417-5420	The	_	_
31-2	5421-5424	two	_	_
31-3	5425-5429	main	_	_
31-4	5430-5441	limitations	_	_
31-5	5442-5445	are	_	_
31-6	5445-5446	:	_	_
31-7	5449-5450	\*	_	_
31-8	5451-5454	The	_	_
31-9	5455-5464	satellite	_	_
31-10	5465-5471	photos	_	_
31-11	5472-5475	and	*[96]	CONFERENCE[96]
31-12	5476-5479	the	*[96]	CONFERENCE[96]
31-13	5480-5488	original	*[96]	CONFERENCE[96]
31-14	5489-5501	segmentation	*[96]	CONFERENCE[96]
31-15	5502-5506	were	*[96]	CONFERENCE[96]
31-16	5507-5510	not	*[96]	CONFERENCE[96]
31-17	5511-5515	made	*[96]	CONFERENCE[96]
31-18	5516-5518	at	*[96]	CONFERENCE[96]
31-19	5519-5522	the	*[96]	CONFERENCE[96]
31-20	5523-5527	same	*[96]	CONFERENCE[96]
31-21	5528-5532	time	*[96]	CONFERENCE[96]
31-22	5532-5533	,	*[96]	CONFERENCE[96]
31-23	5534-5536	so	*[96]	CONFERENCE[96]
31-24	5537-5540	the	*[96]	CONFERENCE[96]
31-25	5541-5553	segmentation	*[96]	CONFERENCE[96]
31-26	5554-5556	is	_	_
31-27	5557-5560	not	_	_
31-28	5561-5567	always	_	_
31-29	5568-5576	accurate	_	_
31-30	5576-5577	.	_	_

#Text=For example, we can see it in the following images: a zone is segmented as "dense forest" even if there are not many trees (that is why the segmentation after training, on the right, classed it as "sparse forest"):    \| Original segmentation             \|  Segmentation after training \| :-------------------------:\|:-------------------------: !
32-1	5578-5581	For	_	_
32-2	5582-5589	example	_	_
32-3	5589-5590	,	_	_
32-4	5591-5593	we	_	_
32-5	5594-5597	can	_	_
32-6	5598-5601	see	_	_
32-7	5602-5604	it	_	_
32-8	5605-5607	in	_	_
32-9	5608-5611	the	_	_
32-10	5612-5621	following	_	_
32-11	5622-5628	images	*[103]	PROGLANG[103]
32-12	5628-5629	:	*[103]	PROGLANG[103]
32-13	5630-5631	a	*[103]	PROGLANG[103]
32-14	5632-5636	zone	*[103]	PROGLANG[103]
32-15	5637-5639	is	*[103]	PROGLANG[103]
32-16	5640-5649	segmented	*[103]	PROGLANG[103]
32-17	5650-5652	as	*[103]	PROGLANG[103]
32-18	5653-5654	"	*[103]	PROGLANG[103]
32-19	5654-5659	dense	*[103]	PROGLANG[103]
32-20	5660-5666	forest	*[103]	PROGLANG[103]
32-21	5666-5667	"	*[103]	PROGLANG[103]
32-22	5668-5672	even	_	_
32-23	5673-5675	if	_	_
32-24	5676-5681	there	_	_
32-25	5682-5685	are	_	_
32-26	5686-5689	not	_	_
32-27	5690-5694	many	_	_
32-28	5695-5700	trees	_	_
32-29	5701-5702	(	_	_
32-30	5702-5706	that	_	_
32-31	5707-5709	is	_	_
32-32	5710-5713	why	_	_
32-33	5714-5717	the	_	_
32-34	5718-5730	segmentation	_	_
32-35	5731-5736	after	_	_
32-36	5737-5745	training	_	_
32-37	5745-5746	,	_	_
32-38	5747-5749	on	_	_
32-39	5750-5753	the	_	_
32-40	5754-5759	right	_	_
32-41	5759-5760	,	_	_
32-42	5761-5768	classed	_	_
32-43	5769-5771	it	_	_
32-44	5772-5774	as	_	_
32-45	5775-5776	"	_	_
32-46	5776-5782	sparse	_	_
32-47	5783-5789	forest	_	_
32-48	5789-5790	"	_	_
32-49	5790-5791	)	_	_
32-50	5791-5792	:	_	_
32-51	5796-5797	\|	_	_
32-52	5798-5806	Original	_	_
32-53	5807-5819	segmentation	_	_
32-54	5832-5833	\|	_	_
32-55	5835-5847	Segmentation	_	_
32-56	5848-5853	after	_	_
32-57	5854-5862	training	_	_
32-58	5863-5864	\|	_	_
32-59	5865-5866	:	_	_
32-60	5866-5867	-	_	_
32-61	5867-5868	-	_	_
32-62	5868-5869	-	_	_
32-63	5869-5870	-	_	_
32-64	5870-5871	-	_	_
32-65	5871-5872	-	_	_
32-66	5872-5873	-	_	_
32-67	5873-5874	-	_	_
32-68	5874-5875	-	_	_
32-69	5875-5876	-	_	_
32-70	5876-5877	-	_	_
32-71	5877-5878	-	_	_
32-72	5878-5879	-	_	_
32-73	5879-5880	-	_	_
32-74	5880-5881	-	_	_
32-75	5881-5882	-	_	_
32-76	5882-5883	-	_	_
32-77	5883-5884	-	_	_
32-78	5884-5885	-	_	_
32-79	5885-5886	-	_	_
32-80	5886-5887	-	_	_
32-81	5887-5888	-	_	_
32-82	5888-5889	-	_	_
32-83	5889-5890	-	_	_
32-84	5890-5891	-	_	_
32-85	5891-5892	:	_	_
32-86	5892-5893	\|	_	_
32-87	5893-5894	:	_	_
32-88	5894-5895	-	_	_
32-89	5895-5896	-	_	_
32-90	5896-5897	-	_	_
32-91	5897-5898	-	_	_
32-92	5898-5899	-	_	_
32-93	5899-5900	-	_	_
32-94	5900-5901	-	_	_
32-95	5901-5902	-	_	_
32-96	5902-5903	-	_	_
32-97	5903-5904	-	_	_
32-98	5904-5905	-	_	_
32-99	5905-5906	-	_	_
32-100	5906-5907	-	_	_
32-101	5907-5908	-	_	_
32-102	5908-5909	-	_	_
32-103	5909-5910	-	_	_
32-104	5910-5911	-	_	_
32-105	5911-5912	-	_	_
32-106	5912-5913	-	_	_
32-107	5913-5914	-	_	_
32-108	5914-5915	-	_	_
32-109	5915-5916	-	_	_
32-110	5916-5917	-	_	_
32-111	5917-5918	-	_	_
32-112	5918-5919	-	_	_
32-113	5919-5920	:	_	_
32-114	5921-5922	!	_	_

#Text=\[\](resources/Hautes-Alpes/original\_c11\_0915\_6395.png)  \|  !
33-1	5922-5923	\[	_	_
33-2	5923-5924	\]	_	_
33-3	5924-5925	(	_	_
33-4	5925-5934	resources	_	_
33-5	5934-5935	/	_	_
33-6	5935-5947	Hautes-Alpes	_	_
33-7	5947-5948	/	_	_
33-8	5948-5960	original\_c11	_	_
33-9	5960-5961	\_	_	_
33-10	5961-5965	0915	_	_
33-11	5965-5966	\_	_	_
33-12	5966-5970	6395	_	_
33-13	5970-5971	.	_	_
33-14	5971-5974	png	_	_
33-15	5974-5975	)	_	_
33-16	5977-5978	\|	_	_
33-17	5980-5981	!	_	_

#Text=\[\](resources/Hautes-Alpes/c11\_0915\_6395.png)  \* Sometimes there are zones without information (represented in black) in the dataset.
34-1	5981-5982	\[	_	_
34-2	5982-5983	\]	_	_
34-3	5983-5984	(	_	_
34-4	5984-5993	resources	_	_
34-5	5993-5994	/	_	_
34-6	5994-6006	Hautes-Alpes	_	_
34-7	6006-6007	/	_	_
34-8	6007-6010	c11	_	_
34-9	6010-6011	\_	_	_
34-10	6011-6015	0915	_	_
34-11	6015-6016	\_	_	_
34-12	6016-6020	6395	_	_
34-13	6020-6021	.	_	_
34-14	6021-6024	png	_	_
34-15	6024-6025	)	_	_
34-16	6027-6028	\*	_	_
34-17	6029-6038	Sometimes	_	_
34-18	6039-6044	there	_	_
34-19	6045-6048	are	_	_
34-20	6049-6054	zones	_	_
34-21	6055-6062	without	_	_
34-22	6063-6074	information	_	_
34-23	6075-6076	(	_	_
34-24	6076-6087	represented	_	_
34-25	6088-6090	in	_	_
34-26	6091-6096	black	_	_
34-27	6096-6097	)	_	_
34-28	6098-6100	in	_	_
34-29	6101-6104	the	*[103]	EVALMETRIC[103]
34-30	6105-6112	dataset	_	_
34-31	6112-6113	.	_	_

#Text=Fortunately, we can ignore them during the training phase, but we also lose some information, which is a problem: we thus removed the tiles that had more than 50% of unidentified pixels to try to improve the training.  ## Usage  ### Installation  Please refer to \[get\_started.md\](https://github.com/open-mmlab/mmsegmentation/blob/master/docs/get\_started.md#installation) for installation and dataset preparation.
35-1	6114-6125	Fortunately	_	_
35-2	6125-6126	,	_	_
35-3	6127-6129	we	_	_
35-4	6130-6133	can	_	_
35-5	6134-6140	ignore	_	_
35-6	6141-6145	them	_	_
35-7	6146-6152	during	_	_
35-8	6153-6156	the	_	_
35-9	6157-6165	training	_	_
35-10	6166-6171	phase	_	_
35-11	6171-6172	,	_	_
35-12	6173-6176	but	_	_
35-13	6177-6179	we	_	_
35-14	6180-6184	also	_	_
35-15	6185-6189	lose	_	_
35-16	6190-6194	some	_	_
35-17	6195-6206	information	_	_
35-18	6206-6207	,	_	_
35-19	6208-6213	which	_	_
35-20	6214-6216	is	_	_
35-21	6217-6218	a	_	_
35-22	6219-6226	problem	_	_
35-23	6226-6227	:	_	_
35-24	6228-6230	we	_	_
35-25	6231-6235	thus	_	_
35-26	6236-6243	removed	_	_
35-27	6244-6247	the	_	_
35-28	6248-6253	tiles	_	_
35-29	6254-6258	that	_	_
35-30	6259-6262	had	_	_
35-31	6263-6267	more	_	_
35-32	6268-6272	than	_	_
35-33	6273-6276	50%	_	_
35-34	6277-6279	of	_	_
35-35	6280-6292	unidentified	_	_
35-36	6293-6299	pixels	_	_
35-37	6300-6302	to	*[96]	DATASET[96]
35-38	6303-6306	try	*[96]	DATASET[96]
35-39	6307-6309	to	*[96]	DATASET[96]
35-40	6310-6317	improve	*[96]	DATASET[96]
35-41	6318-6321	the	*[96]	DATASET[96]
35-42	6322-6330	training	_	_
35-43	6330-6331	.	_	_
35-44	6333-6334	#	_	_
35-45	6334-6335	#	_	_
35-46	6336-6341	Usage	_	_
35-47	6343-6344	#	_	_
35-48	6344-6345	#	_	_
35-49	6345-6346	#	_	_
35-50	6347-6359	Installation	_	_
35-51	6361-6367	Please	_	_
35-52	6368-6373	refer	_	_
35-53	6374-6376	to	_	_
35-54	6377-6378	\[	_	_
35-55	6378-6392	get\_started.md	_	_
35-56	6392-6393	\]	_	_
35-57	6393-6394	(	_	_
35-58	6394-6399	https	_	_
35-59	6399-6400	:	_	_
35-60	6400-6401	/	_	_
35-61	6401-6402	/	_	_
35-62	6402-6412	github.com	_	_
35-63	6412-6413	/	_	_
35-64	6413-6423	open-mmlab	_	_
35-65	6423-6424	/	_	_
35-66	6424-6438	mmsegmentation	_	_
35-67	6438-6439	/	_	_
35-68	6439-6443	blob	_	_
35-69	6443-6444	/	_	_
35-70	6444-6450	master	_	_
35-71	6450-6451	/	_	_
35-72	6451-6455	docs	_	_
35-73	6455-6456	/	_	_
35-74	6456-6470	get\_started.md	_	_
35-75	6470-6471	#	_	_
35-76	6471-6483	installation	_	_
35-77	6483-6484	)	_	_
35-78	6485-6488	for	_	_
35-79	6489-6501	installation	_	_
35-80	6502-6505	and	_	_
35-81	6506-6513	dataset	_	_
35-82	6514-6525	preparation	_	_
35-83	6525-6526	.	_	_

#Text=\*\*Notes:\*\*  During the installation, it is important to:    \* Install MMSegmentation in dev mode: ``` git clone https://github.com/open-mmlab/mmsegmentation.git cd mmsegmentation pip install -e . ``` \* Copy the \*mmcv\_custom\* and \*mmseg\* folders into the \*mmsegmentation\* folder  ### Inference The pre-trained model (i.e. checkpoint file) for satellite image segmentation is available for download \[here\](https://drive.google.com/file/d/1EarMOBHx6meawa6izNXJUfXRCTzhKT2M/view?
36-1	6528-6529	\*	_	_
36-2	6529-6530	\*	_	_
36-3	6530-6535	Notes	_	_
36-4	6535-6536	:	_	_
36-5	6536-6537	\*	_	_
36-6	6537-6538	\*	_	_
36-7	6540-6546	During	_	_
36-8	6547-6550	the	_	_
36-9	6551-6563	installation	_	_
36-10	6563-6564	,	_	_
36-11	6565-6567	it	_	_
36-12	6568-6570	is	_	_
36-13	6571-6580	important	_	_
36-14	6581-6583	to	_	_
36-15	6583-6584	:	_	_
36-16	6588-6589	\*	_	_
36-17	6590-6597	Install	_	_
36-18	6598-6612	MMSegmentation	_	_
36-19	6613-6615	in	*[111]	LICENSE[111]
36-20	6616-6619	dev	*[111]	LICENSE[111]
36-21	6620-6624	mode	*[111]	LICENSE[111]
36-22	6624-6625	:	*[111]	LICENSE[111]
36-23	6626-6627	`	*[111]	LICENSE[111]
36-24	6627-6628	`	*[111]	LICENSE[111]
36-25	6628-6629	`	*[111]	LICENSE[111]
36-26	6630-6633	git	*[111]	LICENSE[111]
36-27	6634-6639	clone	*[111]	LICENSE[111]
36-28	6640-6645	https	*[111]	LICENSE[111]
36-29	6645-6646	:	*[111]	LICENSE[111]
36-30	6646-6647	/	*[111]	LICENSE[111]
36-31	6647-6648	/	*[111]	LICENSE[111]
36-32	6648-6658	github.com	*[111]	LICENSE[111]
36-33	6658-6659	/	*[111]	LICENSE[111]
36-34	6659-6669	open-mmlab	*[111]	LICENSE[111]
36-35	6669-6670	/	*[111]	LICENSE[111]
36-36	6670-6688	mmsegmentation.git	*[111]	LICENSE[111]
36-36	6670-6684	mmsegmentation	*[111]	LICENSE[111]
36-36	6685-6688	git	*[111]	LICENSE[111]
36-37	6689-6691	cd	*[111]	LICENSE[111]
36-38	6692-6706	mmsegmentation	*[111]	LICENSE[111]
36-39	6707-6710	pip	*[111]	LICENSE[111]
36-40	6711-6718	install	*[111]	LICENSE[111]
36-41	6719-6720	-	*[111]	LICENSE[111]
36-42	6720-6721	e	*[111]	LICENSE[111]
36-43	6722-6723	.	*[111]	LICENSE[111]
36-44	6724-6725	`	*[111]	LICENSE[111]
36-45	6725-6726	`	*[111]	LICENSE[111]
36-46	6726-6727	`	*[111]	LICENSE[111]
36-47	6728-6729	\*	*[111]	LICENSE[111]
36-48	6730-6734	Copy	*[111]	LICENSE[111]
36-49	6735-6738	the	*[111]	LICENSE[111]
36-50	6739-6740	\*	*[111]	LICENSE[111]
36-51	6740-6751	mmcv\_custom	*[111]	LICENSE[111]
36-52	6751-6752	\*	*[111]	LICENSE[111]
36-53	6753-6756	and	*[111]	LICENSE[111]
36-54	6757-6758	\*	*[111]	LICENSE[111]
36-55	6758-6763	mmseg	*[111]	LICENSE[111]
36-56	6763-6764	\*	*[111]	LICENSE[111]
36-57	6765-6772	folders	*[111]	LICENSE[111]
36-58	6773-6777	into	*[111]	LICENSE[111]
36-59	6778-6781	the	*[111]	LICENSE[111]
36-60	6782-6783	\*	*[111]	LICENSE[111]
36-61	6783-6797	mmsegmentation	*[111]	LICENSE[111]
36-62	6797-6798	\*	*[111]	LICENSE[111]
36-63	6799-6805	folder	*[111]	LICENSE[111]
36-64	6807-6808	#	*[111]	LICENSE[111]
36-65	6808-6809	#	*[111]	LICENSE[111]
36-66	6809-6810	#	*[111]	LICENSE[111]
36-67	6811-6820	Inference	*[111]	LICENSE[111]
36-68	6821-6824	The	*[111]	LICENSE[111]
36-69	6825-6836	pre-trained	*[111]	LICENSE[111]
36-70	6837-6842	model	*[111]	LICENSE[111]
36-71	6843-6844	(	*[111]	LICENSE[111]
36-72	6844-6847	i.e	*[111]	LICENSE[111]
36-73	6847-6848	.	*[111]	LICENSE[111]
36-74	6849-6859	checkpoint	*[111]	LICENSE[111]
36-75	6860-6864	file	*[111]	LICENSE[111]
36-76	6864-6865	)	*[111]	LICENSE[111]
36-77	6866-6869	for	*[111]	LICENSE[111]
36-78	6870-6879	satellite	*[111]	LICENSE[111]
36-79	6880-6885	image	*[111]	LICENSE[111]
36-80	6886-6898	segmentation	*[111]	LICENSE[111]
36-81	6899-6901	is	*[111]	LICENSE[111]
36-82	6902-6911	available	*[111]	LICENSE[111]
36-83	6912-6915	for	*[111]	LICENSE[111]
36-84	6916-6924	download	*[111]	LICENSE[111]
36-85	6925-6926	\[	*[111]	LICENSE[111]
36-86	6926-6930	here	*[111]	LICENSE[111]
36-87	6930-6931	\]	*[111]	LICENSE[111]
36-88	6931-6932	(	*[111]	LICENSE[111]
36-89	6932-6937	https	*[111]	LICENSE[111]
36-90	6937-6938	:	*[111]	LICENSE[111]
36-91	6938-6939	/	*[111]	LICENSE[111]
36-92	6939-6940	/	*[111]	LICENSE[111]
36-93	6940-6956	drive.google.com	*[111]	LICENSE[111]
36-94	6956-6957	/	*[111]	LICENSE[111]
36-95	6957-6961	file	*[111]	LICENSE[111]
36-96	6961-6962	/	*[111]	LICENSE[111]
36-97	6962-6963	d	*[111]	LICENSE[111]
36-98	6963-6964	/	*[111]	LICENSE[111]
36-99	6964-6997	1EarMOBHx6meawa6izNXJUfXRCTzhKT2M	_	_
36-100	6997-6998	/	_	_
36-101	6998-7002	view	_	_
36-102	7002-7003	?	_	_

#Text=usp=sharing).  ``` # single-gpu testing python tools/test.py <CONFIG\_FILE> <SEG\_CHECKPOINT\_FILE> --eval mIoU  # multi-gpu testing tools/dist\_test.sh <CONFIG\_FILE> <SEG\_CHECKPOINT\_FILE> <GPU\_NUM> --eval mIoU  # multi-gpu, multi-scale testing tools/dist\_test.sh <CONFIG\_FILE> <SEG\_CHECKPOINT\_FILE> <GPU\_NUM> --aug-test --eval mIoU ```  Example on the Ampli ANR project:   ``` # Evaluate checkpoint on a single GPU python tools/test.py configs/swin/config\_upernet\_swin\_large\_patch4\_window12\_384x384\_60k\_ign.py checkpoints/ign\_60k\_swin\_large\_patch4\_window12\_384.pth --eval mIoU  # Display segmentation results python tools/test.py configs/swin/config\_upernet\_swin\_large\_patch4\_window12\_384x384\_60k\_ign.py checkpoints/ign\_60k\_swin\_large\_patch4\_window12\_384.pth --show ```  ### Training  To train with pre-trained models, run: ``` # single-gpu training python tools/train.py <CONFIG\_FILE> --options model.pretrained=<PRETRAIN\_MODEL> \[model.backbone.use\_checkpoint=True\] \[other optional arguments\]  # multi-gpu training tools/dist\_train.sh <CONFIG\_FILE> <GPU\_NUM> --options model.pretrained=<PRETRAIN\_MODEL> \[model.backbone.use\_checkpoint=True\] \[other optional arguments\]  ```  Example on the Ampli ANR project with the ImageNet-22K pretrained model (available \[here\](https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin\_large\_patch4\_window12\_384\_22k.pth)) :   ``` python tools/train.py configs/swin/config\_upernet\_swin\_large\_patch4\_window12\_384x384\_60k\_ign.py --options model.pretrained=".
37-1	7003-7006	usp	_	_
37-2	7006-7007	=	_	_
37-3	7007-7014	sharing	_	_
37-4	7014-7015	)	_	_
37-5	7015-7016	.	_	_
37-6	7018-7019	`	_	_
37-7	7019-7020	`	_	_
37-8	7020-7021	`	_	_
37-9	7022-7023	#	_	_
37-10	7024-7034	single-gpu	_	_
37-11	7035-7042	testing	_	_
37-12	7043-7049	python	_	_
37-13	7050-7055	tools	_	_
37-14	7055-7056	/	_	_
37-15	7056-7063	test.py	_	_
37-16	7064-7065	<	_	_
37-17	7065-7076	CONFIG\_FILE	_	_
37-18	7076-7077	>	_	_
37-19	7078-7079	<	_	_
37-20	7079-7098	SEG\_CHECKPOINT\_FILE	_	_
37-21	7098-7099	>	_	_
37-22	7100-7101	-	_	_
37-23	7101-7102	-	_	_
37-24	7102-7106	eval	_	_
37-25	7107-7111	mIoU	_	_
37-26	7113-7114	#	_	_
37-27	7115-7124	multi-gpu	_	_
37-28	7125-7132	testing	_	_
37-29	7133-7138	tools	_	_
37-30	7138-7139	/	_	_
37-31	7139-7151	dist\_test.sh	_	_
37-32	7152-7153	<	_	_
37-33	7153-7164	CONFIG\_FILE	_	_
37-34	7164-7165	>	_	_
37-35	7166-7167	<	_	_
37-36	7167-7186	SEG\_CHECKPOINT\_FILE	_	_
37-37	7186-7187	>	_	_
37-38	7188-7189	<	_	_
37-39	7189-7196	GPU\_NUM	_	_
37-40	7196-7197	>	_	_
37-41	7198-7199	-	_	_
37-42	7199-7200	-	_	_
37-43	7200-7204	eval	_	_
37-44	7205-7209	mIoU	_	_
37-45	7211-7212	#	_	_
37-46	7213-7222	multi-gpu	_	_
37-47	7222-7223	,	_	_
37-48	7224-7235	multi-scale	_	_
37-49	7236-7243	testing	_	_
37-50	7244-7249	tools	_	_
37-51	7249-7250	/	_	_
37-52	7250-7262	dist\_test.sh	_	_
37-53	7263-7264	<	_	_
37-54	7264-7275	CONFIG\_FILE	_	_
37-55	7275-7276	>	_	_
37-56	7277-7278	<	_	_
37-57	7278-7297	SEG\_CHECKPOINT\_FILE	_	_
37-58	7297-7298	>	_	_
37-59	7299-7300	<	_	_
37-60	7300-7307	GPU\_NUM	_	_
37-61	7307-7308	>	_	_
37-62	7309-7310	-	_	_
37-63	7310-7311	-	_	_
37-64	7311-7319	aug-test	_	_
37-65	7320-7321	-	_	_
37-66	7321-7322	-	_	_
37-67	7322-7326	eval	_	_
37-68	7327-7331	mIoU	_	_
37-69	7332-7333	`	_	_
37-70	7333-7334	`	_	_
37-71	7334-7335	`	_	_
37-72	7337-7344	Example	_	_
37-73	7345-7347	on	_	_
37-74	7348-7351	the	_	_
37-75	7352-7357	Ampli	_	_
37-76	7358-7361	ANR	_	_
37-77	7362-7369	project	_	_
37-78	7369-7370	:	_	_
37-79	7373-7374	`	_	_
37-80	7374-7375	`	_	_
37-81	7375-7376	`	_	_
37-82	7377-7378	#	_	_
37-83	7379-7387	Evaluate	_	_
37-84	7388-7398	checkpoint	_	_
37-85	7399-7401	on	_	_
37-86	7402-7403	a	_	_
37-87	7404-7410	single	_	_
37-88	7411-7414	GPU	_	_
37-89	7415-7421	python	_	_
37-90	7422-7427	tools	_	_
37-91	7427-7428	/	_	_
37-92	7428-7435	test.py	_	_
37-93	7436-7443	configs	_	_
37-94	7443-7444	/	_	_
37-95	7444-7448	swin	_	_
37-96	7448-7449	/	_	_
37-97	7449-7481	config\_upernet\_swin\_large\_patch4	_	_
37-98	7481-7482	\_	_	_
37-99	7482-7490	window12	_	_
37-100	7490-7491	\_	_	_
37-101	7491-7498	384x384	_	_
37-102	7498-7499	\_	_	_
37-103	7499-7509	60k\_ign.py	_	_
37-104	7510-7521	checkpoints	_	_
37-105	7521-7522	/	_	_
37-106	7522-7525	ign	_	_
37-107	7525-7526	\_	_	_
37-108	7526-7547	60k\_swin\_large\_patch4	_	_
37-109	7547-7548	\_	_	_
37-110	7548-7556	window12	_	_
37-111	7556-7557	\_	_	_
37-112	7557-7560	384	_	_
37-113	7560-7561	.	_	_
37-114	7561-7564	pth	_	_
37-115	7565-7566	-	_	_
37-116	7566-7567	-	_	_
37-117	7567-7571	eval	_	_
37-118	7572-7576	mIoU	_	_
37-119	7578-7579	#	_	_
37-120	7580-7587	Display	_	_
37-121	7588-7600	segmentation	_	_
37-122	7601-7608	results	*[112]	LICENSE[112]
37-123	7609-7615	python	*[112]	LICENSE[112]
37-124	7616-7621	tools	*[112]	LICENSE[112]
37-125	7621-7622	/	*[112]	LICENSE[112]
37-126	7622-7629	test.py	*[112]	LICENSE[112]
37-127	7630-7637	configs	*[112]	LICENSE[112]
37-128	7637-7638	/	*[112]	LICENSE[112]
37-129	7638-7642	swin	*[112]	LICENSE[112]
37-130	7642-7643	/	*[112]	LICENSE[112]
37-131	7643-7675	config\_upernet\_swin\_large\_patch4	*[112]	LICENSE[112]
37-132	7675-7676	\_	*[112]	LICENSE[112]
37-133	7676-7684	window12	*[112]	LICENSE[112]
37-134	7684-7685	\_	*[112]	LICENSE[112]
37-135	7685-7692	384x384	*[112]	LICENSE[112]
37-136	7692-7693	\_	*[112]	LICENSE[112]
37-137	7693-7703	60k\_ign.py	*[112]	LICENSE[112]
37-138	7704-7715	checkpoints	*[112]	LICENSE[112]
37-139	7715-7716	/	*[112]	LICENSE[112]
37-140	7716-7719	ign	*[112]	LICENSE[112]
37-141	7719-7720	\_	*[112]	LICENSE[112]
37-142	7720-7741	60k\_swin\_large\_patch4	*[112]	LICENSE[112]
37-143	7741-7742	\_	*[112]	LICENSE[112]
37-144	7742-7750	window12	_	_
37-145	7750-7751	\_	_	_
37-146	7751-7754	384	_	_
37-147	7754-7755	.	_	_
37-148	7755-7758	pth	_	_
37-149	7759-7760	-	_	_
37-150	7760-7761	-	_	_
37-151	7761-7765	show	_	_
37-152	7766-7767	`	_	_
37-153	7767-7768	`	_	_
37-154	7768-7769	`	_	_
37-155	7771-7772	#	_	_
37-156	7772-7773	#	_	_
37-157	7773-7774	#	_	_
37-158	7775-7783	Training	_	_
37-159	7785-7787	To	_	_
37-160	7788-7793	train	_	_
37-161	7794-7798	with	_	_
37-162	7799-7810	pre-trained	_	_
37-163	7811-7817	models	_	_
37-164	7817-7818	,	_	_
37-165	7819-7822	run	_	_
37-166	7822-7823	:	_	_
37-167	7824-7825	`	_	_
37-168	7825-7826	`	_	_
37-169	7826-7827	`	_	_
37-170	7828-7829	#	_	_
37-171	7830-7840	single-gpu	_	_
37-172	7841-7849	training	_	_
37-173	7850-7856	python	_	_
37-174	7857-7862	tools	_	_
37-175	7862-7863	/	_	_
37-176	7863-7871	train.py	_	_
37-177	7872-7873	<	_	_
37-178	7873-7884	CONFIG\_FILE	_	_
37-179	7884-7885	>	_	_
37-180	7886-7887	-	_	_
37-181	7887-7888	-	_	_
37-182	7888-7895	options	_	_
37-183	7896-7912	model.pretrained	_	_
37-184	7912-7913	=	_	_
37-185	7913-7914	<	_	_
37-186	7914-7928	PRETRAIN\_MODEL	_	_
37-187	7928-7929	>	_	_
37-188	7930-7931	\[	_	_
37-189	7931-7960	model.backbone.use\_checkpoint	_	_
37-190	7960-7961	=	_	_
37-191	7961-7965	True	_	_
37-192	7965-7966	\]	_	_
37-193	7967-7968	\[	_	_
37-194	7968-7973	other	_	_
37-195	7974-7982	optional	_	_
37-196	7983-7992	arguments	_	_
37-197	7992-7993	\]	_	_
37-198	7995-7996	#	_	_
37-199	7997-8006	multi-gpu	_	_
37-200	8007-8015	training	_	_
37-201	8016-8021	tools	_	_
37-202	8021-8022	/	_	_
37-203	8022-8035	dist\_train.sh	_	_
37-204	8036-8037	<	_	_
37-205	8037-8048	CONFIG\_FILE	_	_
37-206	8048-8049	>	_	_
37-207	8050-8051	<	_	_
37-208	8051-8058	GPU\_NUM	_	_
37-209	8058-8059	>	_	_
37-210	8060-8061	-	_	_
37-211	8061-8062	-	_	_
37-212	8062-8069	options	_	_
37-213	8070-8086	model.pretrained	_	_
37-214	8086-8087	=	_	_
37-215	8087-8088	<	_	_
37-216	8088-8102	PRETRAIN\_MODEL	_	_
37-217	8102-8103	>	_	_
37-218	8104-8105	\[	_	_
37-219	8105-8134	model.backbone.use\_checkpoint	_	_
37-220	8134-8135	=	_	_
37-221	8135-8139	True	_	_
37-222	8139-8140	\]	_	_
37-223	8141-8142	\[	_	_
37-224	8142-8147	other	_	_
37-225	8148-8156	optional	_	_
37-226	8157-8166	arguments	_	_
37-227	8166-8167	\]	_	_
37-228	8169-8170	`	_	_
37-229	8170-8171	`	_	_
37-230	8171-8172	`	_	_
37-231	8174-8181	Example	_	_
37-232	8182-8184	on	_	_
37-233	8185-8188	the	_	_
37-234	8189-8194	Ampli	_	_
37-235	8195-8198	ANR	_	_
37-236	8199-8206	project	_	_
37-237	8207-8211	with	_	_
37-238	8212-8215	the	_	_
37-239	8216-8224	ImageNet	_	_
37-240	8224-8225	-	_	_
37-241	8225-8228	22K	_	_
37-242	8229-8239	pretrained	_	_
37-243	8240-8245	model	_	_
37-244	8246-8247	(	_	_
37-245	8247-8256	available	_	_
37-246	8257-8258	\[	_	_
37-247	8258-8262	here	_	_
37-248	8262-8263	\]	_	_
37-249	8263-8264	(	_	_
37-250	8264-8269	https	_	_
37-251	8269-8270	:	_	_
37-252	8270-8271	/	_	_
37-253	8271-8272	/	_	_
37-254	8272-8282	github.com	_	_
37-255	8282-8283	/	_	_
37-256	8283-8298	SwinTransformer	_	_
37-257	8298-8299	/	_	_
37-258	8299-8306	storage	_	_
37-259	8306-8307	/	_	_
37-260	8307-8315	releases	_	_
37-261	8315-8316	/	_	_
37-262	8316-8324	download	_	_
37-263	8324-8325	/	_	_
37-264	8325-8331	v1.0.0	_	_
37-265	8331-8332	/	_	_
37-266	8332-8349	swin\_large\_patch4	_	_
37-267	8349-8350	\_	_	_
37-268	8350-8358	window12	_	_
37-269	8358-8359	\_	_	_
37-270	8359-8362	384	_	_
37-271	8362-8363	\_	_	_
37-272	8363-8370	22k.pth	_	_
37-273	8370-8371	)	_	_
37-274	8371-8372	)	_	_
37-275	8373-8374	:	_	_
37-276	8377-8378	`	_	_
37-277	8378-8379	`	_	_
37-278	8379-8380	`	_	_
37-279	8381-8387	python	_	_
37-280	8388-8393	tools	_	_
37-281	8393-8394	/	_	_
37-282	8394-8402	train.py	_	_
37-283	8403-8410	configs	_	_
37-284	8410-8411	/	_	_
37-285	8411-8415	swin	_	_
37-286	8415-8416	/	_	_
37-287	8416-8448	config\_upernet\_swin\_large\_patch4	_	_
37-288	8448-8449	\_	_	_
37-289	8449-8457	window12	_	_
37-290	8457-8458	\_	_	_
37-291	8458-8465	384x384	_	_
37-292	8465-8466	\_	_	_
37-293	8466-8476	60k\_ign.py	_	_
37-294	8477-8478	-	_	_
37-295	8478-8479	-	_	_
37-296	8479-8486	options	_	_
37-297	8487-8503	model.pretrained	_	_
37-298	8503-8504	=	_	_
37-299	8504-8505	"	_	_
37-300	8505-8506	.	_	_

#Text=/model/swin\_large\_patch4\_window12\_384\_22k.pth" ```  \*\*Notes:\*\*  - `use\_checkpoint` is used to save GPU memory.
38-1	8506-8507	/	_	_
38-2	8507-8512	model	_	_
38-3	8512-8513	/	_	_
38-4	8513-8530	swin\_large\_patch4	_	_
38-5	8530-8531	\_	_	_
38-6	8531-8539	window12	_	_
38-7	8539-8540	\_	_	_
38-8	8540-8543	384	_	_
38-9	8543-8544	\_	_	_
38-10	8544-8551	22k.pth	_	_
38-11	8551-8552	"	_	_
38-12	8553-8554	`	_	_
38-13	8554-8555	`	_	_
38-14	8555-8556	`	_	_
38-15	8558-8559	\*	_	_
38-16	8559-8560	\*	_	_
38-17	8560-8565	Notes	_	_
38-18	8565-8566	:	_	_
38-19	8566-8567	\*	_	_
38-20	8567-8568	\*	_	_
38-21	8570-8571	-	_	_
38-22	8572-8573	`	_	_
38-23	8573-8587	use\_checkpoint	_	_
38-24	8587-8588	`	*[97]	DATASET[97]
38-25	8589-8591	is	*[97]	DATASET[97]
38-26	8592-8596	used	*[97]	DATASET[97]
38-27	8597-8599	to	*[97]	DATASET[97]
38-28	8600-8604	save	_	_
38-29	8605-8608	GPU	_	_
38-30	8609-8615	memory	_	_
38-31	8615-8616	.	_	_

#Text=Please refer to \[this page\](https://pytorch.org/docs/stable/checkpoint.html) for more details. - The default learning rate and training schedule is for 8 GPUs and 2 imgs/gpu.   ## Citing Swin Transformer ``` @article{liu2021Swin,   title={Swin Transformer: Hierarchical Vision Transformer using Shifted Windows},   author={Liu, Ze and Lin, Yutong and Cao, Yue and Hu, Han and Wei, Yixuan and Zhang, Zheng and Lin, Stephen and Guo, Baining},   journal={arXiv preprint arXiv:2103.14030},   year={2021} } ```  ## Citing this work  See the complete description of this work in the \[dedicated arXiv paper\](https://arxiv.org/abs/2110.05812).
39-1	8617-8623	Please	_	_
39-2	8624-8629	refer	_	_
39-3	8630-8632	to	_	_
39-4	8633-8634	\[	_	_
39-5	8634-8638	this	_	_
39-6	8639-8643	page	_	_
39-7	8643-8644	\]	_	_
39-8	8644-8645	(	_	_
39-9	8645-8650	https	_	_
39-10	8650-8651	:	_	_
39-11	8651-8652	/	_	_
39-12	8652-8653	/	_	_
39-13	8653-8664	pytorch.org	_	_
39-13	8653-8660	pytorch	_	_
39-14	8664-8665	/	_	_
39-15	8665-8669	docs	_	_
39-16	8669-8670	/	_	_
39-17	8670-8676	stable	_	_
39-18	8676-8677	/	_	_
39-19	8677-8692	checkpoint.html	_	_
39-20	8692-8693	)	_	_
39-21	8694-8697	for	_	_
39-22	8698-8702	more	_	_
39-23	8703-8710	details	_	_
39-24	8710-8711	.	_	_
39-25	8712-8713	-	_	_
39-26	8714-8717	The	_	_
39-27	8718-8725	default	_	_
39-28	8726-8734	learning	_	_
39-29	8735-8739	rate	_	_
39-30	8740-8743	and	_	_
39-31	8744-8752	training	_	_
39-32	8753-8761	schedule	_	_
39-33	8762-8764	is	_	_
39-34	8765-8768	for	_	_
39-35	8769-8770	8	_	_
39-36	8771-8775	GPUs	_	_
39-37	8776-8779	and	_	_
39-38	8780-8781	2	_	_
39-39	8782-8786	imgs	_	_
39-40	8786-8787	/	_	_
39-41	8787-8790	gpu	_	_
39-42	8790-8791	.	_	_
39-43	8794-8795	#	_	_
39-44	8795-8796	#	_	_
39-45	8797-8803	Citing	_	_
39-46	8804-8808	Swin	_	_
39-47	8809-8820	Transformer	_	_
39-48	8821-8822	`	_	_
39-49	8822-8823	`	_	_
39-50	8823-8824	`	_	_
39-51	8825-8826	@	_	_
39-52	8826-8833	article	_	_
39-53	8833-8834	{	_	_
39-54	8834-8845	liu2021Swin	_	_
39-55	8845-8846	,	_	_
39-56	8849-8854	title	_	_
39-57	8854-8855	=	_	_
39-58	8855-8856	{	_	_
39-59	8856-8860	Swin	_	_
39-60	8861-8872	Transformer	_	_
39-61	8872-8873	:	_	_
39-62	8874-8886	Hierarchical	_	_
39-63	8887-8893	Vision	_	_
39-64	8894-8905	Transformer	_	_
39-65	8906-8911	using	_	_
39-66	8912-8919	Shifted	_	_
39-67	8920-8927	Windows	_	_
39-68	8927-8928	}	_	_
39-69	8928-8929	,	_	_
39-70	8932-8938	author	_	_
39-71	8938-8939	=	_	_
39-72	8939-8940	{	_	_
39-73	8940-8943	Liu	_	_
39-74	8943-8944	,	_	_
39-75	8945-8947	Ze	_	_
39-76	8948-8951	and	_	_
39-77	8952-8955	Lin	_	_
39-78	8955-8956	,	_	_
39-79	8957-8963	Yutong	_	_
39-80	8964-8967	and	_	_
39-81	8968-8971	Cao	_	_
39-82	8971-8972	,	_	_
39-83	8973-8976	Yue	_	_
39-84	8977-8980	and	_	_
39-85	8981-8983	Hu	_	_
39-86	8983-8984	,	_	_
39-87	8985-8988	Han	_	_
39-88	8989-8992	and	_	_
39-89	8993-8996	Wei	_	_
39-90	8996-8997	,	_	_
39-91	8998-9004	Yixuan	_	_
39-92	9005-9008	and	_	_
39-93	9009-9014	Zhang	_	_
39-94	9014-9015	,	_	_
39-95	9016-9021	Zheng	_	_
39-96	9022-9025	and	_	_
39-97	9026-9029	Lin	_	_
39-98	9029-9030	,	_	_
39-99	9031-9038	Stephen	_	_
39-100	9039-9042	and	_	_
39-101	9043-9046	Guo	_	_
39-102	9046-9047	,	_	_
39-103	9048-9055	Baining	_	_
39-104	9055-9056	}	_	_
39-105	9056-9057	,	_	_
39-106	9060-9067	journal	_	_
39-107	9067-9068	=	_	_
39-108	9068-9069	{	_	_
39-109	9069-9074	arXiv	_	_
39-110	9075-9083	preprint	_	_
39-111	9084-9089	arXiv	_	_
39-112	9089-9090	:	_	_
39-113	9090-9100	2103.14030	_	_
39-114	9100-9101	}	_	_
39-115	9101-9102	,	_	_
39-116	9105-9109	year	_	_
39-117	9109-9110	=	_	_
39-118	9110-9111	{	_	_
39-119	9111-9115	2021	_	_
39-120	9115-9116	}	_	_
39-121	9117-9118	}	_	_
39-122	9119-9120	`	_	_
39-123	9120-9121	`	_	_
39-124	9121-9122	`	_	_
39-125	9124-9125	#	_	_
39-126	9125-9126	#	_	_
39-127	9127-9133	Citing	_	_
39-128	9134-9138	this	_	_
39-129	9139-9143	work	_	_
39-130	9145-9148	See	_	_
39-131	9149-9152	the	_	_
39-132	9153-9161	complete	_	_
39-133	9162-9173	description	_	_
39-134	9174-9176	of	_	_
39-135	9177-9181	this	_	_
39-136	9182-9186	work	_	_
39-137	9187-9189	in	_	_
39-138	9190-9193	the	_	_
39-139	9194-9195	\[	_	_
39-140	9195-9204	dedicated	_	_
39-141	9205-9210	arXiv	_	_
39-142	9211-9216	paper	_	_
39-143	9216-9217	\]	_	_
39-144	9217-9218	(	_	_
39-145	9218-9223	https	_	_
39-146	9223-9224	:	*[96]	ONTOLOGY[96]
39-147	9224-9225	/	*[96]	ONTOLOGY[96]
39-148	9225-9226	/	*[96]	ONTOLOGY[96]
39-149	9226-9235	arxiv.org	*[96]	ONTOLOGY[96]
39-150	9235-9236	/	*[96]	ONTOLOGY[96]
39-151	9236-9239	abs	*[96]	ONTOLOGY[96]
39-152	9239-9240	/	*[96]	ONTOLOGY[96]
39-153	9240-9250	2110.05812	_	_
39-154	9250-9251	)	_	_
39-155	9251-9252	.	_	_

#Text=If you use this work, please cite it: ``` @misc{guerin2021satellite,       title={Satellite Image Semantic Segmentation},        author={Eric Guérin and Killian Oechslin and Christian Wolf and Benoît Martinez},       year={2021},       eprint={2110.05812},       archivePrefix={arXiv},       primaryClass={cs.CV} } ```  ## Other Links  > \*\*Image Classification\*\*: See \[Swin Transformer for Image Classification\](https://github.com/microsoft/Swin-Transformer)
40-1	9253-9255	If	_	_
40-2	9256-9259	you	_	_
40-3	9260-9263	use	_	_
40-4	9264-9268	this	_	_
40-5	9269-9273	work	_	_
40-6	9273-9274	,	_	_
40-7	9275-9281	please	_	_
40-8	9282-9286	cite	_	_
40-9	9287-9289	it	_	_
40-10	9289-9290	:	_	_
40-11	9291-9292	`	_	_
40-12	9292-9293	`	_	_
40-13	9293-9294	`	_	_
40-14	9295-9296	@	_	_
40-15	9296-9300	misc	_	_
40-16	9300-9301	{	_	_
40-17	9301-9320	guerin2021satellite	_	_
40-18	9320-9321	,	*[104]	EVALMETRIC[104]
40-19	9328-9333	title	*[104]	EVALMETRIC[104]
40-20	9333-9334	=	*[104]	EVALMETRIC[104]
40-21	9334-9335	{	*[104]	EVALMETRIC[104]
40-22	9335-9344	Satellite	*[104]	EVALMETRIC[104]
40-23	9345-9350	Image	*[104]	EVALMETRIC[104]
40-24	9351-9359	Semantic	*[104]	EVALMETRIC[104]
40-25	9360-9372	Segmentation	*[104]	EVALMETRIC[104]
40-26	9372-9373	}	*[104]	EVALMETRIC[104]
40-27	9373-9374	,	*[104]	EVALMETRIC[104]
40-28	9382-9388	author	*[104]	EVALMETRIC[104]
40-29	9388-9389	=	*[104]	EVALMETRIC[104]
40-30	9389-9390	{	*[104]	EVALMETRIC[104]
40-31	9390-9394	Eric	*[104]	EVALMETRIC[104]
40-32	9395-9401	Guérin	*[104]	EVALMETRIC[104]
40-33	9402-9405	and	*[104]	EVALMETRIC[104]
40-34	9406-9413	Killian	*[104]	EVALMETRIC[104]
40-35	9414-9422	Oechslin	*[104]	EVALMETRIC[104]
40-36	9423-9426	and	*[104]	EVALMETRIC[104]
40-37	9427-9436	Christian	*[104]	EVALMETRIC[104]
40-38	9437-9441	Wolf	*[104]	EVALMETRIC[104]
40-39	9442-9445	and	*[104]	EVALMETRIC[104]
40-40	9446-9452	Benoît	*[104]	EVALMETRIC[104]
40-41	9453-9461	Martinez	*[104]	EVALMETRIC[104]
40-42	9461-9462	}	*[104]	EVALMETRIC[104]
40-43	9462-9463	,	*[104]	EVALMETRIC[104]
40-44	9470-9474	year	*[104]	EVALMETRIC[104]
40-45	9474-9475	=	*[104]	EVALMETRIC[104]
40-46	9475-9476	{	*[104]	EVALMETRIC[104]
40-47	9476-9480	2021	*[104]	EVALMETRIC[104]
40-48	9480-9481	}	*[104]	EVALMETRIC[104]
40-49	9481-9482	,	*[104]	EVALMETRIC[104]
40-50	9489-9495	eprint	*[104]	EVALMETRIC[104]
40-51	9495-9496	=	*[104]	EVALMETRIC[104]
40-52	9496-9497	{	*[104]	EVALMETRIC[104]
40-53	9497-9507	2110.05812	*[104]	EVALMETRIC[104]
40-54	9507-9508	}	*[104]	EVALMETRIC[104]
40-55	9508-9509	,	*[104]	EVALMETRIC[104]
40-56	9516-9529	archivePrefix	_	_
40-57	9529-9530	=	_	_
40-58	9530-9531	{	_	_
40-59	9531-9536	arXiv	_	_
40-60	9536-9537	}	_	_
40-61	9537-9538	,	_	_
40-62	9545-9557	primaryClass	_	_
40-63	9557-9558	=	_	_
40-64	9558-9559	{	_	_
40-65	9559-9564	cs.CV	_	_
40-66	9564-9565	}	_	_
40-67	9566-9567	}	_	_
40-68	9568-9569	`	_	_
40-69	9569-9570	`	_	_
40-70	9570-9571	`	_	_
40-71	9573-9574	#	_	_
40-72	9574-9575	#	_	_
40-73	9576-9581	Other	_	_
40-74	9582-9587	Links	_	_
40-75	9589-9590	>	_	_
40-76	9591-9592	\*	_	_
40-77	9592-9593	\*	_	_
40-78	9593-9598	Image	_	_
40-79	9599-9613	Classification	_	_
40-80	9613-9614	\*	_	_
40-81	9614-9615	\*	_	_
40-82	9615-9616	:	_	_
40-83	9617-9620	See	_	_
40-84	9621-9622	\[	_	_
40-85	9622-9626	Swin	_	_
40-86	9627-9638	Transformer	_	_
40-87	9639-9642	for	_	_
40-88	9643-9648	Image	_	_
40-89	9649-9663	Classification	_	_
40-90	9663-9664	\]	_	_
40-91	9664-9665	(	_	_
40-92	9665-9670	https	_	_
40-93	9670-9671	:	_	_
40-94	9671-9672	/	_	_
40-95	9672-9673	/	_	_
40-96	9673-9683	github.com	_	_
40-97	9683-9684	/	_	_
40-98	9684-9693	microsoft	_	_
40-99	9693-9694	/	_	_
40-100	9694-9710	Swin-Transformer	_	_
40-100	9699-9710	Transformer	_	_
40-101	9710-9711	)	_	_

#Text=.
41-1	9711-9712	.	_	_

#Text=> \*\*Object Detection\*\*: See \[Swin Transformer for Object Detection\](https://github.com/SwinTransformer/Swin-Transformer-Object-Detection)
42-1	9714-9715	>	_	_
42-2	9716-9717	\*	_	_
42-3	9717-9718	\*	_	_
42-4	9718-9724	Object	_	_
42-5	9725-9734	Detection	_	_
42-6	9734-9735	\*	_	_
42-7	9735-9736	\*	_	_
42-8	9736-9737	:	_	_
42-9	9738-9741	See	_	_
42-10	9742-9743	\[	_	_
42-11	9743-9747	Swin	_	_
42-12	9748-9759	Transformer	_	_
42-13	9760-9763	for	_	_
42-14	9764-9770	Object	_	_
42-15	9771-9780	Detection	*[97]	CONFERENCE[97]
42-16	9780-9781	\]	*[97]	CONFERENCE[97]
42-17	9781-9782	(	*[97]	CONFERENCE[97]
42-18	9782-9787	https	*[97]	CONFERENCE[97]
42-19	9787-9788	:	*[97]	CONFERENCE[97]
42-20	9788-9789	/	*[97]	CONFERENCE[97]
42-21	9789-9790	/	*[97]	CONFERENCE[97]
42-22	9790-9800	github.com	*[97]	CONFERENCE[97]
42-23	9800-9801	/	*[97]	CONFERENCE[97]
42-24	9801-9816	SwinTransformer	_	_
42-25	9816-9817	/	_	_
42-26	9817-9850	Swin-Transformer-Object-Detection	_	_
42-27	9850-9851	)	_	_

#Text=.
43-1	9851-9852	.	_	_

#Text=> \*\*Self-Supervised Learning\*\*: See \[MoBY with Swin Transformer\](https://github.com/SwinTransformer/Transformer-SSL)
44-1	9854-9855	>	_	_
44-2	9856-9857	\*	_	_
44-3	9857-9858	\*	_	_
44-4	9858-9873	Self-Supervised	_	_
44-5	9874-9882	Learning	_	_
44-6	9882-9883	\*	_	_
44-7	9883-9884	\*	_	_
44-8	9884-9885	:	_	_
44-9	9886-9889	See	_	_
44-10	9890-9891	\[	_	_
44-11	9891-9895	MoBY	_	_
44-12	9896-9900	with	_	_
44-13	9901-9905	Swin	_	_
44-14	9906-9917	Transformer	_	_
44-15	9917-9918	\]	*[98]	CONFERENCE[98]
44-16	9918-9919	(	*[98]	CONFERENCE[98]
44-17	9919-9924	https	*[98]	CONFERENCE[98]
44-18	9924-9925	:	*[98]	CONFERENCE[98]
44-19	9925-9926	/	*[98]	CONFERENCE[98]
44-20	9926-9927	/	*[98]	CONFERENCE[98]
44-21	9927-9937	github.com	*[98]	CONFERENCE[98]
44-22	9937-9938	/	*[98]	CONFERENCE[98]
44-23	9938-9953	SwinTransformer	*[98]	CONFERENCE[98]
44-24	9953-9954	/	*[98]	CONFERENCE[98]
44-25	9954-9969	Transformer-SSL	*[98]	CONFERENCE[98]
44-25	9954-9965	Transformer	_	_
44-26	9969-9970	)	_	_

#Text=.
45-1	9970-9971	.	_	_

#Text=> \*\*Video Recognition\*\*, See \[Video Swin Transformer\](https://github.com/SwinTransformer/Video-Swin-Transformer).
46-1	9973-9974	>	_	_
46-2	9975-9976	\*	_	_
46-3	9976-9977	\*	_	_
46-4	9977-9982	Video	_	_
46-5	9983-9994	Recognition	_	_
46-6	9994-9995	\*	_	_
46-7	9995-9996	\*	_	_
46-8	9996-9997	,	_	_
46-9	9998-10001	See	_	_
46-10	10002-10003	\[	_	_
46-11	10003-10008	Video	_	_
46-12	10009-10013	Swin	_	_
46-13	10014-10025	Transformer	_	_
46-14	10025-10026	\]	_	_
46-15	10026-10027	(	_	_
46-16	10027-10032	https	_	_
46-17	10032-10033	:	_	_
46-18	10033-10034	/	_	_
46-19	10034-10035	/	_	_
46-20	10035-10045	github.com	_	_
46-21	10045-10046	/	_	_
46-22	10046-10061	SwinTransformer	_	_
46-23	10061-10062	/	*[97]	ONTOLOGY[97]
46-24	10062-10084	Video-Swin-Transformer	_	_
46-25	10084-10085	)	_	_
46-26	10085-10086	.	_	_