#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=## Rethinking the Truly Unsupervised Image-to-Image Translation<br/>(ICCV 2021) !
1-1	0-1	#	_	_
1-2	1-2	#	_	_
1-3	3-13	Rethinking	_	_
1-4	14-17	the	_	_
1-5	18-23	Truly	_	_
1-6	24-36	Unsupervised	_	_
1-7	37-51	Image-to-Image	*[380]	LICENSE[380]
1-8	52-63	Translation	_	_
1-9	63-64	<	_	_
1-10	64-66	br	_	_
1-11	66-67	/	_	_
1-12	67-68	>	_	_
1-13	68-69	(	_	_
1-14	69-73	ICCV	_	_
1-15	74-78	2021	_	_
1-16	78-79	)	_	_
1-17	80-81	!	_	_

#Text=\[teaser\](.
2-1	81-82	\[	_	_
2-2	82-88	teaser	_	_
2-3	88-89	\]	_	_
2-4	89-90	(	_	_
2-5	90-91	.	_	_

#Text=/resrc/teaser\_3row.png) > \*\*\_Each image is generated with the source image in the left and the average style vector of each cluster.
3-1	91-92	/	_	_
3-2	92-97	resrc	_	_
3-3	97-98	/	_	_
3-4	98-104	teaser	_	_
3-5	104-105	\_	_	_
3-6	105-113	3row.png	_	_
3-7	113-114	)	_	_
3-8	115-116	>	_	_
3-9	117-118	\*	_	_
3-10	118-119	\*	_	_
3-11	119-120	\_	_	_
3-12	120-124	Each	_	_
3-13	125-130	image	_	_
3-14	131-133	is	_	_
3-15	134-143	generated	_	_
3-16	144-148	with	_	_
3-17	149-152	the	_	_
3-18	153-159	source	_	_
3-19	160-165	image	_	_
3-20	166-168	in	_	_
3-21	169-172	the	_	_
3-22	173-177	left	_	_
3-23	178-181	and	_	_
3-24	182-185	the	_	_
3-25	186-193	average	_	_
3-26	194-199	style	_	_
3-27	200-206	vector	_	_
3-28	207-209	of	_	_
3-29	210-214	each	*[390]	EVALMETRIC[390]
3-30	215-222	cluster	_	_
3-31	222-223	.	_	_

#Text=The network is trained under fully unsupervised manner.\_\*\*  \_\_Official pytorch implementation of "Rethinking the Truly Unsupervised Image-to-Image Translation"\_\_  > \_\_\[Rethinking the Truly Unsupervised Image-to-Image Translation\](https://arxiv.org/abs/2006.06500)\_\_    > Kyungjune Baek<sup>1</sup>\*, Yunjey Choi<sup>2</sup>, Youngjung Uh<sup>1</sup>, Jaejun Yoo<sup>3</sup>, Hyunjung Shim<sup>1</sup>   > \\\* Work done during his internship at Clova AI Research   > <sup>1</sup> Yonsei University   > <sup>2</sup> NAVER AI Lab
4-1	224-227	The	_	_
4-2	228-235	network	_	_
4-3	236-238	is	_	_
4-4	239-246	trained	_	_
4-5	247-252	under	_	_
4-6	253-258	fully	_	_
4-7	259-271	unsupervised	_	_
4-8	272-278	manner	_	_
4-9	278-279	.	_	_
4-10	279-280	\_	_	_
4-11	280-281	\*	_	_
4-12	281-282	\*	_	_
4-13	284-285	\_	_	_
4-14	285-286	\_	_	_
4-15	286-294	Official	_	_
4-16	295-302	pytorch	_	_
4-17	303-317	implementation	_	_
4-18	318-320	of	_	_
4-19	321-322	"	_	_
4-20	322-332	Rethinking	_	_
4-21	333-336	the	_	_
4-22	337-342	Truly	_	_
4-23	343-355	Unsupervised	_	_
4-24	356-370	Image-to-Image	_	_
4-25	371-382	Translation	_	_
4-26	382-383	"	_	_
4-27	383-384	\_	_	_
4-28	384-385	\_	_	_
4-29	387-388	>	_	_
4-30	389-390	\_	_	_
4-31	390-391	\_	_	_
4-32	391-392	\[	_	_
4-33	392-402	Rethinking	_	_
4-34	403-406	the	_	_
4-35	407-412	Truly	_	_
4-36	413-425	Unsupervised	_	_
4-37	426-440	Image-to-Image	_	_
4-38	441-452	Translation	_	_
4-39	452-453	\]	_	_
4-40	453-454	(	_	_
4-41	454-459	https	_	_
4-42	459-460	:	_	_
4-43	460-461	/	_	_
4-44	461-462	/	_	_
4-45	462-471	arxiv.org	_	_
4-46	471-472	/	_	_
4-47	472-475	abs	_	_
4-48	475-476	/	_	_
4-49	476-486	2006.06500	_	_
4-50	486-487	)	_	_
4-51	487-488	\_	_	_
4-52	488-489	\_	_	_
4-53	493-494	>	_	_
4-54	495-504	Kyungjune	_	_
4-55	505-509	Baek	_	_
4-56	509-510	<	_	_
4-57	510-513	sup	_	_
4-58	513-514	>	_	_
4-59	514-515	1	_	_
4-60	515-516	<	_	_
4-61	516-517	/	_	_
4-62	517-520	sup	_	_
4-63	520-521	>	_	_
4-64	521-522	\*	_	_
4-65	522-523	,	_	_
4-66	524-530	Yunjey	_	_
4-67	531-535	Choi	*[391]	EVALMETRIC[391]
4-68	535-536	<	*[391]	EVALMETRIC[391]
4-69	536-539	sup	*[391]	EVALMETRIC[391]
4-70	539-540	>	*[391]	EVALMETRIC[391]
4-71	540-541	2	*[391]	EVALMETRIC[391]
4-72	541-542	<	_	_
4-73	542-543	/	_	_
4-74	543-546	sup	_	_
4-75	546-547	>	_	_
4-76	547-548	,	_	_
4-77	549-558	Youngjung	_	_
4-78	559-561	Uh	_	_
4-79	561-562	<	_	_
4-80	562-565	sup	_	_
4-81	565-566	>	_	_
4-82	566-567	1	_	_
4-83	567-568	<	_	_
4-84	568-569	/	_	_
4-85	569-572	sup	_	_
4-86	572-573	>	_	_
4-87	573-574	,	_	_
4-88	575-581	Jaejun	_	_
4-89	582-585	Yoo	_	_
4-90	585-586	<	_	_
4-91	586-589	sup	_	_
4-92	589-590	>	_	_
4-93	590-591	3	_	_
4-94	591-592	<	_	_
4-95	592-593	/	_	_
4-96	593-596	sup	_	_
4-97	596-597	>	_	_
4-98	597-598	,	_	_
4-99	599-607	Hyunjung	_	_
4-100	608-612	Shim	_	_
4-101	612-613	<	_	_
4-102	613-616	sup	_	_
4-103	616-617	>	_	_
4-104	617-618	1	_	_
4-105	618-619	<	_	_
4-106	619-620	/	_	_
4-107	620-623	sup	_	_
4-108	623-624	>	_	_
4-109	627-628	>	_	_
4-110	629-630	\\	_	_
4-111	630-631	\*	_	_
4-112	632-636	Work	_	_
4-113	637-641	done	_	_
4-114	642-648	during	_	_
4-115	649-652	his	_	_
4-116	653-663	internship	_	_
4-117	664-666	at	_	_
4-118	667-672	Clova	_	_
4-119	673-675	AI	_	_
4-120	676-684	Research	_	_
4-121	687-688	>	_	_
4-122	689-690	<	_	_
4-123	690-693	sup	_	_
4-124	693-694	>	_	_
4-125	694-695	1	_	_
4-126	695-696	<	_	_
4-127	696-697	/	_	_
4-128	697-700	sup	_	_
4-129	700-701	>	_	_
4-130	702-708	Yonsei	_	_
4-131	709-719	University	_	_
4-132	722-723	>	_	_
4-133	724-725	<	_	_
4-134	725-728	sup	_	_
4-135	728-729	>	_	_
4-136	729-730	2	_	_
4-137	730-731	<	_	_
4-138	731-732	/	_	_
4-139	732-735	sup	_	_
4-140	735-736	>	_	_
4-141	737-742	NAVER	_	_
4-142	743-745	AI	_	_
4-143	746-749	Lab	_	_

#Text=.
5-1	749-750	.	_	_

#Text=> <sup>3</sup> UNIST    >   > \_\_Absract\_\_ \_Every recent image-to-image translation model inherently requires either image-level (i.e. input-output pairs) or set-level (i.e. domain labels) supervision.
6-1	753-754	>	_	_
6-2	755-756	<	_	_
6-3	756-759	sup	_	_
6-4	759-760	>	_	_
6-5	760-761	3	_	_
6-6	761-762	<	_	_
6-7	762-763	/	_	_
6-8	763-766	sup	_	_
6-9	766-767	>	_	_
6-10	768-773	UNIST	_	_
6-11	777-778	>	_	_
6-12	781-782	>	_	_
6-13	783-784	\_	_	_
6-14	784-785	\_	_	_
6-15	785-792	Absract	_	_
6-16	792-793	\_	_	_
6-17	793-794	\_	_	_
6-18	795-796	\_	_	_
6-19	796-801	Every	_	_
6-20	802-808	recent	_	_
6-21	809-823	image-to-image	_	_
6-22	824-835	translation	_	_
6-23	836-841	model	_	_
6-24	842-852	inherently	_	_
6-25	853-861	requires	_	_
6-26	862-868	either	_	_
6-27	869-880	image-level	_	_
6-28	881-882	(	_	_
6-29	882-885	i.e	_	_
6-30	885-886	.	_	_
6-31	887-899	input-output	_	_
6-32	900-905	pairs	_	_
6-33	905-906	)	_	_
6-34	907-909	or	_	_
6-35	910-919	set-level	_	_
6-36	920-921	(	_	_
6-37	921-924	i.e	_	_
6-38	924-925	.	_	_
6-39	926-932	domain	_	_
6-40	933-939	labels	*[355]	PROJECT[355]
6-41	939-940	)	_	_
6-42	941-952	supervision	_	_
6-43	952-953	.	_	_

#Text=However, even set-level supervision can be a severe bottleneck for data collection in practice.
7-1	954-961	However	_	_
7-2	961-962	,	_	_
7-3	963-967	even	_	_
7-4	968-977	set-level	*[392]	EVALMETRIC[392]
7-5	978-989	supervision	*[392]	EVALMETRIC[392]
7-6	990-993	can	*[392]	EVALMETRIC[392]
7-7	994-996	be	*[392]	EVALMETRIC[392]
7-8	997-998	a	*[392]	EVALMETRIC[392]
7-9	999-1005	severe	*[392]	EVALMETRIC[392]
7-10	1006-1016	bottleneck	*[392]	EVALMETRIC[392]
7-11	1017-1020	for	*[392]	EVALMETRIC[392]
7-12	1021-1025	data	*[392]	EVALMETRIC[392]
7-13	1026-1036	collection	*[392]	EVALMETRIC[392]
7-14	1037-1039	in	*[392]	EVALMETRIC[392]
7-15	1040-1048	practice	_	_
7-16	1048-1049	.	_	_

#Text=In this paper, we tackle image-to-image translation in a fully unsupervised setting, i.e., neither paired images nor domain labels.
8-1	1050-1052	In	_	_
8-2	1053-1057	this	_	_
8-3	1058-1063	paper	_	_
8-4	1063-1064	,	_	_
8-5	1065-1067	we	_	_
8-6	1068-1074	tackle	_	_
8-7	1075-1089	image-to-image	_	_
8-8	1090-1101	translation	_	_
8-9	1102-1104	in	_	_
8-10	1105-1106	a	_	_
8-11	1107-1112	fully	_	_
8-12	1113-1125	unsupervised	_	_
8-13	1126-1133	setting	_	_
8-14	1133-1134	,	_	_
8-15	1135-1138	i.e	_	_
8-16	1138-1139	.	_	_
8-17	1139-1140	,	_	_
8-18	1141-1148	neither	_	_
8-19	1149-1155	paired	_	_
8-20	1156-1162	images	_	_
8-21	1163-1166	nor	_	_
8-22	1167-1173	domain	*[355]	ONTOLOGY[355]
8-23	1174-1180	labels	_	_
8-24	1180-1181	.	_	_

#Text=To this end, we propose a truly unsupervised image-to-image translation model (TUNIT) that simultaneously learns to separate image domains and translates input images into the estimated domains.
9-1	1182-1184	To	_	_
9-2	1185-1189	this	_	_
9-3	1190-1193	end	_	_
9-4	1193-1194	,	_	_
9-5	1195-1197	we	_	_
9-6	1198-1205	propose	_	_
9-7	1206-1207	a	_	_
9-8	1208-1213	truly	_	_
9-9	1214-1226	unsupervised	_	_
9-10	1227-1241	image-to-image	_	_
9-11	1242-1253	translation	_	_
9-12	1254-1259	model	_	_
9-13	1260-1261	(	_	_
9-14	1261-1266	TUNIT	_	_
9-15	1266-1267	)	_	_
9-16	1268-1272	that	_	_
9-17	1273-1287	simultaneously	_	_
9-18	1288-1294	learns	_	_
9-19	1295-1297	to	_	_
9-20	1298-1306	separate	_	_
9-21	1307-1312	image	_	_
9-22	1313-1320	domains	_	_
9-23	1321-1324	and	_	_
9-24	1325-1335	translates	_	_
9-25	1336-1341	input	*[356]	PROJECT[356]
9-26	1342-1348	images	_	_
9-27	1349-1353	into	_	_
9-28	1354-1357	the	_	_
9-29	1358-1367	estimated	_	_
9-30	1368-1375	domains	_	_
9-31	1375-1376	.	_	_

#Text=Experimental results show that our model achieves comparable or even better performance than the set-level supervised model trained with full labels, generalizes well on various datasets, and is robust against the choice of hyperparameters (e.g. the preset number of pseudo domains).
10-1	1377-1389	Experimental	_	_
10-2	1390-1397	results	_	_
10-3	1398-1402	show	_	_
10-4	1403-1407	that	_	_
10-5	1408-1411	our	_	_
10-6	1412-1417	model	_	_
10-7	1418-1426	achieves	_	_
10-8	1427-1437	comparable	_	_
10-9	1438-1440	or	_	_
10-10	1441-1445	even	_	_
10-11	1446-1452	better	_	_
10-12	1453-1464	performance	_	_
10-13	1465-1469	than	_	_
10-14	1470-1473	the	_	_
10-15	1474-1483	set-level	_	_
10-16	1484-1494	supervised	_	_
10-17	1495-1500	model	_	_
10-18	1501-1508	trained	_	_
10-19	1509-1513	with	_	_
10-20	1514-1518	full	_	_
10-21	1519-1525	labels	_	_
10-22	1525-1526	,	_	_
10-23	1527-1538	generalizes	_	_
10-24	1539-1543	well	*[350]	DATASET[350]
10-25	1544-1546	on	*[350]	DATASET[350]
10-26	1547-1554	various	*[350]	DATASET[350]
10-27	1555-1563	datasets	*[350]	DATASET[350]
10-28	1563-1564	,	*[350]	DATASET[350]
10-29	1565-1568	and	*[350]	DATASET[350]
10-30	1569-1571	is	*[350]	DATASET[350]
10-31	1572-1578	robust	*[350]	DATASET[350]
10-32	1579-1586	against	*[350]	DATASET[350]
10-33	1587-1590	the	*[350]	DATASET[350]
10-34	1591-1597	choice	*[350]	DATASET[350]
10-35	1598-1600	of	*[350]	DATASET[350]
10-36	1601-1616	hyperparameters	*[350]	DATASET[350]
10-37	1617-1618	(	*[350]	DATASET[350]
10-38	1618-1621	e.g	*[350]	DATASET[350]
10-39	1621-1622	.	*[350]	DATASET[350]
10-40	1623-1626	the	*[350]	DATASET[350]
10-41	1627-1633	preset	*[350]	DATASET[350]
10-42	1634-1640	number	*[350]	DATASET[350]
10-43	1641-1643	of	*[350]	DATASET[350]
10-44	1644-1650	pseudo	_	_
10-45	1651-1658	domains	_	_
10-46	1658-1659	)	_	_
10-47	1659-1660	.	_	_

#Text=Furthermore, TUNIT can be easily extended to semi-supervised learning with a few labeled data.\_  ### Requirement  \_\_Library\_\_ ``` pip install -r requirements.txt  \* pytorch==1.1.0 or 1.2.0   \* tqdm   \* opencv-python   \* scipy   \* sklearn \* matplotlib   \* pillow   \* tensorboardX  ```  \_\_Dataset\_\_   \* This repo. utilizes the variant of "ImageFolder". \* Download : \[AFHQ (StarGANv2)\](https://www.dropbox.com/s/t9l9o3vsx2jai3z/afhq.zip?
11-1	1661-1672	Furthermore	_	_
11-2	1672-1673	,	_	_
11-3	1674-1679	TUNIT	_	_
11-4	1680-1683	can	_	_
11-5	1684-1686	be	_	_
11-6	1687-1693	easily	_	_
11-7	1694-1702	extended	_	_
11-8	1703-1705	to	_	_
11-9	1706-1721	semi-supervised	_	_
11-10	1722-1730	learning	_	_
11-11	1731-1735	with	_	_
11-12	1736-1737	a	_	_
11-13	1738-1741	few	_	_
11-14	1742-1749	labeled	_	_
11-15	1750-1754	data	_	_
11-16	1754-1755	.	_	_
11-17	1755-1756	\_	_	_
11-18	1758-1759	#	_	_
11-19	1759-1760	#	_	_
11-20	1760-1761	#	_	_
11-21	1762-1773	Requirement	_	_
11-22	1775-1776	\_	_	_
11-23	1776-1777	\_	_	_
11-24	1777-1784	Library	_	_
11-25	1784-1785	\_	_	_
11-26	1785-1786	\_	_	_
11-27	1787-1788	`	_	_
11-28	1788-1789	`	_	_
11-29	1789-1790	`	_	_
11-30	1791-1794	pip	_	_
11-31	1795-1802	install	_	_
11-32	1803-1804	-	_	_
11-33	1804-1805	r	_	_
11-34	1806-1822	requirements.txt	_	_
11-35	1824-1825	\*	_	_
11-36	1826-1833	pytorch	_	_
11-37	1833-1834	=	_	_
11-38	1834-1835	=	_	_
11-39	1835-1840	1.1.0	_	_
11-40	1841-1843	or	_	_
11-41	1844-1849	1.2.0	_	_
11-42	1852-1853	\*	*[393]	EVALMETRIC[393]
11-43	1854-1858	tqdm	_	_
11-44	1861-1862	\*	_	_
11-45	1863-1876	opencv-python	_	_
11-45	1870-1876	python	_	_
11-46	1879-1880	\*	_	_
11-47	1881-1886	scipy	_	_
11-48	1889-1890	\*	_	_
11-49	1891-1898	sklearn	_	_
11-50	1899-1900	\*	_	_
11-51	1901-1911	matplotlib	_	_
11-52	1914-1915	\*	_	_
11-53	1916-1922	pillow	_	_
11-54	1925-1926	\*	_	_
11-55	1927-1939	tensorboardX	_	_
11-56	1941-1942	`	_	_
11-57	1942-1943	`	_	_
11-58	1943-1944	`	_	_
11-59	1946-1947	\_	_	_
11-60	1947-1948	\_	_	_
11-61	1948-1955	Dataset	_	_
11-62	1955-1956	\_	_	_
11-63	1956-1957	\_	_	_
11-64	1960-1961	\*	_	_
11-65	1962-1966	This	_	_
11-66	1967-1971	repo	_	_
11-67	1971-1972	.	_	_
11-68	1973-1981	utilizes	_	_
11-69	1982-1985	the	_	_
11-70	1986-1993	variant	_	_
11-71	1994-1996	of	_	_
11-72	1997-1998	"	_	_
11-73	1998-2009	ImageFolder	_	_
11-74	2009-2010	"	_	_
11-75	2010-2011	.	_	_
11-76	2012-2013	\*	_	_
11-77	2014-2022	Download	_	_
11-78	2023-2024	:	_	_
11-79	2025-2026	\[	_	_
11-80	2026-2030	AFHQ	_	_
11-81	2031-2032	(	_	_
11-82	2032-2041	StarGANv2	_	_
11-83	2041-2042	)	_	_
11-84	2042-2043	\]	_	_
11-85	2043-2044	(	_	_
11-86	2044-2049	https	_	_
11-87	2049-2050	:	_	_
11-88	2050-2051	/	_	_
11-89	2051-2052	/	_	_
11-90	2052-2067	www.dropbox.com	_	_
11-91	2067-2068	/	_	_
11-92	2068-2069	s	_	_
11-93	2069-2070	/	_	_
11-94	2070-2085	t9l9o3vsx2jai3z	_	_
11-95	2085-2086	/	_	_
11-96	2086-2094	afhq.zip	_	_
11-96	2086-2090	afhq	_	_
11-97	2094-2095	?	_	_

#Text=dl=0) / \[AnimalFaces (FUNIT)\](https://github.com/NVlabs/FUNIT) \* Example directory hierarchy (AFHQ, AnimalFaces):  ``` Project \|--- tunit \|          \|--- main.py \|          \|--- train \|                 \|--- train\_unsupervised.py \|                 \|--- ... \| \|--- data        \|--- afhq              \|--- train              \|--- test        \|--- animal\_faces              \|--- n02085620              \|--- n02085782              \|--- ...        \|--- ffhq              \|--- images                     \|--- 000001.jpg                     \|--- ...        \|--- lsun\_car              \|--- images                     \|--- 000001.jpg                     \|--- ...
12-1	2095-2097	dl	_	_
12-2	2097-2098	=	_	_
12-3	2098-2099	0	_	_
12-4	2099-2100	)	_	_
12-5	2101-2102	/	_	_
12-6	2103-2104	\[	_	_
12-7	2104-2115	AnimalFaces	_	_
12-8	2116-2117	(	_	_
12-9	2117-2122	FUNIT	_	_
12-10	2122-2123	)	_	_
12-11	2123-2124	\]	_	_
12-12	2124-2125	(	_	_
12-13	2125-2130	https	_	_
12-14	2130-2131	:	_	_
12-15	2131-2132	/	_	_
12-16	2132-2133	/	_	_
12-17	2133-2143	github.com	_	_
12-18	2143-2144	/	_	_
12-19	2144-2150	NVlabs	_	_
12-20	2150-2151	/	_	_
12-21	2151-2156	FUNIT	_	_
12-22	2156-2157	)	_	_
12-23	2158-2159	\*	_	_
12-24	2160-2167	Example	_	_
12-25	2168-2177	directory	_	_
12-26	2178-2187	hierarchy	_	_
12-27	2188-2189	(	_	_
12-28	2189-2193	AFHQ	_	_
12-29	2193-2194	,	_	_
12-30	2195-2206	AnimalFaces	_	_
12-31	2206-2207	)	_	_
12-32	2207-2208	:	_	_
12-33	2210-2211	`	_	_
12-34	2211-2212	`	_	_
12-35	2212-2213	`	_	_
12-36	2214-2221	Project	_	_
12-37	2222-2223	\|	_	_
12-38	2223-2224	-	_	_
12-39	2224-2225	-	_	_
12-40	2225-2226	-	_	_
12-41	2227-2232	tunit	_	_
12-42	2233-2234	\|	_	_
12-43	2244-2245	\|	_	_
12-44	2245-2246	-	_	_
12-45	2246-2247	-	_	_
12-46	2247-2248	-	_	_
12-47	2249-2256	main.py	_	_
12-48	2257-2258	\|	_	_
12-49	2268-2269	\|	_	_
12-50	2269-2270	-	_	_
12-51	2270-2271	-	_	_
12-52	2271-2272	-	_	_
12-53	2273-2278	train	_	_
12-54	2279-2280	\|	_	_
12-55	2297-2298	\|	_	_
12-56	2298-2299	-	_	_
12-57	2299-2300	-	_	_
12-58	2300-2301	-	_	_
12-59	2302-2323	train\_unsupervised.py	_	_
12-60	2324-2325	\|	_	_
12-61	2342-2343	\|	_	_
12-62	2343-2344	-	_	_
12-63	2344-2345	-	_	_
12-64	2345-2346	-	_	_
12-65	2347-2348	.	_	_
12-66	2348-2349	.	_	_
12-67	2349-2350	.	_	_
12-68	2351-2352	\|	_	_
12-69	2353-2354	\|	_	_
12-70	2354-2355	-	_	_
12-71	2355-2356	-	_	_
12-72	2356-2357	-	_	_
12-73	2358-2362	data	_	_
12-74	2370-2371	\|	_	_
12-75	2371-2372	-	_	_
12-76	2372-2373	-	_	_
12-77	2373-2374	-	_	_
12-78	2375-2379	afhq	_	_
12-79	2393-2394	\|	_	_
12-80	2394-2395	-	_	_
12-81	2395-2396	-	_	_
12-82	2396-2397	-	_	_
12-83	2398-2403	train	_	_
12-84	2417-2418	\|	_	_
12-85	2418-2419	-	_	_
12-86	2419-2420	-	_	_
12-87	2420-2421	-	_	_
12-88	2422-2426	test	_	_
12-89	2434-2435	\|	_	_
12-90	2435-2436	-	_	_
12-91	2436-2437	-	_	_
12-92	2437-2438	-	_	_
12-93	2439-2451	animal\_faces	_	_
12-94	2465-2466	\|	_	_
12-95	2466-2467	-	_	_
12-96	2467-2468	-	_	_
12-97	2468-2469	-	_	_
12-98	2470-2479	n02085620	_	_
12-99	2493-2494	\|	_	_
12-100	2494-2495	-	_	_
12-101	2495-2496	-	_	_
12-102	2496-2497	-	_	_
12-103	2498-2507	n02085782	_	_
12-104	2521-2522	\|	_	_
12-105	2522-2523	-	_	_
12-106	2523-2524	-	_	_
12-107	2524-2525	-	_	_
12-108	2526-2527	.	_	_
12-109	2527-2528	.	_	_
12-110	2528-2529	.	_	_
12-111	2537-2538	\|	_	_
12-112	2538-2539	-	_	_
12-113	2539-2540	-	_	_
12-114	2540-2541	-	_	_
12-115	2542-2546	ffhq	_	_
12-116	2560-2561	\|	_	_
12-117	2561-2562	-	_	_
12-118	2562-2563	-	_	_
12-119	2563-2564	-	_	_
12-120	2565-2571	images	_	_
12-121	2592-2593	\|	_	_
12-122	2593-2594	-	_	_
12-123	2594-2595	-	_	_
12-124	2595-2596	-	_	_
12-125	2597-2603	000001	_	_
12-126	2603-2604	.	_	_
12-127	2604-2607	jpg	_	_
12-128	2628-2629	\|	_	_
12-129	2629-2630	-	_	_
12-130	2630-2631	-	_	_
12-131	2631-2632	-	_	_
12-132	2633-2634	.	_	_
12-133	2634-2635	.	_	_
12-134	2635-2636	.	_	_
12-135	2644-2645	\|	_	_
12-136	2645-2646	-	_	_
12-137	2646-2647	-	_	_
12-138	2647-2648	-	_	_
12-139	2649-2657	lsun\_car	*[351]	DATASET[351]
12-140	2671-2672	\|	*[351]	DATASET[351]
12-141	2672-2673	-	*[351]	DATASET[351]
12-142	2673-2674	-	*[351]	DATASET[351]
12-143	2674-2675	-	*[351]	DATASET[351]
12-144	2676-2682	images	*[351]	DATASET[351]
12-145	2703-2704	\|	*[351]	DATASET[351]
12-146	2704-2705	-	*[351]	DATASET[351]
12-147	2705-2706	-	*[351]	DATASET[351]
12-148	2706-2707	-	*[351]	DATASET[351]
12-149	2708-2714	000001	*[351]	DATASET[351]
12-150	2714-2715	.	*[351]	DATASET[351]
12-151	2715-2718	jpg	_	_
12-152	2739-2740	\|	_	_
12-153	2740-2741	-	_	_
12-154	2741-2742	-	_	_
12-155	2742-2743	-	_	_
12-156	2744-2745	.	_	_
12-157	2745-2746	.	_	_
12-158	2746-2747	.	_	_

#Text=Then, call --data\_path='..
13-1	2749-2753	Then	_	_
13-2	2753-2754	,	_	_
13-3	2755-2759	call	_	_
13-4	2760-2761	-	_	_
13-5	2761-2762	-	_	_
13-6	2762-2771	data\_path	_	_
13-7	2771-2772	=	_	_
13-8	2772-2773	'	_	_
13-9	2773-2774	.	_	_
13-10	2774-2775	.	_	_

#Text=/data' ```  \_\_Hardware\_\_ \* This source code is mainly tested on V100 and P40.  ## How to Run (Quick Start) After setting the dataset directory, the code can be easily run by the scripts below.
14-1	2775-2776	/	_	_
14-2	2776-2780	data	_	_
14-3	2780-2781	'	*[394]	EVALMETRIC[394]
14-4	2782-2783	`	*[394]	EVALMETRIC[394]
14-5	2783-2784	`	*[394]	EVALMETRIC[394]
14-6	2784-2785	`	*[394]	EVALMETRIC[394]
14-7	2787-2788	\_	*[394]	EVALMETRIC[394]
14-8	2788-2789	\_	*[394]	EVALMETRIC[394]
14-9	2789-2797	Hardware	*[394]	EVALMETRIC[394]
14-10	2797-2798	\_	*[394]	EVALMETRIC[394]
14-11	2798-2799	\_	*[394]	EVALMETRIC[394]
14-12	2800-2801	\*	*[394]	EVALMETRIC[394]
14-13	2802-2806	This	*[394]	EVALMETRIC[394]
14-14	2807-2813	source	*[394]	EVALMETRIC[394]
14-15	2814-2818	code	*[394]	EVALMETRIC[394]
14-16	2819-2821	is	*[394]	EVALMETRIC[394]
14-17	2822-2828	mainly	*[394]	EVALMETRIC[394]
14-18	2829-2835	tested	*[394]	EVALMETRIC[394]
14-19	2836-2838	on	*[394]	EVALMETRIC[394]
14-20	2839-2843	V100	*[394]	EVALMETRIC[394]
14-21	2844-2847	and	*[394]	EVALMETRIC[394]
14-22	2848-2851	P40	*[394]	EVALMETRIC[394]
14-23	2851-2852	.	*[394]	EVALMETRIC[394]
14-24	2854-2855	#	*[394]	EVALMETRIC[394]
14-25	2855-2856	#	*[394]	EVALMETRIC[394]
14-26	2857-2860	How	_	_
14-27	2861-2863	to	_	_
14-28	2864-2867	Run	_	_
14-29	2868-2869	(	_	_
14-30	2869-2874	Quick	_	_
14-31	2875-2880	Start	_	_
14-32	2880-2881	)	_	_
14-33	2882-2887	After	_	_
14-34	2888-2895	setting	_	_
14-35	2896-2899	the	_	_
14-36	2900-2907	dataset	_	_
14-37	2908-2917	directory	_	_
14-38	2917-2918	,	_	_
14-39	2919-2922	the	_	_
14-40	2923-2927	code	_	_
14-41	2928-2931	can	_	_
14-42	2932-2934	be	_	_
14-43	2935-2941	easily	_	_
14-44	2942-2945	run	_	_
14-45	2946-2948	by	_	_
14-46	2949-2952	the	_	_
14-47	2953-2960	scripts	_	_
14-48	2961-2966	below	_	_
14-49	2966-2967	.	_	_

#Text=\_\_Train on local\_\_ ``` Supervised python main.py --gpu $GPU\_TO\_USE --p\_semi 1.0 --dataset animal\_faces --data\_path='..
15-1	2969-2970	\_	_	_
15-2	2970-2971	\_	_	_
15-3	2971-2976	Train	_	_
15-4	2977-2979	on	_	_
15-5	2980-2985	local	_	_
15-6	2985-2986	\_	_	_
15-7	2986-2987	\_	_	_
15-8	2988-2989	`	_	_
15-9	2989-2990	`	_	_
15-10	2990-2991	`	_	_
15-11	2992-3002	Supervised	_	_
15-12	3003-3009	python	_	_
15-13	3010-3017	main.py	_	_
15-14	3018-3019	-	_	_
15-15	3019-3020	-	_	_
15-16	3020-3023	gpu	_	_
15-17	3024-3025	$	_	_
15-18	3025-3035	GPU\_TO\_USE	_	_
15-19	3036-3037	-	_	_
15-20	3037-3038	-	_	_
15-21	3038-3044	p\_semi	_	_
15-22	3045-3048	1.0	_	_
15-23	3049-3050	-	_	_
15-24	3050-3051	-	_	_
15-25	3051-3058	dataset	_	_
15-26	3059-3071	animal\_faces	_	_
15-27	3072-3073	-	*[344]	PUBLICATION[344]
15-28	3073-3074	-	_	_
15-29	3074-3083	data\_path	_	_
15-30	3083-3084	=	_	_
15-31	3084-3085	'	_	_
15-32	3085-3086	.	_	_
15-33	3086-3087	.	_	_

#Text=/data'  Semi-supervised python main.py --gpu $GPU\_TO\_USE --p\_semi 0.5 --dataset animal\_faces --data\_path='..
16-1	3087-3088	/	_	_
16-2	3088-3092	data	_	_
16-3	3092-3093	'	_	_
16-4	3095-3110	Semi-supervised	_	_
16-5	3111-3117	python	_	_
16-6	3118-3125	main.py	_	_
16-7	3126-3127	-	_	_
16-8	3127-3128	-	_	_
16-9	3128-3131	gpu	_	_
16-10	3132-3133	$	_	_
16-11	3133-3143	GPU\_TO\_USE	_	_
16-12	3144-3145	-	*[381]	LICENSE[381]
16-13	3145-3146	-	*[381]	LICENSE[381]
16-14	3146-3152	p\_semi	*[381]	LICENSE[381]
16-15	3153-3156	0.5	*[381]	LICENSE[381]
16-16	3157-3158	-	*[381]	LICENSE[381]
16-17	3158-3159	-	*[381]	LICENSE[381]
16-18	3159-3166	dataset	_	_
16-19	3167-3179	animal\_faces	_	_
16-20	3180-3181	-	_	_
16-21	3181-3182	-	_	_
16-22	3182-3191	data\_path	_	_
16-23	3191-3192	=	_	_
16-24	3192-3193	'	_	_
16-25	3193-3194	.	_	_
16-26	3194-3195	.	_	_

#Text=/data'  Unsupervised python main.py --gpu $GPU\_TO\_USE --p\_semi 0.0 --dataset animal\_faces --data\_path='..
17-1	3195-3196	/	_	_
17-2	3196-3200	data	_	_
17-3	3200-3201	'	_	_
17-4	3203-3215	Unsupervised	_	_
17-5	3216-3222	python	_	_
17-6	3223-3230	main.py	_	_
17-7	3231-3232	-	_	_
17-8	3232-3233	-	_	_
17-9	3233-3236	gpu	_	_
17-10	3237-3238	$	_	_
17-11	3238-3248	GPU\_TO\_USE	_	_
17-12	3249-3250	-	*[382]	LICENSE[382]
17-13	3250-3251	-	*[382]	LICENSE[382]
17-14	3251-3257	p\_semi	*[382]	LICENSE[382]
17-15	3258-3261	0.0	*[382]	LICENSE[382]
17-16	3262-3263	-	*[382]	LICENSE[382]
17-17	3263-3264	-	*[382]	LICENSE[382]
17-18	3264-3271	dataset	*[382]	LICENSE[382]
17-19	3272-3284	animal\_faces	_	_
17-20	3285-3286	-	_	_
17-21	3286-3287	-	_	_
17-22	3287-3296	data\_path	_	_
17-23	3296-3297	=	_	_
17-24	3297-3298	'	_	_
17-25	3298-3299	.	_	_
17-26	3299-3300	.	_	_

#Text=/data' ```  \_\_Test on local\_\_ ``` python main.py --gpu $GPU\_TO\_USE --validation --load\_model $DIR\_TO\_LOAD --dataset animal\_faces ```  \_\_Monitoring\_\_ ``` tensorboard --logdir=$DIR/events --port=$PORT ```  \_\_Actual example\_\_ ``` Train python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --data\_path '..
18-1	3300-3301	/	_	_
18-2	3301-3305	data	_	_
18-3	3305-3306	'	_	_
18-4	3307-3308	`	_	_
18-5	3308-3309	`	_	_
18-6	3309-3310	`	_	_
18-7	3312-3313	\_	_	_
18-8	3313-3314	\_	_	_
18-9	3314-3318	Test	_	_
18-10	3319-3321	on	_	_
18-11	3322-3327	local	_	_
18-12	3327-3328	\_	_	_
18-13	3328-3329	\_	_	_
18-14	3330-3331	`	_	_
18-15	3331-3332	`	_	_
18-16	3332-3333	`	_	_
18-17	3334-3340	python	_	_
18-18	3341-3348	main.py	_	_
18-19	3349-3350	-	_	_
18-20	3350-3351	-	_	_
18-21	3351-3354	gpu	_	_
18-22	3355-3356	$	_	_
18-23	3356-3366	GPU\_TO\_USE	_	_
18-24	3367-3368	-	_	_
18-25	3368-3369	-	_	_
18-26	3369-3379	validation	_	_
18-27	3380-3381	-	_	_
18-28	3381-3382	-	_	_
18-29	3382-3392	load\_model	_	_
18-30	3393-3394	$	_	_
18-31	3394-3405	DIR\_TO\_LOAD	_	_
18-32	3406-3407	-	_	_
18-33	3407-3408	-	_	_
18-34	3408-3415	dataset	_	_
18-35	3416-3428	animal\_faces	_	_
18-36	3429-3430	`	_	_
18-37	3430-3431	`	_	_
18-38	3431-3432	`	_	_
18-39	3434-3435	\_	_	_
18-40	3435-3436	\_	_	_
18-41	3436-3446	Monitoring	_	_
18-42	3446-3447	\_	_	_
18-43	3447-3448	\_	_	_
18-44	3449-3450	`	_	_
18-45	3450-3451	`	_	_
18-46	3451-3452	`	_	_
18-47	3453-3464	tensorboard	_	_
18-48	3465-3466	-	_	_
18-49	3466-3467	-	_	_
18-50	3467-3473	logdir	_	_
18-51	3473-3474	=	_	_
18-52	3474-3475	$	_	_
18-53	3475-3478	DIR	_	_
18-54	3478-3479	/	_	_
18-55	3479-3485	events	_	_
18-56	3486-3487	-	_	_
18-57	3487-3488	-	_	_
18-58	3488-3492	port	_	_
18-59	3492-3493	=	_	_
18-60	3493-3494	$	_	_
18-61	3494-3498	PORT	_	_
18-62	3499-3500	`	_	_
18-63	3500-3501	`	_	_
18-64	3501-3502	`	_	_
18-65	3504-3505	\_	_	_
18-66	3505-3506	\_	_	_
18-67	3506-3512	Actual	_	_
18-68	3513-3520	example	_	_
18-69	3520-3521	\_	_	_
18-70	3521-3522	\_	_	_
18-71	3523-3524	`	_	_
18-72	3524-3525	`	_	_
18-73	3525-3526	`	_	_
18-74	3527-3532	Train	_	_
18-75	3533-3539	python	_	_
18-76	3540-3547	main.py	_	_
18-77	3548-3549	-	_	_
18-78	3549-3550	-	_	_
18-79	3550-3553	gpu	_	_
18-80	3554-3555	0	_	_
18-81	3556-3557	-	_	_
18-82	3557-3558	-	_	_
18-83	3558-3565	dataset	_	_
18-84	3566-3578	animal\_faces	_	_
18-85	3579-3580	-	*[345]	PUBLICATION[345]
18-86	3580-3581	-	*[345]	PUBLICATION[345]
18-87	3581-3589	output\_k	_	_
18-88	3590-3592	10	_	_
18-89	3593-3594	-	_	_
18-90	3594-3595	-	_	_
18-91	3595-3604	data\_path	_	_
18-92	3605-3606	'	_	_
18-93	3606-3607	.	_	_
18-94	3607-3608	.	_	_

#Text=/data' --p\_semi 0.0 python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --data\_path '..
19-1	3608-3609	/	_	_
19-2	3609-3613	data	_	_
19-3	3613-3614	'	_	_
19-4	3615-3616	-	_	_
19-5	3616-3617	-	_	_
19-6	3617-3623	p\_semi	_	_
19-7	3624-3627	0.0	_	_
19-8	3628-3634	python	_	_
19-9	3635-3642	main.py	_	_
19-10	3643-3644	-	_	_
19-11	3644-3645	-	_	_
19-12	3645-3648	gpu	_	_
19-13	3649-3650	0	_	_
19-14	3651-3652	-	_	_
19-15	3652-3653	-	_	_
19-16	3653-3660	dataset	_	_
19-17	3661-3673	animal\_faces	_	_
19-18	3674-3675	-	*[352]	DATASET[352]
19-19	3675-3676	-	*[352]	DATASET[352]
19-20	3676-3684	output\_k	*[352]	DATASET[352]
19-21	3685-3687	10	*[352]	DATASET[352]
19-22	3688-3689	-	*[352]	DATASET[352]
19-23	3689-3690	-	*[352]	DATASET[352]
19-24	3690-3699	data\_path	_	_
19-25	3700-3701	'	_	_
19-26	3701-3702	.	_	_
19-27	3702-3703	.	_	_

#Text=/data' --p\_semi 0.2 python main.py --gpu 0 --dataset afhq\_cat --output\_k 10 --data\_path '..
20-1	3703-3704	/	_	_
20-2	3704-3708	data	_	_
20-3	3708-3709	'	_	_
20-4	3710-3711	-	_	_
20-5	3711-3712	-	_	_
20-6	3712-3718	p\_semi	_	_
20-7	3719-3722	0.2	_	_
20-8	3723-3729	python	_	_
20-9	3730-3737	main.py	_	_
20-10	3738-3739	-	_	_
20-11	3739-3740	-	_	_
20-12	3740-3743	gpu	_	_
20-13	3744-3745	0	_	_
20-14	3746-3747	-	_	_
20-15	3747-3748	-	_	_
20-16	3748-3755	dataset	_	_
20-17	3756-3764	afhq\_cat	_	_
20-18	3765-3766	-	_	_
20-19	3766-3767	-	_	_
20-20	3767-3775	output\_k	_	_
20-21	3776-3778	10	_	_
20-22	3779-3780	-	_	_
20-23	3780-3781	-	_	_
20-24	3781-3790	data\_path	_	_
20-25	3791-3792	'	_	_
20-26	3792-3793	.	_	_
20-27	3793-3794	.	_	_

#Text=/data' --p\_semi 0.0 python main.py --gpu 1 --dataset animal\_faces --data\_path '..
21-1	3794-3795	/	_	_
21-2	3795-3799	data	_	_
21-3	3799-3800	'	_	_
21-4	3801-3802	-	_	_
21-5	3802-3803	-	*[356]	ONTOLOGY[356]
21-6	3803-3809	p\_semi	*[356]	ONTOLOGY[356]
21-7	3810-3813	0.0	*[356]	ONTOLOGY[356]
21-8	3814-3820	python	*[356]	ONTOLOGY[356]
21-9	3821-3828	main.py	*[356]	ONTOLOGY[356]
21-10	3829-3830	-	*[356]	ONTOLOGY[356]
21-11	3830-3831	-	*[356]	ONTOLOGY[356]
21-12	3831-3834	gpu	*[356]	ONTOLOGY[356]
21-13	3835-3836	1	*[356]	ONTOLOGY[356]
21-14	3837-3838	-	*[356]	ONTOLOGY[356]
21-15	3838-3839	-	*[356]	ONTOLOGY[356]
21-16	3839-3846	dataset	*[356]	ONTOLOGY[356]
21-17	3847-3859	animal\_faces	*[356]	ONTOLOGY[356]
21-18	3860-3861	-	*[356]	ONTOLOGY[356]
21-19	3861-3862	-	*[356]	ONTOLOGY[356]
21-20	3862-3871	data\_path	_	_
21-21	3872-3873	'	_	_
21-22	3873-3874	.	_	_
21-23	3874-3875	.	_	_

#Text=/data' --p\_semi 1.0 python main.py --gpu 0,1 --dataset summer2winter --output\_k 2 --data\_path '..
22-1	3875-3876	/	_	_
22-2	3876-3880	data	_	_
22-3	3880-3881	'	_	_
22-4	3882-3883	-	_	_
22-5	3883-3884	-	_	_
22-6	3884-3890	p\_semi	_	_
22-7	3891-3894	1.0	_	_
22-8	3895-3901	python	_	_
22-9	3902-3909	main.py	_	_
22-10	3910-3911	-	_	_
22-11	3911-3912	-	_	_
22-12	3912-3915	gpu	_	_
22-13	3916-3919	0,1	_	_
22-14	3920-3921	-	_	_
22-15	3921-3922	-	_	_
22-16	3922-3929	dataset	_	_
22-17	3930-3943	summer2winter	_	_
22-18	3944-3945	-	_	_
22-19	3945-3946	-	_	_
22-20	3946-3954	output\_k	_	_
22-21	3955-3956	2	_	_
22-22	3957-3958	-	_	_
22-23	3958-3959	-	_	_
22-24	3959-3968	data\_path	_	_
22-25	3969-3970	'	_	_
22-26	3970-3971	.	_	_
22-27	3971-3972	.	_	_

#Text=/data' --p\_semi 0.0 --img\_size 256 --batch\_size 16 --ddp  Test python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --data\_path '..
23-1	3972-3973	/	_	_
23-2	3973-3977	data	_	_
23-3	3977-3978	'	_	_
23-4	3979-3980	-	_	_
23-5	3980-3981	-	_	_
23-6	3981-3987	p\_semi	_	_
23-7	3988-3991	0.0	_	_
23-8	3992-3993	-	_	_
23-9	3993-3994	-	_	_
23-10	3994-4002	img\_size	_	_
23-11	4003-4006	256	_	_
23-12	4007-4008	-	*[388]	PROGLANG[388]
23-13	4008-4009	-	*[388]	PROGLANG[388]
23-14	4009-4019	batch\_size	*[388]	PROGLANG[388]
23-15	4020-4022	16	*[388]	PROGLANG[388]
23-16	4023-4024	-	*[388]	PROGLANG[388]
23-17	4024-4025	-	*[388]	PROGLANG[388]
23-18	4025-4028	ddp	*[388]	PROGLANG[388]
23-19	4030-4034	Test	*[388]	PROGLANG[388]
23-20	4035-4041	python	_	_
23-21	4042-4049	main.py	_	_
23-22	4050-4051	-	_	_
23-23	4051-4052	-	_	_
23-24	4052-4055	gpu	_	_
23-25	4056-4057	0	_	_
23-26	4058-4059	-	_	_
23-27	4059-4060	-	_	_
23-28	4060-4067	dataset	_	_
23-29	4068-4080	animal\_faces	_	_
23-30	4081-4082	-	_	_
23-31	4082-4083	-	_	_
23-32	4083-4091	output\_k	_	_
23-33	4092-4094	10	_	_
23-34	4095-4096	-	_	_
23-35	4096-4097	-	_	_
23-36	4097-4106	data\_path	_	_
23-37	4107-4108	'	_	_
23-38	4108-4109	.	_	_
23-39	4109-4110	.	_	_

#Text=/data' --validation --load\_model GAN\_20190101\_101010 python main.py --gpu 1 --dataset afhq\_cat --output\_k 10 --data\_path '..
24-1	4110-4111	/	_	_
24-2	4111-4115	data	_	_
24-3	4115-4116	'	_	_
24-4	4117-4118	-	_	_
24-5	4118-4119	-	_	_
24-6	4119-4129	validation	_	_
24-7	4130-4131	-	_	_
24-8	4131-4132	-	_	_
24-9	4132-4142	load\_model	_	_
24-10	4143-4146	GAN	_	_
24-11	4146-4147	\_	_	_
24-12	4147-4155	20190101	_	_
24-13	4155-4156	\_	_	_
24-14	4156-4162	101010	_	_
24-15	4163-4169	python	_	_
24-16	4170-4177	main.py	_	_
24-17	4178-4179	-	_	_
24-18	4179-4180	-	_	_
24-19	4180-4183	gpu	_	_
24-20	4184-4185	1	_	_
24-21	4186-4187	-	_	_
24-22	4187-4188	-	_	_
24-23	4188-4195	dataset	_	_
24-24	4196-4204	afhq\_cat	*[357]	ONTOLOGY[357]
24-25	4205-4206	-	*[357]	ONTOLOGY[357]
24-26	4206-4207	-	*[357]	ONTOLOGY[357]
24-27	4207-4215	output\_k	*[357]	ONTOLOGY[357]
24-28	4216-4218	10	*[357]	ONTOLOGY[357]
24-29	4219-4220	-	_	_
24-30	4220-4221	-	_	_
24-31	4221-4230	data\_path	_	_
24-32	4231-4232	'	_	_
24-33	4232-4233	.	_	_
24-34	4233-4234	.	_	_

#Text=/data' --validation --load\_model GAN\_20190101\_101010 python main.py --gpu 2 --dataset summer2winter --output\_k 2 --data\_path '..
25-1	4234-4235	/	_	_
25-2	4235-4239	data	_	_
25-3	4239-4240	'	_	_
25-4	4241-4242	-	_	_
25-5	4242-4243	-	_	_
25-6	4243-4253	validation	_	_
25-7	4254-4255	-	_	_
25-8	4255-4256	-	_	_
25-9	4256-4266	load\_model	_	_
25-10	4267-4270	GAN	_	_
25-11	4270-4271	\_	_	_
25-12	4271-4279	20190101	_	_
25-13	4279-4280	\_	_	_
25-14	4280-4286	101010	_	_
25-15	4287-4293	python	_	_
25-16	4294-4301	main.py	_	_
25-17	4302-4303	-	_	_
25-18	4303-4304	-	_	_
25-19	4304-4307	gpu	_	_
25-20	4308-4309	2	_	_
25-21	4310-4311	-	_	_
25-22	4311-4312	-	_	_
25-23	4312-4319	dataset	_	_
25-24	4320-4333	summer2winter	_	_
25-25	4334-4335	-	*[395]	EVALMETRIC[395]
25-26	4335-4336	-	*[395]	EVALMETRIC[395]
25-27	4336-4344	output\_k	*[395]	EVALMETRIC[395]
25-28	4345-4346	2	*[395]	EVALMETRIC[395]
25-29	4347-4348	-	*[395]	EVALMETRIC[395]
25-30	4348-4349	-	*[395]	EVALMETRIC[395]
25-31	4349-4358	data\_path	_	_
25-32	4359-4360	'	_	_
25-33	4360-4361	.	_	_
25-34	4361-4362	.	_	_

#Text=/data' --validation --load\_model GAN\_20190101\_101010  Monitoring - open terminal at .
26-1	4362-4363	/	_	_
26-2	4363-4367	data	_	_
26-3	4367-4368	'	_	_
26-4	4369-4370	-	_	_
26-5	4370-4371	-	_	_
26-6	4371-4381	validation	_	_
26-7	4382-4383	-	_	_
26-8	4383-4384	-	_	_
26-9	4384-4394	load\_model	_	_
26-10	4395-4398	GAN	_	_
26-11	4398-4399	\_	_	_
26-12	4399-4407	20190101	_	_
26-13	4407-4408	\_	_	_
26-14	4408-4414	101010	_	_
26-15	4416-4426	Monitoring	_	_
26-16	4427-4428	-	_	_
26-17	4429-4433	open	_	_
26-18	4434-4442	terminal	_	_
26-19	4443-4445	at	_	_
26-20	4446-4447	.	_	_

#Text=/tunit/logs tensorboard --logdir=.
27-1	4447-4448	/	_	_
27-2	4448-4453	tunit	_	_
27-3	4453-4454	/	_	_
27-4	4454-4458	logs	_	_
27-5	4459-4470	tensorboard	_	_
27-6	4471-4472	-	*[370]	WORKSHOP[370]
27-7	4472-4473	-	*[370]	WORKSHOP[370]
27-8	4473-4479	logdir	_	_
27-9	4479-4480	=	_	_
27-10	4480-4481	.	_	_

#Text=/GAN\_20200101\_101010/events ```  ## Pretrained Model ### Download \[One Drive\](https://1drv.ms/u/s!
28-1	4481-4482	/	_	_
28-2	4482-4485	GAN	_	_
28-3	4485-4486	\_	_	_
28-4	4486-4494	20200101	_	_
28-5	4494-4495	\_	_	_
28-6	4495-4501	101010	_	_
28-7	4501-4502	/	_	_
28-8	4502-4508	events	_	_
28-9	4509-4510	`	_	_
28-10	4510-4511	`	_	_
28-11	4511-4512	`	_	_
28-12	4514-4515	#	_	_
28-13	4515-4516	#	_	_
28-14	4517-4527	Pretrained	_	_
28-15	4528-4533	Model	_	_
28-16	4534-4535	#	_	_
28-17	4535-4536	#	_	_
28-18	4536-4537	#	_	_
28-19	4538-4546	Download	_	_
28-20	4547-4548	\[	_	_
28-21	4548-4551	One	_	_
28-22	4552-4557	Drive	_	_
28-23	4557-4558	\]	_	_
28-24	4558-4559	(	_	_
28-25	4559-4564	https	_	_
28-26	4564-4565	:	_	_
28-27	4565-4566	/	_	_
28-28	4566-4567	/	_	_
28-29	4567-4574	1drv.ms	_	_
28-30	4574-4575	/	_	_
28-31	4575-4576	u	_	_
28-32	4576-4577	/	_	_
28-33	4577-4578	s	_	_
28-34	4578-4579	!	_	_

#Text=AprVWp5MreFV8BLY22ias4Gt1ZtO?
29-1	4579-4607	AprVWp5MreFV8BLY22ias4Gt1ZtO	_	_
29-2	4607-4608	?	_	_

#Text=e=IYsUwX) \* Download folders to load, then place the folder under 'logs'. \* Links of google drive are deprecated. ``` Project \|--- tunit \|          \|--- main.py \|          \|--- logs \|                 \|--- animalFaces10\_0\_00 \|                               \|--- checkpoint.txt \|                               \|--- model\_4568.ckpt \|          \|--- train \|                 \|--- train\_unsupervised.py \|                 \|--- ...
30-1	4608-4609	e	_	_
30-2	4609-4610	=	_	_
30-3	4610-4616	IYsUwX	_	_
30-4	4616-4617	)	_	_
30-5	4618-4619	\*	_	_
30-6	4620-4628	Download	_	_
30-7	4629-4636	folders	_	_
30-8	4637-4639	to	_	_
30-9	4640-4644	load	_	_
30-10	4644-4645	,	_	_
30-11	4646-4650	then	_	_
30-12	4651-4656	place	_	_
30-13	4657-4660	the	_	_
30-14	4661-4667	folder	_	_
30-15	4668-4673	under	_	_
30-16	4674-4675	'	_	_
30-17	4675-4679	logs	_	_
30-18	4679-4680	'	_	_
30-19	4680-4681	.	_	_
30-20	4682-4683	\*	_	_
30-21	4684-4689	Links	_	_
30-22	4690-4692	of	_	_
30-23	4693-4699	google	_	_
30-24	4700-4705	drive	_	_
30-25	4706-4709	are	_	_
30-26	4710-4720	deprecated	_	_
30-27	4720-4721	.	_	_
30-28	4722-4723	`	_	_
30-29	4723-4724	`	_	_
30-30	4724-4725	`	_	_
30-31	4726-4733	Project	_	_
30-32	4734-4735	\|	_	_
30-33	4735-4736	-	_	_
30-34	4736-4737	-	_	_
30-35	4737-4738	-	_	_
30-36	4739-4744	tunit	_	_
30-37	4745-4746	\|	_	_
30-38	4756-4757	\|	_	_
30-39	4757-4758	-	_	_
30-40	4758-4759	-	_	_
30-41	4759-4760	-	_	_
30-42	4761-4768	main.py	_	_
30-43	4769-4770	\|	_	_
30-44	4780-4781	\|	_	_
30-45	4781-4782	-	_	_
30-46	4782-4783	-	_	_
30-47	4783-4784	-	_	_
30-48	4785-4789	logs	_	_
30-49	4790-4791	\|	_	_
30-50	4808-4809	\|	_	_
30-51	4809-4810	-	_	_
30-52	4810-4811	-	_	_
30-53	4811-4812	-	_	_
30-54	4813-4826	animalFaces10	_	_
30-55	4826-4827	\_	_	_
30-56	4827-4828	0	_	_
30-57	4828-4829	\_	_	_
30-58	4829-4831	00	_	_
30-59	4832-4833	\|	_	_
30-60	4864-4865	\|	_	_
30-61	4865-4866	-	*[390]	PROGLANG[390]
30-62	4866-4867	-	*[390]	PROGLANG[390]
30-63	4867-4868	-	*[390]	PROGLANG[390]
30-64	4869-4883	checkpoint.txt	*[390]	PROGLANG[390]
30-65	4884-4885	\|	*[390]	PROGLANG[390]
30-66	4916-4917	\|	*[390]	PROGLANG[390]
30-67	4917-4918	-	*[390]	PROGLANG[390]
30-68	4918-4919	-	*[390]	PROGLANG[390]
30-69	4919-4920	-	*[390]	PROGLANG[390]
30-70	4921-4926	model	*[390]	PROGLANG[390]
30-71	4926-4927	\_	*[390]	PROGLANG[390]
30-72	4927-4931	4568	*[390]	PROGLANG[390]
30-73	4931-4932	.	*[390]	PROGLANG[390]
30-74	4932-4936	ckpt	*[390]	PROGLANG[390]
30-75	4937-4938	\|	_	_
30-76	4948-4949	\|	_	_
30-77	4949-4950	-	_	_
30-78	4950-4951	-	_	_
30-79	4951-4952	-	_	_
30-80	4953-4958	train	_	_
30-81	4959-4960	\|	_	_
30-82	4977-4978	\|	_	_
30-83	4978-4979	-	_	_
30-84	4979-4980	-	_	_
30-85	4980-4981	-	_	_
30-86	4982-5003	train\_unsupervised.py	_	_
30-87	5004-5005	\|	_	_
30-88	5022-5023	\|	_	_
30-89	5023-5024	-	_	_
30-90	5024-5025	-	_	_
30-91	5025-5026	-	_	_
30-92	5027-5028	.	_	_
30-93	5028-5029	.	_	_
30-94	5029-5030	.	_	_

#Text=Then, RUN python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model animalFaces10\_0\_00 --p\_semi 0.0 ``` ### How to run ``` AFHQ Cat python main.py --gpu 0 --dataset afhq\_cat --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model afhq\_cat\_128 python main.py --gpu 0 --dataset afhq\_cat --output\_k 10 --img\_size 256 --data\_path $DATAPATH --validation --load\_model afhq\_cat\_256 ``` ``` AFHQ Dog python main.py --gpu 0 --dataset afhq\_dog --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model afhq\_dog\_128 python main.py --gpu 0 --dataset afhq\_dog --output\_k 10 --img\_size 256 --data\_path $DATAPATH --validation --load\_model afhq\_dog\_256  ``` ``` AFHQ Wild python main.py --gpu 0 --dataset afhq\_wild --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model afhq\_wild\_128 python main.py --gpu 0 --dataset afhq\_wild --output\_k 10 --img\_size 256 --data\_path $DATAPATH --validation --load\_model afhq\_wild\_256 ``` ``` AnimalFaces-10 python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model animalFaces10\_0\_00 --p\_semi 0.0 python main.py --gpu 0 --dataset animal\_faces --output\_k 10 --img\_size 128 --data\_path $DATAPATH --validation --load\_model animalFaces10\_0\_20 --p\_semi 0.2 ```  ## Explanation for codes The validation generates 200 images per args.iters iterations.
31-1	5032-5036	Then	_	_
31-2	5036-5037	,	_	_
31-3	5038-5041	RUN	_	_
31-4	5042-5048	python	_	_
31-5	5049-5056	main.py	_	_
31-6	5057-5058	-	_	_
31-7	5058-5059	-	_	_
31-8	5059-5062	gpu	_	_
31-9	5063-5064	0	_	_
31-10	5065-5066	-	_	_
31-11	5066-5067	-	_	_
31-12	5067-5074	dataset	_	_
31-13	5075-5087	animal\_faces	_	_
31-14	5088-5089	-	_	_
31-15	5089-5090	-	_	_
31-16	5090-5098	output\_k	_	_
31-17	5099-5101	10	_	_
31-18	5102-5103	-	_	_
31-19	5103-5104	-	_	_
31-20	5104-5112	img\_size	_	_
31-21	5113-5116	128	_	_
31-22	5117-5118	-	_	_
31-23	5118-5119	-	_	_
31-24	5119-5128	data\_path	_	_
31-25	5129-5130	$	_	_
31-26	5130-5138	DATAPATH	_	_
31-27	5139-5140	-	_	_
31-28	5140-5141	-	_	_
31-29	5141-5151	validation	_	_
31-30	5152-5153	-	_	_
31-31	5153-5154	-	_	_
31-32	5154-5164	load\_model	_	_
31-33	5165-5178	animalFaces10	_	_
31-34	5178-5179	\_	_	_
31-35	5179-5180	0	_	_
31-36	5180-5181	\_	_	_
31-37	5181-5183	00	_	_
31-38	5184-5185	-	_	_
31-39	5185-5186	-	_	_
31-40	5186-5192	p\_semi	_	_
31-41	5193-5196	0.0	_	_
31-42	5197-5198	`	_	_
31-43	5198-5199	`	_	_
31-44	5199-5200	`	_	_
31-45	5201-5202	#	_	_
31-46	5202-5203	#	_	_
31-47	5203-5204	#	_	_
31-48	5205-5208	How	_	_
31-49	5209-5211	to	_	_
31-50	5212-5215	run	_	_
31-51	5216-5217	`	_	_
31-52	5217-5218	`	_	_
31-53	5218-5219	`	_	_
31-54	5220-5224	AFHQ	_	_
31-55	5225-5228	Cat	_	_
31-56	5229-5235	python	_	_
31-57	5236-5243	main.py	_	_
31-58	5244-5245	-	_	_
31-59	5245-5246	-	_	_
31-60	5246-5249	gpu	_	_
31-61	5250-5251	0	_	_
31-62	5252-5253	-	_	_
31-63	5253-5254	-	_	_
31-64	5254-5261	dataset	_	_
31-65	5262-5270	afhq\_cat	_	_
31-66	5271-5272	-	_	_
31-67	5272-5273	-	_	_
31-68	5273-5281	output\_k	_	_
31-69	5282-5284	10	_	_
31-70	5285-5286	-	_	_
31-71	5286-5287	-	_	_
31-72	5287-5295	img\_size	_	_
31-73	5296-5299	128	_	_
31-74	5300-5301	-	_	_
31-75	5301-5302	-	_	_
31-76	5302-5311	data\_path	_	_
31-77	5312-5313	$	_	_
31-78	5313-5321	DATAPATH	_	_
31-79	5322-5323	-	_	_
31-80	5323-5324	-	_	_
31-81	5324-5334	validation	_	_
31-82	5335-5336	-	_	_
31-83	5336-5337	-	_	_
31-84	5337-5347	load\_model	_	_
31-85	5348-5356	afhq\_cat	_	_
31-86	5356-5357	\_	_	_
31-87	5357-5360	128	_	_
31-88	5361-5367	python	_	_
31-89	5368-5375	main.py	_	_
31-90	5376-5377	-	_	_
31-91	5377-5378	-	_	_
31-92	5378-5381	gpu	_	_
31-93	5382-5383	0	_	_
31-94	5384-5385	-	_	_
31-95	5385-5386	-	_	_
31-96	5386-5393	dataset	_	_
31-97	5394-5402	afhq\_cat	_	_
31-98	5403-5404	-	_	_
31-99	5404-5405	-	_	_
31-100	5405-5413	output\_k	_	_
31-101	5414-5416	10	_	_
31-102	5417-5418	-	_	_
31-103	5418-5419	-	_	_
31-104	5419-5427	img\_size	_	_
31-105	5428-5431	256	_	_
31-106	5432-5433	-	_	_
31-107	5433-5434	-	*[358]	ONTOLOGY[358]
31-108	5434-5443	data\_path	*[358]	ONTOLOGY[358]
31-109	5444-5445	$	*[358]	ONTOLOGY[358]
31-110	5445-5453	DATAPATH	*[358]	ONTOLOGY[358]
31-111	5454-5455	-	*[358]	ONTOLOGY[358]
31-112	5455-5456	-	*[358]	ONTOLOGY[358]
31-113	5456-5466	validation	*[358]	ONTOLOGY[358]
31-114	5467-5468	-	*[358]	ONTOLOGY[358]
31-115	5468-5469	-	*[358]	ONTOLOGY[358]
31-116	5469-5479	load\_model	*[358]	ONTOLOGY[358]
31-117	5480-5488	afhq\_cat	*[358]	ONTOLOGY[358]
31-118	5488-5489	\_	*[358]	ONTOLOGY[358]
31-119	5489-5492	256	*[358]	ONTOLOGY[358]
31-120	5493-5494	`	*[358]	ONTOLOGY[358]
31-121	5494-5495	`	*[358]	ONTOLOGY[358]
31-122	5495-5496	`	*[358]	ONTOLOGY[358]
31-123	5497-5498	`	*[358]	ONTOLOGY[358]
31-124	5498-5499	`	*[358]	ONTOLOGY[358]
31-125	5499-5500	`	*[358]	ONTOLOGY[358]
31-126	5501-5505	AFHQ	*[358]	ONTOLOGY[358]
31-127	5506-5509	Dog	*[358]	ONTOLOGY[358]
31-128	5510-5516	python	*[358]	ONTOLOGY[358]
31-129	5517-5524	main.py	*[358]	ONTOLOGY[358]
31-130	5525-5526	-	*[358]	ONTOLOGY[358]
31-131	5526-5527	-	*[358]	ONTOLOGY[358]
31-132	5527-5530	gpu	*[358]	ONTOLOGY[358]
31-133	5531-5532	0	*[358]	ONTOLOGY[358]
31-134	5533-5534	-	*[358]	ONTOLOGY[358]
31-135	5534-5535	-	*[358]	ONTOLOGY[358]
31-136	5535-5542	dataset	*[358]	ONTOLOGY[358]
31-137	5543-5551	afhq\_dog	*[358]	ONTOLOGY[358]
31-138	5552-5553	-	*[358]	ONTOLOGY[358]
31-139	5553-5554	-	*[358]	ONTOLOGY[358]
31-140	5554-5562	output\_k	*[358]	ONTOLOGY[358]
31-141	5563-5565	10	*[358]	ONTOLOGY[358]
31-142	5566-5567	-	*[358]	ONTOLOGY[358]
31-143	5567-5568	-	*[358]	ONTOLOGY[358]
31-144	5568-5576	img\_size	*[358]	ONTOLOGY[358]
31-145	5577-5580	128	*[358]	ONTOLOGY[358]
31-146	5581-5582	-	*[358]	ONTOLOGY[358]
31-147	5582-5583	-	*[358]	ONTOLOGY[358]
31-148	5583-5592	data\_path	*[358]	ONTOLOGY[358]
31-149	5593-5594	$	*[358]	ONTOLOGY[358]
31-150	5594-5602	DATAPATH	*[358]	ONTOLOGY[358]
31-151	5603-5604	-	*[358]	ONTOLOGY[358]
31-152	5604-5605	-	*[358]	ONTOLOGY[358]
31-153	5605-5615	validation	*[358]	ONTOLOGY[358]
31-154	5616-5617	-	*[358]	ONTOLOGY[358]
31-155	5617-5618	-	*[358]	ONTOLOGY[358]
31-156	5618-5628	load\_model	*[358]	ONTOLOGY[358]
31-157	5629-5637	afhq\_dog	*[358]	ONTOLOGY[358]
31-157	5629-5633	afhq	*[358]	ONTOLOGY[358]
31-158	5637-5638	\_	*[358]	ONTOLOGY[358]
31-159	5638-5641	128	*[358]	ONTOLOGY[358]
31-160	5642-5648	python	*[358]	ONTOLOGY[358]
31-161	5649-5656	main.py	*[358]	ONTOLOGY[358]
31-162	5657-5658	-	*[358]	ONTOLOGY[358]
31-163	5658-5659	-	*[358]	ONTOLOGY[358]
31-164	5659-5662	gpu	*[358]	ONTOLOGY[358]
31-165	5663-5664	0	*[358]	ONTOLOGY[358]
31-166	5665-5666	-	*[358]	ONTOLOGY[358]
31-167	5666-5667	-	*[358]	ONTOLOGY[358]
31-168	5667-5674	dataset	*[358]	ONTOLOGY[358]
31-169	5675-5683	afhq\_dog	*[358]	ONTOLOGY[358]
31-170	5684-5685	-	*[358]	ONTOLOGY[358]
31-171	5685-5686	-	*[358]	ONTOLOGY[358]
31-172	5686-5694	output\_k	*[358]	ONTOLOGY[358]
31-173	5695-5697	10	*[358]	ONTOLOGY[358]
31-174	5698-5699	-	*[358]	ONTOLOGY[358]
31-175	5699-5700	-	*[358]	ONTOLOGY[358]
31-176	5700-5708	img\_size	*[358]	ONTOLOGY[358]
31-177	5709-5712	256	*[358]	ONTOLOGY[358]
31-178	5713-5714	-	*[358]	ONTOLOGY[358]
31-179	5714-5715	-	*[358]	ONTOLOGY[358]
31-180	5715-5724	data\_path	*[358]	ONTOLOGY[358]
31-181	5725-5726	$	*[358]	ONTOLOGY[358]
31-182	5726-5734	DATAPATH	*[358]	ONTOLOGY[358]
31-183	5735-5736	-	*[358]	ONTOLOGY[358]
31-184	5736-5737	-	*[358]	ONTOLOGY[358]
31-185	5737-5747	validation	*[358]	ONTOLOGY[358]
31-186	5748-5749	-	*[358]	ONTOLOGY[358]
31-187	5749-5750	-	*[358]	ONTOLOGY[358]
31-188	5750-5760	load\_model	*[358]	ONTOLOGY[358]
31-189	5761-5769	afhq\_dog	*[358]	ONTOLOGY[358]
31-190	5769-5770	\_	*[358]	ONTOLOGY[358]
31-191	5770-5773	256	*[358]	ONTOLOGY[358]
31-192	5775-5776	`	*[358]	ONTOLOGY[358]
31-193	5776-5777	`	*[358]	ONTOLOGY[358]
31-194	5777-5778	`	*[358]	ONTOLOGY[358]
31-195	5779-5780	`	*[358]	ONTOLOGY[358]
31-196	5780-5781	`	*[358]	ONTOLOGY[358]
31-197	5781-5782	`	*[358]	ONTOLOGY[358]
31-198	5783-5787	AFHQ	*[358]	ONTOLOGY[358]
31-199	5788-5792	Wild	*[358]	ONTOLOGY[358]
31-200	5793-5799	python	*[358]	ONTOLOGY[358]
31-201	5800-5807	main.py	*[358]	ONTOLOGY[358]
31-202	5808-5809	-	*[358]	ONTOLOGY[358]
31-203	5809-5810	-	*[358]	ONTOLOGY[358]
31-204	5810-5813	gpu	*[358]	ONTOLOGY[358]
31-205	5814-5815	0	*[358]	ONTOLOGY[358]
31-206	5816-5817	-	*[358]	ONTOLOGY[358]
31-207	5817-5818	-	*[358]	ONTOLOGY[358]
31-208	5818-5825	dataset	*[358]	ONTOLOGY[358]
31-209	5826-5835	afhq\_wild	*[358]	ONTOLOGY[358]
31-209	5826-5830	afhq	*[358]	ONTOLOGY[358]
31-210	5836-5837	-	*[358]	ONTOLOGY[358]
31-211	5837-5838	-	*[358]	ONTOLOGY[358]
31-212	5838-5846	output\_k	*[358]	ONTOLOGY[358]
31-213	5847-5849	10	*[358]	ONTOLOGY[358]
31-214	5850-5851	-	*[358]	ONTOLOGY[358]
31-215	5851-5852	-	*[358]	ONTOLOGY[358]
31-216	5852-5860	img\_size	*[358]	ONTOLOGY[358]
31-217	5861-5864	128	*[358]	ONTOLOGY[358]
31-218	5865-5866	-	*[358]	ONTOLOGY[358]
31-219	5866-5867	-	*[358]	ONTOLOGY[358]
31-220	5867-5876	data\_path	*[358]	ONTOLOGY[358]
31-221	5877-5878	$	*[358]	ONTOLOGY[358]
31-222	5878-5886	DATAPATH	*[358]	ONTOLOGY[358]
31-223	5887-5888	-	*[358]	ONTOLOGY[358]
31-224	5888-5889	-	*[358]	ONTOLOGY[358]
31-225	5889-5899	validation	*[358]	ONTOLOGY[358]
31-226	5900-5901	-	*[358]	ONTOLOGY[358]
31-227	5901-5902	-	*[358]	ONTOLOGY[358]
31-228	5902-5912	load\_model	*[358]	ONTOLOGY[358]
31-229	5913-5922	afhq\_wild	*[358]	ONTOLOGY[358]
31-229	5913-5917	afhq	*[358]	ONTOLOGY[358]
31-230	5922-5923	\_	*[358]	ONTOLOGY[358]
31-231	5923-5926	128	*[358]	ONTOLOGY[358]
31-232	5927-5933	python	*[358]	ONTOLOGY[358]
31-233	5934-5941	main.py	*[358]	ONTOLOGY[358]
31-234	5942-5943	-	*[358]	ONTOLOGY[358]
31-235	5943-5944	-	*[358]	ONTOLOGY[358]
31-236	5944-5947	gpu	*[358]	ONTOLOGY[358]
31-237	5948-5949	0	*[358]	ONTOLOGY[358]
31-238	5950-5951	-	*[358]	ONTOLOGY[358]
31-239	5951-5952	-	*[358]	ONTOLOGY[358]
31-240	5952-5959	dataset	*[358]	ONTOLOGY[358]
31-241	5960-5969	afhq\_wild	*[358]	ONTOLOGY[358]
31-242	5970-5971	-	*[358]	ONTOLOGY[358]
31-243	5971-5972	-	*[358]	ONTOLOGY[358]
31-244	5972-5980	output\_k	*[358]	ONTOLOGY[358]
31-245	5981-5983	10	*[358]	ONTOLOGY[358]
31-246	5984-5985	-	*[358]	ONTOLOGY[358]
31-247	5985-5986	-	*[358]	ONTOLOGY[358]
31-248	5986-5994	img\_size	*[358]	ONTOLOGY[358]
31-249	5995-5998	256	*[358]	ONTOLOGY[358]
31-250	5999-6000	-	*[358]	ONTOLOGY[358]
31-251	6000-6001	-	*[358]	ONTOLOGY[358]
31-252	6001-6010	data\_path	*[358]	ONTOLOGY[358]
31-253	6011-6012	$	*[358]	ONTOLOGY[358]
31-254	6012-6020	DATAPATH	*[358]	ONTOLOGY[358]
31-255	6021-6022	-	*[358]	ONTOLOGY[358]
31-256	6022-6023	-	*[358]	ONTOLOGY[358]
31-257	6023-6033	validation	*[358]	ONTOLOGY[358]
31-258	6034-6035	-	*[358]	ONTOLOGY[358]
31-259	6035-6036	-	*[358]	ONTOLOGY[358]
31-260	6036-6046	load\_model	*[358]	ONTOLOGY[358]
31-261	6047-6056	afhq\_wild	*[358]	ONTOLOGY[358]
31-262	6056-6057	\_	*[358]	ONTOLOGY[358]
31-263	6057-6060	256	*[358]	ONTOLOGY[358]
31-264	6061-6062	`	*[358]	ONTOLOGY[358]
31-265	6062-6063	`	*[358]	ONTOLOGY[358]
31-266	6063-6064	`	*[358]	ONTOLOGY[358]
31-267	6065-6066	`	*[358]	ONTOLOGY[358]
31-268	6066-6067	`	*[358]	ONTOLOGY[358]
31-269	6067-6068	`	*[358]	ONTOLOGY[358]
31-270	6069-6080	AnimalFaces	*[358]	ONTOLOGY[358]
31-271	6080-6081	-	*[358]	ONTOLOGY[358]
31-272	6081-6083	10	*[358]	ONTOLOGY[358]
31-273	6084-6090	python	*[358]	ONTOLOGY[358]
31-274	6091-6098	main.py	*[358]	ONTOLOGY[358]
31-275	6099-6100	-	*[358]	ONTOLOGY[358]
31-276	6100-6101	-	*[358]	ONTOLOGY[358]
31-277	6101-6104	gpu	*[358]	ONTOLOGY[358]
31-278	6105-6106	0	*[358]	ONTOLOGY[358]
31-279	6107-6108	-	*[358]	ONTOLOGY[358]
31-280	6108-6109	-	*[358]	ONTOLOGY[358]
31-281	6109-6116	dataset	*[358]	ONTOLOGY[358]
31-282	6117-6129	animal\_faces	*[358]	ONTOLOGY[358]
31-283	6130-6131	-	*[358]	ONTOLOGY[358]
31-284	6131-6132	-	*[358]	ONTOLOGY[358]
31-285	6132-6140	output\_k	*[358]	ONTOLOGY[358]
31-286	6141-6143	10	*[358]	ONTOLOGY[358]
31-287	6144-6145	-	*[358]	ONTOLOGY[358]
31-288	6145-6146	-	*[358]	ONTOLOGY[358]
31-289	6146-6154	img\_size	*[358]	ONTOLOGY[358]
31-290	6155-6158	128	*[358]	ONTOLOGY[358]
31-291	6159-6160	-	*[358]	ONTOLOGY[358]
31-292	6160-6161	-	*[358]	ONTOLOGY[358]
31-293	6161-6170	data\_path	*[358]	ONTOLOGY[358]
31-294	6171-6172	$	*[358]	ONTOLOGY[358]
31-295	6172-6180	DATAPATH	*[358]	ONTOLOGY[358]
31-296	6181-6182	-	*[358]	ONTOLOGY[358]
31-297	6182-6183	-	*[358]	ONTOLOGY[358]
31-298	6183-6193	validation	*[358]	ONTOLOGY[358]
31-299	6194-6195	-	*[358]	ONTOLOGY[358]
31-300	6195-6196	-	*[358]	ONTOLOGY[358]
31-301	6196-6206	load\_model	*[358]	ONTOLOGY[358]
31-302	6207-6220	animalFaces10	*[358]	ONTOLOGY[358]
31-303	6220-6221	\_	*[358]	ONTOLOGY[358]
31-304	6221-6222	0	*[358]	ONTOLOGY[358]
31-305	6222-6223	\_	*[358]	ONTOLOGY[358]
31-306	6223-6225	00	*[358]	ONTOLOGY[358]
31-307	6226-6227	-	*[358]	ONTOLOGY[358]
31-308	6227-6228	-	*[358]	ONTOLOGY[358]
31-309	6228-6234	p\_semi	*[358]	ONTOLOGY[358]
31-310	6235-6238	0.0	*[358]	ONTOLOGY[358]
31-311	6239-6245	python	*[358]	ONTOLOGY[358]
31-312	6246-6253	main.py	*[358]	ONTOLOGY[358]
31-313	6254-6255	-	*[358]	ONTOLOGY[358]
31-314	6255-6256	-	*[358]	ONTOLOGY[358]
31-315	6256-6259	gpu	*[358]	ONTOLOGY[358]
31-316	6260-6261	0	*[358]	ONTOLOGY[358]
31-317	6262-6263	-	*[358]	ONTOLOGY[358]
31-318	6263-6264	-	*[358]	ONTOLOGY[358]
31-319	6264-6271	dataset	*[358]	ONTOLOGY[358]
31-320	6272-6284	animal\_faces	*[358]	ONTOLOGY[358]
31-321	6285-6286	-	*[358]	ONTOLOGY[358]
31-322	6286-6287	-	*[358]	ONTOLOGY[358]
31-323	6287-6295	output\_k	*[358]	ONTOLOGY[358]
31-324	6296-6298	10	*[358]	ONTOLOGY[358]
31-325	6299-6300	-	*[358]	ONTOLOGY[358]
31-326	6300-6301	-	*[358]	ONTOLOGY[358]
31-327	6301-6309	img\_size	*[358]	ONTOLOGY[358]
31-328	6310-6313	128	*[358]	ONTOLOGY[358]
31-329	6314-6315	-	*[358]	ONTOLOGY[358]
31-330	6315-6316	-	*[358]	ONTOLOGY[358]
31-331	6316-6325	data\_path	*[358]	ONTOLOGY[358]
31-332	6326-6327	$	*[358]	ONTOLOGY[358]
31-333	6327-6335	DATAPATH	*[358]	ONTOLOGY[358]
31-334	6336-6337	-	*[358]	ONTOLOGY[358]
31-335	6337-6338	-	*[358]	ONTOLOGY[358]
31-336	6338-6348	validation	*[358]	ONTOLOGY[358]
31-337	6349-6350	-	*[358]	ONTOLOGY[358]
31-338	6350-6351	-	*[358]	ONTOLOGY[358]
31-339	6351-6361	load\_model	*[358]	ONTOLOGY[358]
31-340	6362-6375	animalFaces10	_	_
31-341	6375-6376	\_	_	_
31-342	6376-6377	0	_	_
31-343	6377-6378	\_	_	_
31-344	6378-6380	20	_	_
31-345	6381-6382	-	_	_
31-346	6382-6383	-	_	_
31-347	6383-6389	p\_semi	_	_
31-348	6390-6393	0.2	_	_
31-349	6394-6395	`	_	_
31-350	6395-6396	`	_	_
31-351	6396-6397	`	_	_
31-352	6399-6400	#	_	_
31-353	6400-6401	#	_	_
31-354	6402-6413	Explanation	_	_
31-355	6414-6417	for	_	_
31-356	6418-6423	codes	_	_
31-357	6424-6427	The	_	_
31-358	6428-6438	validation	_	_
31-359	6439-6448	generates	_	_
31-360	6449-6452	200	_	_
31-361	6453-6459	images	_	_
31-362	6460-6463	per	_	_
31-363	6464-6474	args.iters	_	_
31-364	6475-6485	iterations	_	_
31-365	6485-6486	.	_	_

#Text=To reduce the number of images, please adjust the validation frequency.
32-1	6487-6489	To	_	_
32-2	6490-6496	reduce	_	_
32-3	6497-6500	the	_	_
32-4	6501-6507	number	_	_
32-5	6508-6510	of	_	_
32-6	6511-6517	images	_	_
32-7	6517-6518	,	_	_
32-8	6519-6525	please	_	_
32-9	6526-6532	adjust	_	_
32-10	6533-6536	the	*[383]	LICENSE[383]
32-11	6537-6547	validation	_	_
32-12	6548-6557	frequency	_	_
32-13	6557-6558	.	_	_

#Text=The checkpoint file is saved per ((args.epochs//10) \* args.iters) iterations.
33-1	6559-6562	The	_	_
33-2	6563-6573	checkpoint	_	_
33-3	6574-6578	file	_	_
33-4	6579-6581	is	_	_
33-5	6582-6587	saved	_	_
33-6	6588-6591	per	_	_
33-7	6592-6593	(	_	_
33-8	6593-6594	(	_	_
33-9	6594-6605	args.epochs	_	_
33-10	6605-6606	/	_	_
33-11	6606-6607	/	_	_
33-12	6607-6609	10	_	_
33-13	6609-6610	)	_	_
33-14	6611-6612	\*	_	_
33-15	6613-6623	args.iters	_	_
33-16	6623-6624	)	*[384]	LICENSE[384]
33-17	6625-6635	iterations	_	_
33-18	6635-6636	.	_	_

#Text=Or comment out validation.py#L81 to validation.py#L162
34-1	6637-6639	Or	_	_
34-2	6640-6647	comment	*[358]	PROJECT[358]
34-3	6648-6651	out	*[358]	PROJECT[358]
34-4	6652-6665	validation.py	_	_
34-5	6665-6666	#	_	_
34-6	6666-6669	L81	_	_
34-7	6670-6672	to	_	_
34-8	6673-6686	validation.py	_	_
34-9	6686-6687	#	_	_
34-10	6687-6691	L162	_	_

#Text=.
35-1	6691-6692	.	_	_

#Text=\* For more classes on AnimalFaces, change the list at main.py#L227 then, set args.output\_k to len(args.att\_to\_use)     \* ex) args.att\_to\_use = \\\[i for i in range(100)\\\] then, run: python main.py --output\_k 100 ...  ### Arguments \* batch\_size, img\_size, data\_path and p\_semi are frequently speified. \* Please refer "help" of the arguments in main.py.  ### Code Structure \* main.py     \* Execute main.py to run the codes
36-1	6694-6695	\*	_	_
36-2	6696-6699	For	_	_
36-3	6700-6704	more	_	_
36-4	6705-6712	classes	_	_
36-5	6713-6715	on	_	_
36-6	6716-6727	AnimalFaces	_	_
36-7	6727-6728	,	_	_
36-8	6729-6735	change	_	_
36-9	6736-6739	the	_	_
36-10	6740-6744	list	_	_
36-11	6745-6747	at	_	_
36-12	6748-6755	main.py	_	_
36-13	6755-6756	#	_	_
36-14	6756-6760	L227	_	_
36-15	6761-6765	then	_	_
36-16	6765-6766	,	_	_
36-17	6767-6770	set	_	_
36-18	6771-6784	args.output\_k	_	_
36-19	6785-6787	to	_	_
36-20	6788-6791	len	_	_
36-21	6791-6792	(	*[385]	LICENSE[385]
36-22	6792-6807	args.att\_to\_use	*[385]	LICENSE[385]
36-23	6807-6808	)	*[385]	LICENSE[385]
36-24	6813-6814	\*	*[385]	LICENSE[385]
36-25	6815-6817	ex	*[385]	LICENSE[385]
36-26	6817-6818	)	*[385]	LICENSE[385]
36-27	6819-6834	args.att\_to\_use	*[385]	LICENSE[385]
36-28	6835-6836	=	*[385]	LICENSE[385]
36-29	6837-6838	\\	*[385]	LICENSE[385]
36-30	6838-6839	\[	*[385]	LICENSE[385]
36-31	6839-6840	i	*[385]	LICENSE[385]
36-32	6841-6844	for	*[385]	LICENSE[385]
36-33	6845-6846	i	*[385]	LICENSE[385]
36-34	6847-6849	in	*[385]	LICENSE[385]
36-35	6850-6855	range	*[385]	LICENSE[385]
36-36	6855-6856	(	*[385]	LICENSE[385]
36-37	6856-6859	100	*[385]	LICENSE[385]
36-38	6859-6860	)	*[385]	LICENSE[385]
36-39	6860-6861	\\	*[385]	LICENSE[385]
36-40	6861-6862	\]	*[385]	LICENSE[385]
36-41	6863-6867	then	*[385]	LICENSE[385]
36-42	6867-6868	,	*[385]	LICENSE[385]
36-43	6869-6872	run	*[385]	LICENSE[385]
36-44	6872-6873	:	*[385]	LICENSE[385]
36-45	6874-6880	python	*[385]	LICENSE[385]
36-46	6881-6888	main.py	*[385]	LICENSE[385]
36-47	6889-6890	-	*[385]	LICENSE[385]
36-48	6890-6891	-	*[385]	LICENSE[385]
36-49	6891-6899	output\_k	*[385]	LICENSE[385]
36-50	6900-6903	100	*[385]	LICENSE[385]
36-51	6904-6905	.	*[385]	LICENSE[385]
36-52	6905-6906	.	*[385]	LICENSE[385]
36-53	6906-6907	.	*[385]	LICENSE[385]
36-54	6909-6910	#	*[385]	LICENSE[385]
36-55	6910-6911	#	*[385]	LICENSE[385]
36-56	6911-6912	#	*[385]	LICENSE[385]
36-57	6913-6922	Arguments	*[385]	LICENSE[385]
36-58	6923-6924	\*	*[385]	LICENSE[385]
36-59	6925-6935	batch\_size	*[385]	LICENSE[385]
36-60	6935-6936	,	*[385]	LICENSE[385]
36-61	6937-6945	img\_size	*[385]	LICENSE[385]
36-62	6945-6946	,	*[385]	LICENSE[385]
36-63	6947-6956	data\_path	*[385]	LICENSE[385]
36-64	6957-6960	and	*[385]	LICENSE[385]
36-65	6961-6967	p\_semi	*[385]	LICENSE[385]
36-66	6968-6971	are	*[385]	LICENSE[385]
36-67	6972-6982	frequently	*[385]	LICENSE[385]
36-68	6983-6991	speified	*[385]	LICENSE[385]
36-69	6991-6992	.	*[385]	LICENSE[385]
36-70	6993-6994	\*	*[385]	LICENSE[385]
36-71	6995-7001	Please	*[385]	LICENSE[385]
36-72	7002-7007	refer	*[385]	LICENSE[385]
36-73	7008-7009	"	*[385]	LICENSE[385]
36-74	7009-7013	help	*[385]	LICENSE[385]
36-75	7013-7014	"	*[385]	LICENSE[385]
36-76	7015-7017	of	*[385]	LICENSE[385]
36-77	7018-7021	the	*[385]	LICENSE[385]
36-78	7022-7031	arguments	_	_
36-79	7032-7034	in	_	_
36-80	7035-7042	main.py	_	_
36-81	7042-7043	.	_	_
36-82	7045-7046	#	_	_
36-83	7046-7047	#	_	_
36-84	7047-7048	#	_	_
36-85	7049-7053	Code	_	_
36-86	7054-7063	Structure	_	_
36-87	7064-7065	\*	_	_
36-88	7066-7073	main.py	_	_
36-89	7078-7079	\*	_	_
36-90	7080-7087	Execute	_	_
36-91	7088-7095	main.py	_	_
36-92	7096-7098	to	_	_
36-93	7099-7102	run	_	_
36-94	7103-7106	the	_	_
36-95	7107-7112	codes	_	_

#Text=.
37-1	7112-7113	.	_	_

#Text=\* The script builds networks, optimizers and data loaders, and manages the checkpoint files. \* datasets     \* custom\_dataset.py         \* Basically, it is the same as ImageFolder but contains remap procedure of class numbers
38-1	7118-7119	\*	_	_
38-2	7120-7123	The	_	_
38-3	7124-7130	script	_	_
38-4	7131-7137	builds	_	_
38-5	7138-7146	networks	_	_
38-6	7146-7147	,	_	_
38-7	7148-7158	optimizers	_	_
38-8	7159-7162	and	_	_
38-9	7163-7167	data	_	_
38-10	7168-7175	loaders	_	_
38-11	7175-7176	,	_	_
38-12	7177-7180	and	_	_
38-13	7181-7188	manages	_	_
38-14	7189-7192	the	_	_
38-15	7193-7203	checkpoint	_	_
38-16	7204-7209	files	_	_
38-17	7209-7210	.	_	_
38-18	7211-7212	\*	_	_
38-19	7213-7221	datasets	_	_
38-20	7226-7227	\*	_	_
38-21	7228-7245	custom\_dataset.py	_	_
38-22	7254-7255	\*	_	_
38-23	7256-7265	Basically	_	_
38-24	7265-7266	,	_	_
38-25	7267-7269	it	_	_
38-26	7270-7272	is	_	_
38-27	7273-7276	the	_	_
38-28	7277-7281	same	_	_
38-29	7282-7284	as	_	_
38-30	7285-7296	ImageFolder	_	_
38-31	7297-7300	but	*[417]	SOFTWARE[417]
38-32	7301-7309	contains	*[417]	SOFTWARE[417]
38-33	7310-7315	remap	*[417]	SOFTWARE[417]
38-34	7316-7325	procedure	*[417]	SOFTWARE[417]
38-35	7326-7328	of	*[417]	SOFTWARE[417]
38-36	7329-7334	class	*[417]	SOFTWARE[417]
38-37	7335-7342	numbers	_	_

#Text=.
39-1	7342-7343	.	_	_

#Text=\* datasetgetter.py         \* Returns dataset instance of the dataset specified by args.dataset
40-1	7348-7349	\*	_	_
40-2	7350-7366	datasetgetter.py	_	_
40-3	7375-7376	\*	_	_
40-4	7377-7384	Returns	_	_
40-5	7385-7392	dataset	_	_
40-6	7393-7401	instance	_	_
40-7	7402-7404	of	_	_
40-8	7405-7408	the	_	_
40-9	7409-7416	dataset	_	_
40-10	7417-7426	specified	*[363]	CONFERENCE[363]
40-11	7427-7429	by	*[363]	CONFERENCE[363]
40-12	7430-7442	args.dataset	_	_

#Text=.
41-1	7442-7443	.	_	_

#Text=\* The instance returns original image, transformed image and its ground truth label. \* models     \* blocks.py         \* Blocks for building networks
42-1	7452-7453	\*	_	_
42-2	7454-7457	The	_	_
42-3	7458-7466	instance	_	_
42-4	7467-7474	returns	_	_
42-5	7475-7483	original	_	_
42-6	7484-7489	image	_	_
42-7	7489-7490	,	_	_
42-8	7491-7502	transformed	_	_
42-9	7503-7508	image	*[391]	PROGLANG[391]
42-10	7509-7512	and	*[391]	PROGLANG[391]
42-11	7513-7516	its	*[391]	PROGLANG[391]
42-12	7517-7523	ground	*[391]	PROGLANG[391]
42-13	7524-7529	truth	*[391]	PROGLANG[391]
42-14	7530-7535	label	*[391]	PROGLANG[391]
42-15	7535-7536	.	*[391]	PROGLANG[391]
42-16	7537-7538	\*	*[391]	PROGLANG[391]
42-17	7539-7545	models	*[391]	PROGLANG[391]
42-18	7550-7551	\*	*[391]	PROGLANG[391]
42-19	7552-7561	blocks.py	*[391]	PROGLANG[391]
42-20	7570-7571	\*	*[391]	PROGLANG[391]
42-21	7572-7578	Blocks	*[391]	PROGLANG[391]
42-22	7579-7582	for	*[391]	PROGLANG[391]
42-23	7583-7591	building	_	_
42-24	7592-7600	networks	_	_

#Text=.
43-1	7600-7601	.	_	_

#Text=\* This code is based on FUNIT repos
44-1	7610-7611	\*	_	_
44-2	7612-7616	This	_	_
44-3	7617-7621	code	*[386]	LICENSE[386]
44-4	7622-7624	is	*[386]	LICENSE[386]
44-5	7625-7630	based	_	_
44-6	7631-7633	on	_	_
44-7	7634-7639	FUNIT	_	_
44-8	7640-7645	repos	_	_

#Text=.
45-1	7645-7646	.	_	_

#Text=\* guidingNet.py         \* Definition of guiding network
46-1	7651-7652	\*	_	_
46-2	7653-7666	guidingNet.py	_	_
46-3	7675-7676	\*	_	_
46-4	7677-7687	Definition	*[387]	LICENSE[387]
46-5	7688-7690	of	*[387]	LICENSE[387]
46-6	7691-7698	guiding	*[387]	LICENSE[387]
46-7	7699-7706	network	_	_

#Text=.
47-1	7706-7707	.	_	_

#Text=\* discriminator.py         \* Definition of discriminator
48-1	7712-7713	\*	_	_
48-2	7714-7730	discriminator.py	_	_
48-3	7739-7740	\*	_	_
48-4	7741-7751	Definition	_	_
48-5	7752-7754	of	_	_
48-6	7755-7768	discriminator	_	_

#Text=.
49-1	7768-7769	.	_	_

#Text=\* The architecture is based on StarGANv2, but it contains two residual blocks for each resolution
50-1	7778-7779	\*	_	_
50-2	7780-7783	The	_	_
50-3	7784-7796	architecture	_	_
50-4	7797-7799	is	_	_
50-5	7800-7805	based	_	_
50-6	7806-7808	on	_	_
50-7	7809-7818	StarGANv2	_	_
50-8	7818-7819	,	_	_
50-9	7820-7823	but	_	_
50-10	7824-7826	it	_	_
50-11	7827-7835	contains	_	_
50-12	7836-7839	two	_	_
50-13	7840-7848	residual	_	_
50-14	7849-7855	blocks	_	_
50-15	7856-7859	for	_	_
50-16	7860-7864	each	_	_
50-17	7865-7875	resolution	_	_

#Text=.
51-1	7875-7876	.	_	_

#Text=\* generator.py         \* Definition of generator
52-1	7881-7882	\*	_	_
52-2	7883-7895	generator.py	_	_
52-3	7904-7905	\*	_	_
52-4	7906-7916	Definition	_	_
52-5	7917-7919	of	_	_
52-6	7920-7929	generator	_	_

#Text=.
53-1	7929-7930	.	_	_

#Text=\* It consists of decoder, content encoder and MLP for AdaIN
54-1	7939-7940	\*	_	_
54-2	7941-7943	It	_	_
54-3	7944-7952	consists	_	_
54-4	7953-7955	of	_	_
54-5	7956-7963	decoder	_	_
54-6	7963-7964	,	_	_
54-7	7965-7972	content	_	_
54-8	7973-7980	encoder	*[396]	EVALMETRIC[396]
54-9	7981-7984	and	*[396]	EVALMETRIC[396]
54-10	7985-7988	MLP	*[396]	EVALMETRIC[396]
54-11	7989-7992	for	*[396]	EVALMETRIC[396]
54-12	7993-7998	AdaIN	_	_

#Text=.
55-1	7998-7999	.	_	_

#Text=\* This code is from FUNIT repos. \* train     \* train\_unsupervised.py         \* It is called by setting --p\_semi to 0.0         \* This mode does not utilize the labels at all
56-1	8008-8009	\*	_	_
56-2	8010-8014	This	_	_
56-3	8015-8019	code	_	_
56-4	8020-8022	is	_	_
56-5	8023-8027	from	_	_
56-6	8028-8033	FUNIT	_	_
56-7	8034-8039	repos	_	_
56-8	8039-8040	.	_	_
56-9	8041-8042	\*	_	_
56-10	8043-8048	train	_	_
56-11	8053-8054	\*	_	_
56-12	8055-8076	train\_unsupervised.py	_	_
56-13	8085-8086	\*	_	_
56-14	8087-8089	It	_	_
56-15	8090-8092	is	_	_
56-16	8093-8099	called	_	_
56-17	8100-8102	by	_	_
56-18	8103-8110	setting	_	_
56-19	8111-8112	-	_	_
56-20	8112-8113	-	_	_
56-21	8113-8119	p\_semi	_	_
56-22	8120-8122	to	_	_
56-23	8123-8126	0.0	_	_
56-24	8135-8136	\*	*[397]	EVALMETRIC[397]
56-25	8137-8141	This	*[397]	EVALMETRIC[397]
56-26	8142-8146	mode	*[397]	EVALMETRIC[397]
56-27	8147-8151	does	*[397]	EVALMETRIC[397]
56-28	8152-8155	not	*[397]	EVALMETRIC[397]
56-29	8156-8163	utilize	_	_
56-30	8164-8167	the	_	_
56-31	8168-8174	labels	_	_
56-32	8175-8177	at	_	_
56-33	8178-8181	all	_	_

#Text=.
57-1	8181-8182	.	_	_

#Text=\* train\_supervised.py         \* It is called by setting --p\_semi to 1.0         \* This mode fully utilizes the labels
58-1	8188-8189	\*	_	_
58-2	8190-8209	train\_supervised.py	_	_
58-3	8218-8219	\*	_	_
58-4	8220-8222	It	_	_
58-5	8223-8225	is	_	_
58-6	8226-8232	called	_	_
58-7	8233-8235	by	_	_
58-8	8236-8243	setting	_	_
58-9	8244-8245	-	_	_
58-10	8245-8246	-	_	_
58-11	8246-8252	p\_semi	_	_
58-12	8253-8255	to	_	_
58-13	8256-8259	1.0	_	_
58-14	8268-8269	\*	_	_
58-15	8270-8274	This	_	_
58-16	8275-8279	mode	_	_
58-17	8280-8285	fully	*[398]	EVALMETRIC[398]
58-18	8286-8294	utilizes	_	_
58-19	8295-8298	the	_	_
58-20	8299-8305	labels	_	_

#Text=.
59-1	8305-8306	.	_	_

#Text=\* train\_semisupervised.py         \* It is called by setting --p\_semi between 0.0 to 1.0
60-1	8311-8312	\*	_	_
60-2	8313-8336	train\_semisupervised.py	_	_
60-3	8345-8346	\*	_	_
60-4	8347-8349	It	_	_
60-5	8350-8352	is	_	_
60-6	8353-8359	called	_	_
60-7	8360-8362	by	_	_
60-8	8363-8370	setting	_	_
60-9	8371-8372	-	_	_
60-10	8372-8373	-	_	_
60-11	8373-8379	p\_semi	_	_
60-12	8380-8387	between	_	_
60-13	8388-8391	0.0	_	_
60-14	8392-8394	to	_	_
60-15	8395-8398	1.0	_	_

#Text=.
61-1	8398-8399	.	_	_

#Text=\* This mode utilizes (--p\_semi \* 100)% labels. \* validation     \* cluster\_eval.py     \* eval\_metrics.py         \* These two scripts contain the functions for evaluating the classification performance
62-1	8408-8409	\*	_	_
62-2	8410-8414	This	_	_
62-3	8415-8419	mode	_	_
62-4	8420-8428	utilizes	_	_
62-5	8429-8430	(	_	_
62-6	8430-8431	-	_	_
62-7	8431-8432	-	_	_
62-8	8432-8438	p\_semi	_	_
62-9	8439-8440	\*	_	_
62-10	8441-8444	100	_	_
62-11	8444-8445	)	_	_
62-12	8445-8446	%	_	_
62-13	8447-8453	labels	_	_
62-14	8453-8454	.	_	_
62-15	8455-8456	\*	_	_
62-16	8457-8467	validation	_	_
62-17	8472-8473	\*	_	_
62-18	8474-8489	cluster\_eval.py	_	_
62-19	8494-8495	\*	_	_
62-20	8496-8511	eval\_metrics.py	_	_
62-21	8520-8521	\*	_	_
62-22	8522-8527	These	_	_
62-23	8528-8531	two	_	_
62-24	8532-8539	scripts	_	_
62-25	8540-8547	contain	_	_
62-26	8548-8551	the	_	_
62-27	8552-8561	functions	_	_
62-28	8562-8565	for	_	_
62-29	8566-8576	evaluating	_	_
62-30	8577-8580	the	_	_
62-31	8581-8595	classification	_	_
62-32	8596-8607	performance	_	_

#Text=.
63-1	8607-8608	.	_	_

#Text=\* These are from IIC repos
64-1	8617-8618	\*	_	_
64-2	8619-8624	These	_	_
64-3	8625-8628	are	_	_
64-4	8629-8633	from	_	_
64-5	8634-8637	IIC	_	_
64-6	8638-8643	repos	_	_

#Text=.
65-1	8643-8644	.	_	_

#Text=\* plot\_tsne.py (can be removed)         \* For plotting t-SNE
66-1	8649-8650	\*	_	_
66-2	8651-8663	plot\_tsne.py	_	_
66-3	8664-8665	(	_	_
66-4	8665-8668	can	_	_
66-5	8669-8671	be	_	_
66-6	8672-8679	removed	_	_
66-7	8679-8680	)	_	_
66-8	8689-8690	\*	_	_
66-9	8691-8694	For	_	_
66-10	8695-8703	plotting	_	_
66-11	8704-8709	t-SNE	_	_

#Text=.
67-1	8709-8710	.	_	_

#Text=\* validation.py         \* Generate fake samples and calculate FID. \* tools     \* utils.py         \* Functions and class for logger, make folders, averageMeter and add logs
68-1	8715-8716	\*	_	_
68-2	8717-8730	validation.py	_	_
68-3	8739-8740	\*	_	_
68-4	8741-8749	Generate	*[373]	WORKSHOP[373]
68-5	8750-8754	fake	*[373]	WORKSHOP[373]
68-6	8755-8762	samples	*[373]	WORKSHOP[373]
68-7	8763-8766	and	*[373]	WORKSHOP[373]
68-8	8767-8776	calculate	*[373]	WORKSHOP[373]
68-9	8777-8780	FID	*[373]	WORKSHOP[373]
68-10	8780-8781	.	*[373]	WORKSHOP[373]
68-11	8782-8783	\*	*[373]	WORKSHOP[373]
68-12	8784-8789	tools	*[373]	WORKSHOP[373]
68-13	8794-8795	\*	*[373]	WORKSHOP[373]
68-14	8796-8804	utils.py	*[373]	WORKSHOP[373]
68-15	8813-8814	\*	*[373]	WORKSHOP[373]
68-16	8815-8824	Functions	_	_
68-17	8825-8828	and	_	_
68-18	8829-8834	class	_	_
68-19	8835-8838	for	_	_
68-20	8839-8845	logger	_	_
68-21	8845-8846	,	_	_
68-22	8847-8851	make	_	_
68-23	8852-8859	folders	_	_
68-24	8859-8860	,	_	_
68-25	8861-8873	averageMeter	_	_
68-26	8874-8877	and	_	_
68-27	8878-8881	add	_	_
68-28	8882-8886	logs	_	_

#Text=.
69-1	8886-8887	.	_	_

#Text=\* ops.py         \* Queue operation and loss functions. \* resrc     \* For image files of README.md  You can change the adversarial loss by modifying calc\_adv\_loss in ops.py.
70-1	8892-8893	\*	_	_
70-2	8894-8900	ops.py	_	_
70-3	8909-8910	\*	_	_
70-4	8911-8916	Queue	_	_
70-5	8917-8926	operation	_	_
70-6	8927-8930	and	_	_
70-7	8931-8935	loss	_	_
70-8	8936-8945	functions	_	_
70-9	8945-8946	.	_	_
70-10	8947-8948	\*	_	_
70-11	8949-8954	resrc	_	_
70-12	8959-8960	\*	_	_
70-13	8961-8964	For	_	_
70-14	8965-8970	image	_	_
70-15	8971-8976	files	_	_
70-16	8977-8979	of	_	_
70-17	8980-8989	README.md	_	_
70-18	8991-8994	You	_	_
70-19	8995-8998	can	_	_
70-20	8999-9005	change	_	_
70-21	9006-9009	the	_	_
70-22	9010-9021	adversarial	_	_
70-23	9022-9026	loss	_	_
70-24	9027-9029	by	_	_
70-25	9030-9039	modifying	_	_
70-26	9040-9053	calc\_adv\_loss	_	_
70-27	9054-9056	in	_	_
70-28	9057-9063	ops.py	_	_
70-29	9063-9064	.	_	_

#Text=For the different strategy of training, please refer the files in train.  ## Results !
71-1	9065-9068	For	_	_
71-2	9069-9072	the	_	_
71-3	9073-9082	different	_	_
71-4	9083-9091	strategy	_	_
71-5	9092-9094	of	_	_
71-6	9095-9103	training	_	_
71-7	9103-9104	,	_	_
71-8	9105-9111	please	_	_
71-9	9112-9117	refer	_	_
71-10	9118-9121	the	_	_
71-11	9122-9127	files	_	_
71-12	9128-9130	in	_	_
71-13	9131-9136	train	*[389]	LICENSE[389]
71-14	9136-9137	.	*[389]	LICENSE[389]
71-15	9139-9140	#	*[389]	LICENSE[389]
71-16	9140-9141	#	*[389]	LICENSE[389]
71-17	9142-9149	Results	_	_
71-18	9150-9151	!	_	_

#Text=\[afhq\_cat\](.
72-1	9151-9152	\[	_	_
72-2	9152-9160	afhq\_cat	*[418]	SOFTWARE[418]
72-3	9160-9161	\]	*[418]	SOFTWARE[418]
72-4	9161-9162	(	*[418]	SOFTWARE[418]
72-5	9162-9163	.	_	_

#Text=/resrc/afhq\_cat\_cluster.png) !
73-1	9163-9164	/	_	_
73-2	9164-9169	resrc	_	_
73-3	9169-9170	/	_	_
73-4	9170-9190	afhq\_cat\_cluster.png	_	_
73-5	9190-9191	)	_	_
73-6	9192-9193	!	_	_

#Text=\[afhq\_dog\](.
74-1	9193-9194	\[	_	_
74-2	9194-9202	afhq\_dog	_	_
74-3	9202-9203	\]	*[399]	EVALMETRIC[399]
74-4	9203-9204	(	*[399]	EVALMETRIC[399]
74-5	9204-9205	.	_	_

#Text=/resrc/afhq\_dog\_cluster.png) !
75-1	9205-9206	/	_	_
75-2	9206-9211	resrc	_	_
75-3	9211-9212	/	_	_
75-4	9212-9232	afhq\_dog\_cluster.png	_	_
75-5	9232-9233	)	*[353]	DATASET[353]
75-6	9234-9235	!	_	_

#Text=\[afhq\_wild\](.
76-1	9235-9236	\[	_	_
76-2	9236-9245	afhq\_wild	_	_
76-3	9245-9246	\]	_	_
76-4	9246-9247	(	_	_
76-5	9247-9248	.	_	_

#Text=/resrc/afhq\_wild\_cluster.png) !
77-1	9248-9249	/	_	_
77-2	9249-9254	resrc	_	_
77-3	9254-9255	/	_	_
77-4	9255-9276	afhq\_wild\_cluster.png	_	_
77-5	9276-9277	)	_	_
77-6	9278-9279	!	_	_

#Text=\[ffhq\](.
78-1	9279-9280	\[	_	_
78-2	9280-9284	ffhq	_	_
78-3	9284-9285	\]	*[374]	WORKSHOP[374]
78-4	9285-9286	(	_	_
78-5	9286-9287	.	_	_

#Text=/resrc/ffhq\_cluster.png) !
79-1	9287-9288	/	_	_
79-2	9288-9293	resrc	_	_
79-3	9293-9294	/	_	_
79-4	9294-9310	ffhq\_cluster.png	_	_
79-5	9310-9311	)	*[365]	CONFERENCE[365]
79-6	9312-9313	!	_	_

#Text=\[lsun\](.
80-1	9313-9314	\[	_	_
80-2	9314-9318	lsun	_	_
80-3	9318-9319	\]	*[354]	DATASET[354]
80-4	9319-9320	(	*[354]	DATASET[354]
80-5	9320-9321	.	_	_

#Text=/resrc/lsun\_cluster.png) > \*\*\_Each image is generated with the source image in left and the average vector of reference images.
81-1	9321-9322	/	_	_
81-2	9322-9327	resrc	_	_
81-3	9327-9328	/	*[359]	PROJECT[359]
81-4	9328-9344	lsun\_cluster.png	*[359]	PROJECT[359]
81-5	9344-9345	)	*[359]	PROJECT[359]
81-6	9346-9347	>	*[359]	PROJECT[359]
81-7	9348-9349	\*	*[359]	PROJECT[359]
81-8	9349-9350	\*	*[359]	PROJECT[359]
81-9	9350-9351	\_	*[359]	PROJECT[359]
81-10	9351-9355	Each	*[359]	PROJECT[359]
81-11	9356-9361	image	*[359]	PROJECT[359]
81-12	9362-9364	is	*[359]	PROJECT[359]
81-13	9365-9374	generated	*[359]	PROJECT[359]
81-14	9375-9379	with	*[359]	PROJECT[359]
81-15	9380-9383	the	*[359]	PROJECT[359]
81-16	9384-9390	source	*[359]	PROJECT[359]
81-17	9391-9396	image	*[359]	PROJECT[359]
81-18	9397-9399	in	*[359]	PROJECT[359]
81-19	9400-9404	left	*[359]	PROJECT[359]
81-20	9405-9408	and	*[359]	PROJECT[359]
81-21	9409-9412	the	*[359]	PROJECT[359]
81-22	9413-9420	average	*[359]	PROJECT[359]
81-23	9421-9427	vector	_	_
81-24	9428-9430	of	_	_
81-25	9431-9440	reference	_	_
81-26	9441-9447	images	_	_
81-27	9447-9448	.	_	_

#Text=The network is trained under fully unsupervised manner.\_\*\*   ## License TUNIT is distributed under MIT unless the header specifies another license.   ``` Copyright (c) 2020-present NAVER Corp.
82-1	9449-9452	The	_	_
82-2	9453-9460	network	_	_
82-3	9461-9463	is	_	_
82-4	9464-9471	trained	_	_
82-5	9472-9477	under	_	_
82-6	9478-9483	fully	_	_
82-7	9484-9496	unsupervised	_	_
82-8	9497-9503	manner	_	_
82-9	9503-9504	.	_	_
82-10	9504-9505	\_	_	_
82-11	9505-9506	\*	_	_
82-12	9506-9507	\*	_	_
82-13	9510-9511	#	_	_
82-14	9511-9512	#	_	_
82-15	9513-9520	License	_	_
82-16	9521-9526	TUNIT	_	_
82-17	9527-9529	is	_	_
82-18	9530-9541	distributed	_	_
82-19	9542-9547	under	_	_
82-20	9548-9551	MIT	_	_
82-21	9552-9558	unless	_	_
82-22	9559-9562	the	_	_
82-23	9563-9569	header	_	_
82-24	9570-9579	specifies	_	_
82-25	9580-9587	another	_	_
82-26	9588-9595	license	_	_
82-27	9595-9596	.	_	_
82-28	9599-9600	`	_	_
82-29	9600-9601	`	_	_
82-30	9601-9602	`	_	_
82-31	9603-9612	Copyright	_	_
82-32	9613-9614	(	_	_
82-33	9614-9615	c	_	_
82-34	9615-9616	)	_	_
82-35	9617-9621	2020	_	_
82-36	9621-9622	-	_	_
82-37	9622-9629	present	_	_
82-38	9630-9635	NAVER	_	_
82-39	9636-9640	Corp	_	_
82-40	9640-9641	.	_	_

#Text=Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
83-1	9643-9653	Permission	_	_
83-2	9654-9656	is	_	_
83-3	9657-9663	hereby	_	_
83-4	9664-9671	granted	_	_
83-5	9671-9672	,	_	_
83-6	9673-9677	free	_	_
83-7	9678-9680	of	_	_
83-8	9681-9687	charge	_	_
83-9	9687-9688	,	_	_
83-10	9689-9691	to	_	_
83-11	9692-9695	any	_	_
83-12	9696-9702	person	_	_
83-13	9703-9712	obtaining	_	_
83-14	9713-9714	a	_	_
83-15	9715-9719	copy	_	_
83-16	9720-9722	of	_	_
83-17	9723-9727	this	_	_
83-18	9728-9736	software	_	_
83-19	9737-9740	and	_	_
83-20	9741-9751	associated	_	_
83-21	9752-9765	documentation	_	_
83-22	9766-9771	files	_	_
83-23	9772-9773	(	_	_
83-24	9773-9776	the	_	_
83-25	9777-9778	"	_	_
83-26	9778-9786	Software	_	_
83-27	9786-9787	"	_	_
83-28	9787-9788	)	_	_
83-29	9788-9789	,	_	_
83-30	9790-9792	to	_	_
83-31	9793-9797	deal	_	_
83-32	9798-9800	in	_	_
83-33	9801-9804	the	_	_
83-34	9805-9813	Software	_	_
83-35	9814-9821	without	_	_
83-36	9822-9833	restriction	_	_
83-37	9833-9834	,	_	_
83-38	9835-9844	including	_	_
83-39	9845-9852	without	_	_
83-40	9853-9863	limitation	_	_
83-41	9864-9867	the	_	_
83-42	9868-9874	rights	_	_
83-43	9875-9877	to	_	_
83-44	9878-9881	use	_	_
83-45	9881-9882	,	_	_
83-46	9883-9887	copy	_	_
83-47	9887-9888	,	_	_
83-48	9889-9895	modify	_	_
83-49	9895-9896	,	_	_
83-50	9897-9902	merge	*[361]	PROJECT[361]
83-51	9902-9903	,	*[361]	PROJECT[361]
83-52	9904-9911	publish	*[361]	PROJECT[361]
83-53	9911-9912	,	*[361]	PROJECT[361]
83-54	9913-9923	distribute	*[361]	PROJECT[361]
83-55	9923-9924	,	*[361]	PROJECT[361]
83-56	9925-9935	sublicense	*[361]	PROJECT[361]
83-57	9935-9936	,	*[361]	PROJECT[361]
83-58	9937-9940	and	*[361]	PROJECT[361]
83-59	9940-9941	/	*[361]	PROJECT[361]
83-60	9941-9943	or	*[361]	PROJECT[361]
83-61	9944-9948	sell	*[361]	PROJECT[361]
83-62	9949-9955	copies	*[361]	PROJECT[361]
83-63	9956-9958	of	*[361]	PROJECT[361]
83-64	9959-9962	the	*[361]	PROJECT[361]
83-65	9963-9971	Software	*[361]	PROJECT[361]
83-66	9971-9972	,	*[361]	PROJECT[361]
83-67	9973-9976	and	*[361]	PROJECT[361]
83-68	9977-9979	to	*[361]	PROJECT[361]
83-69	9980-9986	permit	*[361]	PROJECT[361]
83-70	9987-9994	persons	*[361]	PROJECT[361]
83-71	9995-9997	to	*[361]	PROJECT[361]
83-72	9998-10002	whom	*[361]	PROJECT[361]
83-73	10003-10006	the	*[361]	PROJECT[361]
83-74	10007-10015	Software	*[361]	PROJECT[361]
83-75	10016-10018	is	*[361]	PROJECT[361]
83-76	10019-10028	furnished	*[361]	PROJECT[361]
83-77	10029-10031	to	*[361]	PROJECT[361]
83-78	10032-10034	do	*[361]	PROJECT[361]
83-79	10035-10037	so	*[361]	PROJECT[361]
83-80	10037-10038	,	*[361]	PROJECT[361]
83-81	10039-10046	subject	*[361]	PROJECT[361]
83-82	10047-10049	to	*[361]	PROJECT[361]
83-83	10050-10053	the	*[361]	PROJECT[361]
83-84	10054-10063	following	*[361]	PROJECT[361]
83-85	10064-10074	conditions	*[361]	PROJECT[361]
83-86	10074-10075	:	*[361]	PROJECT[361]
83-87	10077-10080	The	*[361]	PROJECT[361]
83-88	10081-10086	above	*[361]	PROJECT[361]
83-89	10087-10096	copyright	*[361]	PROJECT[361]
83-90	10097-10103	notice	*[361]	PROJECT[361]
83-91	10104-10107	and	*[361]	PROJECT[361]
83-92	10108-10112	this	*[361]	PROJECT[361]
83-93	10113-10123	permission	*[361]	PROJECT[361]
83-94	10124-10130	notice	*[361]	PROJECT[361]
83-95	10131-10136	shall	*[361]	PROJECT[361]
83-96	10137-10139	be	*[361]	PROJECT[361]
83-97	10140-10148	included	*[361]	PROJECT[361]
83-98	10149-10151	in	*[361]	PROJECT[361]
83-99	10152-10155	all	*[361]	PROJECT[361]
83-100	10156-10162	copies	*[361]	PROJECT[361]
83-101	10163-10165	or	*[361]	PROJECT[361]
83-102	10166-10177	substantial	_	_
83-103	10178-10186	portions	_	_
83-104	10187-10189	of	_	_
83-105	10190-10193	the	_	_
83-106	10194-10202	Software	_	_
83-107	10202-10203	.	_	_

#Text=THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
84-1	10205-10208	THE	_	_
84-2	10209-10217	SOFTWARE	_	_
84-3	10218-10220	IS	_	_
84-4	10221-10229	PROVIDED	_	_
84-5	10230-10231	"	_	_
84-6	10231-10233	AS	_	_
84-7	10234-10236	IS	_	_
84-8	10236-10237	"	_	_
84-9	10237-10238	,	_	_
84-10	10239-10246	WITHOUT	_	_
84-11	10247-10255	WARRANTY	_	_
84-12	10256-10258	OF	_	_
84-13	10259-10262	ANY	_	_
84-14	10263-10267	KIND	_	_
84-15	10267-10268	,	_	_
84-16	10269-10276	EXPRESS	_	_
84-17	10277-10279	OR	_	_
84-18	10280-10287	IMPLIED	_	_
84-19	10287-10288	,	_	_
84-20	10289-10298	INCLUDING	_	_
84-21	10299-10302	BUT	*[366]	CONFERENCE[366]
84-22	10303-10306	NOT	*[366]	CONFERENCE[366]
84-23	10307-10314	LIMITED	*[366]	CONFERENCE[366]
84-24	10315-10317	TO	*[366]	CONFERENCE[366]
84-25	10318-10321	THE	*[366]	CONFERENCE[366]
84-26	10322-10332	WARRANTIES	*[366]	CONFERENCE[366]
84-27	10333-10335	OF	*[366]	CONFERENCE[366]
84-28	10336-10351	MERCHANTABILITY	*[366]	CONFERENCE[366]
84-29	10351-10352	,	*[366]	CONFERENCE[366]
84-30	10353-10360	FITNESS	*[366]	CONFERENCE[366]
84-31	10361-10364	FOR	*[366]	CONFERENCE[366]
84-32	10365-10366	A	*[366]	CONFERENCE[366]
84-33	10367-10377	PARTICULAR	_	_
84-34	10378-10385	PURPOSE	_	_
84-35	10386-10389	AND	_	_
84-36	10390-10405	NONINFRINGEMENT	_	_
84-37	10405-10406	.	_	_

#Text=IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORTd OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ```  The pretrained models is covered by Creative Commons BY-NC 4.0 license by NAVER Corporation.
85-1	10408-10410	IN	_	_
85-2	10411-10413	NO	_	_
85-3	10414-10419	EVENT	_	_
85-4	10420-10425	SHALL	_	_
85-5	10426-10429	THE	_	_
85-6	10430-10437	AUTHORS	_	_
85-7	10438-10440	OR	_	_
85-8	10441-10450	COPYRIGHT	_	_
85-9	10451-10458	HOLDERS	_	_
85-10	10459-10461	BE	_	_
85-11	10462-10468	LIABLE	_	_
85-12	10469-10472	FOR	_	_
85-13	10473-10476	ANY	*[390]	LICENSE[390]
85-14	10477-10482	CLAIM	*[390]	LICENSE[390]
85-15	10482-10483	,	*[390]	LICENSE[390]
85-16	10484-10491	DAMAGES	*[390]	LICENSE[390]
85-17	10492-10494	OR	*[390]	LICENSE[390]
85-18	10495-10500	OTHER	*[390]	LICENSE[390]
85-19	10501-10510	LIABILITY	*[390]	LICENSE[390]
85-20	10510-10511	,	*[390]	LICENSE[390]
85-21	10512-10519	WHETHER	*[390]	LICENSE[390]
85-22	10520-10522	IN	*[390]	LICENSE[390]
85-23	10523-10525	AN	*[390]	LICENSE[390]
85-24	10526-10532	ACTION	_	_
85-25	10533-10535	OF	_	_
85-26	10536-10544	CONTRACT	_	_
85-27	10544-10545	,	_	_
85-28	10546-10551	TORTd	_	_
85-29	10552-10554	OR	_	_
85-30	10555-10564	OTHERWISE	_	_
85-31	10564-10565	,	_	_
85-32	10566-10573	ARISING	_	_
85-33	10574-10578	FROM	_	_
85-34	10578-10579	,	_	_
85-35	10580-10583	OUT	_	_
85-36	10584-10586	OF	_	_
85-37	10587-10589	OR	_	_
85-38	10590-10592	IN	_	_
85-39	10593-10603	CONNECTION	_	_
85-40	10604-10608	WITH	_	_
85-41	10609-10612	THE	_	_
85-42	10613-10621	SOFTWARE	_	_
85-43	10622-10624	OR	_	_
85-44	10625-10628	THE	_	_
85-45	10629-10632	USE	_	_
85-46	10633-10635	OR	_	_
85-47	10636-10641	OTHER	_	_
85-48	10642-10650	DEALINGS	_	_
85-49	10651-10653	IN	_	_
85-50	10654-10657	THE	_	_
85-51	10658-10666	SOFTWARE	_	_
85-52	10666-10667	.	_	_
85-53	10668-10669	`	_	_
85-54	10669-10670	`	_	_
85-55	10670-10671	`	_	_
85-56	10673-10676	The	_	_
85-57	10677-10687	pretrained	_	_
85-58	10688-10694	models	_	_
85-59	10695-10697	is	_	_
85-60	10698-10705	covered	_	_
85-61	10706-10708	by	_	_
85-62	10709-10717	Creative	_	_
85-63	10718-10725	Commons	_	_
85-64	10726-10731	BY-NC	_	_
85-65	10732-10735	4.0	_	_
85-66	10736-10743	license	_	_
85-67	10744-10746	by	_	_
85-68	10747-10752	NAVER	_	_
85-69	10753-10764	Corporation	_	_
85-70	10764-10765	.	_	_

#Text=You can use, copy, tranform and build upon the material for non-commercial purposes as long as you give appropriate credit by citing our paper, and indicate if changes were made.  ## Citation If you find this work useful for your research, please cite our paper: ``` @InProceedings{Baek\_2021\_ICCV,     author    = {Baek, Kyungjune and Choi, Yunjey and Uh, Youngjung and Yoo, Jaejun and Shim, Hyunjung},     title     = {Rethinking the Truly Unsupervised Image-to-Image Translation},     booktitle = {Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV)},     month     = {October},     year      = {2021},     pages     = {14154-14163} } ```
86-1	10767-10770	You	_	_
86-2	10771-10774	can	_	_
86-3	10775-10778	use	_	_
86-4	10778-10779	,	_	_
86-5	10780-10784	copy	_	_
86-6	10784-10785	,	_	_
86-7	10786-10794	tranform	_	_
86-8	10795-10798	and	_	_
86-9	10799-10804	build	_	_
86-10	10805-10809	upon	_	_
86-11	10810-10813	the	_	_
86-12	10814-10822	material	_	_
86-13	10823-10826	for	_	_
86-14	10827-10841	non-commercial	_	_
86-15	10842-10850	purposes	_	_
86-16	10851-10853	as	_	_
86-17	10854-10858	long	_	_
86-18	10859-10861	as	_	_
86-19	10862-10865	you	_	_
86-20	10866-10870	give	_	_
86-21	10871-10882	appropriate	_	_
86-22	10883-10889	credit	_	_
86-23	10890-10892	by	_	_
86-24	10893-10899	citing	_	_
86-25	10900-10903	our	_	_
86-26	10904-10909	paper	_	_
86-27	10909-10910	,	_	_
86-28	10911-10914	and	_	_
86-29	10915-10923	indicate	_	_
86-30	10924-10926	if	_	_
86-31	10927-10934	changes	_	_
86-32	10935-10939	were	_	_
86-33	10940-10944	made	_	_
86-34	10944-10945	.	_	_
86-35	10947-10948	#	_	_
86-36	10948-10949	#	_	_
86-37	10950-10958	Citation	_	_
86-38	10959-10961	If	_	_
86-39	10962-10965	you	_	_
86-40	10966-10970	find	_	_
86-41	10971-10975	this	_	_
86-42	10976-10980	work	_	_
86-43	10981-10987	useful	_	_
86-44	10988-10991	for	_	_
86-45	10992-10996	your	_	_
86-46	10997-11005	research	_	_
86-47	11005-11006	,	_	_
86-48	11007-11013	please	_	_
86-49	11014-11018	cite	_	_
86-50	11019-11022	our	_	_
86-51	11023-11028	paper	_	_
86-52	11028-11029	:	_	_
86-53	11030-11031	`	_	_
86-54	11031-11032	`	_	_
86-55	11032-11033	`	_	_
86-56	11034-11035	@	_	_
86-57	11035-11048	InProceedings	_	_
86-58	11048-11049	{	_	_
86-59	11049-11053	Baek	_	_
86-60	11053-11054	\_	_	_
86-61	11054-11058	2021	_	_
86-62	11058-11059	\_	_	_
86-63	11059-11063	ICCV	_	_
86-64	11063-11064	,	_	_
86-65	11069-11075	author	_	_
86-66	11079-11080	=	_	_
86-67	11081-11082	{	_	_
86-68	11082-11086	Baek	_	_
86-69	11086-11087	,	_	_
86-70	11088-11097	Kyungjune	_	_
86-71	11098-11101	and	_	_
86-72	11102-11106	Choi	_	_
86-73	11106-11107	,	_	_
86-74	11108-11114	Yunjey	_	_
86-75	11115-11118	and	_	_
86-76	11119-11121	Uh	_	_
86-77	11121-11122	,	_	_
86-78	11123-11132	Youngjung	_	_
86-79	11133-11136	and	_	_
86-80	11137-11140	Yoo	_	_
86-81	11140-11141	,	_	_
86-82	11142-11148	Jaejun	_	_
86-83	11149-11152	and	_	_
86-84	11153-11157	Shim	_	_
86-85	11157-11158	,	_	_
86-86	11159-11167	Hyunjung	_	_
86-87	11167-11168	}	_	_
86-88	11168-11169	,	_	_
86-89	11174-11179	title	_	_
86-90	11184-11185	=	_	_
86-91	11186-11187	{	_	_
86-92	11187-11197	Rethinking	_	_
86-93	11198-11201	the	_	_
86-94	11202-11207	Truly	_	_
86-95	11208-11220	Unsupervised	_	_
86-96	11221-11235	Image-to-Image	_	_
86-97	11236-11247	Translation	_	_
86-98	11247-11248	}	_	_
86-99	11248-11249	,	_	_
86-100	11254-11263	booktitle	_	_
86-101	11264-11265	=	_	_
86-102	11266-11267	{	_	_
86-103	11267-11278	Proceedings	_	_
86-104	11279-11281	of	_	_
86-105	11282-11285	the	_	_
86-106	11286-11290	IEEE	_	_
86-107	11290-11291	/	_	_
86-108	11291-11294	CVF	_	_
86-109	11295-11308	International	_	_
86-110	11309-11319	Conference	_	_
86-111	11320-11322	on	_	_
86-112	11323-11331	Computer	_	_
86-113	11332-11338	Vision	_	_
86-114	11339-11340	(	_	_
86-115	11340-11344	ICCV	*[348]	PUBLICATION[348]
86-116	11344-11345	)	*[348]	PUBLICATION[348]
86-117	11345-11346	}	*[348]	PUBLICATION[348]
86-118	11346-11347	,	*[348]	PUBLICATION[348]
86-119	11352-11357	month	*[348]	PUBLICATION[348]
86-120	11362-11363	=	*[348]	PUBLICATION[348]
86-121	11364-11365	{	*[348]	PUBLICATION[348]
86-122	11365-11372	October	*[348]	PUBLICATION[348]
86-123	11372-11373	}	*[348]	PUBLICATION[348]
86-124	11373-11374	,	*[348]	PUBLICATION[348]
86-125	11379-11383	year	*[348]	PUBLICATION[348]
86-126	11389-11390	=	*[348]	PUBLICATION[348]
86-127	11391-11392	{	*[348]	PUBLICATION[348]
86-128	11392-11396	2021	*[348]	PUBLICATION[348]
86-129	11396-11397	}	*[348]	PUBLICATION[348]
86-130	11397-11398	,	*[348]	PUBLICATION[348]
86-131	11403-11408	pages	*[348]	PUBLICATION[348]
86-132	11413-11414	=	*[348]	PUBLICATION[348]
86-133	11415-11416	{	*[348]	PUBLICATION[348]
86-134	11416-11421	14154	*[348]	PUBLICATION[348]
86-135	11421-11422	-	*[348]	PUBLICATION[348]
86-136	11422-11427	14163	*[348]	PUBLICATION[348]
86-137	11427-11428	}	_	_
86-138	11429-11430	}	_	_
86-139	11431-11432	`	_	_
86-140	11432-11433	`	_	_
86-141	11433-11434	`	_	_