#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Simple learning agents interacting with an agent-based market model  We consider the learning dynamics of a single reinforcement learning optimal execution trading agent when it interacts with an event driven agent-based financial market model.
1-1	0-1	#	_	_
1-2	2-8	Simple	_	_
1-3	9-17	learning	_	_
1-4	18-24	agents	_	_
1-5	25-36	interacting	_	_
1-6	37-41	with	_	_
1-7	42-44	an	_	_
1-8	45-56	agent-based	_	_
1-9	57-63	market	_	_
1-10	64-69	model	_	_
1-11	71-73	We	_	_
1-12	74-82	consider	_	_
1-13	83-86	the	_	_
1-14	87-95	learning	_	_
1-15	96-104	dynamics	*[471]	PROJECT[471]
1-16	105-107	of	*[471]	PROJECT[471]
1-17	108-109	a	*[471]	PROJECT[471]
1-18	110-116	single	*[471]	PROJECT[471]
1-19	117-130	reinforcement	*[471]	PROJECT[471]
1-20	131-139	learning	*[471]	PROJECT[471]
1-21	140-147	optimal	*[471]	PROJECT[471]
1-22	148-157	execution	*[471]	PROJECT[471]
1-23	158-165	trading	*[471]	PROJECT[471]
1-24	166-171	agent	*[471]	PROJECT[471]
1-25	172-176	when	*[471]	PROJECT[471]
1-26	177-179	it	*[471]	PROJECT[471]
1-27	180-189	interacts	*[471]	PROJECT[471]
1-28	190-194	with	*[471]	PROJECT[471]
1-29	195-197	an	*[471]	PROJECT[471]
1-30	198-203	event	*[471]	PROJECT[471]
1-31	204-210	driven	*[471]	PROJECT[471]
1-32	211-222	agent-based	*[471]	PROJECT[471]
1-33	223-232	financial	*[471]	PROJECT[471]
1-34	233-239	market	*[471]	PROJECT[471]
1-35	240-245	model	*[471]	PROJECT[471]
1-36	245-246	.	_	_

#Text=Trading takes place asynchronously through a matching engine in event time.
2-1	247-254	Trading	_	_
2-2	255-260	takes	_	_
2-3	261-266	place	_	_
2-4	267-281	asynchronously	_	_
2-5	282-289	through	_	_
2-6	290-291	a	_	_
2-7	292-300	matching	_	_
2-8	301-307	engine	_	_
2-9	308-310	in	*[468]	WORKSHOP[468]
2-10	311-316	event	*[468]	WORKSHOP[468]
2-11	317-321	time	*[468]	WORKSHOP[468]
2-12	321-322	.	_	_

#Text=The optimal execution agent is considered at different levels of initial order-sizes and differently sized state spaces.
3-1	323-326	The	_	_
3-2	327-334	optimal	_	_
3-3	335-344	execution	_	_
3-4	345-350	agent	*[446]	PUBLICATION[446]
3-5	351-353	is	*[446]	PUBLICATION[446]
3-6	354-364	considered	*[446]	PUBLICATION[446]
3-7	365-367	at	*[446]	PUBLICATION[446]
3-8	368-377	different	*[446]	PUBLICATION[446]
3-9	378-384	levels	*[446]	PUBLICATION[446]
3-10	385-387	of	*[446]	PUBLICATION[446]
3-11	388-395	initial	*[446]	PUBLICATION[446]
3-12	396-407	order-sizes	_	_
3-13	408-411	and	_	_
3-14	412-423	differently	_	_
3-15	424-429	sized	_	_
3-16	430-435	state	_	_
3-17	436-442	spaces	_	_
3-18	442-443	.	_	_

#Text=The resulting impact on the agent-based model and market are considered using a calibration approach that explores changes in the empirical stylised facts and price impact curves.
4-1	444-447	The	_	_
4-2	448-457	resulting	_	_
4-3	458-464	impact	_	_
4-4	465-467	on	_	_
4-5	468-471	the	_	_
4-6	472-483	agent-based	_	_
4-7	484-489	model	_	_
4-8	490-493	and	_	_
4-9	494-500	market	*[447]	PUBLICATION[447]
4-10	501-504	are	*[447]	PUBLICATION[447]
4-11	505-515	considered	*[447]	PUBLICATION[447]
4-12	516-521	using	*[447]	PUBLICATION[447]
4-13	522-523	a	*[447]	PUBLICATION[447]
4-14	524-535	calibration	*[447]	PUBLICATION[447]
4-15	536-544	approach	*[447]	PUBLICATION[447]
4-16	545-549	that	*[447]	PUBLICATION[447]
4-17	550-558	explores	*[447]	PUBLICATION[447]
4-18	559-566	changes	_	_
4-19	567-569	in	_	_
4-20	570-573	the	_	_
4-21	574-583	empirical	_	_
4-22	584-592	stylised	_	_
4-23	593-598	facts	_	_
4-24	599-602	and	_	_
4-25	603-608	price	_	_
4-26	609-615	impact	_	_
4-27	616-622	curves	_	_
4-28	622-623	.	_	_

#Text=Convergence, volume trajectory and action trace plots are used to visualise the learning dynamics.
5-1	624-635	Convergence	_	_
5-2	635-636	,	_	_
5-3	637-643	volume	_	_
5-4	644-654	trajectory	_	_
5-5	655-658	and	_	_
5-6	659-665	action	_	_
5-7	666-671	trace	*[493]	PROGLANG[493]
5-8	672-677	plots	*[493]	PROGLANG[493]
5-9	678-681	are	*[493]	PROGLANG[493]
5-10	682-686	used	*[493]	PROGLANG[493]
5-11	687-689	to	*[493]	PROGLANG[493]
5-12	690-699	visualise	_	_
5-13	700-703	the	_	_
5-14	704-712	learning	_	_
5-15	713-721	dynamics	_	_
5-16	721-722	.	_	_

#Text=The event-time ABM is an extension of the hybrid stochastic time ABM with the description found \[here\](https://arxiv.org/abs/2108.07806) and the implementation found in this repository: \[IJPCTG-ABMCoinTossX\](https://github.com/IvanJericevich/IJPCTG-ABMCoinTossX).  ## Prerequisites  1.
6-1	723-726	The	_	_
6-2	727-737	event-time	_	_
6-3	738-741	ABM	_	_
6-4	742-744	is	_	_
6-5	745-747	an	_	_
6-6	748-757	extension	_	_
6-7	758-760	of	_	_
6-8	761-764	the	_	_
6-9	765-771	hybrid	_	_
6-10	772-782	stochastic	_	_
6-11	783-787	time	_	_
6-12	788-791	ABM	_	_
6-13	792-796	with	_	_
6-14	797-800	the	_	_
6-15	801-812	description	_	_
6-16	813-818	found	_	_
6-17	819-820	\[	_	_
6-18	820-824	here	_	_
6-19	824-825	\]	_	_
6-20	825-826	(	_	_
6-21	826-831	https	_	_
6-22	831-832	:	_	_
6-23	832-833	/	_	_
6-24	833-834	/	_	_
6-25	834-843	arxiv.org	_	_
6-26	843-844	/	_	_
6-27	844-847	abs	_	_
6-28	847-848	/	_	_
6-29	848-858	2108.07806	_	_
6-30	858-859	)	_	_
6-31	860-863	and	_	_
6-32	864-867	the	_	_
6-33	868-882	implementation	_	_
6-34	883-888	found	_	_
6-35	889-891	in	_	_
6-36	892-896	this	_	_
6-37	897-907	repository	_	_
6-38	907-908	:	_	_
6-39	909-910	\[	_	_
6-40	910-929	IJPCTG-ABMCoinTossX	_	_
6-41	929-930	\]	_	_
6-42	930-931	(	_	_
6-43	931-936	https	_	_
6-44	936-937	:	_	_
6-45	937-938	/	_	_
6-46	938-939	/	_	_
6-47	939-949	github.com	_	_
6-48	949-950	/	_	_
6-49	950-964	IvanJericevich	_	_
6-50	964-965	/	_	_
6-51	965-984	IJPCTG-ABMCoinTossX	_	_
6-52	984-985	)	_	_
6-53	985-986	.	_	_
6-54	988-989	#	_	_
6-55	989-990	#	_	_
6-56	991-1004	Prerequisites	_	_
6-57	1006-1007	1	_	_
6-58	1007-1008	.	_	_

#Text=Julia version 1.7.1. 2.
7-1	1009-1014	Julia	_	_
7-2	1015-1022	version	_	_
7-3	1023-1028	1.7.1	*[455]	ONTOLOGY[455]
7-4	1028-1029	.	_	_
7-5	1030-1031	2	_	_
7-6	1031-1032	.	_	_

#Text=A text editor such as \[VS Code\](https://code.visualstudio.com/) or \[Atom\](https://atom.io/). 4.
8-1	1033-1034	A	_	_
8-2	1035-1039	text	_	_
8-3	1040-1046	editor	_	_
8-4	1047-1051	such	_	_
8-5	1052-1054	as	_	_
8-6	1055-1056	\[	_	_
8-7	1056-1058	VS	_	_
8-8	1059-1063	Code	_	_
8-9	1063-1064	\]	_	_
8-10	1064-1065	(	_	_
8-11	1065-1070	https	_	_
8-12	1070-1071	:	_	_
8-13	1071-1072	/	_	_
8-14	1072-1073	/	_	_
8-15	1073-1094	code.visualstudio.com	_	_
8-16	1094-1095	/	_	_
8-17	1095-1096	)	_	_
8-18	1097-1099	or	_	_
8-19	1100-1101	\[	_	_
8-20	1101-1105	Atom	_	_
8-21	1105-1106	\]	_	_
8-22	1106-1107	(	_	_
8-23	1107-1112	https	_	_
8-24	1112-1113	:	_	_
8-25	1113-1114	/	_	_
8-26	1114-1115	/	_	_
8-27	1115-1122	atom.io	_	_
8-27	1115-1119	atom	*[521]	SOFTWARE[521]
8-28	1122-1123	/	*[521]	SOFTWARE[521]
8-29	1123-1124	)	*[521]	SOFTWARE[521]
8-30	1124-1125	.	_	_
8-31	1126-1127	4	_	_
8-32	1127-1128	.	_	_

#Text=\[Git\](https://git-scm.com/) 3.
9-1	1129-1130	\[	_	_
9-2	1130-1133	Git	_	_
9-3	1133-1134	\]	*[472]	PROJECT[472]
9-4	1134-1135	(	*[472]	PROJECT[472]
9-5	1135-1140	https	_	_
9-6	1140-1141	:	_	_
9-7	1141-1142	/	_	_
9-8	1142-1143	/	_	_
9-9	1143-1154	git-scm.com	_	_
9-10	1154-1155	/	_	_
9-11	1155-1156	)	_	_
9-12	1157-1158	3	_	_
9-13	1158-1159	.	_	_

#Text=The matching engine used is a fork from the official release of version \[v1.1.0\](https://github.com/dharmeshsing/CoinTossX/tree/v1.1.0) of \[CoinTossX\](https://github.com/dharmeshsing/CoinTossX).
10-1	1160-1163	The	_	_
10-2	1164-1172	matching	_	_
10-3	1173-1179	engine	_	_
10-4	1180-1184	used	_	_
10-5	1185-1187	is	_	_
10-6	1188-1189	a	_	_
10-7	1190-1194	fork	_	_
10-8	1195-1199	from	_	_
10-9	1200-1203	the	_	_
10-10	1204-1212	official	_	_
10-11	1213-1220	release	_	_
10-12	1221-1223	of	_	_
10-13	1224-1231	version	_	_
10-14	1232-1233	\[	_	_
10-15	1233-1239	v1.1.0	_	_
10-16	1239-1240	\]	_	_
10-17	1240-1241	(	_	_
10-18	1241-1246	https	_	_
10-19	1246-1247	:	_	_
10-20	1247-1248	/	_	_
10-21	1248-1249	/	_	_
10-22	1249-1259	github.com	_	_
10-23	1259-1260	/	_	_
10-24	1260-1272	dharmeshsing	_	_
10-25	1272-1273	/	_	_
10-26	1273-1282	CoinTossX	_	_
10-27	1282-1283	/	_	_
10-28	1283-1287	tree	_	_
10-29	1287-1288	/	_	_
10-30	1288-1294	v1.1.0	_	_
10-31	1294-1295	)	_	_
10-32	1296-1298	of	_	_
10-33	1299-1300	\[	_	_
10-34	1300-1309	CoinTossX	*[473]	PROJECT[473]
10-35	1309-1310	\]	*[473]	PROJECT[473]
10-36	1310-1311	(	*[473]	PROJECT[473]
10-37	1311-1316	https	*[473]	PROJECT[473]
10-38	1316-1317	:	*[473]	PROJECT[473]
10-39	1317-1318	/	*[473]	PROJECT[473]
10-40	1318-1319	/	*[473]	PROJECT[473]
10-41	1319-1329	github.com	*[473]	PROJECT[473]
10-42	1329-1330	/	*[473]	PROJECT[473]
10-43	1330-1342	dharmeshsing	*[473]	PROJECT[473]
10-44	1342-1343	/	*[473]	PROJECT[473]
10-45	1343-1352	CoinTossX	*[473]	PROJECT[473]
10-46	1352-1353	)	_	_
10-47	1353-1354	.	_	_

#Text=This fork was used because it contains a UDP socket on which market data updates can be received from the matching engine.
11-1	1355-1359	This	_	_
11-2	1360-1364	fork	_	_
11-3	1365-1368	was	_	_
11-4	1369-1373	used	_	_
11-5	1374-1381	because	_	_
11-6	1382-1384	it	_	_
11-7	1385-1393	contains	*[494]	PROGLANG[494]
11-8	1394-1395	a	*[494]	PROGLANG[494]
11-9	1396-1399	UDP	*[494]	PROGLANG[494]
11-10	1400-1406	socket	*[494]	PROGLANG[494]
11-11	1407-1409	on	*[494]	PROGLANG[494]
11-12	1410-1415	which	*[494]	PROGLANG[494]
11-13	1416-1422	market	*[494]	PROGLANG[494]
11-14	1423-1427	data	*[494]	PROGLANG[494]
11-15	1428-1435	updates	*[494]	PROGLANG[494]
11-16	1436-1439	can	*[494]	PROGLANG[494]
11-17	1440-1442	be	*[494]	PROGLANG[494]
11-18	1443-1451	received	*[494]	PROGLANG[494]
11-19	1452-1456	from	*[494]	PROGLANG[494]
11-20	1457-1460	the	*[494]	PROGLANG[494]
11-21	1461-1469	matching	_	_
11-22	1470-1476	engine	_	_
11-23	1476-1477	.	_	_

#Text=The fork can be found \[here\](https://github.com/IvanJericevich/CoinTossX).
12-1	1478-1481	The	_	_
12-2	1482-1486	fork	_	_
12-3	1487-1490	can	_	_
12-4	1491-1493	be	_	_
12-5	1494-1499	found	_	_
12-6	1500-1501	\[	_	_
12-7	1501-1505	here	*[456]	ONTOLOGY[456]
12-8	1505-1506	\]	*[456]	ONTOLOGY[456]
12-9	1506-1507	(	*[456]	ONTOLOGY[456]
12-10	1507-1512	https	*[456]	ONTOLOGY[456]
12-11	1512-1513	:	*[456]	ONTOLOGY[456]
12-12	1513-1514	/	*[456]	ONTOLOGY[456]
12-13	1514-1515	/	*[456]	ONTOLOGY[456]
12-14	1515-1525	github.com	_	_
12-15	1525-1526	/	_	_
12-16	1526-1540	IvanJericevich	_	_
12-17	1540-1541	/	_	_
12-18	1541-1550	CoinTossX	_	_
12-19	1550-1551	)	_	_
12-20	1551-1552	.	_	_

#Text=<Need to update to include the wait loop removal.>  ## Usage   To clone this repository:  ```console git clone https://github.com/matthewdicks98/MDTG-MALABM.git ```  Julia packages can be installed from the Julia REPL using:  ```console using Pkg Pkg.add(" ") ```  ### Branch structure  Given that there are multiple stages to the project it was decided that each stage will be published on its own branch.
13-1	1552-1553	<	_	_
13-2	1553-1557	Need	_	_
13-3	1558-1560	to	_	_
13-4	1561-1567	update	_	_
13-5	1568-1570	to	_	_
13-6	1571-1578	include	_	_
13-7	1579-1582	the	_	_
13-8	1583-1587	wait	_	_
13-9	1588-1592	loop	_	_
13-10	1593-1600	removal	_	_
13-11	1600-1601	.	_	_
13-12	1601-1602	>	_	_
13-13	1604-1605	#	_	_
13-14	1605-1606	#	_	_
13-15	1607-1612	Usage	_	_
13-16	1615-1617	To	_	_
13-17	1618-1623	clone	_	_
13-18	1624-1628	this	_	_
13-19	1629-1639	repository	_	_
13-20	1639-1640	:	_	_
13-21	1642-1643	`	_	_
13-22	1643-1644	`	_	_
13-23	1644-1645	`	_	_
13-24	1645-1652	console	_	_
13-25	1653-1656	git	_	_
13-26	1657-1662	clone	_	_
13-27	1663-1668	https	_	_
13-28	1668-1669	:	_	_
13-29	1669-1670	/	_	_
13-30	1670-1671	/	_	_
13-31	1671-1681	github.com	_	_
13-32	1681-1682	/	_	_
13-33	1682-1696	matthewdicks98	_	_
13-34	1696-1697	/	_	_
13-35	1697-1712	MDTG-MALABM.git	_	_
13-36	1713-1714	`	_	_
13-37	1714-1715	`	_	_
13-38	1715-1716	`	_	_
13-39	1718-1723	Julia	_	_
13-40	1724-1732	packages	_	_
13-41	1733-1736	can	_	_
13-42	1737-1739	be	_	_
13-43	1740-1749	installed	_	_
13-44	1750-1754	from	_	_
13-45	1755-1758	the	_	_
13-46	1759-1764	Julia	_	_
13-47	1765-1769	REPL	_	_
13-48	1770-1775	using	_	_
13-49	1775-1776	:	_	_
13-50	1778-1779	`	_	_
13-51	1779-1780	`	_	_
13-52	1780-1781	`	_	_
13-53	1781-1788	console	_	_
13-54	1789-1794	using	_	_
13-55	1795-1798	Pkg	*[522]	SOFTWARE[522]
13-56	1799-1806	Pkg.add	*[522]	SOFTWARE[522]
13-57	1806-1807	(	*[522]	SOFTWARE[522]
13-58	1807-1808	"	*[522]	SOFTWARE[522]
13-59	1809-1810	"	*[522]	SOFTWARE[522]
13-60	1810-1811	)	*[522]	SOFTWARE[522]
13-61	1812-1813	`	*[522]	SOFTWARE[522]
13-62	1813-1814	`	*[522]	SOFTWARE[522]
13-63	1814-1815	`	*[522]	SOFTWARE[522]
13-64	1817-1818	#	*[522]	SOFTWARE[522]
13-65	1818-1819	#	*[522]	SOFTWARE[522]
13-66	1819-1820	#	*[522]	SOFTWARE[522]
13-67	1821-1827	Branch	*[522]	SOFTWARE[522]
13-68	1828-1837	structure	*[522]	SOFTWARE[522]
13-69	1839-1844	Given	*[522]	SOFTWARE[522]
13-70	1845-1849	that	*[522]	SOFTWARE[522]
13-71	1850-1855	there	*[522]	SOFTWARE[522]
13-72	1856-1859	are	*[522]	SOFTWARE[522]
13-73	1860-1868	multiple	*[522]	SOFTWARE[522]
13-74	1869-1875	stages	*[522]	SOFTWARE[522]
13-75	1876-1878	to	*[522]	SOFTWARE[522]
13-76	1879-1882	the	*[522]	SOFTWARE[522]
13-77	1883-1890	project	_	_
13-78	1891-1893	it	_	_
13-79	1894-1897	was	_	_
13-80	1898-1905	decided	_	_
13-81	1906-1910	that	_	_
13-82	1911-1915	each	_	_
13-83	1916-1921	stage	_	_
13-84	1922-1926	will	_	_
13-85	1927-1929	be	_	_
13-86	1930-1939	published	_	_
13-87	1940-1942	on	_	_
13-88	1943-1946	its	_	_
13-89	1947-1950	own	_	_
13-90	1951-1957	branch	_	_
13-91	1957-1958	.	_	_

#Text=The \[Calibrated-ABM\](https://github.com/matthewdicks98/MDTG-MALABM/tree/Calibrated-ABM) branch contains all the files needed to:  \* Simulate the event-based ABM. \* Perform the sensitivity analysis and calibration of the ABM. \* Clean JSE L1LOB TAQ data as well as clean raw message data from the ABM simulation. \* Generate price path and stylised fact visualisations.
14-1	1959-1962	The	_	_
14-2	1963-1964	\[	_	_
14-3	1964-1978	Calibrated-ABM	_	_
14-4	1978-1979	\]	_	_
14-5	1979-1980	(	_	_
14-6	1980-1985	https	_	_
14-7	1985-1986	:	_	_
14-8	1986-1987	/	_	_
14-9	1987-1988	/	_	_
14-10	1988-1998	github.com	_	_
14-11	1998-1999	/	_	_
14-12	1999-2013	matthewdicks98	_	_
14-13	2013-2014	/	_	_
14-14	2014-2025	MDTG-MALABM	_	_
14-15	2025-2026	/	_	_
14-16	2026-2030	tree	_	_
14-17	2030-2031	/	_	_
14-18	2031-2045	Calibrated-ABM	_	_
14-19	2045-2046	)	*[457]	ONTOLOGY[457]
14-20	2047-2053	branch	*[457]	ONTOLOGY[457]
14-21	2054-2062	contains	*[457]	ONTOLOGY[457]
14-22	2063-2066	all	*[457]	ONTOLOGY[457]
14-23	2067-2070	the	*[457]	ONTOLOGY[457]
14-24	2071-2076	files	*[457]	ONTOLOGY[457]
14-25	2077-2083	needed	*[457]	ONTOLOGY[457]
14-26	2084-2086	to	*[457]	ONTOLOGY[457]
14-27	2086-2087	:	*[457]	ONTOLOGY[457]
14-28	2089-2090	\*	*[457]	ONTOLOGY[457]
14-29	2091-2099	Simulate	*[457]	ONTOLOGY[457]
14-30	2100-2103	the	*[457]	ONTOLOGY[457]
14-31	2104-2115	event-based	*[457]	ONTOLOGY[457]
14-32	2116-2119	ABM	*[457]	ONTOLOGY[457]
14-33	2119-2120	.	*[457]	ONTOLOGY[457]
14-34	2121-2122	\*	*[457]	ONTOLOGY[457]
14-35	2123-2130	Perform	*[457]	ONTOLOGY[457]
14-36	2131-2134	the	*[457]	ONTOLOGY[457]
14-37	2135-2146	sensitivity	*[457]	ONTOLOGY[457]
14-38	2147-2155	analysis	*[457]	ONTOLOGY[457]
14-39	2156-2159	and	*[457]	ONTOLOGY[457]
14-40	2160-2171	calibration	_	_
14-41	2172-2174	of	_	_
14-42	2175-2178	the	_	_
14-43	2179-2182	ABM	_	_
14-44	2182-2183	.	_	_
14-45	2184-2185	\*	_	_
14-46	2186-2191	Clean	_	_
14-47	2192-2195	JSE	_	_
14-48	2196-2201	L1LOB	_	_
14-49	2202-2205	TAQ	_	_
14-50	2206-2210	data	_	_
14-51	2211-2213	as	_	_
14-52	2214-2218	well	_	_
14-53	2219-2221	as	_	_
14-54	2222-2227	clean	_	_
14-55	2228-2231	raw	_	_
14-56	2232-2239	message	_	_
14-57	2240-2244	data	_	_
14-58	2245-2249	from	_	_
14-59	2250-2253	the	_	_
14-60	2254-2257	ABM	_	_
14-61	2258-2268	simulation	_	_
14-62	2268-2269	.	_	_
14-63	2270-2271	\*	_	_
14-64	2272-2280	Generate	_	_
14-65	2281-2286	price	_	_
14-66	2287-2291	path	_	_
14-67	2292-2295	and	_	_
14-68	2296-2304	stylised	_	_
14-69	2305-2309	fact	_	_
14-70	2310-2324	visualisations	_	_
14-71	2324-2325	.	_	_

#Text=The \[RL-ABM\](https://github.com/matthewdicks98/MDTG-MALABM/tree/RL-ABM) branch extends the \[Calibrated-ABM\](https://github.com/matthewdicks98/MDTG-MALABM/tree/Calibrated-ABM) branch's functionality and contains additional files needed to:  \* Simulate the event-based ABM with an RL agent included for one episode. \* Train an RL agent inside the ABM. \* Visualise the convergence and learning dynamics of the RL agent. \* Visualise the effect the RL agent had on the ABM.
15-1	2327-2330	The	_	_
15-2	2331-2332	\[	_	_
15-3	2332-2338	RL-ABM	_	_
15-4	2338-2339	\]	_	_
15-5	2339-2340	(	_	_
15-6	2340-2345	https	_	_
15-7	2345-2346	:	_	_
15-8	2346-2347	/	_	_
15-9	2347-2348	/	_	_
15-10	2348-2358	github.com	_	_
15-11	2358-2359	/	*[527]	EVALMETRIC[527]
15-12	2359-2373	matthewdicks98	*[527]	EVALMETRIC[527]
15-13	2373-2374	/	*[527]	EVALMETRIC[527]
15-14	2374-2385	MDTG-MALABM	*[527]	EVALMETRIC[527]
15-15	2385-2386	/	*[527]	EVALMETRIC[527]
15-16	2386-2390	tree	*[527]	EVALMETRIC[527]
15-17	2390-2391	/	*[527]	EVALMETRIC[527]
15-18	2391-2397	RL-ABM	*[527]	EVALMETRIC[527]
15-19	2397-2398	)	*[527]	EVALMETRIC[527]
15-20	2399-2405	branch	*[527]	EVALMETRIC[527]
15-21	2406-2413	extends	*[527]	EVALMETRIC[527]
15-22	2414-2417	the	*[527]	EVALMETRIC[527]
15-23	2418-2419	\[	*[527]	EVALMETRIC[527]
15-24	2419-2433	Calibrated-ABM	*[527]	EVALMETRIC[527]
15-25	2433-2434	\]	*[527]	EVALMETRIC[527]
15-26	2434-2435	(	*[527]	EVALMETRIC[527]
15-27	2435-2440	https	*[527]	EVALMETRIC[527]
15-28	2440-2441	:	*[527]	EVALMETRIC[527]
15-29	2441-2442	/	*[527]	EVALMETRIC[527]
15-30	2442-2443	/	*[527]	EVALMETRIC[527]
15-31	2443-2453	github.com	*[527]	EVALMETRIC[527]
15-32	2453-2454	/	*[527]	EVALMETRIC[527]
15-33	2454-2468	matthewdicks98	*[527]	EVALMETRIC[527]
15-34	2468-2469	/	*[527]	EVALMETRIC[527]
15-35	2469-2480	MDTG-MALABM	*[527]	EVALMETRIC[527]
15-36	2480-2481	/	*[527]	EVALMETRIC[527]
15-37	2481-2485	tree	*[527]	EVALMETRIC[527]
15-38	2485-2486	/	*[527]	EVALMETRIC[527]
15-39	2486-2500	Calibrated-ABM	*[527]	EVALMETRIC[527]
15-40	2500-2501	)	*[527]	EVALMETRIC[527]
15-41	2502-2510	branch's	_	_
15-42	2511-2524	functionality	_	_
15-43	2525-2528	and	_	_
15-44	2529-2537	contains	_	_
15-45	2538-2548	additional	_	_
15-46	2549-2554	files	_	_
15-47	2555-2561	needed	_	_
15-48	2562-2564	to	_	_
15-49	2564-2565	:	_	_
15-50	2567-2568	\*	_	_
15-51	2569-2577	Simulate	_	_
15-52	2578-2581	the	_	_
15-53	2582-2593	event-based	_	_
15-54	2594-2597	ABM	_	_
15-55	2598-2602	with	_	_
15-56	2603-2605	an	_	_
15-57	2606-2608	RL	_	_
15-58	2609-2614	agent	_	_
15-59	2615-2623	included	_	_
15-60	2624-2627	for	_	_
15-61	2628-2631	one	_	_
15-62	2632-2639	episode	_	_
15-63	2639-2640	.	_	_
15-64	2641-2642	\*	_	_
15-65	2643-2648	Train	_	_
15-66	2649-2651	an	_	_
15-67	2652-2654	RL	_	_
15-68	2655-2660	agent	_	_
15-69	2661-2667	inside	_	_
15-70	2668-2671	the	_	_
15-71	2672-2675	ABM	_	_
15-72	2675-2676	.	_	_
15-73	2677-2678	\*	_	_
15-74	2679-2688	Visualise	_	_
15-75	2689-2692	the	_	_
15-76	2693-2704	convergence	_	_
15-77	2705-2708	and	_	_
15-78	2709-2717	learning	_	_
15-79	2718-2726	dynamics	_	_
15-80	2727-2729	of	_	_
15-81	2730-2733	the	_	_
15-82	2734-2736	RL	_	_
15-83	2737-2742	agent	_	_
15-84	2742-2743	.	_	_
15-85	2744-2745	\*	_	_
15-86	2746-2755	Visualise	_	_
15-87	2756-2759	the	_	_
15-88	2760-2766	effect	_	_
15-89	2767-2770	the	_	_
15-90	2771-2773	RL	_	_
15-91	2774-2779	agent	_	_
15-92	2780-2783	had	_	_
15-93	2784-2786	on	_	_
15-94	2787-2790	the	_	_
15-95	2791-2794	ABM	_	_
15-96	2794-2795	.	_	_

#Text=Once the repository has been cloned you can switch between branches using:  ```console git checkout <branch\_name> ```  ## Reproducibility  ### Key files  On the \[Calibrated-ABM\](https://github.com/matthewdicks98/MDTG-MALABM/tree/Calibrated-ABM) branch:  \* \[RunReactiveABM.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/RunReactiveABM.jl) runs the event-based simulation once for a given set of parameters
16-1	2797-2801	Once	_	_
16-2	2802-2805	the	_	_
16-3	2806-2816	repository	_	_
16-4	2817-2820	has	_	_
16-5	2821-2825	been	_	_
16-6	2826-2832	cloned	_	_
16-7	2833-2836	you	_	_
16-8	2837-2840	can	_	_
16-9	2841-2847	switch	_	_
16-10	2848-2855	between	_	_
16-11	2856-2864	branches	_	_
16-12	2865-2870	using	_	_
16-13	2870-2871	:	_	_
16-14	2873-2874	`	_	_
16-15	2874-2875	`	_	_
16-16	2875-2876	`	_	_
16-17	2876-2883	console	_	_
16-18	2884-2887	git	_	_
16-19	2888-2896	checkout	_	_
16-20	2897-2898	<	_	_
16-21	2898-2909	branch\_name	_	_
16-22	2909-2910	>	_	_
16-23	2911-2912	`	_	_
16-24	2912-2913	`	_	_
16-25	2913-2914	`	_	_
16-26	2916-2917	#	_	_
16-27	2917-2918	#	_	_
16-28	2919-2934	Reproducibility	_	_
16-29	2936-2937	#	_	_
16-30	2937-2938	#	_	_
16-31	2938-2939	#	_	_
16-32	2940-2943	Key	_	_
16-33	2944-2949	files	_	_
16-34	2951-2953	On	_	_
16-35	2954-2957	the	_	_
16-36	2958-2959	\[	_	_
16-37	2959-2973	Calibrated-ABM	_	_
16-38	2973-2974	\]	_	_
16-39	2974-2975	(	_	_
16-40	2975-2980	https	_	_
16-41	2980-2981	:	_	_
16-42	2981-2982	/	_	_
16-43	2982-2983	/	_	_
16-44	2983-2993	github.com	_	_
16-45	2993-2994	/	_	_
16-46	2994-3008	matthewdicks98	_	_
16-47	3008-3009	/	_	_
16-48	3009-3020	MDTG-MALABM	_	_
16-49	3020-3021	/	_	_
16-50	3021-3025	tree	_	_
16-51	3025-3026	/	_	_
16-52	3026-3040	Calibrated-ABM	_	_
16-53	3040-3041	)	_	_
16-54	3042-3048	branch	_	_
16-55	3048-3049	:	_	_
16-56	3051-3052	\*	_	_
16-57	3053-3054	\[	_	_
16-58	3054-3071	RunReactiveABM.jl	_	_
16-59	3071-3072	\]	_	_
16-60	3072-3073	(	_	_
16-61	3073-3078	https	_	_
16-62	3078-3079	:	_	_
16-63	3079-3080	/	_	_
16-64	3080-3081	/	_	_
16-65	3081-3091	github.com	_	_
16-66	3091-3092	/	_	_
16-67	3092-3106	matthewdicks98	_	_
16-68	3106-3107	/	_	_
16-69	3107-3118	MDTG-MALABM	_	_
16-70	3118-3119	/	_	_
16-71	3119-3123	blob	_	_
16-72	3123-3124	/	_	_
16-73	3124-3138	Calibrated-ABM	_	_
16-74	3138-3139	/	_	_
16-75	3139-3146	Scripts	_	_
16-76	3146-3147	/	_	_
16-77	3147-3164	RunReactiveABM.jl	_	_
16-78	3164-3165	)	_	_
16-79	3166-3170	runs	_	_
16-80	3171-3174	the	*[507]	LICENSE[507]
16-81	3175-3186	event-based	*[507]	LICENSE[507]
16-82	3187-3197	simulation	*[507]	LICENSE[507]
16-83	3198-3202	once	*[507]	LICENSE[507]
16-84	3203-3206	for	_	_
16-85	3207-3208	a	_	_
16-86	3209-3214	given	_	_
16-87	3215-3218	set	_	_
16-88	3219-3221	of	_	_
16-89	3222-3232	parameters	_	_

#Text=.
17-1	3232-3233	.	_	_

#Text=\* \[SensitivityAnalysis.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/SensitivityAnalysis.jl) runs the sensitivity analysis for given ranges of parameter values. \* \[Calibration.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/Calibration.jl) uses \[NMTA.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/NMTA.jl) to calibrate the ABM to a day of JSE data.
18-1	3236-3237	\*	_	_
18-2	3238-3239	\[	_	_
18-3	3239-3261	SensitivityAnalysis.jl	_	_
18-4	3261-3262	\]	_	_
18-5	3262-3263	(	_	_
18-6	3263-3268	https	_	_
18-7	3268-3269	:	_	_
18-8	3269-3270	/	_	_
18-9	3270-3271	/	_	_
18-10	3271-3281	github.com	*[474]	PROJECT[474]
18-11	3281-3282	/	*[474]	PROJECT[474]
18-12	3282-3296	matthewdicks98	*[474]	PROJECT[474]
18-13	3296-3297	/	*[474]	PROJECT[474]
18-14	3297-3308	MDTG-MALABM	*[474]	PROJECT[474]
18-15	3308-3309	/	*[474]	PROJECT[474]
18-16	3309-3313	blob	*[474]	PROJECT[474]
18-17	3313-3314	/	*[474]	PROJECT[474]
18-18	3314-3328	Calibrated-ABM	*[474]	PROJECT[474]
18-19	3328-3329	/	*[474]	PROJECT[474]
18-20	3329-3336	Scripts	*[474]	PROJECT[474]
18-21	3336-3337	/	*[474]	PROJECT[474]
18-22	3337-3359	SensitivityAnalysis.jl	_	_
18-23	3359-3360	)	_	_
18-24	3361-3365	runs	_	_
18-25	3366-3369	the	_	_
18-26	3370-3381	sensitivity	_	_
18-27	3382-3390	analysis	_	_
18-28	3391-3394	for	_	_
18-29	3395-3400	given	_	_
18-30	3401-3407	ranges	_	_
18-31	3408-3410	of	_	_
18-32	3411-3420	parameter	_	_
18-33	3421-3427	values	_	_
18-34	3427-3428	.	_	_
18-35	3429-3430	\*	_	_
18-36	3431-3432	\[	_	_
18-37	3432-3446	Calibration.jl	_	_
18-38	3446-3447	\]	_	_
18-39	3447-3448	(	_	_
18-40	3448-3453	https	_	_
18-41	3453-3454	:	_	_
18-42	3454-3455	/	_	_
18-43	3455-3456	/	_	_
18-44	3456-3466	github.com	_	_
18-45	3466-3467	/	_	_
18-46	3467-3481	matthewdicks98	_	_
18-47	3481-3482	/	_	_
18-48	3482-3493	MDTG-MALABM	_	_
18-49	3493-3494	/	_	_
18-50	3494-3498	blob	_	_
18-51	3498-3499	/	_	_
18-52	3499-3513	Calibrated-ABM	_	_
18-53	3513-3514	/	_	_
18-54	3514-3521	Scripts	_	_
18-55	3521-3522	/	_	_
18-56	3522-3536	Calibration.jl	_	_
18-57	3536-3537	)	_	_
18-58	3538-3542	uses	_	_
18-59	3543-3544	\[	_	_
18-60	3544-3551	NMTA.jl	_	_
18-61	3551-3552	\]	_	_
18-62	3552-3553	(	_	_
18-63	3553-3558	https	_	_
18-64	3558-3559	:	_	_
18-65	3559-3560	/	_	_
18-66	3560-3561	/	_	_
18-67	3561-3571	github.com	_	_
18-68	3571-3572	/	_	_
18-69	3572-3586	matthewdicks98	_	_
18-70	3586-3587	/	_	_
18-71	3587-3598	MDTG-MALABM	_	_
18-72	3598-3599	/	_	_
18-73	3599-3603	blob	_	_
18-74	3603-3604	/	_	_
18-75	3604-3618	Calibrated-ABM	_	_
18-76	3618-3619	/	_	_
18-77	3619-3626	Scripts	_	_
18-78	3626-3627	/	_	_
18-79	3627-3634	NMTA.jl	_	_
18-80	3634-3635	)	_	_
18-81	3636-3638	to	_	_
18-82	3639-3648	calibrate	_	_
18-83	3649-3652	the	_	_
18-84	3653-3656	ABM	_	_
18-85	3657-3659	to	_	_
18-86	3660-3661	a	_	_
18-87	3662-3665	day	_	_
18-88	3666-3668	of	_	_
18-89	3669-3672	JSE	_	_
18-90	3673-3677	data	_	_
18-91	3677-3678	.	_	_

#Text=\[NMTA.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/NMTA.jl) implements the Nelder-Mead with threshold accepting optimisation algorithm. \* \[CoinTossX.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/DataCleaning/CoinTossX.jl) and \[JSE.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/DataCleaning/JSE.jl) clean the ABM and JSE data into the L1LOB format respectively.
19-1	3679-3680	\[	_	_
19-2	3680-3687	NMTA.jl	_	_
19-3	3687-3688	\]	_	_
19-4	3688-3689	(	_	_
19-5	3689-3694	https	_	_
19-6	3694-3695	:	_	_
19-7	3695-3696	/	_	_
19-8	3696-3697	/	_	_
19-9	3697-3707	github.com	_	_
19-10	3707-3708	/	_	_
19-11	3708-3722	matthewdicks98	_	_
19-12	3722-3723	/	_	_
19-13	3723-3734	MDTG-MALABM	_	_
19-14	3734-3735	/	_	_
19-15	3735-3739	blob	_	_
19-16	3739-3740	/	_	_
19-17	3740-3754	Calibrated-ABM	_	_
19-18	3754-3755	/	_	_
19-19	3755-3762	Scripts	_	_
19-20	3762-3763	/	_	_
19-21	3763-3770	NMTA.jl	_	_
19-22	3770-3771	)	_	_
19-23	3772-3782	implements	_	_
19-24	3783-3786	the	_	_
19-25	3787-3798	Nelder-Mead	_	_
19-26	3799-3803	with	_	_
19-27	3804-3813	threshold	_	_
19-28	3814-3823	accepting	_	_
19-29	3824-3836	optimisation	_	_
19-30	3837-3846	algorithm	_	_
19-31	3846-3847	.	_	_
19-32	3848-3849	\*	_	_
19-33	3850-3851	\[	_	_
19-34	3851-3863	CoinTossX.jl	_	_
19-35	3863-3864	\]	_	_
19-36	3864-3865	(	_	_
19-37	3865-3870	https	_	_
19-38	3870-3871	:	_	_
19-39	3871-3872	/	_	_
19-40	3872-3873	/	_	_
19-41	3873-3883	github.com	_	_
19-42	3883-3884	/	_	_
19-43	3884-3898	matthewdicks98	_	_
19-44	3898-3899	/	_	_
19-45	3899-3910	MDTG-MALABM	_	_
19-46	3910-3911	/	_	_
19-47	3911-3915	blob	_	_
19-48	3915-3916	/	_	_
19-49	3916-3930	Calibrated-ABM	_	_
19-50	3930-3931	/	_	_
19-51	3931-3943	DataCleaning	_	_
19-52	3943-3944	/	_	_
19-53	3944-3956	CoinTossX.jl	_	_
19-54	3956-3957	)	_	_
19-55	3958-3961	and	_	_
19-56	3962-3963	\[	_	_
19-57	3963-3969	JSE.jl	_	_
19-58	3969-3970	\]	_	_
19-59	3970-3971	(	_	_
19-60	3971-3976	https	_	_
19-61	3976-3977	:	_	_
19-62	3977-3978	/	_	_
19-63	3978-3979	/	_	_
19-64	3979-3989	github.com	_	_
19-65	3989-3990	/	_	_
19-66	3990-4004	matthewdicks98	_	_
19-67	4004-4005	/	_	_
19-68	4005-4016	MDTG-MALABM	_	_
19-69	4016-4017	/	_	_
19-70	4017-4021	blob	_	_
19-71	4021-4022	/	_	_
19-72	4022-4036	Calibrated-ABM	_	_
19-73	4036-4037	/	*[448]	PUBLICATION[448]
19-74	4037-4049	DataCleaning	*[448]	PUBLICATION[448]
19-75	4049-4050	/	*[448]	PUBLICATION[448]
19-76	4050-4056	JSE.jl	*[448]	PUBLICATION[448]
19-77	4056-4057	)	*[448]	PUBLICATION[448]
19-78	4058-4063	clean	*[448]	PUBLICATION[448]
19-79	4064-4067	the	*[448]	PUBLICATION[448]
19-80	4068-4071	ABM	*[448]	PUBLICATION[448]
19-81	4072-4075	and	*[448]	PUBLICATION[448]
19-82	4076-4079	JSE	*[448]	PUBLICATION[448]
19-83	4080-4084	data	*[448]	PUBLICATION[448]
19-84	4085-4089	into	*[448]	PUBLICATION[448]
19-85	4090-4093	the	*[448]	PUBLICATION[448]
19-86	4094-4099	L1LOB	*[448]	PUBLICATION[448]
19-87	4100-4106	format	_	_
19-88	4107-4119	respectively	_	_
19-89	4119-4120	.	_	_

#Text=\[CoinTossX.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/DataCleaning/CoinTossX.jl) also visualises the realised price path. \* \[StylisedFacts.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/Calibrated-ABM/Scripts/StylisedFacts.jl) visualises the stylised facts found in the ABM and the JSE.
20-1	4121-4122	\[	_	_
20-2	4122-4134	CoinTossX.jl	_	_
20-3	4134-4135	\]	_	_
20-4	4135-4136	(	_	_
20-5	4136-4141	https	_	_
20-6	4141-4142	:	_	_
20-7	4142-4143	/	_	_
20-8	4143-4144	/	_	_
20-9	4144-4154	github.com	_	_
20-10	4154-4155	/	_	_
20-11	4155-4169	matthewdicks98	_	_
20-12	4169-4170	/	_	_
20-13	4170-4181	MDTG-MALABM	_	_
20-14	4181-4182	/	_	_
20-15	4182-4186	blob	_	_
20-16	4186-4187	/	_	_
20-17	4187-4201	Calibrated-ABM	_	_
20-18	4201-4202	/	_	_
20-19	4202-4214	DataCleaning	_	_
20-20	4214-4215	/	_	_
20-21	4215-4227	CoinTossX.jl	_	_
20-22	4227-4228	)	_	_
20-23	4229-4233	also	_	_
20-24	4234-4244	visualises	_	_
20-25	4245-4248	the	_	_
20-26	4249-4257	realised	_	_
20-27	4258-4263	price	_	_
20-28	4264-4268	path	_	_
20-29	4268-4269	.	*[458]	ONTOLOGY[458]
20-30	4270-4271	\*	*[458]	ONTOLOGY[458]
20-31	4272-4273	\[	*[458]	ONTOLOGY[458]
20-32	4273-4289	StylisedFacts.jl	*[458]	ONTOLOGY[458]
20-33	4289-4290	\]	*[458]	ONTOLOGY[458]
20-34	4290-4291	(	*[458]	ONTOLOGY[458]
20-35	4291-4296	https	*[458]	ONTOLOGY[458]
20-36	4296-4297	:	*[458]	ONTOLOGY[458]
20-37	4297-4298	/	*[458]	ONTOLOGY[458]
20-38	4298-4299	/	*[458]	ONTOLOGY[458]
20-39	4299-4309	github.com	*[458]	ONTOLOGY[458]
20-40	4309-4310	/	*[458]	ONTOLOGY[458]
20-41	4310-4324	matthewdicks98	*[458]	ONTOLOGY[458]
20-42	4324-4325	/	*[458]	ONTOLOGY[458]
20-43	4325-4336	MDTG-MALABM	*[458]	ONTOLOGY[458]
20-44	4336-4337	/	*[458]	ONTOLOGY[458]
20-45	4337-4341	blob	*[458]	ONTOLOGY[458]
20-46	4341-4342	/	*[458]	ONTOLOGY[458]
20-47	4342-4356	Calibrated-ABM	*[458]	ONTOLOGY[458]
20-48	4356-4357	/	*[458]	ONTOLOGY[458]
20-49	4357-4364	Scripts	*[458]	ONTOLOGY[458]
20-50	4364-4365	/	*[458]	ONTOLOGY[458]
20-51	4365-4381	StylisedFacts.jl	*[458]	ONTOLOGY[458]
20-52	4381-4382	)	*[458]	ONTOLOGY[458]
20-53	4383-4393	visualises	*[458]	ONTOLOGY[458]
20-54	4394-4397	the	*[458]	ONTOLOGY[458]
20-55	4398-4406	stylised	*[458]	ONTOLOGY[458]
20-56	4407-4412	facts	*[458]	ONTOLOGY[458]
20-57	4413-4418	found	*[458]	ONTOLOGY[458]
20-58	4419-4421	in	*[458]	ONTOLOGY[458]
20-59	4422-4425	the	*[458]	ONTOLOGY[458]
20-60	4426-4429	ABM	*[458]	ONTOLOGY[458]
20-61	4430-4433	and	*[458]	ONTOLOGY[458]
20-62	4434-4437	the	_	_
20-63	4438-4441	JSE	_	_
20-64	4441-4442	.	_	_

#Text=In addition to the functionality listed above the \[RL-ABM\](https://github.com/matthewdicks98/MDTG-MALABM/tree/RL-ABM) branch contains:  \* \[RLUtilities.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/RL-ABM/Scripts/RLUtilities.jl) which contains functions that can simulate an RL agent in an ABM for one episode and train the RL agent to optimally liquidate a parent order
21-1	4444-4446	In	_	_
21-2	4447-4455	addition	_	_
21-3	4456-4458	to	_	_
21-4	4459-4462	the	_	_
21-5	4463-4476	functionality	_	_
21-6	4477-4483	listed	_	_
21-7	4484-4489	above	_	_
21-8	4490-4493	the	_	_
21-9	4494-4495	\[	_	_
21-10	4495-4501	RL-ABM	_	_
21-11	4501-4502	\]	_	_
21-12	4502-4503	(	_	_
21-13	4503-4508	https	_	_
21-14	4508-4509	:	_	_
21-15	4509-4510	/	_	_
21-16	4510-4511	/	_	_
21-17	4511-4521	github.com	_	_
21-18	4521-4522	/	_	_
21-19	4522-4536	matthewdicks98	_	_
21-20	4536-4537	/	_	_
21-21	4537-4548	MDTG-MALABM	_	_
21-22	4548-4549	/	_	_
21-23	4549-4553	tree	_	_
21-24	4553-4554	/	_	_
21-25	4554-4560	RL-ABM	_	_
21-26	4560-4561	)	_	_
21-27	4562-4568	branch	_	_
21-28	4569-4577	contains	_	_
21-29	4577-4578	:	_	_
21-30	4580-4581	\*	_	_
21-31	4582-4583	\[	_	_
21-32	4583-4597	RLUtilities.jl	_	_
21-33	4597-4598	\]	_	_
21-34	4598-4599	(	_	_
21-35	4599-4604	https	_	_
21-36	4604-4605	:	_	_
21-37	4605-4606	/	_	_
21-38	4606-4607	/	_	_
21-39	4607-4617	github.com	_	_
21-40	4617-4618	/	_	_
21-41	4618-4632	matthewdicks98	_	_
21-42	4632-4633	/	_	_
21-43	4633-4644	MDTG-MALABM	_	_
21-44	4644-4645	/	_	_
21-45	4645-4649	blob	_	_
21-46	4649-4650	/	_	_
21-47	4650-4656	RL-ABM	_	_
21-48	4656-4657	/	_	_
21-49	4657-4664	Scripts	_	_
21-50	4664-4665	/	_	_
21-51	4665-4679	RLUtilities.jl	_	_
21-52	4679-4680	)	_	_
21-53	4681-4686	which	_	_
21-54	4687-4695	contains	_	_
21-55	4696-4705	functions	_	_
21-56	4706-4710	that	_	_
21-57	4711-4714	can	_	_
21-58	4715-4723	simulate	_	_
21-59	4724-4726	an	*[469]	WORKSHOP[469]
21-60	4727-4729	RL	*[469]	WORKSHOP[469]
21-61	4730-4735	agent	*[469]	WORKSHOP[469]
21-62	4736-4738	in	*[469]	WORKSHOP[469]
21-63	4739-4741	an	*[469]	WORKSHOP[469]
21-64	4742-4745	ABM	*[469]	WORKSHOP[469]
21-65	4746-4749	for	*[469]	WORKSHOP[469]
21-66	4750-4753	one	*[469]	WORKSHOP[469]
21-67	4754-4761	episode	*[469]	WORKSHOP[469]
21-68	4762-4765	and	*[469]	WORKSHOP[469]
21-69	4766-4771	train	_	_
21-70	4772-4775	the	_	_
21-71	4776-4778	RL	_	_
21-72	4779-4784	agent	_	_
21-73	4785-4787	to	_	_
21-74	4788-4797	optimally	_	_
21-75	4798-4807	liquidate	_	_
21-76	4808-4809	a	_	_
21-77	4810-4816	parent	_	_
21-78	4817-4822	order	_	_

#Text=.
22-1	4822-4823	.	_	_

#Text=\* \[RLVisualizations.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/RL-ABM/Scripts/RLVisualizations.jl) which allows you to visualise different aspects of the RL agent's convergence as well as the learning dynamics and how the agent has affected the ABM. \* The \[StylisedFacts.jl\](https://github.com/matthewdicks98/MDTG-MALABM/blob/RL-ABM/Scripts/StylisedFacts.jl) file includes extra functionality that allows you to visualise stylised facts for the RL agent.
23-1	4825-4826	\*	_	_
23-2	4827-4828	\[	_	_
23-3	4828-4847	RLVisualizations.jl	_	_
23-4	4847-4848	\]	_	_
23-5	4848-4849	(	_	_
23-6	4849-4854	https	_	_
23-7	4854-4855	:	_	_
23-8	4855-4856	/	_	_
23-9	4856-4857	/	_	_
23-10	4857-4867	github.com	_	_
23-11	4867-4868	/	_	_
23-12	4868-4882	matthewdicks98	_	_
23-13	4882-4883	/	_	_
23-14	4883-4894	MDTG-MALABM	_	_
23-15	4894-4895	/	_	_
23-16	4895-4899	blob	_	_
23-17	4899-4900	/	_	_
23-18	4900-4906	RL-ABM	_	_
23-19	4906-4907	/	_	_
23-20	4907-4914	Scripts	_	_
23-21	4914-4915	/	_	_
23-22	4915-4934	RLVisualizations.jl	_	_
23-23	4934-4935	)	_	_
23-24	4936-4941	which	_	_
23-25	4942-4948	allows	_	_
23-26	4949-4952	you	_	_
23-27	4953-4955	to	_	_
23-28	4956-4965	visualise	_	_
23-29	4966-4975	different	_	_
23-30	4976-4983	aspects	_	_
23-31	4984-4986	of	_	_
23-32	4987-4990	the	_	_
23-33	4991-4993	RL	_	_
23-34	4994-5001	agent's	_	_
23-35	5002-5013	convergence	_	_
23-36	5014-5016	as	_	_
23-37	5017-5021	well	_	_
23-38	5022-5024	as	_	_
23-39	5025-5028	the	_	_
23-40	5029-5037	learning	_	_
23-41	5038-5046	dynamics	_	_
23-42	5047-5050	and	_	_
23-43	5051-5054	how	_	_
23-44	5055-5058	the	_	_
23-45	5059-5064	agent	_	_
23-46	5065-5068	has	_	_
23-47	5069-5077	affected	_	_
23-48	5078-5081	the	_	_
23-49	5082-5085	ABM	_	_
23-50	5085-5086	.	_	_
23-51	5087-5088	\*	_	_
23-52	5089-5092	The	_	_
23-53	5093-5094	\[	_	_
23-54	5094-5110	StylisedFacts.jl	_	_
23-55	5110-5111	\]	_	_
23-56	5111-5112	(	_	_
23-57	5112-5117	https	_	_
23-58	5117-5118	:	_	_
23-59	5118-5119	/	_	_
23-60	5119-5120	/	_	_
23-61	5120-5130	github.com	_	_
23-62	5130-5131	/	_	_
23-63	5131-5145	matthewdicks98	_	_
23-64	5145-5146	/	_	_
23-65	5146-5157	MDTG-MALABM	_	_
23-66	5157-5158	/	*[508]	LICENSE[508]
23-67	5158-5162	blob	*[508]	LICENSE[508]
23-68	5162-5163	/	*[508]	LICENSE[508]
23-69	5163-5169	RL-ABM	*[508]	LICENSE[508]
23-70	5169-5170	/	*[508]	LICENSE[508]
23-71	5170-5177	Scripts	*[508]	LICENSE[508]
23-72	5177-5178	/	*[508]	LICENSE[508]
23-73	5178-5194	StylisedFacts.jl	*[508]	LICENSE[508]
23-74	5194-5195	)	*[508]	LICENSE[508]
23-75	5196-5200	file	*[508]	LICENSE[508]
23-76	5201-5209	includes	*[508]	LICENSE[508]
23-77	5210-5215	extra	*[508]	LICENSE[508]
23-78	5216-5229	functionality	*[508]	LICENSE[508]
23-79	5230-5234	that	*[508]	LICENSE[508]
23-80	5235-5241	allows	_	_
23-81	5242-5245	you	_	_
23-82	5246-5248	to	_	_
23-83	5249-5258	visualise	_	_
23-84	5259-5267	stylised	_	_
23-85	5268-5273	facts	_	_
23-86	5274-5277	for	_	_
23-87	5278-5281	the	_	_
23-88	5282-5284	RL	_	_
23-89	5285-5290	agent	_	_
23-90	5290-5291	.	_	_

#Text=<Data structure To replicate the data analysis the following file paths hold the required information: Data>  ## Authors  1.
24-1	5293-5294	<	_	_
24-2	5294-5298	Data	_	_
24-3	5299-5308	structure	*[482]	CONFERENCE[482]
24-4	5309-5311	To	*[482]	CONFERENCE[482]
24-5	5312-5321	replicate	*[482]	CONFERENCE[482]
24-6	5322-5325	the	*[482]	CONFERENCE[482]
24-7	5326-5330	data	*[482]	CONFERENCE[482]
24-8	5331-5339	analysis	*[482]	CONFERENCE[482]
24-9	5340-5343	the	*[482]	CONFERENCE[482]
24-10	5344-5353	following	*[482]	CONFERENCE[482]
24-11	5354-5358	file	*[482]	CONFERENCE[482]
24-12	5359-5364	paths	*[482]	CONFERENCE[482]
24-13	5365-5369	hold	_	_
24-14	5370-5373	the	_	_
24-15	5374-5382	required	_	_
24-16	5383-5394	information	_	_
24-17	5394-5395	:	_	_
24-18	5396-5400	Data	_	_
24-19	5400-5401	>	_	_
24-20	5403-5404	#	_	_
24-21	5404-5405	#	_	_
24-22	5406-5413	Authors	_	_
24-23	5415-5416	1	_	_
24-24	5416-5417	.	_	_

#Text=Matthew Dicks 2.
25-1	5418-5425	Matthew	_	_
25-2	5426-5431	Dicks	_	_
25-3	5432-5433	2	_	_
25-4	5433-5434	.	_	_

#Text=Tim Gebbie  ## Publications  The link to the arxiv paper can be found \[here\](https://arxiv.org/abs/2208.10434).  ## References  Since this work extends previous work code was used from the repository \[IJPCTG-ABMCoinTossX\](https://github.com/IvanJericevich/IJPCTG-ABMCoinTossX).
26-1	5435-5438	Tim	_	_
26-2	5439-5445	Gebbie	_	_
26-3	5447-5448	#	_	_
26-4	5448-5449	#	_	_
26-5	5450-5462	Publications	_	_
26-6	5464-5467	The	*[470]	WORKSHOP[470]
26-7	5468-5472	link	*[470]	WORKSHOP[470]
26-8	5473-5475	to	*[470]	WORKSHOP[470]
26-9	5476-5479	the	*[470]	WORKSHOP[470]
26-10	5480-5485	arxiv	*[470]	WORKSHOP[470]
26-11	5486-5491	paper	*[470]	WORKSHOP[470]
26-12	5492-5495	can	*[470]	WORKSHOP[470]
26-13	5496-5498	be	*[470]	WORKSHOP[470]
26-14	5499-5504	found	*[470]	WORKSHOP[470]
26-15	5505-5506	\[	*[470]	WORKSHOP[470]
26-16	5506-5510	here	*[470]	WORKSHOP[470]
26-17	5510-5511	\]	*[470]	WORKSHOP[470]
26-18	5511-5512	(	*[470]	WORKSHOP[470]
26-19	5512-5517	https	*[470]	WORKSHOP[470]
26-20	5517-5518	:	*[470]	WORKSHOP[470]
26-21	5518-5519	/	*[470]	WORKSHOP[470]
26-22	5519-5520	/	*[470]	WORKSHOP[470]
26-23	5520-5529	arxiv.org	*[470]	WORKSHOP[470]
26-24	5529-5530	/	*[470]	WORKSHOP[470]
26-25	5530-5533	abs	*[470]	WORKSHOP[470]
26-26	5533-5534	/	*[470]	WORKSHOP[470]
26-27	5534-5544	2208.10434	*[470]	WORKSHOP[470]
26-28	5544-5545	)	*[470]	WORKSHOP[470]
26-29	5545-5546	.	*[470]	WORKSHOP[470]
26-30	5548-5549	#	*[470]	WORKSHOP[470]
26-31	5549-5550	#	*[470]	WORKSHOP[470]
26-32	5551-5561	References	*[470]	WORKSHOP[470]
26-33	5563-5568	Since	*[470]	WORKSHOP[470]
26-34	5569-5573	this	*[470]	WORKSHOP[470]
26-35	5574-5578	work	*[470]	WORKSHOP[470]
26-36	5579-5586	extends	*[470]	WORKSHOP[470]
26-37	5587-5595	previous	*[470]	WORKSHOP[470]
26-38	5596-5600	work	*[470]	WORKSHOP[470]
26-39	5601-5605	code	*[470]	WORKSHOP[470]
26-40	5606-5609	was	*[470]	WORKSHOP[470]
26-41	5610-5614	used	*[470]	WORKSHOP[470]
26-42	5615-5619	from	*[470]	WORKSHOP[470]
26-43	5620-5623	the	*[470]	WORKSHOP[470]
26-44	5624-5634	repository	*[470]	WORKSHOP[470]
26-45	5635-5636	\[	*[470]	WORKSHOP[470]
26-46	5636-5655	IJPCTG-ABMCoinTossX	*[470]	WORKSHOP[470]
26-47	5655-5656	\]	*[470]	WORKSHOP[470]
26-48	5656-5657	(	*[470]	WORKSHOP[470]
26-49	5657-5662	https	_	_
26-50	5662-5663	:	_	_
26-51	5663-5664	/	_	_
26-52	5664-5665	/	_	_
26-53	5665-5675	github.com	_	_
26-54	5675-5676	/	_	_
26-55	5676-5690	IvanJericevich	_	_
26-56	5690-5691	/	_	_
26-57	5691-5710	IJPCTG-ABMCoinTossX	_	_
26-58	5710-5711	)	_	_
26-59	5711-5712	.	_	_