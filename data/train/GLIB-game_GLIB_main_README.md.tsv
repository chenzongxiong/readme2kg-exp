#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# GLIB
#Text=
#Text=[!
1-1	0-1	#	_	_	
1-2	2-6	GLIB	*	PROJECT	
1-3	8-9	[	_	_	
1-4	9-10	!	_	_	

#Text=[DOI](https://zenodo.org/badge/342098687.svg)](https://zenodo.org/badge/latestdoi/342098687) <br>
#Text=CNN-based visual understanding for detecting UI glitches in game Apps
#Text=> GLIB: Towards Automated Test Oracle for Graphically-Rich Applications <br>
#Text=> Paper URL: https://arxiv.org/abs/2106.10507
#Text=
#Text=## Architecture
#Text=
#Text=!
2-1	10-11	[	_	_	
2-2	11-14	DOI	_	_	
2-3	14-15	]	_	_	
2-4	15-16	(	_	_	
2-5	16-21	https	_	_	
2-6	21-22	:	_	_	
2-7	22-23	/	_	_	
2-8	23-24	/	_	_	
2-9	24-34	zenodo.org	_	_	
2-10	34-35	/	_	_	
2-11	35-40	badge	_	_	
2-12	40-41	/	_	_	
2-13	41-50	342098687	_	_	
2-14	50-51	.	_	_	
2-15	51-54	svg	_	_	
2-16	54-55	)	_	_	
2-17	55-56	]	_	_	
2-18	56-57	(	_	_	
2-19	57-62	https	_	_	
2-20	62-63	:	_	_	
2-21	63-64	/	_	_	
2-22	64-65	/	_	_	
2-23	65-75	zenodo.org	_	_	
2-24	75-76	/	_	_	
2-25	76-81	badge	_	_	
2-26	81-82	/	_	_	
2-27	82-91	latestdoi	_	_	
2-28	91-92	/	_	_	
2-29	92-101	342098687	_	_	
2-30	101-102	)	_	_	
2-31	103-104	<	_	_	
2-32	104-106	br	_	_	
2-33	106-107	>	_	_	
2-34	108-117	CNN-based	_	_	
2-35	118-124	visual	_	_	
2-36	125-138	understanding	_	_	
2-37	139-142	for	_	_	
2-38	143-152	detecting	_	_	
2-39	153-155	UI	_	_	
2-40	156-164	glitches	_	_	
2-41	165-167	in	_	_	
2-42	168-172	game	_	_	
2-43	173-177	Apps	_	_	
2-44	178-179	>	_	_	
2-45	180-184	GLIB	*[1]|*[2]	PUBLICATION[1]|PROJECT[2]	
2-46	184-185	:	*[1]	PUBLICATION[1]	
2-47	186-193	Towards	*[1]	PUBLICATION[1]	
2-48	194-203	Automated	*[1]	PUBLICATION[1]	
2-49	204-208	Test	*[1]	PUBLICATION[1]	
2-50	209-215	Oracle	*[1]	PUBLICATION[1]	
2-51	216-219	for	*[1]	PUBLICATION[1]	
2-52	220-236	Graphically-Rich	*[1]	PUBLICATION[1]	
2-53	237-249	Applications	*[1]	PUBLICATION[1]	
2-54	250-251	<	_	_	
2-55	251-253	br	_	_	
2-56	253-254	>	_	_	
2-57	255-256	>	_	_	
2-58	257-262	Paper	_	_	
2-59	263-266	URL	_	_	
2-60	266-267	:	_	_	
2-61	268-273	https	_	_	
2-62	273-274	:	_	_	
2-63	274-275	/	_	_	
2-64	275-276	/	_	_	
2-65	276-285	arxiv.org	_	_	
2-66	285-286	/	_	_	
2-67	286-289	abs	_	_	
2-68	289-290	/	_	_	
2-69	290-300	2106.10507	_	_	
2-70	302-303	#	_	_	
2-71	303-304	#	_	_	
2-72	305-317	Architecture	_	_	
2-73	319-320	!	_	_	

#Text=[Image](GLIB_architecture.png)
#Text=
#Text=## Code-based Generation
#Text=
#Text=!
3-1	320-321	[	_	_	
3-2	321-326	Image	_	_	
3-3	326-327	]	_	_	
3-4	327-328	(	_	_	
3-5	328-349	GLIB_architecture.png	_	_	
3-6	349-350	)	_	_	
3-7	352-353	#	_	_	
3-8	353-354	#	_	_	
3-9	355-365	Code-based	_	_	
3-10	366-376	Generation	_	_	
3-11	378-379	!	_	_	

#Text=[Image](code_gen.png)
#Text=
#Text=<!
4-1	379-380	[	_	_	
4-2	380-385	Image	_	_	
4-3	385-386	]	_	_	
4-4	386-387	(	_	_	
4-5	387-399	code_gen.png	_	_	
4-6	399-400	)	_	_	
4-7	402-403	<	_	_	
4-8	403-404	!	_	_	

#Text=-- ### Rule-based Generation:
#Text=
#Text=!
5-1	404-405	-	_	_	
5-2	405-406	-	_	_	
5-3	407-408	#	_	_	
5-4	408-409	#	_	_	
5-5	409-410	#	_	_	
5-6	411-421	Rule-based	_	_	
5-7	422-432	Generation	_	_	
5-8	432-433	:	_	_	
5-9	435-436	!	_	_	

#Text=[Image](rule_gen.png) -->
#Text=
#Text=## Requirements
#Text=
#Text=On Ubuntu:
#Text=
#Text=- python(3.5.2)
#Text=- pip(20.3.4)
#Text=- pytorch(0.4.0)
#Text=- [cuda](https://developer.nvidia.com/cuda-downloads?
6-1	436-437	[	_	_	
6-2	437-442	Image	_	_	
6-3	442-443	]	_	_	
6-4	443-444	(	_	_	
6-5	444-456	rule_gen.png	_	_	
6-6	456-457	)	_	_	
6-7	458-459	-	_	_	
6-8	459-460	-	_	_	
6-9	460-461	>	_	_	
6-10	463-464	#	_	_	
6-11	464-465	#	_	_	
6-12	466-478	Requirements	_	_	
6-13	480-482	On	_	_	
6-14	483-489	Ubuntu	_	_	
6-15	489-490	:	_	_	
6-16	492-493	-	_	_	
6-17	494-500	python	*[3]	SOFTWARE[3]	
6-18	500-501	(	*[3]	SOFTWARE[3]	
6-19	501-506	3.5.2	*[3]	SOFTWARE[3]	
6-20	506-507	)	*[3]	SOFTWARE[3]	
6-21	508-509	-	_	_	
6-22	510-513	pip	*[4]	SOFTWARE[4]	
6-23	513-514	(	*[4]	SOFTWARE[4]	
6-24	514-520	20.3.4	*[4]	SOFTWARE[4]	
6-25	520-521	)	*[4]	SOFTWARE[4]	
6-26	522-523	-	_	_	
6-27	524-531	pytorch	*[5]	SOFTWARE[5]	
6-28	531-532	(	*[5]	SOFTWARE[5]	
6-29	532-537	0.4.0	*[5]	SOFTWARE[5]	
6-30	537-538	)	*[5]	SOFTWARE[5]	
6-31	539-540	-	_	_	
6-32	541-542	[	_	_	
6-33	542-546	cuda	*	SOFTWARE	
6-34	546-547	]	_	_	
6-35	547-548	(	_	_	
6-36	548-553	https	_	_	
6-37	553-554	:	_	_	
6-38	554-555	/	_	_	
6-39	555-556	/	_	_	
6-40	556-576	developer.nvidia.com	_	_	
6-41	576-577	/	_	_	
6-42	577-591	cuda-downloads	_	_	
6-42.1	577-581	cuda	*	SOFTWARE	
6-43	591-592	?	_	_	

#Text=target_os=Linux&target_arch=x86_64&Distribution=Ubuntu&target_version=18.04&target_type=deb_local)
#Text=- [docker](https://docs.docker.com/engine/install/ubuntu/)
#Text=- [nvidia-docker](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker)
#Text=
#Text=Sign up a docker account from [dockerhub](https://hub.docker.com/) 
#Text=
#Text=## Installation and Execution
#Text=### <span id="Download">Download dataset and model</span>: 
#Text=
#Text=download the UI image [dataset](https://doi.org/10.5281/zenodo.5081242) and unzip:
#Text=
#Text=```shell
#Text=unzip data.zip
#Text=```
#Text=
#Text=data/images: 
#Text=
#Text=- *data/images/Base* : 132 screenshots of game1 & game2 with UI display issues from 466 test reports.
#Text=- *data/images/Code* : 9,412 screenshots of game1 & game2 with UI display issues generated by our Code augmentation method.
#Text=- *data/images/Normal*: 7,750 screenshots of game1 & game2 without UI display issues collected by randomly traversing the game scene.
#Text=- *data/images/Rule(F)* : 7,750 screenshots of game1 & game2 with UI display issues generated by our Rule(F) augmentation method.
#Text=- *data/images/Rule(R)* : 7,750 screenshots of game1 & game2 with UI display issues generated by our Rule(R) augmentation method.
#Text=- *data/images/testDataSet* : 192 screenshots  with UI display issues from 466 test reports(exclude game1 & game2).
7-1	592-601	target_os	_	_	
7-2	601-602	=	_	_	
7-3	602-607	Linux	_	_	
7-4	607-608	&	_	_	
7-5	608-619	target_arch	_	_	
7-6	619-620	=	_	_	
7-7	620-623	x86	_	_	
7-8	623-624	_	_	_	
7-9	624-627	64&	_	_	
7-10	627-639	Distribution	_	_	
7-11	639-640	=	_	_	
7-12	640-646	Ubuntu	_	_	
7-13	646-647	&	_	_	
7-14	647-661	target_version	_	_	
7-15	661-662	=	_	_	
7-16	662-668	18.04&	_	_	
7-17	668-679	target_type	_	_	
7-18	679-680	=	_	_	
7-19	680-689	deb_local	_	_	
7-20	689-690	)	_	_	
7-21	691-692	-	_	_	
7-22	693-694	[	_	_	
7-23	694-700	docker	*	SOFTWARE	
7-24	700-701	]	_	_	
7-25	701-702	(	_	_	
7-26	702-707	https	_	_	
7-27	707-708	:	_	_	
7-28	708-709	/	_	_	
7-29	709-710	/	_	_	
7-30	710-725	docs.docker.com	_	_	
7-30.1	715-721	docker	*	SOFTWARE	
7-31	725-726	/	_	_	
7-32	726-732	engine	_	_	
7-33	732-733	/	_	_	
7-34	733-740	install	_	_	
7-35	740-741	/	_	_	
7-36	741-747	ubuntu	_	_	
7-37	747-748	/	_	_	
7-38	748-749	)	_	_	
7-39	750-751	-	_	_	
7-40	752-753	[	_	_	
7-41	753-766	nvidia-docker	*	SOFTWARE	
7-42	766-767	]	_	_	
7-43	767-768	(	_	_	
7-44	768-773	https	_	_	
7-45	773-774	:	_	_	
7-46	774-775	/	_	_	
7-47	775-776	/	_	_	
7-48	776-791	docs.nvidia.com	_	_	
7-49	791-792	/	_	_	
7-50	792-802	datacenter	_	_	
7-51	802-803	/	_	_	
7-52	803-815	cloud-native	_	_	
7-53	815-816	/	_	_	
7-54	816-833	container-toolkit	_	_	
7-55	833-834	/	_	_	
7-56	834-852	install-guide.html	_	_	
7-57	852-853	#	_	_	
7-58	853-859	docker	_	_	
7-59	859-860	)	_	_	
7-60	862-866	Sign	_	_	
7-61	867-869	up	_	_	
7-62	870-871	a	_	_	
7-63	872-878	docker	*	SOFTWARE	
7-64	879-886	account	_	_	
7-65	887-891	from	_	_	
7-66	892-893	[	_	_	
7-67	893-902	dockerhub	_	_	
7-68	902-903	]	_	_	
7-69	903-904	(	_	_	
7-70	904-909	https	_	_	
7-71	909-910	:	_	_	
7-72	910-911	/	_	_	
7-73	911-912	/	_	_	
7-74	912-926	hub.docker.com	_	_	
7-74.1	916-922	docker	*	SOFTWARE	
7-75	926-927	/	_	_	
7-76	927-928	)	_	_	
7-77	931-932	#	_	_	
7-78	932-933	#	_	_	
7-79	934-946	Installation	_	_	
7-80	947-950	and	_	_	
7-81	951-960	Execution	_	_	
7-82	961-962	#	_	_	
7-83	962-963	#	_	_	
7-84	963-964	#	_	_	
7-85	965-966	<	_	_	
7-86	966-970	span	_	_	
7-87	971-973	id	_	_	
7-88	973-974	=	_	_	
7-89	974-975	"	_	_	
7-90	975-983	Download	_	_	
7-91	983-984	"	_	_	
7-92	984-985	>	_	_	
7-93	985-993	Download	_	_	
7-94	994-1001	dataset	_	_	
7-95	1002-1005	and	_	_	
7-96	1006-1011	model	_	_	
7-97	1011-1012	<	_	_	
7-98	1012-1013	/	_	_	
7-99	1013-1017	span	_	_	
7-100	1017-1018	>	_	_	
7-101	1018-1019	:	_	_	
7-102	1022-1030	download	_	_	
7-103	1031-1034	the	_	_	
7-104	1035-1037	UI	_	_	
7-105	1038-1043	image	_	_	
7-106	1044-1045	[	_	_	
7-107	1045-1052	dataset	_	_	
7-108	1052-1053	]	_	_	
7-109	1053-1054	(	_	_	
7-110	1054-1059	https	_	_	
7-111	1059-1060	:	_	_	
7-112	1060-1061	/	_	_	
7-113	1061-1062	/	_	_	
7-114	1062-1069	doi.org	_	_	
7-115	1069-1070	/	_	_	
7-116	1070-1077	10.5281	_	_	
7-117	1077-1078	/	_	_	
7-118	1078-1084	zenodo	_	_	
7-119	1084-1092	.5081242	_	_	
7-120	1092-1093	)	_	_	
7-121	1094-1097	and	_	_	
7-122	1098-1103	unzip	_	_	
7-123	1103-1104	:	_	_	
7-124	1106-1107	`	_	_	
7-125	1107-1108	`	_	_	
7-126	1108-1109	`	_	_	
7-127	1109-1114	shell	_	_	
7-128	1115-1120	unzip	_	_	
7-129	1121-1129	data.zip	_	_	
7-130	1130-1131	`	_	_	
7-131	1131-1132	`	_	_	
7-132	1132-1133	`	_	_	
7-133	1135-1139	data	_	_	
7-134	1139-1140	/	_	_	
7-135	1140-1146	images	_	_	
7-136	1146-1147	:	_	_	
7-137	1150-1151	-	_	_	
7-138	1152-1153	*	_	_	
7-139	1153-1157	data	_	_	
7-140	1157-1158	/	_	_	
7-141	1158-1164	images	_	_	
7-142	1164-1165	/	_	_	
7-143	1165-1169	Base	_	_	
7-144	1169-1170	*	_	_	
7-145	1171-1172	:	_	_	
7-146	1173-1176	132	_	_	
7-147	1177-1188	screenshots	_	_	
7-148	1189-1191	of	_	_	
7-149	1192-1197	game1	_	_	
7-150	1198-1199	&	_	_	
7-151	1200-1205	game2	_	_	
7-152	1206-1210	with	_	_	
7-153	1211-1213	UI	_	_	
7-154	1214-1221	display	_	_	
7-155	1222-1228	issues	_	_	
7-156	1229-1233	from	_	_	
7-157	1234-1237	466	_	_	
7-158	1238-1242	test	_	_	
7-159	1243-1250	reports	_	_	
7-160	1250-1251	.	_	_	
7-161	1252-1253	-	_	_	
7-162	1254-1255	*	_	_	
7-163	1255-1259	data	_	_	
7-164	1259-1260	/	_	_	
7-165	1260-1266	images	_	_	
7-166	1266-1267	/	_	_	
7-167	1267-1271	Code	_	_	
7-168	1271-1272	*	_	_	
7-169	1273-1274	:	_	_	
7-170	1275-1280	9,412	_	_	
7-171	1281-1292	screenshots	_	_	
7-172	1293-1295	of	_	_	
7-173	1296-1301	game1	_	_	
7-174	1302-1303	&	_	_	
7-175	1304-1309	game2	_	_	
7-176	1310-1314	with	_	_	
7-177	1315-1317	UI	_	_	
7-178	1318-1325	display	_	_	
7-179	1326-1332	issues	_	_	
7-180	1333-1342	generated	_	_	
7-181	1343-1345	by	_	_	
7-182	1346-1349	our	_	_	
7-183	1350-1354	Code	_	_	
7-184	1355-1367	augmentation	_	_	
7-185	1368-1374	method	_	_	
7-186	1374-1375	.	_	_	
7-187	1376-1377	-	_	_	
7-188	1378-1379	*	_	_	
7-189	1379-1383	data	_	_	
7-190	1383-1384	/	_	_	
7-191	1384-1390	images	_	_	
7-192	1390-1391	/	_	_	
7-193	1391-1397	Normal	_	_	
7-194	1397-1398	*	_	_	
7-195	1398-1399	:	_	_	
7-196	1400-1405	7,750	_	_	
7-197	1406-1417	screenshots	_	_	
7-198	1418-1420	of	_	_	
7-199	1421-1426	game1	_	_	
7-200	1427-1428	&	_	_	
7-201	1429-1434	game2	_	_	
7-202	1435-1442	without	_	_	
7-203	1443-1445	UI	_	_	
7-204	1446-1453	display	_	_	
7-205	1454-1460	issues	_	_	
7-206	1461-1470	collected	_	_	
7-207	1471-1473	by	_	_	
7-208	1474-1482	randomly	_	_	
7-209	1483-1493	traversing	_	_	
7-210	1494-1497	the	_	_	
7-211	1498-1502	game	_	_	
7-212	1503-1508	scene	_	_	
7-213	1508-1509	.	_	_	
7-214	1510-1511	-	_	_	
7-215	1512-1513	*	_	_	
7-216	1513-1517	data	_	_	
7-217	1517-1518	/	_	_	
7-218	1518-1524	images	_	_	
7-219	1524-1525	/	_	_	
7-220	1525-1529	Rule	_	_	
7-221	1529-1530	(	_	_	
7-222	1530-1531	F	_	_	
7-223	1531-1532	)	_	_	
7-224	1532-1533	*	_	_	
7-225	1534-1535	:	_	_	
7-226	1536-1541	7,750	_	_	
7-227	1542-1553	screenshots	_	_	
7-228	1554-1556	of	_	_	
7-229	1557-1562	game1	_	_	
7-230	1563-1564	&	_	_	
7-231	1565-1570	game2	_	_	
7-232	1571-1575	with	_	_	
7-233	1576-1578	UI	_	_	
7-234	1579-1586	display	_	_	
7-235	1587-1593	issues	_	_	
7-236	1594-1603	generated	_	_	
7-237	1604-1606	by	_	_	
7-238	1607-1610	our	_	_	
7-239	1611-1615	Rule	_	_	
7-240	1615-1616	(	_	_	
7-241	1616-1617	F	_	_	
7-242	1617-1618	)	_	_	
7-243	1619-1631	augmentation	_	_	
7-244	1632-1638	method	_	_	
7-245	1638-1639	.	_	_	
7-246	1640-1641	-	_	_	
7-247	1642-1643	*	_	_	
7-248	1643-1647	data	_	_	
7-249	1647-1648	/	_	_	
7-250	1648-1654	images	_	_	
7-251	1654-1655	/	_	_	
7-252	1655-1659	Rule	_	_	
7-253	1659-1660	(	_	_	
7-254	1660-1661	R	_	_	
7-255	1661-1662	)	_	_	
7-256	1662-1663	*	_	_	
7-257	1664-1665	:	_	_	
7-258	1666-1671	7,750	_	_	
7-259	1672-1683	screenshots	_	_	
7-260	1684-1686	of	_	_	
7-261	1687-1692	game1	_	_	
7-262	1693-1694	&	_	_	
7-263	1695-1700	game2	_	_	
7-264	1701-1705	with	_	_	
7-265	1706-1708	UI	_	_	
7-266	1709-1716	display	_	_	
7-267	1717-1723	issues	_	_	
7-268	1724-1733	generated	_	_	
7-269	1734-1736	by	_	_	
7-270	1737-1740	our	_	_	
7-271	1741-1745	Rule	_	_	
7-272	1745-1746	(	_	_	
7-273	1746-1747	R	_	_	
7-274	1747-1748	)	_	_	
7-275	1749-1761	augmentation	_	_	
7-276	1762-1768	method	_	_	
7-277	1768-1769	.	_	_	
7-278	1770-1771	-	_	_	
7-279	1772-1773	*	_	_	
7-280	1773-1777	data	_	_	
7-281	1777-1778	/	_	_	
7-282	1778-1784	images	_	_	
7-283	1784-1785	/	_	_	
7-284	1785-1796	testDataSet	_	_	
7-285	1796-1797	*	_	_	
7-286	1798-1799	:	_	_	
7-287	1800-1803	192	_	_	
7-288	1804-1815	screenshots	_	_	
7-289	1817-1821	with	_	_	
7-290	1822-1824	UI	_	_	
7-291	1825-1832	display	_	_	
7-292	1833-1839	issues	_	_	
7-293	1840-1844	from	_	_	
7-294	1845-1848	466	_	_	
7-295	1849-1853	test	_	_	
7-296	1854-1861	reports	_	_	
7-297	1861-1862	(	_	_	
7-298	1862-1869	exclude	_	_	
7-299	1870-1875	game1	_	_	
7-300	1876-1877	&	_	_	
7-301	1878-1883	game2	_	_	
7-302	1883-1884	)	_	_	
7-303	1884-1885	.	_	_	

#Text=data/data_csv:
#Text=
#Text=- *data/data_csv/Base* : dataset for baseline method.
#Text=- *data/data_csv/Code* : dataset for our Code Augmentation method.
#Text=- *data/data_csv/Rule(F)* : dataset for our Rule(F) Augmentation method.
#Text=- *data/data_csv/Rule(R)* : dataset for our Rule(R) Augmentation method.
#Text=- *data/data_csv/Code_plus_Rule(F)* : dataset for our Code&Rule(F) Augmentation method.
#Text=- *data/data_csv/Code_plus_Rule(R)* : dataset for our Code&Rule(R) Augmentation method.
#Text=- *data/data_csv/testDataSet* : test dataset(normal image and real glitch images from 466 test reports).
8-1	1887-1891	data	_	_	
8-2	1891-1892	/	_	_	
8-3	1892-1900	data_csv	_	_	
8-4	1900-1901	:	_	_	
8-5	1903-1904	-	_	_	
8-6	1905-1906	*	_	_	
8-7	1906-1910	data	_	_	
8-8	1910-1911	/	_	_	
8-9	1911-1919	data_csv	_	_	
8-10	1919-1920	/	_	_	
8-11	1920-1924	Base	_	_	
8-12	1924-1925	*	_	_	
8-13	1926-1927	:	_	_	
8-14	1928-1935	dataset	_	_	
8-15	1936-1939	for	_	_	
8-16	1940-1948	baseline	_	_	
8-17	1949-1955	method	_	_	
8-18	1955-1956	.	_	_	
8-19	1957-1958	-	_	_	
8-20	1959-1960	*	_	_	
8-21	1960-1964	data	_	_	
8-22	1964-1965	/	_	_	
8-23	1965-1973	data_csv	_	_	
8-24	1973-1974	/	_	_	
8-25	1974-1978	Code	_	_	
8-26	1978-1979	*	_	_	
8-27	1980-1981	:	_	_	
8-28	1982-1989	dataset	_	_	
8-29	1990-1993	for	_	_	
8-30	1994-1997	our	_	_	
8-31	1998-2002	Code	_	_	
8-32	2003-2015	Augmentation	_	_	
8-33	2016-2022	method	_	_	
8-34	2022-2023	.	_	_	
8-35	2024-2025	-	_	_	
8-36	2026-2027	*	_	_	
8-37	2027-2031	data	_	_	
8-38	2031-2032	/	_	_	
8-39	2032-2040	data_csv	_	_	
8-40	2040-2041	/	_	_	
8-41	2041-2045	Rule	_	_	
8-42	2045-2046	(	_	_	
8-43	2046-2047	F	_	_	
8-44	2047-2048	)	_	_	
8-45	2048-2049	*	_	_	
8-46	2050-2051	:	_	_	
8-47	2052-2059	dataset	_	_	
8-48	2060-2063	for	_	_	
8-49	2064-2067	our	_	_	
8-50	2068-2072	Rule	_	_	
8-51	2072-2073	(	_	_	
8-52	2073-2074	F	_	_	
8-53	2074-2075	)	_	_	
8-54	2076-2088	Augmentation	_	_	
8-55	2089-2095	method	_	_	
8-56	2095-2096	.	_	_	
8-57	2097-2098	-	_	_	
8-58	2099-2100	*	_	_	
8-59	2100-2104	data	_	_	
8-60	2104-2105	/	_	_	
8-61	2105-2113	data_csv	_	_	
8-62	2113-2114	/	_	_	
8-63	2114-2118	Rule	_	_	
8-64	2118-2119	(	_	_	
8-65	2119-2120	R	_	_	
8-66	2120-2121	)	_	_	
8-67	2121-2122	*	_	_	
8-68	2123-2124	:	_	_	
8-69	2125-2132	dataset	_	_	
8-70	2133-2136	for	_	_	
8-71	2137-2140	our	_	_	
8-72	2141-2145	Rule	_	_	
8-73	2145-2146	(	_	_	
8-74	2146-2147	R	_	_	
8-75	2147-2148	)	_	_	
8-76	2149-2161	Augmentation	_	_	
8-77	2162-2168	method	_	_	
8-78	2168-2169	.	_	_	
8-79	2170-2171	-	_	_	
8-80	2172-2173	*	_	_	
8-81	2173-2177	data	_	_	
8-82	2177-2178	/	_	_	
8-83	2178-2186	data_csv	_	_	
8-84	2186-2187	/	_	_	
8-85	2187-2201	Code_plus_Rule	_	_	
8-86	2201-2202	(	_	_	
8-87	2202-2203	F	_	_	
8-88	2203-2204	)	_	_	
8-89	2204-2205	*	_	_	
8-90	2206-2207	:	_	_	
8-91	2208-2215	dataset	_	_	
8-92	2216-2219	for	_	_	
8-93	2220-2223	our	_	_	
8-94	2224-2228	Code	_	_	
8-95	2228-2229	&	_	_	
8-96	2229-2233	Rule	_	_	
8-97	2233-2234	(	_	_	
8-98	2234-2235	F	_	_	
8-99	2235-2236	)	_	_	
8-100	2237-2249	Augmentation	_	_	
8-101	2250-2256	method	_	_	
8-102	2256-2257	.	_	_	
8-103	2258-2259	-	_	_	
8-104	2260-2261	*	_	_	
8-105	2261-2265	data	_	_	
8-106	2265-2266	/	_	_	
8-107	2266-2274	data_csv	_	_	
8-108	2274-2275	/	_	_	
8-109	2275-2289	Code_plus_Rule	_	_	
8-110	2289-2290	(	_	_	
8-111	2290-2291	R	_	_	
8-112	2291-2292	)	_	_	
8-113	2292-2293	*	_	_	
8-114	2294-2295	:	_	_	
8-115	2296-2303	dataset	_	_	
8-116	2304-2307	for	_	_	
8-117	2308-2311	our	_	_	
8-118	2312-2316	Code	_	_	
8-119	2316-2317	&	_	_	
8-120	2317-2321	Rule	_	_	
8-121	2321-2322	(	_	_	
8-122	2322-2323	R	_	_	
8-123	2323-2324	)	_	_	
8-124	2325-2337	Augmentation	_	_	
8-125	2338-2344	method	_	_	
8-126	2344-2345	.	_	_	
8-127	2346-2347	-	_	_	
8-128	2348-2349	*	_	_	
8-129	2349-2353	data	_	_	
8-130	2353-2354	/	_	_	
8-131	2354-2362	data_csv	_	_	
8-132	2362-2363	/	_	_	
8-133	2363-2374	testDataSet	_	_	
8-134	2374-2375	*	_	_	
8-135	2376-2377	:	_	_	
8-136	2378-2382	test	_	_	
8-137	2383-2390	dataset	_	_	
8-138	2390-2391	(	_	_	
8-139	2391-2397	normal	_	_	
8-140	2398-2403	image	_	_	
8-141	2404-2407	and	_	_	
8-142	2408-2412	real	_	_	
8-143	2413-2419	glitch	_	_	
8-144	2420-2426	images	_	_	
8-145	2427-2431	from	_	_	
8-146	2432-2435	466	_	_	
8-147	2436-2440	test	_	_	
8-148	2441-2448	reports	_	_	
8-149	2448-2449	)	_	_	
8-150	2449-2450	.	_	_	

#Text=download the pre-trained [model](https://doi.org/10.5281/zenodo.5081280) and unzip:
#Text=
#Text=```shell
#Text=unzip model.zip
#Text=```
#Text=
#Text=- *model/Base* : pre-trained model for baseline method.
#Text=- *model/Code* : pre-trained model for our Code Augmentation method.
#Text=- *model/Rule(F)* : pre-trained model for our Rule(F) Augmentation method.
#Text=- *model/Rule(R)* : pre-trained model for our Rule(R) Augmentation method.
#Text=- *model/Code_plus_Rule(F)* : pre-trained model for our Code&Rule(F) Augmentation method.
#Text=- *model/Code_plus_Rule(R)* : pre-trained model for our Code&Rule(R) Augmentation method.
#Text=
#Text=### Environment Setup
#Text=
#Text=#### Method1: Very simple: pull a Docker image (Recommanded)
#Text=
#Text=Step1: Login with your username and password
#Text=```shell
#Text=docker login
#Text=```
#Text=Step2: Pull source from our docker and start a container
#Text=```shell
#Text=docker pull qwertymj/glib:0.0.1
#Text=docker container run -it --gpus all qwertymj/glib:0.0.1 /bin/bash
#Text=```
#Text=Step3: Open another shell to check the running container ID
#Text=```shell
#Text=docker ps
#Text=```
#Text=Step4:  [Download dataset and model](#Download)
#Text=
#Text=Step5: Copy the container ID and push our dataset to the container
#Text=
#Text=```shell
#Text=docker cp data [container ID]:/code/data
#Text=docker cp model [container ID]:/code/model
#Text=cd /code
#Text=pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple 
#Text=```
#Text=
#Text=#### Method2: A bit harder: build a Docker image
#Text=Step1: Clone repo
#Text=```shell
#Text=git clone --recursive https://github.com/GLIB-game/GLIB.git
#Text=```
#Text=Step2: Build docker image
#Text=```shell
#Text=cd GLIB
#Text=sudo docker image build -t qwertymj/glib:0.0.1 .
#Text=```
#Text=Step3: Start the container
#Text=```shell
#Text=docker container run -it --gpus all qwertymj/glib:0.0.1 /bin/bash
#Text=```
#Text=Step4: [Download dataset and model](#Download)
#Text=
#Text=Step5: Copy the container ID and push our dataset to the container
#Text=
#Text=```shell
#Text=docker cp data [container ID]:/code/data
#Text=docker cp model [container ID]:/code/model
#Text=cd /code
#Text=pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple 
#Text=```
#Text=
#Text=#### Method3: Hard: set up the environment manually (Not Recommanded)
#Text=
#Text=First you should make sure your linux system has installed cuda(9.0.176) and cudnn(7.4.2)
#Text=
#Text=Step1: Install dependencies
#Text=```shell
#Text=apt-get update && \\
#Text=apt-get install -y wget \\
#Text=gnupg \\
#Text=apt-transport-https \\
#Text=tzdata \\
#Text=net-tools \\
#Text=dnsutils \\
#Text=iproute2 \\
#Text=gcc \\
#Text=tmux \\
#Text=htop \\
#Text=git \\
#Text=vim \\
#Text=sudo \\
#Text=cmake \\
#Text=libgl1-mesa-glx \\
#Text=libglib2.0-0 \\
#Text=openssh-server
#Text=```
#Text=
#Text=Step2: Build python virtual environment
#Text=
#Text=```shell
#Text=conda create -n python3.5 python=3.5.2
#Text=conda activate python3.5
#Text=```
#Text=
#Text=Step3: Clone the GLIB repository
#Text=
#Text=```shell
#Text=git clone --recursive https://github.com/GLIB-game/GLIB.git
#Text=```
#Text=Step4: Install python dependencies
#Text=```shell
#Text=cd GLIB
#Text=pip install --upgrade pip
#Text=pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple 
#Text=```
#Text=
#Text=
#Text=### Train the CNN model
#Text=
#Text=Training from scratch:
#Text=
#Text=```shell
#Text=python train.py --train_data train_file_path --eval_data eval_file_path --augType Type
#Text=```
#Text=
#Text=Example:
#Text=
#Text=```shell
#Text=python train.py --train_data data/data_csv/Code/Code_train.csv --eval_data data/data_csv/Code/Code_test.csv --augType Code
#Text=```
#Text=
#Text=Training from the pre-trained model:
#Text=
#Text=```shell
#Text=python train.py --train_data train_file_path --eval_data eval_file_path --augType Type --model_path model_path
#Text=```
#Text=
#Text=Example:
#Text=
#Text=```shell
#Text=python train.py --train_data data/data_csv/Code/Code_train.csv --eval_data data/data_csv/Code/Code_test.csv --augType Code --model_path model/Code/Code.pkl
#Text=```
#Text=
#Text=### Evaluate the model
#Text=
#Text=```shell
#Text=python test.py --test_data test_data_path --model model_path
#Text=```
#Text=
#Text=Example:
#Text=
#Text=```shell
#Text=python test.py --test_data data/data_csv/testDataSet/testData_test.csv --model model/Code/Code.pkl
#Text=```
#Text=
#Text=### Generate saliency map
#Text=
#Text=```shell
#Text=python saliencymap.py --test_data test_data_path --model model_path
#Text=```
#Text=
#Text=Example:
#Text=
#Text=```shell
#Text=python saliencymap.py --test_data data/data_csv/testDataSet/testData_test.csv --model model/Code/Code.pkl
#Text=```
#Text=
#Text=
#Text=
#Text=## Configuration
#Text=
#Text=Changing hyper-parameters is possible by editing the file [config.py](https://github.com/GLIB-game/GLIB/blob/main/config.py)
#Text=
#Text=#### config.EPOCH:
#Text=
#Text=The max number of epochs to train the model.
9-1	2452-2460	download	_	_	
9-2	2461-2464	the	_	_	
9-3	2465-2476	pre-trained	_	_	
9-4	2477-2478	[	_	_	
9-5	2478-2483	model	_	_	
9-6	2483-2484	]	_	_	
9-7	2484-2485	(	_	_	
9-8	2485-2490	https	_	_	
9-9	2490-2491	:	_	_	
9-10	2491-2492	/	_	_	
9-11	2492-2493	/	_	_	
9-12	2493-2500	doi.org	_	_	
9-13	2500-2501	/	_	_	
9-14	2501-2508	10.5281	_	_	
9-15	2508-2509	/	_	_	
9-16	2509-2515	zenodo	_	_	
9-17	2515-2523	.5081280	_	_	
9-18	2523-2524	)	_	_	
9-19	2525-2528	and	_	_	
9-20	2529-2534	unzip	_	_	
9-21	2534-2535	:	_	_	
9-22	2537-2538	`	_	_	
9-23	2538-2539	`	_	_	
9-24	2539-2540	`	_	_	
9-25	2540-2545	shell	_	_	
9-26	2546-2551	unzip	_	_	
9-27	2552-2561	model.zip	_	_	
9-28	2562-2563	`	_	_	
9-29	2563-2564	`	_	_	
9-30	2564-2565	`	_	_	
9-31	2567-2568	-	_	_	
9-32	2569-2570	*	_	_	
9-33	2570-2575	model	_	_	
9-34	2575-2576	/	_	_	
9-35	2576-2580	Base	_	_	
9-36	2580-2581	*	_	_	
9-37	2582-2583	:	_	_	
9-38	2584-2595	pre-trained	_	_	
9-39	2596-2601	model	_	_	
9-40	2602-2605	for	_	_	
9-41	2606-2614	baseline	_	_	
9-42	2615-2621	method	_	_	
9-43	2621-2622	.	_	_	
9-44	2623-2624	-	_	_	
9-45	2625-2626	*	_	_	
9-46	2626-2631	model	_	_	
9-47	2631-2632	/	_	_	
9-48	2632-2636	Code	_	_	
9-49	2636-2637	*	_	_	
9-50	2638-2639	:	_	_	
9-51	2640-2651	pre-trained	_	_	
9-52	2652-2657	model	_	_	
9-53	2658-2661	for	_	_	
9-54	2662-2665	our	_	_	
9-55	2666-2670	Code	_	_	
9-56	2671-2683	Augmentation	_	_	
9-57	2684-2690	method	_	_	
9-58	2690-2691	.	_	_	
9-59	2692-2693	-	_	_	
9-60	2694-2695	*	_	_	
9-61	2695-2700	model	_	_	
9-62	2700-2701	/	_	_	
9-63	2701-2705	Rule	_	_	
9-64	2705-2706	(	_	_	
9-65	2706-2707	F	_	_	
9-66	2707-2708	)	_	_	
9-67	2708-2709	*	_	_	
9-68	2710-2711	:	_	_	
9-69	2712-2723	pre-trained	_	_	
9-70	2724-2729	model	_	_	
9-71	2730-2733	for	_	_	
9-72	2734-2737	our	_	_	
9-73	2738-2742	Rule	_	_	
9-74	2742-2743	(	_	_	
9-75	2743-2744	F	_	_	
9-76	2744-2745	)	_	_	
9-77	2746-2758	Augmentation	_	_	
9-78	2759-2765	method	_	_	
9-79	2765-2766	.	_	_	
9-80	2767-2768	-	_	_	
9-81	2769-2770	*	_	_	
9-82	2770-2775	model	_	_	
9-83	2775-2776	/	_	_	
9-84	2776-2780	Rule	_	_	
9-85	2780-2781	(	_	_	
9-86	2781-2782	R	_	_	
9-87	2782-2783	)	_	_	
9-88	2783-2784	*	_	_	
9-89	2785-2786	:	_	_	
9-90	2787-2798	pre-trained	_	_	
9-91	2799-2804	model	_	_	
9-92	2805-2808	for	_	_	
9-93	2809-2812	our	_	_	
9-94	2813-2817	Rule	_	_	
9-95	2817-2818	(	_	_	
9-96	2818-2819	R	_	_	
9-97	2819-2820	)	_	_	
9-98	2821-2833	Augmentation	_	_	
9-99	2834-2840	method	_	_	
9-100	2840-2841	.	_	_	
9-101	2842-2843	-	_	_	
9-102	2844-2845	*	_	_	
9-103	2845-2850	model	_	_	
9-104	2850-2851	/	_	_	
9-105	2851-2865	Code_plus_Rule	_	_	
9-106	2865-2866	(	_	_	
9-107	2866-2867	F	_	_	
9-108	2867-2868	)	_	_	
9-109	2868-2869	*	_	_	
9-110	2870-2871	:	_	_	
9-111	2872-2883	pre-trained	_	_	
9-112	2884-2889	model	_	_	
9-113	2890-2893	for	_	_	
9-114	2894-2897	our	_	_	
9-115	2898-2902	Code	_	_	
9-116	2902-2903	&	_	_	
9-117	2903-2907	Rule	_	_	
9-118	2907-2908	(	_	_	
9-119	2908-2909	F	_	_	
9-120	2909-2910	)	_	_	
9-121	2911-2923	Augmentation	_	_	
9-122	2924-2930	method	_	_	
9-123	2930-2931	.	_	_	
9-124	2932-2933	-	_	_	
9-125	2934-2935	*	_	_	
9-126	2935-2940	model	_	_	
9-127	2940-2941	/	_	_	
9-128	2941-2955	Code_plus_Rule	_	_	
9-129	2955-2956	(	_	_	
9-130	2956-2957	R	_	_	
9-131	2957-2958	)	_	_	
9-132	2958-2959	*	_	_	
9-133	2960-2961	:	_	_	
9-134	2962-2973	pre-trained	_	_	
9-135	2974-2979	model	_	_	
9-136	2980-2983	for	_	_	
9-137	2984-2987	our	_	_	
9-138	2988-2992	Code	_	_	
9-139	2992-2993	&	_	_	
9-140	2993-2997	Rule	_	_	
9-141	2997-2998	(	_	_	
9-142	2998-2999	R	_	_	
9-143	2999-3000	)	_	_	
9-144	3001-3013	Augmentation	_	_	
9-145	3014-3020	method	_	_	
9-146	3020-3021	.	_	_	
9-147	3023-3024	#	_	_	
9-148	3024-3025	#	_	_	
9-149	3025-3026	#	_	_	
9-150	3027-3038	Environment	_	_	
9-151	3039-3044	Setup	_	_	
9-152	3046-3047	#	_	_	
9-153	3047-3048	#	_	_	
9-154	3048-3049	#	_	_	
9-155	3049-3050	#	_	_	
9-156	3051-3058	Method1	_	_	
9-157	3058-3059	:	_	_	
9-158	3060-3064	Very	_	_	
9-159	3065-3071	simple	_	_	
9-160	3071-3072	:	_	_	
9-161	3073-3077	pull	_	_	
9-162	3078-3079	a	_	_	
9-163	3080-3086	Docker	_	_	
9-164	3087-3092	image	_	_	
9-165	3093-3094	(	_	_	
9-166	3094-3105	Recommanded	_	_	
9-167	3105-3106	)	_	_	
9-168	3108-3113	Step1	_	_	
9-169	3113-3114	:	_	_	
9-170	3115-3120	Login	_	_	
9-171	3121-3125	with	_	_	
9-172	3126-3130	your	_	_	
9-173	3131-3139	username	_	_	
9-174	3140-3143	and	_	_	
9-175	3144-3152	password	_	_	
9-176	3153-3154	`	_	_	
9-177	3154-3155	`	_	_	
9-178	3155-3156	`	_	_	
9-179	3156-3161	shell	_	_	
9-180	3162-3168	docker	_	_	
9-181	3169-3174	login	_	_	
9-182	3175-3176	`	_	_	
9-183	3176-3177	`	_	_	
9-184	3177-3178	`	_	_	
9-185	3179-3184	Step2	_	_	
9-186	3184-3185	:	_	_	
9-187	3186-3190	Pull	_	_	
9-188	3191-3197	source	_	_	
9-189	3198-3202	from	_	_	
9-190	3203-3206	our	_	_	
9-191	3207-3213	docker	_	_	
9-192	3214-3217	and	_	_	
9-193	3218-3223	start	_	_	
9-194	3224-3225	a	_	_	
9-195	3226-3235	container	_	_	
9-196	3236-3237	`	_	_	
9-197	3237-3238	`	_	_	
9-198	3238-3239	`	_	_	
9-199	3239-3244	shell	_	_	
9-200	3245-3251	docker	_	_	
9-201	3252-3256	pull	_	_	
9-202	3257-3265	qwertymj	_	_	
9-203	3265-3266	/	_	_	
9-204	3266-3270	glib	_	_	
9-205	3270-3271	:	_	_	
9-206	3271-3276	0.0.1	_	_	
9-207	3277-3283	docker	_	_	
9-208	3284-3293	container	_	_	
9-209	3294-3297	run	_	_	
9-210	3298-3299	-	_	_	
9-211	3299-3301	it	_	_	
9-212	3302-3303	-	_	_	
9-213	3303-3304	-	_	_	
9-214	3304-3308	gpus	_	_	
9-215	3309-3312	all	_	_	
9-216	3313-3321	qwertymj	_	_	
9-217	3321-3322	/	_	_	
9-218	3322-3326	glib	_	_	
9-219	3326-3327	:	_	_	
9-220	3327-3332	0.0.1	_	_	
9-221	3333-3334	/	_	_	
9-222	3334-3337	bin	_	_	
9-223	3337-3338	/	_	_	
9-224	3338-3342	bash	_	_	
9-225	3343-3344	`	_	_	
9-226	3344-3345	`	_	_	
9-227	3345-3346	`	_	_	
9-228	3347-3352	Step3	_	_	
9-229	3352-3353	:	_	_	
9-230	3354-3358	Open	_	_	
9-231	3359-3366	another	_	_	
9-232	3367-3372	shell	_	_	
9-233	3373-3375	to	_	_	
9-234	3376-3381	check	_	_	
9-235	3382-3385	the	_	_	
9-236	3386-3393	running	_	_	
9-237	3394-3403	container	_	_	
9-238	3404-3406	ID	_	_	
9-239	3407-3408	`	_	_	
9-240	3408-3409	`	_	_	
9-241	3409-3410	`	_	_	
9-242	3410-3415	shell	_	_	
9-243	3416-3422	docker	_	_	
9-244	3423-3425	ps	_	_	
9-245	3426-3427	`	_	_	
9-246	3427-3428	`	_	_	
9-247	3428-3429	`	_	_	
9-248	3430-3435	Step4	_	_	
9-249	3435-3436	:	_	_	
9-250	3438-3439	[	_	_	
9-251	3439-3447	Download	_	_	
9-252	3448-3455	dataset	_	_	
9-253	3456-3459	and	_	_	
9-254	3460-3465	model	_	_	
9-255	3465-3466	]	_	_	
9-256	3466-3467	(	_	_	
9-257	3467-3468	#	_	_	
9-258	3468-3476	Download	_	_	
9-259	3476-3477	)	_	_	
9-260	3479-3484	Step5	_	_	
9-261	3484-3485	:	_	_	
9-262	3486-3490	Copy	_	_	
9-263	3491-3494	the	_	_	
9-264	3495-3504	container	_	_	
9-265	3505-3507	ID	_	_	
9-266	3508-3511	and	_	_	
9-267	3512-3516	push	_	_	
9-268	3517-3520	our	_	_	
9-269	3521-3528	dataset	_	_	
9-270	3529-3531	to	_	_	
9-271	3532-3535	the	_	_	
9-272	3536-3545	container	_	_	
9-273	3547-3548	`	_	_	
9-274	3548-3549	`	_	_	
9-275	3549-3550	`	_	_	
9-276	3550-3555	shell	_	_	
9-277	3556-3562	docker	_	_	
9-278	3563-3565	cp	_	_	
9-279	3566-3570	data	_	_	
9-280	3571-3572	[	_	_	
9-281	3572-3581	container	_	_	
9-282	3582-3584	ID	_	_	
9-283	3584-3585	]	_	_	
9-284	3585-3586	:	_	_	
9-285	3586-3587	/	_	_	
9-286	3587-3591	code	_	_	
9-287	3591-3592	/	_	_	
9-288	3592-3596	data	_	_	
9-289	3597-3603	docker	_	_	
9-290	3604-3606	cp	_	_	
9-291	3607-3612	model	_	_	
9-292	3613-3614	[	_	_	
9-293	3614-3623	container	_	_	
9-294	3624-3626	ID	_	_	
9-295	3626-3627	]	_	_	
9-296	3627-3628	:	_	_	
9-297	3628-3629	/	_	_	
9-298	3629-3633	code	_	_	
9-299	3633-3634	/	_	_	
9-300	3634-3639	model	_	_	
9-301	3640-3642	cd	_	_	
9-302	3643-3644	/	_	_	
9-303	3644-3648	code	_	_	
9-304	3649-3652	pip	_	_	
9-305	3653-3660	install	_	_	
9-306	3661-3662	-	_	_	
9-307	3662-3663	r	_	_	
9-308	3664-3680	requirements.txt	_	_	
9-309	3681-3682	-	_	_	
9-310	3682-3683	i	_	_	
9-311	3684-3689	https	_	_	
9-312	3689-3690	:	_	_	
9-313	3690-3691	/	_	_	
9-314	3691-3692	/	_	_	
9-315	3692-3717	pypi.tuna.tsinghua.edu.cn	_	_	
9-316	3717-3718	/	_	_	
9-317	3718-3724	simple	_	_	
9-318	3726-3727	`	_	_	
9-319	3727-3728	`	_	_	
9-320	3728-3729	`	_	_	
9-321	3731-3732	#	_	_	
9-322	3732-3733	#	_	_	
9-323	3733-3734	#	_	_	
9-324	3734-3735	#	_	_	
9-325	3736-3743	Method2	_	_	
9-326	3743-3744	:	_	_	
9-327	3745-3746	A	_	_	
9-328	3747-3750	bit	_	_	
9-329	3751-3757	harder	_	_	
9-330	3757-3758	:	_	_	
9-331	3759-3764	build	_	_	
9-332	3765-3766	a	_	_	
9-333	3767-3773	Docker	_	_	
9-334	3774-3779	image	_	_	
9-335	3780-3785	Step1	_	_	
9-336	3785-3786	:	_	_	
9-337	3787-3792	Clone	_	_	
9-338	3793-3797	repo	_	_	
9-339	3798-3799	`	_	_	
9-340	3799-3800	`	_	_	
9-341	3800-3801	`	_	_	
9-342	3801-3806	shell	_	_	
9-343	3807-3810	git	_	_	
9-344	3811-3816	clone	_	_	
9-345	3817-3818	-	_	_	
9-346	3818-3819	-	_	_	
9-347	3819-3828	recursive	_	_	
9-348	3829-3834	https	_	_	
9-349	3834-3835	:	_	_	
9-350	3835-3836	/	_	_	
9-351	3836-3837	/	_	_	
9-352	3837-3847	github.com	_	_	
9-353	3847-3848	/	_	_	
9-354	3848-3857	GLIB-game	_	_	
9-355	3857-3858	/	_	_	
9-356	3858-3866	GLIB.git	_	_	
9-357	3867-3868	`	_	_	
9-358	3868-3869	`	_	_	
9-359	3869-3870	`	_	_	
9-360	3871-3876	Step2	_	_	
9-361	3876-3877	:	_	_	
9-362	3878-3883	Build	_	_	
9-363	3884-3890	docker	_	_	
9-364	3891-3896	image	_	_	
9-365	3897-3898	`	_	_	
9-366	3898-3899	`	_	_	
9-367	3899-3900	`	_	_	
9-368	3900-3905	shell	_	_	
9-369	3906-3908	cd	_	_	
9-370	3909-3913	GLIB	_	_	
9-371	3914-3918	sudo	_	_	
9-372	3919-3925	docker	_	_	
9-373	3926-3931	image	_	_	
9-374	3932-3937	build	_	_	
9-375	3938-3939	-	_	_	
9-376	3939-3940	t	_	_	
9-377	3941-3949	qwertymj	_	_	
9-378	3949-3950	/	_	_	
9-379	3950-3954	glib	_	_	
9-380	3954-3955	:	_	_	
9-381	3955-3960	0.0.1	_	_	
9-382	3961-3962	.	_	_	
9-383	3963-3964	`	_	_	
9-384	3964-3965	`	_	_	
9-385	3965-3966	`	_	_	
9-386	3967-3972	Step3	_	_	
9-387	3972-3973	:	_	_	
9-388	3974-3979	Start	_	_	
9-389	3980-3983	the	_	_	
9-390	3984-3993	container	_	_	
9-391	3994-3995	`	_	_	
9-392	3995-3996	`	_	_	
9-393	3996-3997	`	_	_	
9-394	3997-4002	shell	_	_	
9-395	4003-4009	docker	_	_	
9-396	4010-4019	container	_	_	
9-397	4020-4023	run	_	_	
9-398	4024-4025	-	_	_	
9-399	4025-4027	it	_	_	
9-400	4028-4029	-	_	_	
9-401	4029-4030	-	_	_	
9-402	4030-4034	gpus	_	_	
9-403	4035-4038	all	_	_	
9-404	4039-4047	qwertymj	_	_	
9-405	4047-4048	/	_	_	
9-406	4048-4052	glib	_	_	
9-407	4052-4053	:	_	_	
9-408	4053-4058	0.0.1	_	_	
9-409	4059-4060	/	_	_	
9-410	4060-4063	bin	_	_	
9-411	4063-4064	/	_	_	
9-412	4064-4068	bash	_	_	
9-413	4069-4070	`	_	_	
9-414	4070-4071	`	_	_	
9-415	4071-4072	`	_	_	
9-416	4073-4078	Step4	_	_	
9-417	4078-4079	:	_	_	
9-418	4080-4081	[	_	_	
9-419	4081-4089	Download	_	_	
9-420	4090-4097	dataset	_	_	
9-421	4098-4101	and	_	_	
9-422	4102-4107	model	_	_	
9-423	4107-4108	]	_	_	
9-424	4108-4109	(	_	_	
9-425	4109-4110	#	_	_	
9-426	4110-4118	Download	_	_	
9-427	4118-4119	)	_	_	
9-428	4121-4126	Step5	_	_	
9-429	4126-4127	:	_	_	
9-430	4128-4132	Copy	_	_	
9-431	4133-4136	the	_	_	
9-432	4137-4146	container	_	_	
9-433	4147-4149	ID	_	_	
9-434	4150-4153	and	_	_	
9-435	4154-4158	push	_	_	
9-436	4159-4162	our	_	_	
9-437	4163-4170	dataset	_	_	
9-438	4171-4173	to	_	_	
9-439	4174-4177	the	_	_	
9-440	4178-4187	container	_	_	
9-441	4189-4190	`	_	_	
9-442	4190-4191	`	_	_	
9-443	4191-4192	`	_	_	
9-444	4192-4197	shell	_	_	
9-445	4198-4204	docker	_	_	
9-446	4205-4207	cp	_	_	
9-447	4208-4212	data	_	_	
9-448	4213-4214	[	_	_	
9-449	4214-4223	container	_	_	
9-450	4224-4226	ID	_	_	
9-451	4226-4227	]	_	_	
9-452	4227-4228	:	_	_	
9-453	4228-4229	/	_	_	
9-454	4229-4233	code	_	_	
9-455	4233-4234	/	_	_	
9-456	4234-4238	data	_	_	
9-457	4239-4245	docker	_	_	
9-458	4246-4248	cp	_	_	
9-459	4249-4254	model	_	_	
9-460	4255-4256	[	_	_	
9-461	4256-4265	container	_	_	
9-462	4266-4268	ID	_	_	
9-463	4268-4269	]	_	_	
9-464	4269-4270	:	_	_	
9-465	4270-4271	/	_	_	
9-466	4271-4275	code	_	_	
9-467	4275-4276	/	_	_	
9-468	4276-4281	model	_	_	
9-469	4282-4284	cd	_	_	
9-470	4285-4286	/	_	_	
9-471	4286-4290	code	_	_	
9-472	4291-4294	pip	_	_	
9-473	4295-4302	install	_	_	
9-474	4303-4304	-	_	_	
9-475	4304-4305	r	_	_	
9-476	4306-4322	requirements.txt	_	_	
9-477	4323-4324	-	_	_	
9-478	4324-4325	i	_	_	
9-479	4326-4331	https	_	_	
9-480	4331-4332	:	_	_	
9-481	4332-4333	/	_	_	
9-482	4333-4334	/	_	_	
9-483	4334-4359	pypi.tuna.tsinghua.edu.cn	_	_	
9-484	4359-4360	/	_	_	
9-485	4360-4366	simple	_	_	
9-486	4368-4369	`	_	_	
9-487	4369-4370	`	_	_	
9-488	4370-4371	`	_	_	
9-489	4373-4374	#	_	_	
9-490	4374-4375	#	_	_	
9-491	4375-4376	#	_	_	
9-492	4376-4377	#	_	_	
9-493	4378-4385	Method3	_	_	
9-494	4385-4386	:	_	_	
9-495	4387-4391	Hard	_	_	
9-496	4391-4392	:	_	_	
9-497	4393-4396	set	_	_	
9-498	4397-4399	up	_	_	
9-499	4400-4403	the	_	_	
9-500	4404-4415	environment	_	_	
9-501	4416-4424	manually	_	_	
9-502	4425-4426	(	_	_	
9-503	4426-4429	Not	_	_	
9-504	4430-4441	Recommanded	_	_	
9-505	4441-4442	)	_	_	
9-506	4444-4449	First	_	_	
9-507	4450-4453	you	_	_	
9-508	4454-4460	should	_	_	
9-509	4461-4465	make	_	_	
9-510	4466-4470	sure	_	_	
9-511	4471-4475	your	_	_	
9-512	4476-4481	linux	_	_	
9-513	4482-4488	system	_	_	
9-514	4489-4492	has	_	_	
9-515	4493-4502	installed	_	_	
9-516	4503-4507	cuda	_	_	
9-517	4507-4508	(	_	_	
9-518	4508-4515	9.0.176	_	_	
9-519	4515-4516	)	_	_	
9-520	4517-4520	and	_	_	
9-521	4521-4526	cudnn	_	_	
9-522	4526-4527	(	_	_	
9-523	4527-4532	7.4.2	_	_	
9-524	4532-4533	)	_	_	
9-525	4535-4540	Step1	_	_	
9-526	4540-4541	:	_	_	
9-527	4542-4549	Install	_	_	
9-528	4550-4562	dependencies	_	_	
9-529	4563-4564	`	_	_	
9-530	4564-4565	`	_	_	
9-531	4565-4566	`	_	_	
9-532	4566-4571	shell	_	_	
9-533	4572-4579	apt-get	_	_	
9-534	4580-4586	update	_	_	
9-535	4587-4588	&	_	_	
9-536	4588-4589	&	_	_	
9-537	4590-4591	\	_	_	
9-538	4592-4599	apt-get	_	_	
9-539	4600-4607	install	_	_	
9-540	4608-4609	-	_	_	
9-541	4609-4610	y	_	_	
9-542	4611-4615	wget	_	_	
9-543	4616-4617	\	_	_	
9-544	4618-4623	gnupg	_	_	
9-545	4624-4625	\	_	_	
9-546	4626-4645	apt-transport-https	_	_	
9-547	4646-4647	\	_	_	
9-548	4648-4654	tzdata	_	_	
9-549	4655-4656	\	_	_	
9-550	4657-4666	net-tools	_	_	
9-551	4667-4668	\	_	_	
9-552	4669-4677	dnsutils	_	_	
9-553	4678-4679	\	_	_	
9-554	4680-4688	iproute2	_	_	
9-555	4689-4690	\	_	_	
9-556	4691-4694	gcc	_	_	
9-557	4695-4696	\	_	_	
9-558	4697-4701	tmux	_	_	
9-559	4702-4703	\	_	_	
9-560	4704-4708	htop	_	_	
9-561	4709-4710	\	_	_	
9-562	4711-4714	git	_	_	
9-563	4715-4716	\	_	_	
9-564	4717-4720	vim	_	_	
9-565	4721-4722	\	_	_	
9-566	4723-4727	sudo	_	_	
9-567	4728-4729	\	_	_	
9-568	4730-4735	cmake	_	_	
9-569	4736-4737	\	_	_	
9-570	4738-4744	libgl1	_	_	
9-571	4744-4745	-	_	_	
9-572	4745-4753	mesa-glx	_	_	
9-573	4754-4755	\	_	_	
9-574	4756-4766	libglib2.0	_	_	
9-575	4766-4767	-	_	_	
9-576	4767-4768	0	_	_	
9-577	4769-4770	\	_	_	
9-578	4771-4785	openssh-server	_	_	
9-579	4786-4787	`	_	_	
9-580	4787-4788	`	_	_	
9-581	4788-4789	`	_	_	
9-582	4791-4796	Step2	_	_	
9-583	4796-4797	:	_	_	
9-584	4798-4803	Build	_	_	
9-585	4804-4810	python	_	_	
9-586	4811-4818	virtual	_	_	
9-587	4819-4830	environment	_	_	
9-588	4832-4833	`	_	_	
9-589	4833-4834	`	_	_	
9-590	4834-4835	`	_	_	
9-591	4835-4840	shell	_	_	
9-592	4841-4846	conda	_	_	
9-593	4847-4853	create	_	_	
9-594	4854-4855	-	_	_	
9-595	4855-4856	n	_	_	
9-596	4857-4866	python3.5	_	_	
9-597	4867-4873	python	_	_	
9-598	4873-4874	=	_	_	
9-599	4874-4879	3.5.2	_	_	
9-600	4880-4885	conda	_	_	
9-601	4886-4894	activate	_	_	
9-602	4895-4904	python3.5	_	_	
9-603	4905-4906	`	_	_	
9-604	4906-4907	`	_	_	
9-605	4907-4908	`	_	_	
9-606	4910-4915	Step3	_	_	
9-607	4915-4916	:	_	_	
9-608	4917-4922	Clone	_	_	
9-609	4923-4926	the	_	_	
9-610	4927-4931	GLIB	_	_	
9-611	4932-4942	repository	_	_	
9-612	4944-4945	`	_	_	
9-613	4945-4946	`	_	_	
9-614	4946-4947	`	_	_	
9-615	4947-4952	shell	_	_	
9-616	4953-4956	git	_	_	
9-617	4957-4962	clone	_	_	
9-618	4963-4964	-	_	_	
9-619	4964-4965	-	_	_	
9-620	4965-4974	recursive	_	_	
9-621	4975-4980	https	_	_	
9-622	4980-4981	:	_	_	
9-623	4981-4982	/	_	_	
9-624	4982-4983	/	_	_	
9-625	4983-4993	github.com	_	_	
9-626	4993-4994	/	_	_	
9-627	4994-5003	GLIB-game	_	_	
9-628	5003-5004	/	_	_	
9-629	5004-5012	GLIB.git	_	_	
9-630	5013-5014	`	_	_	
9-631	5014-5015	`	_	_	
9-632	5015-5016	`	_	_	
9-633	5017-5022	Step4	_	_	
9-634	5022-5023	:	_	_	
9-635	5024-5031	Install	_	_	
9-636	5032-5038	python	_	_	
9-637	5039-5051	dependencies	_	_	
9-638	5052-5053	`	_	_	
9-639	5053-5054	`	_	_	
9-640	5054-5055	`	_	_	
9-641	5055-5060	shell	_	_	
9-642	5061-5063	cd	_	_	
9-643	5064-5068	GLIB	_	_	
9-644	5069-5072	pip	_	_	
9-645	5073-5080	install	_	_	
9-646	5081-5082	-	_	_	
9-647	5082-5083	-	_	_	
9-648	5083-5090	upgrade	_	_	
9-649	5091-5094	pip	_	_	
9-650	5095-5098	pip	_	_	
9-651	5099-5106	install	_	_	
9-652	5107-5108	-	_	_	
9-653	5108-5109	r	_	_	
9-654	5110-5126	requirements.txt	_	_	
9-655	5127-5128	-	_	_	
9-656	5128-5129	i	_	_	
9-657	5130-5135	https	_	_	
9-658	5135-5136	:	_	_	
9-659	5136-5137	/	_	_	
9-660	5137-5138	/	_	_	
9-661	5138-5163	pypi.tuna.tsinghua.edu.cn	_	_	
9-662	5163-5164	/	_	_	
9-663	5164-5170	simple	_	_	
9-664	5172-5173	`	_	_	
9-665	5173-5174	`	_	_	
9-666	5174-5175	`	_	_	
9-667	5178-5179	#	_	_	
9-668	5179-5180	#	_	_	
9-669	5180-5181	#	_	_	
9-670	5182-5187	Train	_	_	
9-671	5188-5191	the	_	_	
9-672	5192-5195	CNN	_	_	
9-673	5196-5201	model	_	_	
9-674	5203-5211	Training	_	_	
9-675	5212-5216	from	_	_	
9-676	5217-5224	scratch	_	_	
9-677	5224-5225	:	_	_	
9-678	5227-5228	`	_	_	
9-679	5228-5229	`	_	_	
9-680	5229-5230	`	_	_	
9-681	5230-5235	shell	_	_	
9-682	5236-5242	python	_	_	
9-683	5243-5251	train.py	_	_	
9-684	5252-5253	-	_	_	
9-685	5253-5254	-	_	_	
9-686	5254-5264	train_data	_	_	
9-687	5265-5280	train_file_path	_	_	
9-688	5281-5282	-	_	_	
9-689	5282-5283	-	_	_	
9-690	5283-5292	eval_data	_	_	
9-691	5293-5307	eval_file_path	_	_	
9-692	5308-5309	-	_	_	
9-693	5309-5310	-	_	_	
9-694	5310-5317	augType	_	_	
9-695	5318-5322	Type	_	_	
9-696	5323-5324	`	_	_	
9-697	5324-5325	`	_	_	
9-698	5325-5326	`	_	_	
9-699	5328-5335	Example	_	_	
9-700	5335-5336	:	_	_	
9-701	5338-5339	`	_	_	
9-702	5339-5340	`	_	_	
9-703	5340-5341	`	_	_	
9-704	5341-5346	shell	_	_	
9-705	5347-5353	python	_	_	
9-706	5354-5362	train.py	_	_	
9-707	5363-5364	-	_	_	
9-708	5364-5365	-	_	_	
9-709	5365-5375	train_data	_	_	
9-710	5376-5380	data	_	_	
9-711	5380-5381	/	_	_	
9-712	5381-5389	data_csv	_	_	
9-713	5389-5390	/	_	_	
9-714	5390-5394	Code	_	_	
9-715	5394-5395	/	_	_	
9-716	5395-5409	Code_train.csv	_	_	
9-717	5410-5411	-	_	_	
9-718	5411-5412	-	_	_	
9-719	5412-5421	eval_data	_	_	
9-720	5422-5426	data	_	_	
9-721	5426-5427	/	_	_	
9-722	5427-5435	data_csv	_	_	
9-723	5435-5436	/	_	_	
9-724	5436-5440	Code	_	_	
9-725	5440-5441	/	_	_	
9-726	5441-5454	Code_test.csv	_	_	
9-727	5455-5456	-	_	_	
9-728	5456-5457	-	_	_	
9-729	5457-5464	augType	_	_	
9-730	5465-5469	Code	_	_	
9-731	5470-5471	`	_	_	
9-732	5471-5472	`	_	_	
9-733	5472-5473	`	_	_	
9-734	5475-5483	Training	_	_	
9-735	5484-5488	from	_	_	
9-736	5489-5492	the	_	_	
9-737	5493-5504	pre-trained	_	_	
9-738	5505-5510	model	_	_	
9-739	5510-5511	:	_	_	
9-740	5513-5514	`	_	_	
9-741	5514-5515	`	_	_	
9-742	5515-5516	`	_	_	
9-743	5516-5521	shell	_	_	
9-744	5522-5528	python	_	_	
9-745	5529-5537	train.py	_	_	
9-746	5538-5539	-	_	_	
9-747	5539-5540	-	_	_	
9-748	5540-5550	train_data	_	_	
9-749	5551-5566	train_file_path	_	_	
9-750	5567-5568	-	_	_	
9-751	5568-5569	-	_	_	
9-752	5569-5578	eval_data	_	_	
9-753	5579-5593	eval_file_path	_	_	
9-754	5594-5595	-	_	_	
9-755	5595-5596	-	_	_	
9-756	5596-5603	augType	_	_	
9-757	5604-5608	Type	_	_	
9-758	5609-5610	-	_	_	
9-759	5610-5611	-	_	_	
9-760	5611-5621	model_path	_	_	
9-761	5622-5632	model_path	_	_	
9-762	5633-5634	`	_	_	
9-763	5634-5635	`	_	_	
9-764	5635-5636	`	_	_	
9-765	5638-5645	Example	_	_	
9-766	5645-5646	:	_	_	
9-767	5648-5649	`	_	_	
9-768	5649-5650	`	_	_	
9-769	5650-5651	`	_	_	
9-770	5651-5656	shell	_	_	
9-771	5657-5663	python	_	_	
9-772	5664-5672	train.py	_	_	
9-773	5673-5674	-	_	_	
9-774	5674-5675	-	_	_	
9-775	5675-5685	train_data	_	_	
9-776	5686-5690	data	_	_	
9-777	5690-5691	/	_	_	
9-778	5691-5699	data_csv	_	_	
9-779	5699-5700	/	_	_	
9-780	5700-5704	Code	_	_	
9-781	5704-5705	/	_	_	
9-782	5705-5719	Code_train.csv	_	_	
9-783	5720-5721	-	_	_	
9-784	5721-5722	-	_	_	
9-785	5722-5731	eval_data	_	_	
9-786	5732-5736	data	_	_	
9-787	5736-5737	/	_	_	
9-788	5737-5745	data_csv	_	_	
9-789	5745-5746	/	_	_	
9-790	5746-5750	Code	_	_	
9-791	5750-5751	/	_	_	
9-792	5751-5764	Code_test.csv	_	_	
9-793	5765-5766	-	_	_	
9-794	5766-5767	-	_	_	
9-795	5767-5774	augType	_	_	
9-796	5775-5779	Code	_	_	
9-797	5780-5781	-	_	_	
9-798	5781-5782	-	_	_	
9-799	5782-5792	model_path	_	_	
9-800	5793-5798	model	_	_	
9-801	5798-5799	/	_	_	
9-802	5799-5803	Code	_	_	
9-803	5803-5804	/	_	_	
9-804	5804-5812	Code.pkl	_	_	
9-805	5813-5814	`	_	_	
9-806	5814-5815	`	_	_	
9-807	5815-5816	`	_	_	
9-808	5818-5819	#	_	_	
9-809	5819-5820	#	_	_	
9-810	5820-5821	#	_	_	
9-811	5822-5830	Evaluate	_	_	
9-812	5831-5834	the	_	_	
9-813	5835-5840	model	_	_	
9-814	5842-5843	`	_	_	
9-815	5843-5844	`	_	_	
9-816	5844-5845	`	_	_	
9-817	5845-5850	shell	_	_	
9-818	5851-5857	python	_	_	
9-819	5858-5865	test.py	_	_	
9-820	5866-5867	-	_	_	
9-821	5867-5868	-	_	_	
9-822	5868-5877	test_data	_	_	
9-823	5878-5892	test_data_path	_	_	
9-824	5893-5894	-	_	_	
9-825	5894-5895	-	_	_	
9-826	5895-5900	model	_	_	
9-827	5901-5911	model_path	_	_	
9-828	5912-5913	`	_	_	
9-829	5913-5914	`	_	_	
9-830	5914-5915	`	_	_	
9-831	5917-5924	Example	_	_	
9-832	5924-5925	:	_	_	
9-833	5927-5928	`	_	_	
9-834	5928-5929	`	_	_	
9-835	5929-5930	`	_	_	
9-836	5930-5935	shell	_	_	
9-837	5936-5942	python	_	_	
9-838	5943-5950	test.py	_	_	
9-839	5951-5952	-	_	_	
9-840	5952-5953	-	_	_	
9-841	5953-5962	test_data	_	_	
9-842	5963-5967	data	_	_	
9-843	5967-5968	/	_	_	
9-844	5968-5976	data_csv	_	_	
9-845	5976-5977	/	_	_	
9-846	5977-5988	testDataSet	_	_	
9-847	5988-5989	/	_	_	
9-848	5989-6006	testData_test.csv	_	_	
9-849	6007-6008	-	_	_	
9-850	6008-6009	-	_	_	
9-851	6009-6014	model	_	_	
9-852	6015-6020	model	_	_	
9-853	6020-6021	/	_	_	
9-854	6021-6025	Code	_	_	
9-855	6025-6026	/	_	_	
9-856	6026-6034	Code.pkl	_	_	
9-857	6035-6036	`	_	_	
9-858	6036-6037	`	_	_	
9-859	6037-6038	`	_	_	
9-860	6040-6041	#	_	_	
9-861	6041-6042	#	_	_	
9-862	6042-6043	#	_	_	
9-863	6044-6052	Generate	_	_	
9-864	6053-6061	saliency	_	_	
9-865	6062-6065	map	_	_	
9-866	6067-6068	`	_	_	
9-867	6068-6069	`	_	_	
9-868	6069-6070	`	_	_	
9-869	6070-6075	shell	_	_	
9-870	6076-6082	python	_	_	
9-871	6083-6097	saliencymap.py	_	_	
9-872	6098-6099	-	_	_	
9-873	6099-6100	-	_	_	
9-874	6100-6109	test_data	_	_	
9-875	6110-6124	test_data_path	_	_	
9-876	6125-6126	-	_	_	
9-877	6126-6127	-	_	_	
9-878	6127-6132	model	_	_	
9-879	6133-6143	model_path	_	_	
9-880	6144-6145	`	_	_	
9-881	6145-6146	`	_	_	
9-882	6146-6147	`	_	_	
9-883	6149-6156	Example	_	_	
9-884	6156-6157	:	_	_	
9-885	6159-6160	`	_	_	
9-886	6160-6161	`	_	_	
9-887	6161-6162	`	_	_	
9-888	6162-6167	shell	_	_	
9-889	6168-6174	python	_	_	
9-890	6175-6189	saliencymap.py	_	_	
9-891	6190-6191	-	_	_	
9-892	6191-6192	-	_	_	
9-893	6192-6201	test_data	_	_	
9-894	6202-6206	data	_	_	
9-895	6206-6207	/	_	_	
9-896	6207-6215	data_csv	_	_	
9-897	6215-6216	/	_	_	
9-898	6216-6227	testDataSet	_	_	
9-899	6227-6228	/	_	_	
9-900	6228-6245	testData_test.csv	_	_	
9-901	6246-6247	-	_	_	
9-902	6247-6248	-	_	_	
9-903	6248-6253	model	_	_	
9-904	6254-6259	model	_	_	
9-905	6259-6260	/	_	_	
9-906	6260-6264	Code	_	_	
9-907	6264-6265	/	_	_	
9-908	6265-6273	Code.pkl	_	_	
9-909	6274-6275	`	_	_	
9-910	6275-6276	`	_	_	
9-911	6276-6277	`	_	_	
9-912	6281-6282	#	_	_	
9-913	6282-6283	#	_	_	
9-914	6284-6297	Configuration	_	_	
9-915	6299-6307	Changing	_	_	
9-916	6308-6324	hyper-parameters	_	_	
9-917	6325-6327	is	_	_	
9-918	6328-6336	possible	_	_	
9-919	6337-6339	by	_	_	
9-920	6340-6347	editing	_	_	
9-921	6348-6351	the	_	_	
9-922	6352-6356	file	_	_	
9-923	6357-6358	[	_	_	
9-924	6358-6367	config.py	_	_	
9-925	6367-6368	]	_	_	
9-926	6368-6369	(	_	_	
9-927	6369-6374	https	_	_	
9-928	6374-6375	:	_	_	
9-929	6375-6376	/	_	_	
9-930	6376-6377	/	_	_	
9-931	6377-6387	github.com	_	_	
9-932	6387-6388	/	_	_	
9-933	6388-6397	GLIB-game	_	_	
9-934	6397-6398	/	_	_	
9-935	6398-6402	GLIB	_	_	
9-936	6402-6403	/	_	_	
9-937	6403-6407	blob	_	_	
9-938	6407-6408	/	_	_	
9-939	6408-6412	main	_	_	
9-940	6412-6413	/	_	_	
9-941	6413-6422	config.py	_	_	
9-942	6422-6423	)	_	_	
9-943	6425-6426	#	_	_	
9-944	6426-6427	#	_	_	
9-945	6427-6428	#	_	_	
9-946	6428-6429	#	_	_	
9-947	6430-6442	config.EPOCH	_	_	
9-948	6442-6443	:	_	_	
9-949	6445-6448	The	_	_	
9-950	6449-6452	max	_	_	
9-951	6453-6459	number	_	_	
9-952	6460-6462	of	_	_	
9-953	6463-6469	epochs	_	_	
9-954	6470-6472	to	_	_	
9-955	6473-6478	train	_	_	
9-956	6479-6482	the	_	_	
9-957	6483-6488	model	_	_	
9-958	6488-6489	.	_	_	

#Text=Stopping earlier must be done manually (kill).
#Text=
#Text=#### config.TRAIN_BATCH_SIZE:
#Text=
#Text=Batch size in training.
#Text=
#Text=#### config.SAVE_STEP:
#Text=
#Text=After how many training steps a model should be saved.
#Text=
#Text=#### config.EVAL_STEP:
#Text=
#Text=After how many training steps the model test its performance on evaluation dataset.
#Text=
#Text=#### config.LR:
#Text=
#Text=The learning rate in training.
#Text=
#Text=#### config.EVAL_BATCH_SIZE
#Text=
#Text=Batch size in evaluation step.
#Text=
#Text=#### config.TEST_BATCH_SIZE
#Text=
#Text=Batch size in test step.
#Text=
#Text=
#Text=
#Text=## Supplementary explanation
#Text=
#Text=#### The correlation between our self-defined code & rule approaches and corresponding UI glitches:
#Text=!
10-1	6490-6498	Stopping	_	_	
10-2	6499-6506	earlier	_	_	
10-3	6507-6511	must	_	_	
10-4	6512-6514	be	_	_	
10-5	6515-6519	done	_	_	
10-6	6520-6528	manually	_	_	
10-7	6529-6530	(	_	_	
10-8	6530-6534	kill	_	_	
10-9	6534-6535	)	_	_	
10-10	6535-6536	.	_	_	
10-11	6538-6539	#	_	_	
10-12	6539-6540	#	_	_	
10-13	6540-6541	#	_	_	
10-14	6541-6542	#	_	_	
10-15	6543-6566	config.TRAIN_BATCH_SIZE	_	_	
10-16	6566-6567	:	_	_	
10-17	6569-6574	Batch	_	_	
10-18	6575-6579	size	_	_	
10-19	6580-6582	in	_	_	
10-20	6583-6591	training	_	_	
10-21	6591-6592	.	_	_	
10-22	6594-6595	#	_	_	
10-23	6595-6596	#	_	_	
10-24	6596-6597	#	_	_	
10-25	6597-6598	#	_	_	
10-26	6599-6615	config.SAVE_STEP	_	_	
10-27	6615-6616	:	_	_	
10-28	6618-6623	After	_	_	
10-29	6624-6627	how	_	_	
10-30	6628-6632	many	_	_	
10-31	6633-6641	training	_	_	
10-32	6642-6647	steps	_	_	
10-33	6648-6649	a	_	_	
10-34	6650-6655	model	_	_	
10-35	6656-6662	should	_	_	
10-36	6663-6665	be	_	_	
10-37	6666-6671	saved	_	_	
10-38	6671-6672	.	_	_	
10-39	6674-6675	#	_	_	
10-40	6675-6676	#	_	_	
10-41	6676-6677	#	_	_	
10-42	6677-6678	#	_	_	
10-43	6679-6695	config.EVAL_STEP	_	_	
10-44	6695-6696	:	_	_	
10-45	6698-6703	After	_	_	
10-46	6704-6707	how	_	_	
10-47	6708-6712	many	_	_	
10-48	6713-6721	training	_	_	
10-49	6722-6727	steps	_	_	
10-50	6728-6731	the	_	_	
10-51	6732-6737	model	_	_	
10-52	6738-6742	test	_	_	
10-53	6743-6746	its	_	_	
10-54	6747-6758	performance	_	_	
10-55	6759-6761	on	_	_	
10-56	6762-6772	evaluation	_	_	
10-57	6773-6780	dataset	_	_	
10-58	6780-6781	.	_	_	
10-59	6783-6784	#	_	_	
10-60	6784-6785	#	_	_	
10-61	6785-6786	#	_	_	
10-62	6786-6787	#	_	_	
10-63	6788-6797	config.LR	_	_	
10-64	6797-6798	:	_	_	
10-65	6800-6803	The	_	_	
10-66	6804-6812	learning	_	_	
10-67	6813-6817	rate	_	_	
10-68	6818-6820	in	_	_	
10-69	6821-6829	training	_	_	
10-70	6829-6830	.	_	_	
10-71	6832-6833	#	_	_	
10-72	6833-6834	#	_	_	
10-73	6834-6835	#	_	_	
10-74	6835-6836	#	_	_	
10-75	6837-6859	config.EVAL_BATCH_SIZE	_	_	
10-76	6861-6866	Batch	_	_	
10-77	6867-6871	size	_	_	
10-78	6872-6874	in	_	_	
10-79	6875-6885	evaluation	_	_	
10-80	6886-6890	step	_	_	
10-81	6890-6891	.	_	_	
10-82	6893-6894	#	_	_	
10-83	6894-6895	#	_	_	
10-84	6895-6896	#	_	_	
10-85	6896-6897	#	_	_	
10-86	6898-6920	config.TEST_BATCH_SIZE	_	_	
10-87	6922-6927	Batch	_	_	
10-88	6928-6932	size	_	_	
10-89	6933-6935	in	_	_	
10-90	6936-6940	test	_	_	
10-91	6941-6945	step	_	_	
10-92	6945-6946	.	_	_	
10-93	6950-6951	#	_	_	
10-94	6951-6952	#	_	_	
10-95	6953-6966	Supplementary	_	_	
10-96	6967-6978	explanation	_	_	
10-97	6980-6981	#	_	_	
10-98	6981-6982	#	_	_	
10-99	6982-6983	#	_	_	
10-100	6983-6984	#	_	_	
10-101	6985-6988	The	_	_	
10-102	6989-7000	correlation	_	_	
10-103	7001-7008	between	_	_	
10-104	7009-7012	our	_	_	
10-105	7013-7025	self-defined	_	_	
10-106	7026-7030	code	_	_	
10-107	7031-7032	&	_	_	
10-108	7033-7037	rule	_	_	
10-109	7038-7048	approaches	_	_	
10-110	7049-7052	and	_	_	
10-111	7053-7066	corresponding	_	_	
10-112	7067-7069	UI	_	_	
10-113	7070-7078	glitches	_	_	
10-114	7078-7079	:	_	_	
10-115	7080-7081	!	_	_	

#Text=[Image](Method_2_UIglitch.png)
#Text=
#Text=#### Reult for Practical Evaluation (RQ4)
#Text=
#Text=|         |       Code        |      Rule(R)      |      Rule(F)      |
#Text=| :-----: | :---------------: | :---------------: | :---------------: |
#Text=|   PC    |         7         |         3         |         1         |
#Text=| Android |        35         |        22         |        15         |
#Text=|   iOS   |        11         |         6         |         5         |
#Text=|  total  | 53 (48 confirmed) | 31 (28 confirmed) | 21 (17 confirmed) |
#Text=
#Text=#### AutoTest FrameWork
#Text=
#Text=!
11-1	7081-7082	[	_	_	
11-2	7082-7087	Image	_	_	
11-3	7087-7088	]	_	_	
11-4	7088-7089	(	_	_	
11-5	7089-7095	Method	_	_	
11-6	7095-7096	_	_	_	
11-7	7096-7097	2	_	_	
11-8	7097-7098	_	_	_	
11-9	7098-7110	UIglitch.png	_	_	
11-10	7110-7111	)	_	_	
11-11	7113-7114	#	_	_	
11-12	7114-7115	#	_	_	
11-13	7115-7116	#	_	_	
11-14	7116-7117	#	_	_	
11-15	7118-7123	Reult	_	_	
11-16	7124-7127	for	_	_	
11-17	7128-7137	Practical	_	_	
11-18	7138-7148	Evaluation	_	_	
11-19	7149-7150	(	_	_	
11-20	7150-7153	RQ4	_	_	
11-21	7153-7154	)	_	_	
11-22	7156-7157	|	_	_	
11-23	7166-7167	|	_	_	
11-24	7174-7178	Code	_	_	
11-25	7186-7187	|	_	_	
11-26	7193-7197	Rule	_	_	
11-27	7197-7198	(	_	_	
11-28	7198-7199	R	_	_	
11-29	7199-7200	)	_	_	
11-30	7206-7207	|	_	_	
11-31	7213-7217	Rule	_	_	
11-32	7217-7218	(	_	_	
11-33	7218-7219	F	_	_	
11-34	7219-7220	)	_	_	
11-35	7226-7227	|	_	_	
11-36	7228-7229	|	_	_	
11-37	7230-7231	:	_	_	
11-38	7231-7232	-	_	_	
11-39	7232-7233	-	_	_	
11-40	7233-7234	-	_	_	
11-41	7234-7235	-	_	_	
11-42	7235-7236	-	_	_	
11-43	7236-7237	:	_	_	
11-44	7238-7239	|	_	_	
11-45	7240-7241	:	_	_	
11-46	7241-7242	-	_	_	
11-47	7242-7243	-	_	_	
11-48	7243-7244	-	_	_	
11-49	7244-7245	-	_	_	
11-50	7245-7246	-	_	_	
11-51	7246-7247	-	_	_	
11-52	7247-7248	-	_	_	
11-53	7248-7249	-	_	_	
11-54	7249-7250	-	_	_	
11-55	7250-7251	-	_	_	
11-56	7251-7252	-	_	_	
11-57	7252-7253	-	_	_	
11-58	7253-7254	-	_	_	
11-59	7254-7255	-	_	_	
11-60	7255-7256	-	_	_	
11-61	7256-7257	:	_	_	
11-62	7258-7259	|	_	_	
11-63	7260-7261	:	_	_	
11-64	7261-7262	-	_	_	
11-65	7262-7263	-	_	_	
11-66	7263-7264	-	_	_	
11-67	7264-7265	-	_	_	
11-68	7265-7266	-	_	_	
11-69	7266-7267	-	_	_	
11-70	7267-7268	-	_	_	
11-71	7268-7269	-	_	_	
11-72	7269-7270	-	_	_	
11-73	7270-7271	-	_	_	
11-74	7271-7272	-	_	_	
11-75	7272-7273	-	_	_	
11-76	7273-7274	-	_	_	
11-77	7274-7275	-	_	_	
11-78	7275-7276	-	_	_	
11-79	7276-7277	:	_	_	
11-80	7278-7279	|	_	_	
11-81	7280-7281	:	_	_	
11-82	7281-7282	-	_	_	
11-83	7282-7283	-	_	_	
11-84	7283-7284	-	_	_	
11-85	7284-7285	-	_	_	
11-86	7285-7286	-	_	_	
11-87	7286-7287	-	_	_	
11-88	7287-7288	-	_	_	
11-89	7288-7289	-	_	_	
11-90	7289-7290	-	_	_	
11-91	7290-7291	-	_	_	
11-92	7291-7292	-	_	_	
11-93	7292-7293	-	_	_	
11-94	7293-7294	-	_	_	
11-95	7294-7295	-	_	_	
11-96	7295-7296	-	_	_	
11-97	7296-7297	:	_	_	
11-98	7298-7299	|	_	_	
11-99	7300-7301	|	_	_	
11-100	7304-7306	PC	_	_	
11-101	7310-7311	|	_	_	
11-102	7320-7321	7	_	_	
11-103	7330-7331	|	_	_	
11-104	7340-7341	3	_	_	
11-105	7350-7351	|	_	_	
11-106	7360-7361	1	_	_	
11-107	7370-7371	|	_	_	
11-108	7372-7373	|	_	_	
11-109	7374-7381	Android	_	_	
11-110	7382-7383	|	_	_	
11-111	7391-7393	35	_	_	
11-112	7402-7403	|	_	_	
11-113	7411-7413	22	_	_	
11-114	7422-7423	|	_	_	
11-115	7431-7433	15	_	_	
11-116	7442-7443	|	_	_	
11-117	7444-7445	|	_	_	
11-118	7448-7451	iOS	_	_	
11-119	7454-7455	|	_	_	
11-120	7463-7465	11	_	_	
11-121	7474-7475	|	_	_	
11-122	7484-7485	6	_	_	
11-123	7494-7495	|	_	_	
11-124	7504-7505	5	_	_	
11-125	7514-7515	|	_	_	
11-126	7516-7517	|	_	_	
11-127	7519-7524	total	_	_	
11-128	7526-7527	|	_	_	
11-129	7528-7530	53	_	_	
11-130	7531-7532	(	_	_	
11-131	7532-7534	48	_	_	
11-132	7535-7544	confirmed	_	_	
11-133	7544-7545	)	_	_	
11-134	7546-7547	|	_	_	
11-135	7548-7550	31	_	_	
11-136	7551-7552	(	_	_	
11-137	7552-7554	28	_	_	
11-138	7555-7564	confirmed	_	_	
11-139	7564-7565	)	_	_	
11-140	7566-7567	|	_	_	
11-141	7568-7570	21	_	_	
11-142	7571-7572	(	_	_	
11-143	7572-7574	17	_	_	
11-144	7575-7584	confirmed	_	_	
11-145	7584-7585	)	_	_	
11-146	7586-7587	|	_	_	
11-147	7589-7590	#	_	_	
11-148	7590-7591	#	_	_	
11-149	7591-7592	#	_	_	
11-150	7592-7593	#	_	_	
11-151	7594-7602	AutoTest	_	_	
11-152	7603-7612	FrameWork	_	_	
11-153	7614-7615	!	_	_	

#Text=[Image](AutoTestFramework.png)
12-1	7615-7616	[	_	_	
12-2	7616-7621	Image	_	_	
12-3	7621-7622	]	_	_	
12-4	7622-7623	(	_	_	
12-5	7623-7644	AutoTestFramework.png	_	_	
12-6	7644-7645	)	_	_	
