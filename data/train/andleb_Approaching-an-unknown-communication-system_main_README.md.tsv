#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Approaching an unknown communication system by latent space exploration and causal inference
#Text=
#Text=[This repository](https://github.com/andleb/Approaching-an-unknown-communication-system) serves as the supplement of [the paper (preprint)](https://arxiv.org/abs/2303.10931), which uses generative models to help determine the meaningful building blocks of sperm whale communication.
1-1	0-1	#	_	_	
1-2	2-13	Approaching	*[1]	PUBLICATION[1]	
1-3	14-16	an	*[1]	PUBLICATION[1]	
1-4	17-24	unknown	*[1]	PUBLICATION[1]	
1-5	25-38	communication	*[1]	PUBLICATION[1]	
1-6	39-45	system	*[1]	PUBLICATION[1]	
1-7	46-48	by	*[1]	PUBLICATION[1]	
1-8	49-55	latent	*[1]	PUBLICATION[1]	
1-9	56-61	space	*[1]	PUBLICATION[1]	
1-10	62-73	exploration	*[1]	PUBLICATION[1]	
1-11	74-77	and	*[1]	PUBLICATION[1]	
1-12	78-84	causal	*[1]	PUBLICATION[1]	
1-13	85-94	inference	*[1]	PUBLICATION[1]	
1-14	96-97	[	_	_	
1-15	97-101	This	_	_	
1-16	102-112	repository	_	_	
1-17	112-113	]	_	_	
1-18	113-114	(	_	_	
1-19	114-119	https	_	_	
1-20	119-120	:	_	_	
1-21	120-121	/	_	_	
1-22	121-122	/	_	_	
1-23	122-132	github.com	_	_	
1-24	132-133	/	_	_	
1-25	133-139	andleb	_	_	
1-26	139-140	/	_	_	
1-27	140-183	Approaching-an-unknown-communication-system	_	_	
1-28	183-184	)	_	_	
1-29	185-191	serves	_	_	
1-30	192-194	as	_	_	
1-31	195-198	the	_	_	
1-32	199-209	supplement	_	_	
1-33	210-212	of	_	_	
1-34	213-214	[	_	_	
1-35	214-217	the	_	_	
1-36	218-223	paper	_	_	
1-37	224-225	(	_	_	
1-38	225-233	preprint	_	_	
1-39	233-234	)	_	_	
1-40	234-235	]	_	_	
1-41	235-236	(	_	_	
1-42	236-241	https	_	_	
1-43	241-242	:	_	_	
1-44	242-243	/	_	_	
1-45	243-244	/	_	_	
1-46	244-253	arxiv.org	_	_	
1-47	253-254	/	_	_	
1-48	254-257	abs	_	_	
1-49	257-258	/	_	_	
1-50	258-268	2303.10931	_	_	
1-51	268-269	)	_	_	
1-52	269-270	,	_	_	
1-53	271-276	which	_	_	
1-54	277-281	uses	_	_	
1-55	282-292	generative	_	_	
1-56	293-299	models	_	_	
1-57	300-302	to	_	_	
1-58	303-307	help	_	_	
1-59	308-317	determine	_	_	
1-60	318-321	the	_	_	
1-61	322-332	meaningful	_	_	
1-62	333-341	building	_	_	
1-63	342-348	blocks	_	_	
1-64	349-351	of	_	_	
1-65	352-357	sperm	_	_	
1-66	358-363	whale	_	_	
1-67	364-377	communication	_	_	
1-68	377-378	.	_	_	

#Text=<img src="figs/SchematicCDEV.png" width=50% height=50%>
#Text=
#Text=**Abstract:**
#Text=> <p align="justify"> <i> This paper proposes a methodology for discovering meaningful properties in data by exploring the latent space of unsupervised deep generative models.
2-1	380-381	<	_	_	
2-2	381-384	img	_	_	
2-3	385-388	src	_	_	
2-4	388-389	=	_	_	
2-5	389-390	"	_	_	
2-6	390-394	figs	_	_	
2-7	394-395	/	_	_	
2-8	395-412	SchematicCDEV.png	_	_	
2-9	412-413	"	_	_	
2-10	414-419	width	_	_	
2-11	419-420	=	_	_	
2-12	420-423	50%	_	_	
2-13	424-430	height	_	_	
2-14	430-431	=	_	_	
2-15	431-434	50%	_	_	
2-16	434-435	>	_	_	
2-17	437-438	*	_	_	
2-18	438-439	*	_	_	
2-19	439-447	Abstract	_	_	
2-20	447-448	:	_	_	
2-21	448-449	*	_	_	
2-22	449-450	*	_	_	
2-23	451-452	>	_	_	
2-24	453-454	<	_	_	
2-25	454-455	p	_	_	
2-26	456-461	align	_	_	
2-27	461-462	=	_	_	
2-28	462-463	"	_	_	
2-29	463-470	justify	_	_	
2-30	470-471	"	_	_	
2-31	471-472	>	_	_	
2-32	473-474	<	_	_	
2-33	474-475	i	_	_	
2-34	475-476	>	_	_	
2-35	477-481	This	_	_	
2-36	482-487	paper	_	_	
2-37	488-496	proposes	_	_	
2-38	497-498	a	_	_	
2-39	499-510	methodology	_	_	
2-40	511-514	for	_	_	
2-41	515-526	discovering	_	_	
2-42	527-537	meaningful	_	_	
2-43	538-548	properties	_	_	
2-44	549-551	in	_	_	
2-45	552-556	data	_	_	
2-46	557-559	by	_	_	
2-47	560-569	exploring	_	_	
2-48	570-573	the	_	_	
2-49	574-580	latent	_	_	
2-50	581-586	space	_	_	
2-51	587-589	of	_	_	
2-52	590-602	unsupervised	_	_	
2-53	603-607	deep	_	_	
2-54	608-618	generative	_	_	
2-55	619-625	models	_	_	
2-56	625-626	.	_	_	

#Text=We combine manipulation of individual latent variables to extreme values with methods inspired by causal inference into an approach we call causal disentanglement with extreme values (CDEV) and show that this method yields insights for model interpretability.
3-1	627-629	We	_	_	
3-2	630-637	combine	_	_	
3-3	638-650	manipulation	_	_	
3-4	651-653	of	_	_	
3-5	654-664	individual	_	_	
3-6	665-671	latent	_	_	
3-7	672-681	variables	_	_	
3-8	682-684	to	_	_	
3-9	685-692	extreme	_	_	
3-10	693-699	values	_	_	
3-11	700-704	with	_	_	
3-12	705-712	methods	_	_	
3-13	713-721	inspired	_	_	
3-14	722-724	by	_	_	
3-15	725-731	causal	_	_	
3-16	732-741	inference	_	_	
3-17	742-746	into	_	_	
3-18	747-749	an	_	_	
3-19	750-758	approach	_	_	
3-20	759-761	we	_	_	
3-21	762-766	call	_	_	
3-22	767-773	causal	_	_	
3-23	774-789	disentanglement	_	_	
3-24	790-794	with	_	_	
3-25	795-802	extreme	_	_	
3-26	803-809	values	_	_	
3-27	810-811	(	_	_	
3-28	811-815	CDEV	_	_	
3-29	815-816	)	_	_	
3-30	817-820	and	_	_	
3-31	821-825	show	_	_	
3-32	826-830	that	_	_	
3-33	831-835	this	_	_	
3-34	836-842	method	_	_	
3-35	843-849	yields	_	_	
3-36	850-858	insights	_	_	
3-37	859-862	for	_	_	
3-38	863-868	model	_	_	
3-39	869-885	interpretability	_	_	
3-40	885-886	.	_	_	

#Text=With this, we can infer what properties of unknown data the model encodes as meaningful, using it to glean insight into the communication system of sperm whales (Physeter macrocephalus), one of the most intriguing and understudied animal communication systems.
4-1	887-891	With	_	_	
4-2	892-896	this	_	_	
4-3	896-897	,	_	_	
4-4	898-900	we	_	_	
4-5	901-904	can	_	_	
4-6	905-910	infer	_	_	
4-7	911-915	what	_	_	
4-8	916-926	properties	_	_	
4-9	927-929	of	_	_	
4-10	930-937	unknown	_	_	
4-11	938-942	data	_	_	
4-12	943-946	the	_	_	
4-13	947-952	model	_	_	
4-14	953-960	encodes	_	_	
4-15	961-963	as	_	_	
4-16	964-974	meaningful	_	_	
4-17	974-975	,	_	_	
4-18	976-981	using	_	_	
4-19	982-984	it	_	_	
4-20	985-987	to	_	_	
4-21	988-993	glean	_	_	
4-22	994-1001	insight	_	_	
4-23	1002-1006	into	_	_	
4-24	1007-1010	the	_	_	
4-25	1011-1024	communication	_	_	
4-26	1025-1031	system	_	_	
4-27	1032-1034	of	_	_	
4-28	1035-1040	sperm	_	_	
4-29	1041-1047	whales	_	_	
4-30	1048-1049	(	_	_	
4-31	1049-1057	Physeter	_	_	
4-32	1058-1071	macrocephalus	_	_	
4-33	1071-1072	)	_	_	
4-34	1072-1073	,	_	_	
4-35	1074-1077	one	_	_	
4-36	1078-1080	of	_	_	
4-37	1081-1084	the	_	_	
4-38	1085-1089	most	_	_	
4-39	1090-1100	intriguing	_	_	
4-40	1101-1104	and	_	_	
4-41	1105-1117	understudied	_	_	
4-42	1118-1124	animal	_	_	
4-43	1125-1138	communication	_	_	
4-44	1139-1146	systems	_	_	
4-45	1146-1147	.	_	_	

#Text=The network architecture used has been shown to learn meaningful representations of speech; here, it is used as a learning mechanism to decipher the properties of another vocal communication system in which case we have no ground truth.
5-1	1148-1151	The	_	_	
5-2	1152-1159	network	_	_	
5-3	1160-1172	architecture	_	_	
5-4	1173-1177	used	_	_	
5-5	1178-1181	has	_	_	
5-6	1182-1186	been	_	_	
5-7	1187-1192	shown	_	_	
5-8	1193-1195	to	_	_	
5-9	1196-1201	learn	_	_	
5-10	1202-1212	meaningful	_	_	
5-11	1213-1228	representations	_	_	
5-12	1229-1231	of	_	_	
5-13	1232-1238	speech	_	_	
5-14	1238-1239	;	_	_	
5-15	1240-1244	here	_	_	
5-16	1244-1245	,	_	_	
5-17	1246-1248	it	_	_	
5-18	1249-1251	is	_	_	
5-19	1252-1256	used	_	_	
5-20	1257-1259	as	_	_	
5-21	1260-1261	a	_	_	
5-22	1262-1270	learning	_	_	
5-23	1271-1280	mechanism	_	_	
5-24	1281-1283	to	_	_	
5-25	1284-1292	decipher	_	_	
5-26	1293-1296	the	_	_	
5-27	1297-1307	properties	_	_	
5-28	1308-1310	of	_	_	
5-29	1311-1318	another	_	_	
5-30	1319-1324	vocal	_	_	
5-31	1325-1338	communication	_	_	
5-32	1339-1345	system	_	_	
5-33	1346-1348	in	_	_	
5-34	1349-1354	which	_	_	
5-35	1355-1359	case	_	_	
5-36	1360-1362	we	_	_	
5-37	1363-1367	have	_	_	
5-38	1368-1370	no	_	_	
5-39	1371-1377	ground	_	_	
5-40	1378-1383	truth	_	_	
5-41	1383-1384	.	_	_	

#Text=The proposed methodology suggests that sperm whales encode information using the number of clicks in a sequence, the regularity of their timing, and audio properties such as the spectral mean and the acoustic regularity of the sequences.
6-1	1385-1388	The	_	_	
6-2	1389-1397	proposed	_	_	
6-3	1398-1409	methodology	_	_	
6-4	1410-1418	suggests	_	_	
6-5	1419-1423	that	_	_	
6-6	1424-1429	sperm	_	_	
6-7	1430-1436	whales	_	_	
6-8	1437-1443	encode	_	_	
6-9	1444-1455	information	_	_	
6-10	1456-1461	using	_	_	
6-11	1462-1465	the	_	_	
6-12	1466-1472	number	_	_	
6-13	1473-1475	of	_	_	
6-14	1476-1482	clicks	_	_	
6-15	1483-1485	in	_	_	
6-16	1486-1487	a	_	_	
6-17	1488-1496	sequence	_	_	
6-18	1496-1497	,	_	_	
6-19	1498-1501	the	_	_	
6-20	1502-1512	regularity	_	_	
6-21	1513-1515	of	_	_	
6-22	1516-1521	their	_	_	
6-23	1522-1528	timing	_	_	
6-24	1528-1529	,	_	_	
6-25	1530-1533	and	_	_	
6-26	1534-1539	audio	_	_	
6-27	1540-1550	properties	_	_	
6-28	1551-1555	such	_	_	
6-29	1556-1558	as	_	_	
6-30	1559-1562	the	_	_	
6-31	1563-1571	spectral	_	_	
6-32	1572-1576	mean	_	_	
6-33	1577-1580	and	_	_	
6-34	1581-1584	the	_	_	
6-35	1585-1593	acoustic	_	_	
6-36	1594-1604	regularity	_	_	
6-37	1605-1607	of	_	_	
6-38	1608-1611	the	_	_	
6-39	1612-1621	sequences	_	_	
6-40	1621-1622	.	_	_	

#Text=Some of these findings are consistent with existing hypotheses, while others are proposed for the first time.
7-1	1623-1627	Some	_	_	
7-2	1628-1630	of	_	_	
7-3	1631-1636	these	_	_	
7-4	1637-1645	findings	_	_	
7-5	1646-1649	are	_	_	
7-6	1650-1660	consistent	_	_	
7-7	1661-1665	with	_	_	
7-8	1666-1674	existing	_	_	
7-9	1675-1685	hypotheses	_	_	
7-10	1685-1686	,	_	_	
7-11	1687-1692	while	_	_	
7-12	1693-1699	others	_	_	
7-13	1700-1703	are	_	_	
7-14	1704-1712	proposed	_	_	
7-15	1713-1716	for	_	_	
7-16	1717-1720	the	_	_	
7-17	1721-1726	first	_	_	
7-18	1727-1731	time	_	_	
7-19	1731-1732	.	_	_	

#Text=We also argue that our models uncover rules that govern the structure of  units in the communication system and apply them while generating innovative data not shown during training.
8-1	1733-1735	We	_	_	
8-2	1736-1740	also	_	_	
8-3	1741-1746	argue	_	_	
8-4	1747-1751	that	_	_	
8-5	1752-1755	our	_	_	
8-6	1756-1762	models	_	_	
8-7	1763-1770	uncover	_	_	
8-8	1771-1776	rules	_	_	
8-9	1777-1781	that	_	_	
8-10	1782-1788	govern	_	_	
8-11	1789-1792	the	_	_	
8-12	1793-1802	structure	_	_	
8-13	1803-1805	of	_	_	
8-14	1807-1812	units	_	_	
8-15	1813-1815	in	_	_	
8-16	1816-1819	the	_	_	
8-17	1820-1833	communication	_	_	
8-18	1834-1840	system	_	_	
8-19	1841-1844	and	_	_	
8-20	1845-1850	apply	_	_	
8-21	1851-1855	them	_	_	
8-22	1856-1861	while	_	_	
8-23	1862-1872	generating	_	_	
8-24	1873-1883	innovative	_	_	
8-25	1884-1888	data	_	_	
8-26	1889-1892	not	_	_	
8-27	1893-1898	shown	_	_	
8-28	1899-1905	during	_	_	
8-29	1906-1914	training	_	_	
8-30	1914-1915	.	_	_	

#Text=This paper suggests that an interpretation of the outputs of deep neural networks with causal inference methodology can be a viable strategy for approaching data about which little is known and presents another case of how deep learning can limit the hypothesis space.
9-1	1916-1920	This	_	_	
9-2	1921-1926	paper	_	_	
9-3	1927-1935	suggests	_	_	
9-4	1936-1940	that	_	_	
9-5	1941-1943	an	_	_	
9-6	1944-1958	interpretation	_	_	
9-7	1959-1961	of	_	_	
9-8	1962-1965	the	_	_	
9-9	1966-1973	outputs	_	_	
9-10	1974-1976	of	_	_	
9-11	1977-1981	deep	_	_	
9-12	1982-1988	neural	_	_	
9-13	1989-1997	networks	_	_	
9-14	1998-2002	with	_	_	
9-15	2003-2009	causal	_	_	
9-16	2010-2019	inference	_	_	
9-17	2020-2031	methodology	_	_	
9-18	2032-2035	can	_	_	
9-19	2036-2038	be	_	_	
9-20	2039-2040	a	_	_	
9-21	2041-2047	viable	_	_	
9-22	2048-2056	strategy	_	_	
9-23	2057-2060	for	_	_	
9-24	2061-2072	approaching	_	_	
9-25	2073-2077	data	_	_	
9-26	2078-2083	about	_	_	
9-27	2084-2089	which	_	_	
9-28	2090-2096	little	_	_	
9-29	2097-2099	is	_	_	
9-30	2100-2105	known	_	_	
9-31	2106-2109	and	_	_	
9-32	2110-2118	presents	_	_	
9-33	2119-2126	another	_	_	
9-34	2127-2131	case	_	_	
9-35	2132-2134	of	_	_	
9-36	2135-2138	how	_	_	
9-37	2139-2143	deep	_	_	
9-38	2144-2152	learning	_	_	
9-39	2153-2156	can	_	_	
9-40	2157-2162	limit	_	_	
9-41	2163-2166	the	_	_	
9-42	2167-2177	hypothesis	_	_	
9-43	2178-2183	space	_	_	
9-44	2183-2184	.	_	_	

#Text=Finally, the proposed approach can be extended to arbitrary architectures and datasets.
10-1	2185-2192	Finally	_	_	
10-2	2192-2193	,	_	_	
10-3	2194-2197	the	_	_	
10-4	2198-2206	proposed	_	_	
10-5	2207-2215	approach	_	_	
10-6	2216-2219	can	_	_	
10-7	2220-2222	be	_	_	
10-8	2223-2231	extended	_	_	
10-9	2232-2234	to	_	_	
10-10	2235-2244	arbitrary	_	_	
10-11	2245-2258	architectures	_	_	
10-12	2259-2262	and	_	_	
10-13	2263-2271	datasets	_	_	
10-14	2271-2272	.	_	_	

#Text=</i></p>
#Text=
#Text=
#Text=
#Text=## Requirements
#Text=
#Text=To install requirements for the model and the analysis, run:
#Text=
#Text=```shell
#Text=pip install -r requirements.txt
#Text=```
#Text=
#Text=
#Text=## The `fiwGAN` model
#Text=
#Text=The `fiwGAN` architecture implementation in `pytorch` is located in [ciwfiwgan](ciwfiwgan) ([original fork repository](https://github.com/andleb/ciwganfiwgan-pytorch)).
11-1	2272-2273	<	_	_	
11-2	2273-2274	/	_	_	
11-3	2274-2275	i	_	_	
11-4	2275-2276	>	_	_	
11-5	2276-2277	<	_	_	
11-6	2277-2278	/	_	_	
11-7	2278-2279	p	_	_	
11-8	2279-2280	>	_	_	
11-9	2284-2285	#	_	_	
11-10	2285-2286	#	_	_	
11-11	2287-2299	Requirements	_	_	
11-12	2301-2303	To	_	_	
11-13	2304-2311	install	_	_	
11-14	2312-2324	requirements	_	_	
11-15	2325-2328	for	_	_	
11-16	2329-2332	the	_	_	
11-17	2333-2338	model	_	_	
11-18	2339-2342	and	_	_	
11-19	2343-2346	the	_	_	
11-20	2347-2355	analysis	_	_	
11-21	2355-2356	,	_	_	
11-22	2357-2360	run	_	_	
11-23	2360-2361	:	_	_	
11-24	2363-2364	`	_	_	
11-25	2364-2365	`	_	_	
11-26	2365-2366	`	_	_	
11-27	2366-2371	shell	_	_	
11-28	2372-2375	pip	_	_	
11-29	2376-2383	install	_	_	
11-30	2384-2385	-	_	_	
11-31	2385-2386	r	_	_	
11-32	2387-2403	requirements.txt	_	_	
11-33	2404-2405	`	_	_	
11-34	2405-2406	`	_	_	
11-35	2406-2407	`	_	_	
11-36	2410-2411	#	_	_	
11-37	2411-2412	#	_	_	
11-38	2413-2416	The	_	_	
11-39	2417-2418	`	_	_	
11-40	2418-2424	fiwGAN	_	_	
11-41	2424-2425	`	_	_	
11-42	2426-2431	model	_	_	
11-43	2433-2436	The	_	_	
11-44	2437-2438	`	_	_	
11-45	2438-2444	fiwGAN	_	_	
11-46	2444-2445	`	_	_	
11-47	2446-2458	architecture	_	_	
11-48	2459-2473	implementation	_	_	
11-49	2474-2476	in	_	_	
11-50	2477-2478	`	_	_	
11-51	2478-2485	pytorch	_	_	
11-52	2485-2486	`	_	_	
11-53	2487-2489	is	_	_	
11-54	2490-2497	located	_	_	
11-55	2498-2500	in	_	_	
11-56	2501-2502	[	_	_	
11-57	2502-2511	ciwfiwgan	_	_	
11-58	2511-2512	]	_	_	
11-59	2512-2513	(	_	_	
11-60	2513-2522	ciwfiwgan	_	_	
11-61	2522-2523	)	_	_	
11-62	2524-2525	(	_	_	
11-63	2525-2526	[	_	_	
11-64	2526-2534	original	_	_	
11-65	2535-2539	fork	_	_	
11-66	2540-2550	repository	_	_	
11-67	2550-2551	]	_	_	
11-68	2551-2552	(	_	_	
11-69	2552-2557	https	_	_	
11-70	2557-2558	:	_	_	
11-71	2558-2559	/	_	_	
11-72	2559-2560	/	_	_	
11-73	2560-2570	github.com	_	_	
11-74	2570-2571	/	_	_	
11-75	2571-2577	andleb	_	_	
11-76	2577-2578	/	_	_	
11-77	2578-2598	ciwganfiwgan-pytorch	_	_	
11-78	2598-2599	)	_	_	
11-79	2599-2600	)	_	_	
11-80	2600-2601	.	_	_	

#Text=The command-line parameters were the following:
#Text=
#Text=```shell
#Text=python train.py --fiw --num_categ 5 --datadir training_directory --logdir log_directory\\
#Text=--num_epochs 15000 --slice_len 65536
#Text=```
#Text=
#Text=The remaining hyperparameters were the model defaults set [here](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/bbd881847dc7264ffc5665d03a960363ad14cb55/ciwfiwgan/train.py#LL98C5-L98C5) and [here](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/bbd881847dc7264ffc5665d03a960363ad14cb55/ciwfiwgan/train.py#LL135C5-L135C5).
#Text=
#Text=
#Text=### The training data
#Text=
#Text=
#Text=Unfortunately, the raw audio training data is not free to share.
12-1	2603-2606	The	_	_	
12-2	2607-2619	command-line	_	_	
12-3	2620-2630	parameters	_	_	
12-4	2631-2635	were	_	_	
12-5	2636-2639	the	_	_	
12-6	2640-2649	following	_	_	
12-7	2649-2650	:	_	_	
12-8	2652-2653	`	_	_	
12-9	2653-2654	`	_	_	
12-10	2654-2655	`	_	_	
12-11	2655-2660	shell	_	_	
12-12	2661-2667	python	_	_	
12-13	2668-2676	train.py	_	_	
12-14	2677-2678	-	_	_	
12-15	2678-2679	-	_	_	
12-16	2679-2682	fiw	_	_	
12-17	2683-2684	-	_	_	
12-18	2684-2685	-	_	_	
12-19	2685-2694	num_categ	_	_	
12-20	2695-2696	5	_	_	
12-21	2697-2698	-	_	_	
12-22	2698-2699	-	_	_	
12-23	2699-2706	datadir	_	_	
12-24	2707-2725	training_directory	_	_	
12-25	2726-2727	-	_	_	
12-26	2727-2728	-	_	_	
12-27	2728-2734	logdir	_	_	
12-28	2735-2748	log_directory	_	_	
12-29	2748-2749	\	_	_	
12-30	2750-2751	-	_	_	
12-31	2751-2752	-	_	_	
12-32	2752-2762	num_epochs	_	_	
12-33	2763-2768	15000	_	_	
12-34	2769-2770	-	_	_	
12-35	2770-2771	-	_	_	
12-36	2771-2780	slice_len	_	_	
12-37	2781-2786	65536	_	_	
12-38	2787-2788	`	_	_	
12-39	2788-2789	`	_	_	
12-40	2789-2790	`	_	_	
12-41	2792-2795	The	_	_	
12-42	2796-2805	remaining	_	_	
12-43	2806-2821	hyperparameters	_	_	
12-44	2822-2826	were	_	_	
12-45	2827-2830	the	_	_	
12-46	2831-2836	model	_	_	
12-47	2837-2845	defaults	_	_	
12-48	2846-2849	set	_	_	
12-49	2850-2851	[	_	_	
12-50	2851-2855	here	_	_	
12-51	2855-2856	]	_	_	
12-52	2856-2857	(	_	_	
12-53	2857-2862	https	_	_	
12-54	2862-2863	:	_	_	
12-55	2863-2864	/	_	_	
12-56	2864-2865	/	_	_	
12-57	2865-2875	github.com	_	_	
12-58	2875-2876	/	_	_	
12-59	2876-2882	andleb	_	_	
12-60	2882-2883	/	_	_	
12-61	2883-2926	Approaching-an-unknown-communication-system	_	_	
12-62	2926-2927	/	_	_	
12-63	2927-2931	blob	_	_	
12-64	2931-2932	/	_	_	
12-65	2932-2972	bbd881847dc7264ffc5665d03a960363ad14cb55	_	_	
12-66	2972-2973	/	_	_	
12-67	2973-2982	ciwfiwgan	_	_	
12-68	2982-2983	/	_	_	
12-69	2983-2991	train.py	_	_	
12-70	2991-2992	#	_	_	
12-71	2992-2998	LL98C5	_	_	
12-72	2998-2999	-	_	_	
12-73	2999-3004	L98C5	_	_	
12-74	3004-3005	)	_	_	
12-75	3006-3009	and	_	_	
12-76	3010-3011	[	_	_	
12-77	3011-3015	here	_	_	
12-78	3015-3016	]	_	_	
12-79	3016-3017	(	_	_	
12-80	3017-3022	https	_	_	
12-81	3022-3023	:	_	_	
12-82	3023-3024	/	_	_	
12-83	3024-3025	/	_	_	
12-84	3025-3035	github.com	_	_	
12-85	3035-3036	/	_	_	
12-86	3036-3042	andleb	_	_	
12-87	3042-3043	/	_	_	
12-88	3043-3086	Approaching-an-unknown-communication-system	_	_	
12-89	3086-3087	/	_	_	
12-90	3087-3091	blob	_	_	
12-91	3091-3092	/	_	_	
12-92	3092-3132	bbd881847dc7264ffc5665d03a960363ad14cb55	_	_	
12-93	3132-3133	/	_	_	
12-94	3133-3142	ciwfiwgan	_	_	
12-95	3142-3143	/	_	_	
12-96	3143-3151	train.py	_	_	
12-97	3151-3152	#	_	_	
12-98	3152-3159	LL135C5	_	_	
12-99	3159-3160	-	_	_	
12-100	3160-3166	L135C5	_	_	
12-101	3166-3167	)	_	_	
12-102	3167-3168	.	_	_	
12-103	3171-3172	#	_	_	
12-104	3172-3173	#	_	_	
12-105	3173-3174	#	_	_	
12-106	3175-3178	The	_	_	
12-107	3179-3187	training	_	_	
12-108	3188-3192	data	_	_	
12-109	3195-3208	Unfortunately	_	_	
12-110	3208-3209	,	_	_	
12-111	3210-3213	the	_	_	
12-112	3214-3217	raw	_	_	
12-113	3218-3223	audio	_	_	
12-114	3224-3232	training	_	_	
12-115	3233-3237	data	_	_	
12-116	3238-3240	is	_	_	
12-117	3241-3244	not	_	_	
12-118	3245-3249	free	_	_	
12-119	3250-3252	to	_	_	
12-120	3253-3258	share	_	_	
12-121	3258-3259	.	_	_	

#Text=It based on of hours of continuous recordings by whale-born tags, which were then annotated with the positions of actual codas.
13-1	3260-3262	It	_	_	
13-2	3263-3268	based	_	_	
13-3	3269-3271	on	_	_	
13-4	3272-3274	of	_	_	
13-5	3275-3280	hours	_	_	
13-6	3281-3283	of	_	_	
13-7	3284-3294	continuous	_	_	
13-8	3295-3305	recordings	_	_	
13-9	3306-3308	by	_	_	
13-10	3309-3319	whale-born	_	_	
13-11	3320-3324	tags	_	_	
13-12	3324-3325	,	_	_	
13-13	3326-3331	which	_	_	
13-14	3332-3336	were	_	_	
13-15	3337-3341	then	_	_	
13-16	3342-3351	annotated	_	_	
13-17	3352-3356	with	_	_	
13-18	3357-3360	the	_	_	
13-19	3361-3370	positions	_	_	
13-20	3371-3373	of	_	_	
13-21	3374-3380	actual	_	_	
13-22	3381-3386	codas	_	_	
13-23	3386-3387	.	_	_	

#Text=These annotations were then used to extract the training data.
14-1	3388-3393	These	_	_	
14-2	3394-3405	annotations	_	_	
14-3	3406-3410	were	_	_	
14-4	3411-3415	then	_	_	
14-5	3416-3420	used	_	_	
14-6	3421-3423	to	_	_	
14-7	3424-3431	extract	_	_	
14-8	3432-3435	the	_	_	
14-9	3436-3444	training	_	_	
14-10	3445-3449	data	_	_	
14-11	3449-3450	.	_	_	

#Text=The training data thus consisted of 2209 *coda* samples of less than 2s in length, encoded in 32 kHZ mono `wav` format.
15-1	3452-3455	The	_	_	
15-2	3456-3464	training	_	_	
15-3	3465-3469	data	_	_	
15-4	3470-3474	thus	_	_	
15-5	3475-3484	consisted	_	_	
15-6	3485-3487	of	_	_	
15-7	3488-3492	2209	_	_	
15-8	3493-3494	*	_	_	
15-9	3494-3498	coda	_	_	
15-10	3498-3499	*	_	_	
15-11	3500-3507	samples	_	_	
15-12	3508-3510	of	_	_	
15-13	3511-3515	less	_	_	
15-14	3516-3520	than	_	_	
15-15	3521-3523	2s	_	_	
15-16	3524-3526	in	_	_	
15-17	3527-3533	length	_	_	
15-18	3533-3534	,	_	_	
15-19	3535-3542	encoded	_	_	
15-20	3543-3545	in	_	_	
15-21	3546-3548	32	_	_	
15-22	3549-3552	kHZ	_	_	
15-23	3553-3557	mono	_	_	
15-24	3558-3559	`	_	_	
15-25	3559-3562	wav	_	_	
15-26	3562-3563	`	_	_	
15-27	3564-3570	format	_	_	
15-28	3570-3571	.	_	_	

#Text=In terms of data preprocessing, a constant DC microphone bias was removed from the extracted recordings, which were then augmented by random zero-padding in the front to address the fact that all the extracted codas would otherwise have a click at the very beginning.
#Text=
#Text=
#Text=### Trained Model
#Text=
#Text=Instead of the data, we thus provide the generator component of main trained model used to
#Text=generate results [here](https://github.com/andleb/Approaching-an-unknown-communication-system/releases/download/model/model.pt).
16-1	3572-3574	In	_	_	
16-2	3575-3580	terms	_	_	
16-3	3581-3583	of	_	_	
16-4	3584-3588	data	_	_	
16-5	3589-3602	preprocessing	_	_	
16-6	3602-3603	,	_	_	
16-7	3604-3605	a	_	_	
16-8	3606-3614	constant	_	_	
16-9	3615-3617	DC	_	_	
16-10	3618-3628	microphone	_	_	
16-11	3629-3633	bias	_	_	
16-12	3634-3637	was	_	_	
16-13	3638-3645	removed	_	_	
16-14	3646-3650	from	_	_	
16-15	3651-3654	the	_	_	
16-16	3655-3664	extracted	_	_	
16-17	3665-3675	recordings	_	_	
16-18	3675-3676	,	_	_	
16-19	3677-3682	which	_	_	
16-20	3683-3687	were	_	_	
16-21	3688-3692	then	_	_	
16-22	3693-3702	augmented	_	_	
16-23	3703-3705	by	_	_	
16-24	3706-3712	random	_	_	
16-25	3713-3725	zero-padding	_	_	
16-26	3726-3728	in	_	_	
16-27	3729-3732	the	_	_	
16-28	3733-3738	front	_	_	
16-29	3739-3741	to	_	_	
16-30	3742-3749	address	_	_	
16-31	3750-3753	the	_	_	
16-32	3754-3758	fact	_	_	
16-33	3759-3763	that	_	_	
16-34	3764-3767	all	_	_	
16-35	3768-3771	the	_	_	
16-36	3772-3781	extracted	_	_	
16-37	3782-3787	codas	_	_	
16-38	3788-3793	would	_	_	
16-39	3794-3803	otherwise	_	_	
16-40	3804-3808	have	_	_	
16-41	3809-3810	a	_	_	
16-42	3811-3816	click	_	_	
16-43	3817-3819	at	_	_	
16-44	3820-3823	the	_	_	
16-45	3824-3828	very	_	_	
16-46	3829-3838	beginning	_	_	
16-47	3838-3839	.	_	_	
16-48	3842-3843	#	_	_	
16-49	3843-3844	#	_	_	
16-50	3844-3845	#	_	_	
16-51	3846-3853	Trained	_	_	
16-52	3854-3859	Model	_	_	
16-53	3861-3868	Instead	_	_	
16-54	3869-3871	of	_	_	
16-55	3872-3875	the	_	_	
16-56	3876-3880	data	_	_	
16-57	3880-3881	,	_	_	
16-58	3882-3884	we	_	_	
16-59	3885-3889	thus	_	_	
16-60	3890-3897	provide	_	_	
16-61	3898-3901	the	_	_	
16-62	3902-3911	generator	_	_	
16-63	3912-3921	component	_	_	
16-64	3922-3924	of	_	_	
16-65	3925-3929	main	_	_	
16-66	3930-3937	trained	_	_	
16-67	3938-3943	model	_	_	
16-68	3944-3948	used	_	_	
16-69	3949-3951	to	_	_	
16-70	3952-3960	generate	_	_	
16-71	3961-3968	results	_	_	
16-72	3969-3970	[	_	_	
16-73	3970-3974	here	_	_	
16-74	3974-3975	]	_	_	
16-75	3975-3976	(	_	_	
16-76	3976-3981	https	_	_	
16-77	3981-3982	:	_	_	
16-78	3982-3983	/	_	_	
16-79	3983-3984	/	_	_	
16-80	3984-3994	github.com	_	_	
16-81	3994-3995	/	_	_	
16-82	3995-4001	andleb	_	_	
16-83	4001-4002	/	_	_	
16-84	4002-4045	Approaching-an-unknown-communication-system	_	_	
16-85	4045-4046	/	_	_	
16-86	4046-4054	releases	_	_	
16-87	4054-4055	/	_	_	
16-88	4055-4063	download	_	_	
16-89	4063-4064	/	_	_	
16-90	4064-4069	model	_	_	
16-91	4069-4070	/	_	_	
16-92	4070-4078	model.pt	_	_	
16-93	4078-4079	)	_	_	
16-94	4079-4080	.	_	_	

#Text=Additionally, we provide a separate, independently trained model for robustness checks (see below) [here](https://github.com/andleb/Approaching-an-unknown-communication-system/releases/download/replication_model/model-6cat.pt).
17-1	4082-4094	Additionally	_	_	
17-2	4094-4095	,	_	_	
17-3	4096-4098	we	_	_	
17-4	4099-4106	provide	_	_	
17-5	4107-4108	a	_	_	
17-6	4109-4117	separate	_	_	
17-7	4117-4118	,	_	_	
17-8	4119-4132	independently	_	_	
17-9	4133-4140	trained	_	_	
17-10	4141-4146	model	_	_	
17-11	4147-4150	for	_	_	
17-12	4151-4161	robustness	_	_	
17-13	4162-4168	checks	_	_	
17-14	4169-4170	(	_	_	
17-15	4170-4173	see	_	_	
17-16	4174-4179	below	_	_	
17-17	4179-4180	)	_	_	
17-18	4181-4182	[	_	_	
17-19	4182-4186	here	_	_	
17-20	4186-4187	]	_	_	
17-21	4187-4188	(	_	_	
17-22	4188-4193	https	_	_	
17-23	4193-4194	:	_	_	
17-24	4194-4195	/	_	_	
17-25	4195-4196	/	_	_	
17-26	4196-4206	github.com	_	_	
17-27	4206-4207	/	_	_	
17-28	4207-4213	andleb	_	_	
17-29	4213-4214	/	_	_	
17-30	4214-4257	Approaching-an-unknown-communication-system	_	_	
17-31	4257-4258	/	_	_	
17-32	4258-4266	releases	_	_	
17-33	4266-4267	/	_	_	
17-34	4267-4275	download	_	_	
17-35	4275-4276	/	_	_	
17-36	4276-4293	replication_model	_	_	
17-37	4293-4294	/	_	_	
17-38	4294-4299	model	_	_	
17-39	4299-4300	-	_	_	
17-40	4300-4307	6cat.pt	_	_	
17-41	4307-4308	)	_	_	
17-42	4308-4309	.	_	_	

#Text=The models can be loaded with the following snippet after putting [ciwfiwgan](ciwfiwgan) on your path
#Text=(all following code also assumes the module is on the path):
#Text=
#Text=```python
#Text=import torch
#Text=from infowavegan import WaveGANGenerator
#Text=
#Text=device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
#Text=
#Text=G = WaveGANGenerator(slice_len=2**16)
#Text=G.load_state_dict(torch.load("model.pt", map_location=device))
#Text=G.to(device)
#Text=```
#Text=
#Text=### Compute resources used for model training
#Text=
#Text=
#Text=The model was trained across approximately 3 days on a single Nvidia 1080Ti (11 GB GPU memory) on a cluster-based instance running on Intel Xeon E5-2623.
#Text=
#Text=
#Text=
#Text=
#Text=## Analysis
#Text=
#Text=
#Text=### The click detector
#Text=
#Text=The [click detector module](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/clickDetector.py)
#Text=outputs the *inter-click intervals* (ICIs) and the overall number of clicks in the provided generated raw audio sample.
18-1	4311-4314	The	_	_	
18-2	4315-4321	models	_	_	
18-3	4322-4325	can	_	_	
18-4	4326-4328	be	_	_	
18-5	4329-4335	loaded	_	_	
18-6	4336-4340	with	_	_	
18-7	4341-4344	the	_	_	
18-8	4345-4354	following	_	_	
18-9	4355-4362	snippet	_	_	
18-10	4363-4368	after	_	_	
18-11	4369-4376	putting	_	_	
18-12	4377-4378	[	_	_	
18-13	4378-4387	ciwfiwgan	_	_	
18-14	4387-4388	]	_	_	
18-15	4388-4389	(	_	_	
18-16	4389-4398	ciwfiwgan	_	_	
18-17	4398-4399	)	_	_	
18-18	4400-4402	on	_	_	
18-19	4403-4407	your	_	_	
18-20	4408-4412	path	_	_	
18-21	4413-4414	(	_	_	
18-22	4414-4417	all	_	_	
18-23	4418-4427	following	_	_	
18-24	4428-4432	code	_	_	
18-25	4433-4437	also	_	_	
18-26	4438-4445	assumes	_	_	
18-27	4446-4449	the	_	_	
18-28	4450-4456	module	_	_	
18-29	4457-4459	is	_	_	
18-30	4460-4462	on	_	_	
18-31	4463-4466	the	_	_	
18-32	4467-4471	path	_	_	
18-33	4471-4472	)	_	_	
18-34	4472-4473	:	_	_	
18-35	4475-4476	`	_	_	
18-36	4476-4477	`	_	_	
18-37	4477-4478	`	_	_	
18-38	4478-4484	python	*	PROGLANG	
18-39	4485-4491	import	_	_	
18-40	4492-4497	torch	_	_	
18-41	4498-4502	from	_	_	
18-42	4503-4514	infowavegan	_	_	
18-43	4515-4521	import	_	_	
18-44	4522-4538	WaveGANGenerator	_	_	
18-45	4540-4546	device	_	_	
18-46	4547-4548	=	_	_	
18-47	4549-4561	torch.device	_	_	
18-48	4561-4562	(	_	_	
18-49	4562-4563	"	_	_	
18-50	4563-4567	cuda	_	_	
18-51	4567-4568	"	_	_	
18-52	4569-4571	if	_	_	
18-53	4572-4595	torch.cuda.is_available	_	_	
18-54	4595-4596	(	_	_	
18-55	4596-4597	)	_	_	
18-56	4598-4602	else	_	_	
18-57	4603-4604	"	_	_	
18-58	4604-4607	cpu	_	_	
18-59	4607-4608	"	_	_	
18-60	4608-4609	)	_	_	
18-61	4611-4612	G	_	_	
18-62	4613-4614	=	_	_	
18-63	4615-4631	WaveGANGenerator	_	_	
18-64	4631-4632	(	_	_	
18-65	4632-4641	slice_len	_	_	
18-66	4641-4642	=	_	_	
18-67	4642-4643	2	_	_	
18-68	4643-4644	*	_	_	
18-69	4644-4645	*	_	_	
18-70	4645-4647	16	_	_	
18-71	4647-4648	)	_	_	
18-72	4649-4666	G.load_state_dict	_	_	
18-73	4666-4667	(	_	_	
18-74	4667-4677	torch.load	_	_	
18-75	4677-4678	(	_	_	
18-76	4678-4679	"	_	_	
18-77	4679-4687	model.pt	_	_	
18-78	4687-4688	"	_	_	
18-79	4688-4689	,	_	_	
18-80	4690-4702	map_location	_	_	
18-81	4702-4703	=	_	_	
18-82	4703-4709	device	_	_	
18-83	4709-4710	)	_	_	
18-84	4710-4711	)	_	_	
18-85	4712-4716	G.to	_	_	
18-86	4716-4717	(	_	_	
18-87	4717-4723	device	_	_	
18-88	4723-4724	)	_	_	
18-89	4725-4726	`	_	_	
18-90	4726-4727	`	_	_	
18-91	4727-4728	`	_	_	
18-92	4730-4731	#	_	_	
18-93	4731-4732	#	_	_	
18-94	4732-4733	#	_	_	
18-95	4734-4741	Compute	_	_	
18-96	4742-4751	resources	_	_	
18-97	4752-4756	used	_	_	
18-98	4757-4760	for	_	_	
18-99	4761-4766	model	_	_	
18-100	4767-4775	training	_	_	
18-101	4778-4781	The	_	_	
18-102	4782-4787	model	_	_	
18-103	4788-4791	was	_	_	
18-104	4792-4799	trained	_	_	
18-105	4800-4806	across	_	_	
18-106	4807-4820	approximately	_	_	
18-107	4821-4822	3	_	_	
18-108	4823-4827	days	_	_	
18-109	4828-4830	on	_	_	
18-110	4831-4832	a	_	_	
18-111	4833-4839	single	_	_	
18-112	4840-4846	Nvidia	_	_	
18-113	4847-4853	1080Ti	_	_	
18-114	4854-4855	(	_	_	
18-115	4855-4857	11	_	_	
18-116	4858-4860	GB	_	_	
18-117	4861-4864	GPU	_	_	
18-118	4865-4871	memory	_	_	
18-119	4871-4872	)	_	_	
18-120	4873-4875	on	_	_	
18-121	4876-4877	a	_	_	
18-122	4878-4891	cluster-based	_	_	
18-123	4892-4900	instance	_	_	
18-124	4901-4908	running	_	_	
18-125	4909-4911	on	_	_	
18-126	4912-4917	Intel	_	_	
18-127	4918-4922	Xeon	_	_	
18-128	4923-4925	E5	_	_	
18-129	4925-4926	-	_	_	
18-130	4926-4930	2623	_	_	
18-131	4930-4931	.	_	_	
18-132	4936-4937	#	_	_	
18-133	4937-4938	#	_	_	
18-134	4939-4947	Analysis	_	_	
18-135	4950-4951	#	_	_	
18-136	4951-4952	#	_	_	
18-137	4952-4953	#	_	_	
18-138	4954-4957	The	_	_	
18-139	4958-4963	click	_	_	
18-140	4964-4972	detector	_	_	
18-141	4974-4977	The	_	_	
18-142	4978-4979	[	_	_	
18-143	4979-4984	click	_	_	
18-144	4985-4993	detector	_	_	
18-145	4994-5000	module	_	_	
18-146	5000-5001	]	_	_	
18-147	5001-5002	(	_	_	
18-148	5002-5007	https	_	_	
18-149	5007-5008	:	_	_	
18-150	5008-5009	/	_	_	
18-151	5009-5010	/	_	_	
18-152	5010-5020	github.com	_	_	
18-153	5020-5021	/	_	_	
18-154	5021-5027	andleb	_	_	
18-155	5027-5028	/	_	_	
18-156	5028-5071	Approaching-an-unknown-communication-system	_	_	
18-157	5071-5072	/	_	_	
18-158	5072-5076	blob	_	_	
18-159	5076-5077	/	_	_	
18-160	5077-5081	main	_	_	
18-161	5081-5082	/	_	_	
18-162	5082-5098	clickDetector.py	_	_	
18-163	5098-5099	)	_	_	
18-164	5100-5107	outputs	_	_	
18-165	5108-5111	the	_	_	
18-166	5112-5113	*	_	_	
18-167	5113-5124	inter-click	_	_	
18-168	5125-5134	intervals	_	_	
18-169	5134-5135	*	_	_	
18-170	5136-5137	(	_	_	
18-171	5137-5141	ICIs	_	_	
18-172	5141-5142	)	_	_	
18-173	5143-5146	and	_	_	
18-174	5147-5150	the	_	_	
18-175	5151-5158	overall	_	_	
18-176	5159-5165	number	_	_	
18-177	5166-5168	of	_	_	
18-178	5169-5175	clicks	_	_	
18-179	5176-5178	in	_	_	
18-180	5179-5182	the	_	_	
18-181	5183-5191	provided	_	_	
18-182	5192-5201	generated	_	_	
18-183	5202-5205	raw	_	_	
18-184	5206-5211	audio	_	_	
18-185	5212-5218	sample	_	_	
18-186	5218-5219	.	_	_	

#Text=It uses some signal filtering and minimal thresholds for both the amplitude and the temporal separation,
#Text=both based on our prior knowledge of whale communication.
#Text=
#Text=
#Text=### Data generation
#Text=
#Text=The data generation for the experiments based on the number of clicks and the inter-click intervals (ICIs) is performed
#Text=by running the [dataGenClick](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/dataGenClick.py)
#Text=script with the path to the [trained model](https://github.com/andleb/Approaching-an-unknown-communication-system/releases/download/submission/model.pt) as a
#Text=command-line parameter.
19-1	5220-5222	It	_	_	
19-2	5223-5227	uses	_	_	
19-3	5228-5232	some	_	_	
19-4	5233-5239	signal	_	_	
19-5	5240-5249	filtering	_	_	
19-6	5250-5253	and	_	_	
19-7	5254-5261	minimal	_	_	
19-8	5262-5272	thresholds	_	_	
19-9	5273-5276	for	_	_	
19-10	5277-5281	both	_	_	
19-11	5282-5285	the	_	_	
19-12	5286-5295	amplitude	_	_	
19-13	5296-5299	and	_	_	
19-14	5300-5303	the	_	_	
19-15	5304-5312	temporal	_	_	
19-16	5313-5323	separation	_	_	
19-17	5323-5324	,	_	_	
19-18	5325-5329	both	_	_	
19-19	5330-5335	based	_	_	
19-20	5336-5338	on	_	_	
19-21	5339-5342	our	_	_	
19-22	5343-5348	prior	_	_	
19-23	5349-5358	knowledge	_	_	
19-24	5359-5361	of	_	_	
19-25	5362-5367	whale	_	_	
19-26	5368-5381	communication	_	_	
19-27	5381-5382	.	_	_	
19-28	5385-5386	#	_	_	
19-29	5386-5387	#	_	_	
19-30	5387-5388	#	_	_	
19-31	5389-5393	Data	_	_	
19-32	5394-5404	generation	_	_	
19-33	5406-5409	The	_	_	
19-34	5410-5414	data	_	_	
19-35	5415-5425	generation	_	_	
19-36	5426-5429	for	_	_	
19-37	5430-5433	the	_	_	
19-38	5434-5445	experiments	_	_	
19-39	5446-5451	based	_	_	
19-40	5452-5454	on	_	_	
19-41	5455-5458	the	_	_	
19-42	5459-5465	number	_	_	
19-43	5466-5468	of	_	_	
19-44	5469-5475	clicks	_	_	
19-45	5476-5479	and	_	_	
19-46	5480-5483	the	_	_	
19-47	5484-5495	inter-click	_	_	
19-48	5496-5505	intervals	_	_	
19-49	5506-5507	(	_	_	
19-50	5507-5511	ICIs	_	_	
19-51	5511-5512	)	_	_	
19-52	5513-5515	is	_	_	
19-53	5516-5525	performed	_	_	
19-54	5526-5528	by	_	_	
19-55	5529-5536	running	_	_	
19-56	5537-5540	the	_	_	
19-57	5541-5542	[	_	_	
19-58	5542-5554	dataGenClick	_	_	
19-59	5554-5555	]	_	_	
19-60	5555-5556	(	_	_	
19-61	5556-5561	https	_	_	
19-62	5561-5562	:	_	_	
19-63	5562-5563	/	_	_	
19-64	5563-5564	/	_	_	
19-65	5564-5574	github.com	_	_	
19-66	5574-5575	/	_	_	
19-67	5575-5581	andleb	_	_	
19-68	5581-5582	/	_	_	
19-69	5582-5625	Approaching-an-unknown-communication-system	_	_	
19-70	5625-5626	/	_	_	
19-71	5626-5630	blob	_	_	
19-72	5630-5631	/	_	_	
19-73	5631-5635	main	_	_	
19-74	5635-5636	/	_	_	
19-75	5636-5651	dataGenClick.py	_	_	
19-76	5651-5652	)	_	_	
19-77	5653-5659	script	_	_	
19-78	5660-5664	with	_	_	
19-79	5665-5668	the	_	_	
19-80	5669-5673	path	_	_	
19-81	5674-5676	to	_	_	
19-82	5677-5680	the	_	_	
19-83	5681-5682	[	_	_	
19-84	5682-5689	trained	_	_	
19-85	5690-5695	model	_	_	
19-86	5695-5696	]	_	_	
19-87	5696-5697	(	_	_	
19-88	5697-5702	https	_	_	
19-89	5702-5703	:	_	_	
19-90	5703-5704	/	_	_	
19-91	5704-5705	/	_	_	
19-92	5705-5715	github.com	_	_	
19-93	5715-5716	/	_	_	
19-94	5716-5722	andleb	_	_	
19-95	5722-5723	/	_	_	
19-96	5723-5766	Approaching-an-unknown-communication-system	_	_	
19-97	5766-5767	/	_	_	
19-98	5767-5775	releases	_	_	
19-99	5775-5776	/	_	_	
19-100	5776-5784	download	_	_	
19-101	5784-5785	/	_	_	
19-102	5785-5795	submission	_	_	
19-103	5795-5796	/	_	_	
19-104	5796-5804	model.pt	_	_	
19-105	5804-5805	)	_	_	
19-106	5806-5808	as	_	_	
19-107	5809-5810	a	_	_	
19-108	5811-5823	command-line	_	_	
19-109	5824-5833	parameter	_	_	
19-110	5833-5834	.	_	_	

#Text=The data generation for the experiments based on the audio properties is performed
#Text=by running the [dataGenAudio](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/dataGenAudio.py)
#Text=script with the same command-line parameter.
#Text=
#Text=
#Text=
#Text=### Analysis notebooks
#Text=
#Text=For convenience, the raw outputs of the data generation above are provided in [data/](https://github.com/andleb/Approaching-an-unknown-communication-system/tree/main/data)
20-1	5836-5839	The	_	_	
20-2	5840-5844	data	_	_	
20-3	5845-5855	generation	_	_	
20-4	5856-5859	for	_	_	
20-5	5860-5863	the	_	_	
20-6	5864-5875	experiments	_	_	
20-7	5876-5881	based	_	_	
20-8	5882-5884	on	_	_	
20-9	5885-5888	the	_	_	
20-10	5889-5894	audio	_	_	
20-11	5895-5905	properties	_	_	
20-12	5906-5908	is	_	_	
20-13	5909-5918	performed	_	_	
20-14	5919-5921	by	_	_	
20-15	5922-5929	running	_	_	
20-16	5930-5933	the	_	_	
20-17	5934-5935	[	_	_	
20-18	5935-5947	dataGenAudio	_	_	
20-19	5947-5948	]	_	_	
20-20	5948-5949	(	_	_	
20-21	5949-5954	https	_	_	
20-22	5954-5955	:	_	_	
20-23	5955-5956	/	_	_	
20-24	5956-5957	/	_	_	
20-25	5957-5967	github.com	_	_	
20-26	5967-5968	/	_	_	
20-27	5968-5974	andleb	_	_	
20-28	5974-5975	/	_	_	
20-29	5975-6018	Approaching-an-unknown-communication-system	_	_	
20-30	6018-6019	/	_	_	
20-31	6019-6023	blob	_	_	
20-32	6023-6024	/	_	_	
20-33	6024-6028	main	_	_	
20-34	6028-6029	/	_	_	
20-35	6029-6044	dataGenAudio.py	_	_	
20-36	6044-6045	)	_	_	
20-37	6046-6052	script	_	_	
20-38	6053-6057	with	_	_	
20-39	6058-6061	the	_	_	
20-40	6062-6066	same	_	_	
20-41	6067-6079	command-line	_	_	
20-42	6080-6089	parameter	_	_	
20-43	6089-6090	.	_	_	
20-44	6094-6095	#	_	_	
20-45	6095-6096	#	_	_	
20-46	6096-6097	#	_	_	
20-47	6098-6106	Analysis	_	_	
20-48	6107-6116	notebooks	_	_	
20-49	6118-6121	For	_	_	
20-50	6122-6133	convenience	_	_	
20-51	6133-6134	,	_	_	
20-52	6135-6138	the	_	_	
20-53	6139-6142	raw	_	_	
20-54	6143-6150	outputs	_	_	
20-55	6151-6153	of	_	_	
20-56	6154-6157	the	_	_	
20-57	6158-6162	data	_	_	
20-58	6163-6173	generation	_	_	
20-59	6174-6179	above	_	_	
20-60	6180-6183	are	_	_	
20-61	6184-6192	provided	_	_	
20-62	6193-6195	in	_	_	
20-63	6196-6197	[	_	_	
20-64	6197-6201	data	_	_	
20-65	6201-6202	/	_	_	
20-66	6202-6203	]	_	_	
20-67	6203-6204	(	_	_	
20-68	6204-6209	https	_	_	
20-69	6209-6210	:	_	_	
20-70	6210-6211	/	_	_	
20-71	6211-6212	/	_	_	
20-72	6212-6222	github.com	_	_	
20-73	6222-6223	/	_	_	
20-74	6223-6229	andleb	_	_	
20-75	6229-6230	/	_	_	
20-76	6230-6273	Approaching-an-unknown-communication-system	_	_	
20-77	6273-6274	/	_	_	
20-78	6274-6278	tree	_	_	
20-79	6278-6279	/	_	_	
20-80	6279-6283	main	_	_	
20-81	6283-6284	/	_	_	
20-82	6284-6288	data	_	_	
20-83	6288-6289	)	_	_	

#Text=.
21-1	6289-6290	.	_	_	

#Text=- [nClicks.ipynb](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/nClicks.ipynb) replicates the
#Text=  results for the _number of clicks_
22-1	6292-6293	-	_	_	
22-2	6294-6295	[	_	_	
22-3	6295-6308	nClicks.ipynb	_	_	
22-4	6308-6309	]	_	_	
22-5	6309-6310	(	_	_	
22-6	6310-6315	https	_	_	
22-7	6315-6316	:	_	_	
22-8	6316-6317	/	_	_	
22-9	6317-6318	/	_	_	
22-10	6318-6328	github.com	_	_	
22-11	6328-6329	/	_	_	
22-12	6329-6335	andleb	_	_	
22-13	6335-6336	/	_	_	
22-14	6336-6379	Approaching-an-unknown-communication-system	_	_	
22-15	6379-6380	/	_	_	
22-16	6380-6384	blob	_	_	
22-17	6384-6385	/	_	_	
22-18	6385-6389	main	_	_	
22-19	6389-6390	/	_	_	
22-20	6390-6403	nClicks.ipynb	_	_	
22-21	6403-6404	)	_	_	
22-22	6405-6415	replicates	_	_	
22-23	6416-6419	the	_	_	
22-24	6422-6429	results	_	_	
22-25	6430-6433	for	_	_	
22-26	6434-6437	the	_	_	
22-27	6438-6439	_	_	_	
22-28	6439-6445	number	_	_	
22-29	6446-6448	of	_	_	
22-30	6449-6455	clicks	_	_	
22-31	6455-6456	_	_	_	

#Text=.
23-1	6456-6457	.	_	_	

#Text=- [ICI.ipynb](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/ICI.ipynb) replicates the
#Text=  results for the *click spacing and regularity*
24-1	6459-6460	-	_	_	
24-2	6461-6462	[	_	_	
24-3	6462-6471	ICI.ipynb	_	_	
24-4	6471-6472	]	_	_	
24-5	6472-6473	(	_	_	
24-6	6473-6478	https	_	_	
24-7	6478-6479	:	_	_	
24-8	6479-6480	/	_	_	
24-9	6480-6481	/	_	_	
24-10	6481-6491	github.com	_	_	
24-11	6491-6492	/	_	_	
24-12	6492-6498	andleb	_	_	
24-13	6498-6499	/	_	_	
24-14	6499-6542	Approaching-an-unknown-communication-system	_	_	
24-15	6542-6543	/	_	_	
24-16	6543-6547	blob	_	_	
24-17	6547-6548	/	_	_	
24-18	6548-6552	main	_	_	
24-19	6552-6553	/	_	_	
24-20	6553-6562	ICI.ipynb	_	_	
24-21	6562-6563	)	_	_	
24-22	6564-6574	replicates	_	_	
24-23	6575-6578	the	_	_	
24-24	6581-6588	results	_	_	
24-25	6589-6592	for	_	_	
24-26	6593-6596	the	_	_	
24-27	6597-6598	*	_	_	
24-28	6598-6603	click	_	_	
24-29	6604-6611	spacing	_	_	
24-30	6612-6615	and	_	_	
24-31	6616-6626	regularity	_	_	
24-32	6626-6627	*	_	_	

#Text=.
25-1	6627-6628	.	_	_	

#Text=- [acoustic.ipynb](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/acoustic.ipynb)
#Text=  replicates the results for the *acoustic properties*.
26-1	6630-6631	-	_	_	
26-2	6632-6633	[	_	_	
26-3	6633-6647	acoustic.ipynb	_	_	
26-4	6647-6648	]	_	_	
26-5	6648-6649	(	_	_	
26-6	6649-6654	https	_	_	
26-7	6654-6655	:	_	_	
26-8	6655-6656	/	_	_	
26-9	6656-6657	/	_	_	
26-10	6657-6667	github.com	_	_	
26-11	6667-6668	/	_	_	
26-12	6668-6674	andleb	_	_	
26-13	6674-6675	/	_	_	
26-14	6675-6718	Approaching-an-unknown-communication-system	_	_	
26-15	6718-6719	/	_	_	
26-16	6719-6723	blob	_	_	
26-17	6723-6724	/	_	_	
26-18	6724-6728	main	_	_	
26-19	6728-6729	/	_	_	
26-20	6729-6743	acoustic.ipynb	_	_	
26-21	6743-6744	)	_	_	
26-22	6747-6757	replicates	_	_	
26-23	6758-6761	the	_	_	
26-24	6762-6769	results	_	_	
26-25	6770-6773	for	_	_	
26-26	6774-6777	the	_	_	
26-27	6778-6779	*	_	_	
26-28	6779-6787	acoustic	_	_	
26-29	6788-6798	properties	_	_	
26-30	6798-6799	*	_	_	
26-31	6799-6800	.	_	_	

#Text=Note that since these results were obtained from an independently sampled $X$, a replication of the
#Text=  result for the number of clicks is included in the notebook as a means of checking the validity of the preceding results.
#Text=
#Text=
#Text=## Robustness check
#Text=A quick replication of the number of clicks encoding result using an independently trained model with a different number
#Text=of specified encodings is provided in `robustness.ipynb`.
#Text=
#Text=
#Text=### Compute resources used for data generation and analysis
#Text=
#Text=The data generation and calculation of the quantities of interest was done in parallel on four Nvidia T4 GPUs
#Text=on an `g4dn.12xlarge` AWS instance, taking about a day for each of the two outcome types presented: click number and spacing,
#Text=and audio properties.
27-1	6803-6807	Note	_	_	
27-2	6808-6812	that	_	_	
27-3	6813-6818	since	_	_	
27-4	6819-6824	these	_	_	
27-5	6825-6832	results	_	_	
27-6	6833-6837	were	_	_	
27-7	6838-6846	obtained	_	_	
27-8	6847-6851	from	_	_	
27-9	6852-6854	an	_	_	
27-10	6855-6868	independently	_	_	
27-11	6869-6876	sampled	_	_	
27-12	6877-6878	$	_	_	
27-13	6878-6879	X	_	_	
27-14	6879-6880	$	_	_	
27-15	6880-6881	,	_	_	
27-16	6882-6883	a	_	_	
27-17	6884-6895	replication	_	_	
27-18	6896-6898	of	_	_	
27-19	6899-6902	the	_	_	
27-20	6905-6911	result	_	_	
27-21	6912-6915	for	_	_	
27-22	6916-6919	the	_	_	
27-23	6920-6926	number	_	_	
27-24	6927-6929	of	_	_	
27-25	6930-6936	clicks	_	_	
27-26	6937-6939	is	_	_	
27-27	6940-6948	included	_	_	
27-28	6949-6951	in	_	_	
27-29	6952-6955	the	_	_	
27-30	6956-6964	notebook	_	_	
27-31	6965-6967	as	_	_	
27-32	6968-6969	a	_	_	
27-33	6970-6975	means	_	_	
27-34	6976-6978	of	_	_	
27-35	6979-6987	checking	_	_	
27-36	6988-6991	the	_	_	
27-37	6992-7000	validity	_	_	
27-38	7001-7003	of	_	_	
27-39	7004-7007	the	_	_	
27-40	7008-7017	preceding	_	_	
27-41	7018-7025	results	_	_	
27-42	7025-7026	.	_	_	
27-43	7029-7030	#	_	_	
27-44	7030-7031	#	_	_	
27-45	7032-7042	Robustness	_	_	
27-46	7043-7048	check	_	_	
27-47	7049-7050	A	_	_	
27-48	7051-7056	quick	_	_	
27-49	7057-7068	replication	_	_	
27-50	7069-7071	of	_	_	
27-51	7072-7075	the	_	_	
27-52	7076-7082	number	_	_	
27-53	7083-7085	of	_	_	
27-54	7086-7092	clicks	_	_	
27-55	7093-7101	encoding	_	_	
27-56	7102-7108	result	_	_	
27-57	7109-7114	using	_	_	
27-58	7115-7117	an	_	_	
27-59	7118-7131	independently	_	_	
27-60	7132-7139	trained	_	_	
27-61	7140-7145	model	_	_	
27-62	7146-7150	with	_	_	
27-63	7151-7152	a	_	_	
27-64	7153-7162	different	_	_	
27-65	7163-7169	number	_	_	
27-66	7170-7172	of	_	_	
27-67	7173-7182	specified	_	_	
27-68	7183-7192	encodings	_	_	
27-69	7193-7195	is	_	_	
27-70	7196-7204	provided	_	_	
27-71	7205-7207	in	_	_	
27-72	7208-7209	`	_	_	
27-73	7209-7225	robustness.ipynb	_	_	
27-74	7225-7226	`	_	_	
27-75	7226-7227	.	_	_	
27-76	7230-7231	#	_	_	
27-77	7231-7232	#	_	_	
27-78	7232-7233	#	_	_	
27-79	7234-7241	Compute	_	_	
27-80	7242-7251	resources	_	_	
27-81	7252-7256	used	_	_	
27-82	7257-7260	for	_	_	
27-83	7261-7265	data	_	_	
27-84	7266-7276	generation	_	_	
27-85	7277-7280	and	_	_	
27-86	7281-7289	analysis	_	_	
27-87	7291-7294	The	_	_	
27-88	7295-7299	data	_	_	
27-89	7300-7310	generation	_	_	
27-90	7311-7314	and	_	_	
27-91	7315-7326	calculation	_	_	
27-92	7327-7329	of	_	_	
27-93	7330-7333	the	_	_	
27-94	7334-7344	quantities	_	_	
27-95	7345-7347	of	_	_	
27-96	7348-7356	interest	_	_	
27-97	7357-7360	was	_	_	
27-98	7361-7365	done	_	_	
27-99	7366-7368	in	_	_	
27-100	7369-7377	parallel	_	_	
27-101	7378-7380	on	_	_	
27-102	7381-7385	four	_	_	
27-103	7386-7392	Nvidia	_	_	
27-104	7393-7395	T4	_	_	
27-105	7396-7400	GPUs	_	_	
27-106	7401-7403	on	_	_	
27-107	7404-7406	an	_	_	
27-108	7407-7408	`	_	_	
27-109	7408-7412	g4dn	_	_	
27-110	7412-7421	.12xlarge	_	_	
27-111	7421-7422	`	_	_	
27-112	7423-7426	AWS	_	_	
27-113	7427-7435	instance	_	_	
27-114	7435-7436	,	_	_	
27-115	7437-7443	taking	_	_	
27-116	7444-7449	about	_	_	
27-117	7450-7451	a	_	_	
27-118	7452-7455	day	_	_	
27-119	7456-7459	for	_	_	
27-120	7460-7464	each	_	_	
27-121	7465-7467	of	_	_	
27-122	7468-7471	the	_	_	
27-123	7472-7475	two	_	_	
27-124	7476-7483	outcome	_	_	
27-125	7484-7489	types	_	_	
27-126	7490-7499	presented	_	_	
27-127	7499-7500	:	_	_	
27-128	7501-7506	click	_	_	
27-129	7507-7513	number	_	_	
27-130	7514-7517	and	_	_	
27-131	7518-7525	spacing	_	_	
27-132	7525-7526	,	_	_	
27-133	7527-7530	and	_	_	
27-134	7531-7536	audio	_	_	
27-135	7537-7547	properties	_	_	
27-136	7547-7548	.	_	_	

#Text=The analysis of those outcomes and the generation of the results was then performed locally.
#Text=
#Text=## Citations
#Text=
#Text=If you use this repository in your research, please refer to the [citation file](https://github.com/andleb/Approaching-an-unknown-communication-system/blob/main/CITATION.cff)
#Text=(for the code) and [the paper](https://arxiv.org/abs/2303.10931) in general.
#Text=
#Text=## License
#Text=
#Text=All content in this repository is licensed under the [BSD 3-Clause License](LICENSE).
28-1	7550-7553	The	_	_	
28-2	7554-7562	analysis	_	_	
28-3	7563-7565	of	_	_	
28-4	7566-7571	those	_	_	
28-5	7572-7580	outcomes	_	_	
28-6	7581-7584	and	_	_	
28-7	7585-7588	the	_	_	
28-8	7589-7599	generation	_	_	
28-9	7600-7602	of	_	_	
28-10	7603-7606	the	_	_	
28-11	7607-7614	results	_	_	
28-12	7615-7618	was	_	_	
28-13	7619-7623	then	_	_	
28-14	7624-7633	performed	_	_	
28-15	7634-7641	locally	_	_	
28-16	7641-7642	.	_	_	
28-17	7644-7645	#	_	_	
28-18	7645-7646	#	_	_	
28-19	7647-7656	Citations	_	_	
28-20	7658-7660	If	_	_	
28-21	7661-7664	you	_	_	
28-22	7665-7668	use	_	_	
28-23	7669-7673	this	_	_	
28-24	7674-7684	repository	_	_	
28-25	7685-7687	in	_	_	
28-26	7688-7692	your	_	_	
28-27	7693-7701	research	_	_	
28-28	7701-7702	,	_	_	
28-29	7703-7709	please	_	_	
28-30	7710-7715	refer	_	_	
28-31	7716-7718	to	_	_	
28-32	7719-7722	the	_	_	
28-33	7723-7724	[	_	_	
28-34	7724-7732	citation	_	_	
28-35	7733-7737	file	_	_	
28-36	7737-7738	]	_	_	
28-37	7738-7739	(	_	_	
28-38	7739-7744	https	_	_	
28-39	7744-7745	:	_	_	
28-40	7745-7746	/	_	_	
28-41	7746-7747	/	_	_	
28-42	7747-7757	github.com	_	_	
28-43	7757-7758	/	_	_	
28-44	7758-7764	andleb	_	_	
28-45	7764-7765	/	_	_	
28-46	7765-7808	Approaching-an-unknown-communication-system	_	_	
28-47	7808-7809	/	_	_	
28-48	7809-7813	blob	_	_	
28-49	7813-7814	/	_	_	
28-50	7814-7818	main	_	_	
28-51	7818-7819	/	_	_	
28-52	7819-7831	CITATION.cff	_	_	
28-53	7831-7832	)	_	_	
28-54	7833-7834	(	_	_	
28-55	7834-7837	for	_	_	
28-56	7838-7841	the	_	_	
28-57	7842-7846	code	_	_	
28-58	7846-7847	)	_	_	
28-59	7848-7851	and	_	_	
28-60	7852-7853	[	_	_	
28-61	7853-7856	the	_	_	
28-62	7857-7862	paper	_	_	
28-63	7862-7863	]	_	_	
28-64	7863-7864	(	_	_	
28-65	7864-7869	https	_	_	
28-66	7869-7870	:	_	_	
28-67	7870-7871	/	_	_	
28-68	7871-7872	/	_	_	
28-69	7872-7881	arxiv.org	_	_	
28-70	7881-7882	/	_	_	
28-71	7882-7885	abs	_	_	
28-72	7885-7886	/	_	_	
28-73	7886-7896	2303.10931	_	_	
28-74	7896-7897	)	_	_	
28-75	7898-7900	in	_	_	
28-76	7901-7908	general	_	_	
28-77	7908-7909	.	_	_	
28-78	7911-7912	#	_	_	
28-79	7912-7913	#	_	_	
28-80	7914-7921	License	_	_	
28-81	7923-7926	All	_	_	
28-82	7927-7934	content	_	_	
28-83	7935-7937	in	_	_	
28-84	7938-7942	this	_	_	
28-85	7943-7953	repository	_	_	
28-86	7954-7956	is	_	_	
28-87	7957-7965	licensed	_	_	
28-88	7966-7971	under	_	_	
28-89	7972-7975	the	_	_	
28-90	7976-7977	[	_	_	
28-91	7977-7980	BSD	*[2]	LICENSE[2]	
28-92	7981-7982	3	*[2]	LICENSE[2]	
28-93	7982-7983	-	*[2]	LICENSE[2]	
28-94	7983-7989	Clause	*[2]	LICENSE[2]	
28-95	7990-7997	License	*[2]	LICENSE[2]	
28-96	7997-7998	]	_	_	
28-97	7998-7999	(	_	_	
28-98	7999-8006	LICENSE	_	_	
28-99	8006-8007	)	_	_	
28-100	8007-8008	.	_	_	

#Text=Andrej Leban
29-1	8011-8017	Andrej	_	_	
29-2	8018-8023	Leban	_	_	
