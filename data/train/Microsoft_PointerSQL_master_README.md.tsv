#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# Introduction
#Text=This is PointSQL, the source codes of [Natural Language to Structured Query Generation via Meta-Learning](https://arxiv.org/abs/1803.02400) 
#Text=and [Pointing Out SQL Queries From Text](https://www.microsoft.com/en-us/research/publication/pointing-sql-queries-text) from Microsoft Research.
1-1	0-1	#	_	_	
1-2	2-14	Introduction	_	_	
1-3	15-19	This	_	_	
1-4	20-22	is	_	_	
1-5	23-31	PointSQL	*	PROJECT	
1-6	31-32	,	_	_	
1-7	33-36	the	_	_	
1-8	37-43	source	_	_	
1-9	44-49	codes	_	_	
1-10	50-52	of	_	_	
1-11	53-54	[	_	_	
1-12	54-61	Natural	*[1]	PUBLICATION[1]	
1-13	62-70	Language	*[1]	PUBLICATION[1]	
1-14	71-73	to	*[1]	PUBLICATION[1]	
1-15	74-84	Structured	*[1]	PUBLICATION[1]	
1-16	85-90	Query	*[1]	PUBLICATION[1]	
1-17	91-101	Generation	*[1]	PUBLICATION[1]	
1-18	102-105	via	*[1]	PUBLICATION[1]	
1-19	106-119	Meta-Learning	*[1]	PUBLICATION[1]	
1-20	119-120	]	_	_	
1-21	120-121	(	_	_	
1-22	121-126	https	_	_	
1-23	126-127	:	_	_	
1-24	127-128	/	_	_	
1-25	128-129	/	_	_	
1-26	129-138	arxiv.org	_	_	
1-27	138-139	/	_	_	
1-28	139-142	abs	_	_	
1-29	142-143	/	_	_	
1-30	143-153	1803.02400	_	_	
1-31	153-154	)	_	_	
1-32	156-159	and	_	_	
1-33	160-161	[	_	_	
1-34	161-169	Pointing	*[2]	PUBLICATION[2]	
1-35	170-173	Out	*[2]	PUBLICATION[2]	
1-36	174-177	SQL	*[2]|*[3]	PUBLICATION[2]|PROGLANG[3]	
1-37	178-185	Queries	*[2]	PUBLICATION[2]	
1-38	186-190	From	*[2]	PUBLICATION[2]	
1-39	191-195	Text	*[2]	PUBLICATION[2]	
1-40	195-196	]	_	_	
1-41	196-197	(	_	_	
1-42	197-202	https	_	_	
1-43	202-203	:	_	_	
1-44	203-204	/	_	_	
1-45	204-205	/	_	_	
1-46	205-222	www.microsoft.com	_	_	
1-47	222-223	/	_	_	
1-48	223-228	en-us	_	_	
1-49	228-229	/	_	_	
1-50	229-237	research	_	_	
1-51	237-238	/	_	_	
1-52	238-249	publication	_	_	
1-53	249-250	/	_	_	
1-54	250-275	pointing-sql-queries-text	_	_	
1-54.1	259-262	sql	*	PROGLANG	
1-55	275-276	)	_	_	
1-56	277-281	from	_	_	
1-57	282-291	Microsoft	_	_	
1-58	292-300	Research	_	_	
1-59	300-301	.	_	_	

#Text=We present the setup for the WikiSQL experiments
2-1	302-304	We	_	_	
2-2	305-312	present	_	_	
2-3	313-316	the	_	_	
2-4	317-322	setup	_	_	
2-5	323-326	for	_	_	
2-6	327-330	the	_	_	
2-7	331-338	WikiSQL	*	DATASET	
2-8	339-350	experiments	_	_	

#Text=.
3-1	350-351	.	_	_	

#Text=# Training a New Model
#Text=
#Text=## Data Pre-processing
#Text=
#Text=- Download a preprocessed dataset [link](https://1drv.ms/u/s!
4-1	354-355	#	_	_	
4-2	356-364	Training	_	_	
4-3	365-366	a	_	_	
4-4	367-370	New	_	_	
4-5	371-376	Model	_	_	
4-6	378-379	#	_	_	
4-7	379-380	#	_	_	
4-8	381-385	Data	_	_	
4-9	386-400	Pre-processing	_	_	
4-10	402-403	-	_	_	
4-11	404-412	Download	_	_	
4-12	413-414	a	_	_	
4-13	415-427	preprocessed	_	_	
4-14	428-435	dataset	_	_	
4-15	436-437	[	_	_	
4-16	437-441	link	_	_	
4-17	441-442	]	_	_	
4-18	442-443	(	_	_	
4-19	443-448	https	_	_	
4-20	448-449	:	_	_	
4-21	449-450	/	_	_	
4-22	450-451	/	_	_	
4-23	451-458	1drv.ms	_	_	
4-24	458-459	/	_	_	
4-25	459-460	u	_	_	
4-26	460-461	/	_	_	
4-27	461-462	s	_	_	
4-28	462-463	!	_	_	

#Text=AryzSDJYB5TxnDWZtpb3ZjL3xBny) to `input/`
#Text=- Untar the file `tar -xvjf input.tar.bz2`
#Text=
#Text=
#Text=#### Reproduce Preprocess Steps
#Text=
#Text=1.
5-1	463-491	AryzSDJYB5TxnDWZtpb3ZjL3xBny	_	_	
5-2	491-492	)	_	_	
5-3	493-495	to	_	_	
5-4	496-497	`	_	_	
5-5	497-502	input	_	_	
5-6	502-503	/	_	_	
5-7	503-504	`	_	_	
5-8	505-506	-	_	_	
5-9	507-512	Untar	_	_	
5-10	513-516	the	_	_	
5-11	517-521	file	_	_	
5-12	522-523	`	_	_	
5-13	523-526	tar	*	SOFTWARE	
5-14	527-528	-	_	_	
5-15	528-532	xvjf	_	_	
5-16	533-546	input.tar.bz2	_	_	
5-17	546-547	`	_	_	
5-18	550-551	#	_	_	
5-19	551-552	#	_	_	
5-20	552-553	#	_	_	
5-21	553-554	#	_	_	
5-22	555-564	Reproduce	_	_	
5-23	565-575	Preprocess	_	_	
5-24	576-581	Steps	_	_	
5-25	583-584	1	_	_	
5-26	584-585	.	_	_	

#Text=Download data from [WikiSQL](https://github.com/salesforce/WikiSQL). 
#Text=
#Text=```
#Text=$ cd wikisql_data
#Text=$ wget https://github.com/salesforce/WikiSQL/raw/master/data.tar.bz2
#Text=$ tar -xvjf data.tar.bz2
#Text=```
#Text=2.
6-1	586-594	Download	_	_	
6-2	595-599	data	_	_	
6-3	600-604	from	_	_	
6-4	605-606	[	_	_	
6-5	606-613	WikiSQL	*	DATASET	
6-6	613-614	]	_	_	
6-7	614-615	(	_	_	
6-8	615-620	https	_	_	
6-9	620-621	:	_	_	
6-10	621-622	/	_	_	
6-11	622-623	/	_	_	
6-12	623-633	github.com	_	_	
6-13	633-634	/	_	_	
6-14	634-644	salesforce	_	_	
6-15	644-645	/	_	_	
6-16	645-652	WikiSQL	*	DATASET	
6-17	652-653	)	_	_	
6-18	653-654	.	_	_	
6-19	657-658	`	_	_	
6-20	658-659	`	_	_	
6-21	659-660	`	_	_	
6-22	661-662	$	_	_	
6-23	663-665	cd	_	_	
6-24	666-678	wikisql_data	_	_	
6-24.1	666-673	wikisql	*	DATASET	
6-25	679-680	$	_	_	
6-26	681-685	wget	*	SOFTWARE	
6-27	686-691	https	_	_	
6-28	691-692	:	_	_	
6-29	692-693	/	_	_	
6-30	693-694	/	_	_	
6-31	694-704	github.com	_	_	
6-32	704-705	/	_	_	
6-33	705-715	salesforce	_	_	
6-34	715-716	/	_	_	
6-35	716-723	WikiSQL	*	DATASET	
6-36	723-724	/	_	_	
6-37	724-727	raw	_	_	
6-38	727-728	/	_	_	
6-39	728-734	master	_	_	
6-40	734-735	/	_	_	
6-41	735-747	data.tar.bz2	_	_	
6-42	748-749	$	_	_	
6-43	750-753	tar	*	SOFTWARE	
6-44	754-755	-	_	_	
6-45	755-759	xvjf	_	_	
6-46	760-772	data.tar.bz2	_	_	
6-47	773-774	`	_	_	
6-48	774-775	`	_	_	
6-49	775-776	`	_	_	
6-50	777-778	2	_	_	
6-51	778-779	.	_	_	

#Text=Put the [lib directory](https://github.com/salesforce/WikiSQL/tree/master/lib) under `wikisql_data/scripts/`
#Text=3.
7-1	780-783	Put	_	_	
7-2	784-787	the	_	_	
7-3	788-789	[	_	_	
7-4	789-792	lib	_	_	
7-5	793-802	directory	_	_	
7-6	802-803	]	_	_	
7-7	803-804	(	_	_	
7-8	804-809	https	_	_	
7-9	809-810	:	_	_	
7-10	810-811	/	_	_	
7-11	811-812	/	_	_	
7-12	812-822	github.com	_	_	
7-13	822-823	/	_	_	
7-14	823-833	salesforce	_	_	
7-15	833-834	/	_	_	
7-16	834-841	WikiSQL	*	DATASET	
7-17	841-842	/	_	_	
7-18	842-846	tree	_	_	
7-19	846-847	/	_	_	
7-20	847-853	master	_	_	
7-21	853-854	/	_	_	
7-22	854-857	lib	_	_	
7-23	857-858	)	_	_	
7-24	859-864	under	_	_	
7-25	865-866	`	_	_	
7-26	866-878	wikisql_data	_	_	
7-26.1	866-873	wikisql	*	DATASET	
7-27	878-879	/	_	_	
7-28	879-886	scripts	_	_	
7-29	886-887	/	_	_	
7-30	887-888	`	_	_	
7-31	889-890	3	_	_	
7-32	890-891	.	_	_	

#Text=Run annotation using Stanza and preproces the dataset
#Text=```
#Text=$ cd wikisql_data/scripts/
#Text=$ python annotate.py
#Text=$ python prepare.py
#Text=```
#Text=
#Text=4.
8-1	892-895	Run	_	_	
8-2	896-906	annotation	_	_	
8-3	907-912	using	_	_	
8-4	913-919	Stanza	_	_	
8-5	920-923	and	_	_	
8-6	924-933	preproces	_	_	
8-7	934-937	the	_	_	
8-8	938-945	dataset	_	_	
8-9	946-947	`	_	_	
8-10	947-948	`	_	_	
8-11	948-949	`	_	_	
8-12	950-951	$	_	_	
8-13	952-954	cd	_	_	
8-14	955-967	wikisql_data	_	_	
8-14.1	955-962	wikisql	*	DATASET	
8-15	967-968	/	_	_	
8-16	968-975	scripts	_	_	
8-17	975-976	/	_	_	
8-18	977-978	$	_	_	
8-19	979-985	python	_	_	
8-20	986-997	annotate.py	_	_	
8-21	998-999	$	_	_	
8-22	1000-1006	python	_	_	
8-23	1007-1017	prepare.py	_	_	
8-24	1018-1019	`	_	_	
8-25	1019-1020	`	_	_	
8-26	1020-1021	`	_	_	
8-27	1023-1024	4	_	_	
8-28	1024-1025	.	_	_	

#Text=Put the train/dev/test data into ``input/data`` for model training/testing. 
#Text=5.
9-1	1026-1029	Put	_	_	
9-2	1030-1033	the	_	_	
9-3	1034-1039	train	_	_	
9-4	1039-1040	/	_	_	
9-5	1040-1043	dev	_	_	
9-6	1043-1044	/	_	_	
9-7	1044-1048	test	_	_	
9-8	1049-1053	data	_	_	
9-9	1054-1058	into	_	_	
9-10	1059-1060	`	_	_	
9-11	1060-1061	`	_	_	
9-12	1061-1066	input	_	_	
9-13	1066-1067	/	_	_	
9-14	1067-1071	data	_	_	
9-15	1071-1072	`	_	_	
9-16	1072-1073	`	_	_	
9-17	1074-1077	for	_	_	
9-18	1078-1083	model	_	_	
9-19	1084-1092	training	_	_	
9-20	1092-1093	/	_	_	
9-21	1093-1100	testing	_	_	
9-22	1100-1101	.	_	_	
9-23	1103-1104	5	_	_	
9-24	1104-1105	.	_	_	

#Text=Use relevance function to prepare relevance files and put them under ``input/nl2prog_input_support_rank`` 
#Text=```
#Text=python wikisql_data/scripts/relevance.py
#Text=```
#Text=6.
10-1	1106-1109	Use	_	_	
10-2	1110-1119	relevance	_	_	
10-3	1120-1128	function	_	_	
10-4	1129-1131	to	_	_	
10-5	1132-1139	prepare	_	_	
10-6	1140-1149	relevance	_	_	
10-7	1150-1155	files	_	_	
10-8	1156-1159	and	_	_	
10-9	1160-1163	put	_	_	
10-10	1164-1168	them	_	_	
10-11	1169-1174	under	_	_	
10-12	1175-1176	`	_	_	
10-13	1176-1177	`	_	_	
10-14	1177-1182	input	_	_	
10-15	1182-1183	/	_	_	
10-16	1183-1209	nl2prog_input_support_rank	_	_	
10-17	1209-1210	`	_	_	
10-18	1210-1211	`	_	_	
10-19	1213-1214	`	_	_	
10-20	1214-1215	`	_	_	
10-21	1215-1216	`	_	_	
10-22	1217-1223	python	_	_	
10-23	1224-1236	wikisql_data	_	_	
10-24	1236-1237	/	_	_	
10-25	1237-1244	scripts	_	_	
10-26	1244-1245	/	_	_	
10-27	1245-1257	relevance.py	_	_	
10-28	1258-1259	`	_	_	
10-29	1259-1260	`	_	_	
10-30	1260-1261	`	_	_	
10-31	1262-1263	6	_	_	
10-32	1263-1264	.	_	_	

#Text=Download pretrained embeddings from [glove](https://nlp.stanford.edu/projects/glove/) and [character n-gram embeddings](http://www.logos.t.u-tokyo.ac.jp/~hassy/publications/arxiv2016jmt/) and put them under ``input/``
#Text=
#Text=
#Text=#### Note we use a new preprocessed dataset (v2) in the [Execute-Guided Decoding](https://arxiv.org/abs/1807.03100) paper
#Text=- A preprocessed dataset can be found [here](https://1drv.ms/u/s!
11-1	1265-1273	Download	_	_	
11-2	1274-1284	pretrained	_	_	
11-3	1285-1295	embeddings	_	_	
11-4	1296-1300	from	_	_	
11-5	1301-1302	[	_	_	
11-6	1302-1307	glove	*	PROJECT	
11-7	1307-1308	]	_	_	
11-8	1308-1309	(	_	_	
11-9	1309-1314	https	_	_	
11-10	1314-1315	:	_	_	
11-11	1315-1316	/	_	_	
11-12	1316-1317	/	_	_	
11-13	1317-1333	nlp.stanford.edu	_	_	
11-14	1333-1334	/	_	_	
11-15	1334-1342	projects	_	_	
11-16	1342-1343	/	_	_	
11-17	1343-1348	glove	*	PROJECT	
11-18	1348-1349	/	_	_	
11-19	1349-1350	)	_	_	
11-20	1351-1354	and	_	_	
11-21	1355-1356	[	_	_	
11-22	1356-1365	character	_	_	
11-23	1366-1372	n-gram	_	_	
11-24	1373-1383	embeddings	_	_	
11-25	1383-1384	]	_	_	
11-26	1384-1385	(	_	_	
11-27	1385-1389	http	_	_	
11-28	1389-1390	:	_	_	
11-29	1390-1391	/	_	_	
11-30	1391-1392	/	_	_	
11-31	1392-1417	www.logos.t.u-tokyo.ac.jp	_	_	
11-32	1417-1418	/	_	_	
11-33	1418-1419	~	_	_	
11-34	1419-1424	hassy	_	_	
11-35	1424-1425	/	_	_	
11-36	1425-1437	publications	_	_	
11-37	1437-1438	/	_	_	
11-38	1438-1450	arxiv2016jmt	_	_	
11-39	1450-1451	/	_	_	
11-40	1451-1452	)	_	_	
11-41	1453-1456	and	_	_	
11-42	1457-1460	put	_	_	
11-43	1461-1465	them	_	_	
11-44	1466-1471	under	_	_	
11-45	1472-1473	`	_	_	
11-46	1473-1474	`	_	_	
11-47	1474-1479	input	_	_	
11-48	1479-1480	/	_	_	
11-49	1480-1481	`	_	_	
11-50	1481-1482	`	_	_	
11-51	1485-1486	#	_	_	
11-52	1486-1487	#	_	_	
11-53	1487-1488	#	_	_	
11-54	1488-1489	#	_	_	
11-55	1490-1494	Note	_	_	
11-56	1495-1497	we	_	_	
11-57	1498-1501	use	_	_	
11-58	1502-1503	a	_	_	
11-59	1504-1507	new	_	_	
11-60	1508-1520	preprocessed	_	_	
11-61	1521-1528	dataset	_	_	
11-62	1529-1530	(	_	_	
11-63	1530-1532	v2	_	_	
11-64	1532-1533	)	_	_	
11-65	1534-1536	in	_	_	
11-66	1537-1540	the	_	_	
11-67	1541-1542	[	_	_	
11-68	1542-1556	Execute-Guided	*[4]	PUBLICATION[4]	
11-69	1557-1565	Decoding	*[4]	PUBLICATION[4]	
11-70	1565-1566	]	_	_	
11-71	1566-1567	(	_	_	
11-72	1567-1572	https	_	_	
11-73	1572-1573	:	_	_	
11-74	1573-1574	/	_	_	
11-75	1574-1575	/	_	_	
11-76	1575-1584	arxiv.org	_	_	
11-77	1584-1585	/	_	_	
11-78	1585-1588	abs	_	_	
11-79	1588-1589	/	_	_	
11-80	1589-1599	1807.03100	_	_	
11-81	1599-1600	)	_	_	
11-82	1601-1606	paper	_	_	
11-83	1607-1608	-	_	_	
11-84	1609-1610	A	_	_	
11-85	1611-1623	preprocessed	_	_	
11-86	1624-1631	dataset	_	_	
11-87	1632-1635	can	_	_	
11-88	1636-1638	be	_	_	
11-89	1639-1644	found	_	_	
11-90	1645-1646	[	_	_	
11-91	1646-1650	here	_	_	
11-92	1650-1651	]	_	_	
11-93	1651-1652	(	_	_	
11-94	1652-1657	https	_	_	
11-95	1657-1658	:	_	_	
11-96	1658-1659	/	_	_	
11-97	1659-1660	/	_	_	
11-98	1660-1667	1drv.ms	_	_	
11-99	1667-1668	/	_	_	
11-100	1668-1669	u	_	_	
11-101	1669-1670	/	_	_	
11-102	1670-1671	s	_	_	
11-103	1671-1672	!	_	_	

#Text=AryzSDJYB5TxnF31OCt_4to7uY2t), where the ``wikisql_train.dat``, ``wikisql_test.dat``, ``wikisql_dev.dat`` are the files that can be directly used in training.
12-1	1672-1691	AryzSDJYB5TxnF31OCt	_	_	
12-2	1691-1692	_	_	_	
12-3	1692-1700	4to7uY2t	_	_	
12-4	1700-1701	)	_	_	
12-5	1701-1702	,	_	_	
12-6	1703-1708	where	_	_	
12-7	1709-1712	the	_	_	
12-8	1713-1714	`	_	_	
12-9	1714-1715	`	_	_	
12-10	1715-1732	wikisql_train.dat	_	_	
12-10.1	1715-1722	wikisql	*	DATASET	
12-11	1732-1733	`	_	_	
12-12	1733-1734	`	_	_	
12-13	1734-1735	,	_	_	
12-14	1736-1737	`	_	_	
12-15	1737-1738	`	_	_	
12-16	1738-1754	wikisql_test.dat	_	_	
12-16.1	1738-1745	wikisql	*	DATASET	
12-17	1754-1755	`	_	_	
12-18	1755-1756	`	_	_	
12-19	1756-1757	,	_	_	
12-20	1758-1759	`	_	_	
12-21	1759-1760	`	_	_	
12-22	1760-1775	wikisql_dev.dat	_	_	
12-22.1	1760-1767	wikisql	*	DATASET	
12-23	1775-1776	`	_	_	
12-24	1776-1777	`	_	_	
12-25	1778-1781	are	_	_	
12-26	1782-1785	the	_	_	
12-27	1786-1791	files	_	_	
12-28	1792-1796	that	_	_	
12-29	1797-1800	can	_	_	
12-30	1801-1803	be	_	_	
12-31	1804-1812	directly	_	_	
12-32	1813-1817	used	_	_	
12-33	1818-1820	in	_	_	
12-34	1821-1829	training	_	_	
12-35	1829-1830	.	_	_	

#Text=Note: the version 2 dataset matches the v1.1 release of [WikiSQL](https://github.com/salesforce/WikiSQL).
13-1	1833-1837	Note	_	_	
13-2	1837-1838	:	_	_	
13-3	1839-1842	the	_	_	
13-4	1843-1850	version	_	_	
13-5	1851-1852	2	_	_	
13-6	1853-1860	dataset	_	_	
13-7	1861-1868	matches	_	_	
13-8	1869-1872	the	_	_	
13-9	1873-1877	v1.1	_	_	
13-10	1878-1885	release	_	_	
13-11	1886-1888	of	_	_	
13-12	1889-1890	[	_	_	
13-13	1890-1897	WikiSQL	*	DATASET	
13-14	1897-1898	]	_	_	
13-15	1898-1899	(	_	_	
13-16	1899-1904	https	_	_	
13-17	1904-1905	:	_	_	
13-18	1905-1906	/	_	_	
13-19	1906-1907	/	_	_	
13-20	1907-1917	github.com	_	_	
13-21	1917-1918	/	_	_	
13-22	1918-1928	salesforce	_	_	
13-23	1928-1929	/	_	_	
13-24	1929-1936	WikiSQL	*	DATASET	
13-25	1936-1937	)	_	_	
13-26	1937-1938	.	_	_	

#Text=The preprocessing script ``wikisql_data/scripts/prepare_v2.py`` (python3 required) processes WikiSQL v1.1 raw data and table files to generate ``wikisql_train.dat``, ``wikisql_test.dat``, ``wikisql_dev.dat``.
#Text=
#Text=
#Text=## Training
#Text=Meta + Sum loss training
#Text=```
#Text=$ OUTDIR=output/meta_sum
#Text=$ mkdir $OUTDIR
#Text=$ python run.py --input-dir .
14-1	1939-1942	The	_	_	
14-2	1943-1956	preprocessing	_	_	
14-3	1957-1963	script	_	_	
14-4	1964-1965	`	_	_	
14-5	1965-1966	`	_	_	
14-6	1966-1978	wikisql_data	_	_	
14-6.1	1966-1973	wikisql	*	DATASET	
14-7	1978-1979	/	_	_	
14-8	1979-1986	scripts	_	_	
14-9	1986-1987	/	_	_	
14-10	1987-1997	prepare_v2	_	_	
14-11	1997-1998	.	_	_	
14-12	1998-2000	py	_	_	
14-13	2000-2001	`	_	_	
14-14	2001-2002	`	_	_	
14-15	2003-2004	(	_	_	
14-16	2004-2011	python3	_	_	
14-17	2012-2020	required	_	_	
14-18	2020-2021	)	_	_	
14-19	2022-2031	processes	_	_	
14-20	2032-2039	WikiSQL	*[5]	DATASET[5]	
14-21	2040-2044	v1.1	*[5]	DATASET[5]	
14-22	2045-2048	raw	_	_	
14-23	2049-2053	data	_	_	
14-24	2054-2057	and	_	_	
14-25	2058-2063	table	_	_	
14-26	2064-2069	files	_	_	
14-27	2070-2072	to	_	_	
14-28	2073-2081	generate	_	_	
14-29	2082-2083	`	_	_	
14-30	2083-2084	`	_	_	
14-31	2084-2101	wikisql_train.dat	_	_	
14-32	2101-2102	`	_	_	
14-33	2102-2103	`	_	_	
14-34	2103-2104	,	_	_	
14-35	2105-2106	`	_	_	
14-36	2106-2107	`	_	_	
14-37	2107-2123	wikisql_test.dat	_	_	
14-37.1	2107-2114	wikisql	*	DATASET	
14-38	2123-2124	`	_	_	
14-39	2124-2125	`	_	_	
14-40	2125-2126	,	_	_	
14-41	2127-2128	`	_	_	
14-42	2128-2129	`	_	_	
14-43	2129-2144	wikisql_dev.dat	_	_	
14-43.1	2129-2136	wikisql	*	DATASET	
14-44	2144-2145	`	_	_	
14-45	2145-2146	`	_	_	
14-46	2146-2147	.	_	_	
14-47	2150-2151	#	_	_	
14-48	2151-2152	#	_	_	
14-49	2153-2161	Training	_	_	
14-50	2162-2166	Meta	_	_	
14-51	2167-2168	+	_	_	
14-52	2169-2172	Sum	_	_	
14-53	2173-2177	loss	_	_	
14-54	2178-2186	training	_	_	
14-55	2187-2188	`	_	_	
14-56	2188-2189	`	_	_	
14-57	2189-2190	`	_	_	
14-58	2191-2192	$	_	_	
14-59	2193-2199	OUTDIR	_	_	
14-60	2199-2200	=	_	_	
14-61	2200-2206	output	_	_	
14-62	2206-2207	/	_	_	
14-63	2207-2215	meta_sum	_	_	
14-64	2216-2217	$	_	_	
14-65	2218-2223	mkdir	_	_	
14-66	2224-2225	$	_	_	
14-67	2225-2231	OUTDIR	_	_	
14-68	2232-2233	$	_	_	
14-69	2234-2240	python	_	_	
14-70	2241-2247	run.py	_	_	
14-71	2248-2249	-	_	_	
14-72	2249-2250	-	_	_	
14-73	2250-2259	input-dir	_	_	
14-74	2260-2261	.	_	_	

#Text=/input \\
#Text=    --output-dir $OUTDIR \\
#Text=    --config config/nl2prog.meta_2_0.001.rank.config  \\
#Text=    --meta_learning_rate 0.001 --gradient_clip_norm 5 \\
#Text=    --num_layers 3  --num_meta_example 2 \\
#Text=    --meta_learning --production
#Text=```
#Text=
#Text=## Evaluation
#Text=- Due to the preprocessing error, we ignore some development (see ``input/data/wikisql_err_dev.dat``) and test (see ``input/data/wikisql_err_test.dat``) set examples, we treat them as incorrect directly.
#Text=- Run evaluation as follows (replace ``model_zoo/meta_sum/table_nl_prog-40`` with ``$OUTDIR/table_nl_prog-??
15-1	2261-2262	/	_	_	
15-2	2262-2267	input	_	_	
15-3	2268-2269	\	_	_	
15-4	2274-2275	-	_	_	
15-5	2275-2276	-	_	_	
15-6	2276-2286	output-dir	_	_	
15-7	2287-2288	$	_	_	
15-8	2288-2294	OUTDIR	_	_	
15-9	2295-2296	\	_	_	
15-10	2301-2302	-	_	_	
15-11	2302-2303	-	_	_	
15-12	2303-2309	config	_	_	
15-13	2310-2316	config	_	_	
15-14	2316-2317	/	_	_	
15-15	2317-2329	nl2prog.meta	_	_	
15-16	2329-2330	_	_	_	
15-17	2330-2331	2	_	_	
15-18	2331-2332	_	_	_	
15-19	2332-2337	0.001	_	_	
15-20	2337-2338	.	_	_	
15-21	2338-2349	rank.config	_	_	
15-22	2351-2352	\	_	_	
15-23	2357-2358	-	_	_	
15-24	2358-2359	-	_	_	
15-25	2359-2377	meta_learning_rate	_	_	
15-26	2378-2383	0.001	_	_	
15-27	2384-2385	-	_	_	
15-28	2385-2386	-	_	_	
15-29	2386-2404	gradient_clip_norm	_	_	
15-30	2405-2406	5	_	_	
15-31	2407-2408	\	_	_	
15-32	2413-2414	-	_	_	
15-33	2414-2415	-	_	_	
15-34	2415-2425	num_layers	_	_	
15-35	2426-2427	3	_	_	
15-36	2429-2430	-	_	_	
15-37	2430-2431	-	_	_	
15-38	2431-2447	num_meta_example	_	_	
15-39	2448-2449	2	_	_	
15-40	2450-2451	\	_	_	
15-41	2456-2457	-	_	_	
15-42	2457-2458	-	_	_	
15-43	2458-2471	meta_learning	_	_	
15-44	2472-2473	-	_	_	
15-45	2473-2474	-	_	_	
15-46	2474-2484	production	_	_	
15-47	2485-2486	`	_	_	
15-48	2486-2487	`	_	_	
15-49	2487-2488	`	_	_	
15-50	2490-2491	#	_	_	
15-51	2491-2492	#	_	_	
15-52	2493-2503	Evaluation	_	_	
15-53	2504-2505	-	_	_	
15-54	2506-2509	Due	_	_	
15-55	2510-2512	to	_	_	
15-56	2513-2516	the	_	_	
15-57	2517-2530	preprocessing	_	_	
15-58	2531-2536	error	_	_	
15-59	2536-2537	,	_	_	
15-60	2538-2540	we	_	_	
15-61	2541-2547	ignore	_	_	
15-62	2548-2552	some	_	_	
15-63	2553-2564	development	_	_	
15-64	2565-2566	(	_	_	
15-65	2566-2569	see	_	_	
15-66	2570-2571	`	_	_	
15-67	2571-2572	`	_	_	
15-68	2572-2577	input	_	_	
15-69	2577-2578	/	_	_	
15-70	2578-2582	data	_	_	
15-71	2582-2583	/	_	_	
15-72	2583-2602	wikisql_err_dev.dat	_	_	
15-73	2602-2603	`	_	_	
15-74	2603-2604	`	_	_	
15-75	2604-2605	)	_	_	
15-76	2606-2609	and	_	_	
15-77	2610-2614	test	_	_	
15-78	2615-2616	(	_	_	
15-79	2616-2619	see	_	_	
15-80	2620-2621	`	_	_	
15-81	2621-2622	`	_	_	
15-82	2622-2627	input	_	_	
15-83	2627-2628	/	_	_	
15-84	2628-2632	data	_	_	
15-85	2632-2633	/	_	_	
15-86	2633-2653	wikisql_err_test.dat	_	_	
15-87	2653-2654	`	_	_	
15-88	2654-2655	`	_	_	
15-89	2655-2656	)	_	_	
15-90	2657-2660	set	_	_	
15-91	2661-2669	examples	_	_	
15-92	2669-2670	,	_	_	
15-93	2671-2673	we	_	_	
15-94	2674-2679	treat	_	_	
15-95	2680-2684	them	_	_	
15-96	2685-2687	as	_	_	
15-97	2688-2697	incorrect	_	_	
15-98	2698-2706	directly	_	_	
15-99	2706-2707	.	_	_	
15-100	2708-2709	-	_	_	
15-101	2710-2713	Run	_	_	
15-102	2714-2724	evaluation	_	_	
15-103	2725-2727	as	_	_	
15-104	2728-2735	follows	_	_	
15-105	2736-2737	(	_	_	
15-106	2737-2744	replace	_	_	
15-107	2745-2746	`	_	_	
15-108	2746-2747	`	_	_	
15-109	2747-2756	model_zoo	_	_	
15-110	2756-2757	/	_	_	
15-111	2757-2765	meta_sum	_	_	
15-112	2765-2766	/	_	_	
15-113	2766-2779	table_nl_prog	_	_	
15-114	2779-2780	-	_	_	
15-115	2780-2782	40	_	_	
15-116	2782-2783	`	_	_	
15-117	2783-2784	`	_	_	
15-118	2785-2789	with	_	_	
15-119	2790-2791	`	_	_	
15-120	2791-2792	`	_	_	
15-121	2792-2793	$	_	_	
15-122	2793-2799	OUTDIR	_	_	
15-123	2799-2800	/	_	_	
15-124	2800-2813	table_nl_prog	_	_	
15-125	2813-2814	-	_	_	
15-126	2814-2815	?	_	_	
15-127	2815-2816	?	_	_	

#Text=`` with the last checkpoint in the folder):
#Text=
#Text=- Development set
#Text=```
#Text=$ mkdir -p ${OUTDIR}_dev
#Text=$ python run.py --input-dir .
16-1	2816-2817	`	_	_	
16-2	2817-2818	`	_	_	
16-3	2819-2823	with	_	_	
16-4	2824-2827	the	_	_	
16-5	2828-2832	last	_	_	
16-6	2833-2843	checkpoint	_	_	
16-7	2844-2846	in	_	_	
16-8	2847-2850	the	_	_	
16-9	2851-2857	folder	_	_	
16-10	2857-2858	)	_	_	
16-11	2858-2859	:	_	_	
16-12	2861-2862	-	_	_	
16-13	2863-2874	Development	_	_	
16-14	2875-2878	set	_	_	
16-15	2879-2880	`	_	_	
16-16	2880-2881	`	_	_	
16-17	2881-2882	`	_	_	
16-18	2883-2884	$	_	_	
16-19	2885-2890	mkdir	_	_	
16-20	2891-2892	-	_	_	
16-21	2892-2893	p	_	_	
16-22	2894-2895	$	_	_	
16-23	2895-2896	{	_	_	
16-24	2896-2902	OUTDIR	_	_	
16-25	2902-2903	}	_	_	
16-26	2903-2904	_	_	_	
16-27	2904-2907	dev	_	_	
16-28	2908-2909	$	_	_	
16-29	2910-2916	python	_	_	
16-30	2917-2923	run.py	_	_	
16-31	2924-2925	-	_	_	
16-32	2925-2926	-	_	_	
16-33	2926-2935	input-dir	_	_	
16-34	2936-2937	.	_	_	

#Text=/input --output-dir ${OUTDIR}_dev \\ 
#Text=    --config config/nl2prog.meta_2_0.001.rank.devconfig \\
#Text=    --meta_learning --test-model model_zoo/meta_sum/table_nl_prog-40  --production
#Text=```
#Text=* Run execution for developement set as follows:
#Text=  ```
#Text=  $ cp ${OUTDIR}_dev/test_top_1.log dev_top_1.log
#Text=  $ python2 execute_dev.py 
#Text=    #Q2 (predition) result is wrong: 1254
#Text=    #Q1 or Q2 fail to parse: 0
#Text=    #Q1 (ground truth) exec to None: 20
#Text=    #Q1 (ground truth) failed to execute: 0
#Text=    Logical Form Accuracy: 0.631383269546
#Text=    Execute Accuracy: 0.68277747403
#Text=  ```  
#Text=- Test set
#Text=```
#Text=$ mkdir -p ${OUTDIR}_test
#Text=$ python run.py --input-dir .
17-1	2937-2938	/	_	_	
17-2	2938-2943	input	_	_	
17-3	2944-2945	-	_	_	
17-4	2945-2946	-	_	_	
17-5	2946-2956	output-dir	_	_	
17-6	2957-2958	$	_	_	
17-7	2958-2959	{	_	_	
17-8	2959-2965	OUTDIR	_	_	
17-9	2965-2966	}	_	_	
17-10	2966-2967	_	_	_	
17-11	2967-2970	dev	_	_	
17-12	2971-2972	\	_	_	
17-13	2978-2979	-	_	_	
17-14	2979-2980	-	_	_	
17-15	2980-2986	config	_	_	
17-16	2987-2993	config	_	_	
17-17	2993-2994	/	_	_	
17-18	2994-3006	nl2prog.meta	_	_	
17-19	3006-3007	_	_	_	
17-20	3007-3008	2	_	_	
17-21	3008-3009	_	_	_	
17-22	3009-3014	0.001	_	_	
17-23	3014-3015	.	_	_	
17-24	3015-3029	rank.devconfig	_	_	
17-25	3030-3031	\	_	_	
17-26	3036-3037	-	_	_	
17-27	3037-3038	-	_	_	
17-28	3038-3051	meta_learning	_	_	
17-29	3052-3053	-	_	_	
17-30	3053-3054	-	_	_	
17-31	3054-3064	test-model	_	_	
17-32	3065-3074	model_zoo	_	_	
17-33	3074-3075	/	_	_	
17-34	3075-3083	meta_sum	_	_	
17-35	3083-3084	/	_	_	
17-36	3084-3097	table_nl_prog	_	_	
17-37	3097-3098	-	_	_	
17-38	3098-3100	40	_	_	
17-39	3102-3103	-	_	_	
17-40	3103-3104	-	_	_	
17-41	3104-3114	production	_	_	
17-42	3115-3116	`	_	_	
17-43	3116-3117	`	_	_	
17-44	3117-3118	`	_	_	
17-45	3119-3120	*	_	_	
17-46	3121-3124	Run	_	_	
17-47	3125-3134	execution	_	_	
17-48	3135-3138	for	_	_	
17-49	3139-3151	developement	_	_	
17-50	3152-3155	set	_	_	
17-51	3156-3158	as	_	_	
17-52	3159-3166	follows	_	_	
17-53	3166-3167	:	_	_	
17-54	3170-3171	`	_	_	
17-55	3171-3172	`	_	_	
17-56	3172-3173	`	_	_	
17-57	3176-3177	$	_	_	
17-58	3178-3180	cp	_	_	
17-59	3181-3182	$	_	_	
17-60	3182-3183	{	_	_	
17-61	3183-3189	OUTDIR	_	_	
17-62	3189-3190	}	_	_	
17-63	3190-3191	_	_	_	
17-64	3191-3194	dev	_	_	
17-65	3194-3195	/	_	_	
17-66	3195-3203	test_top	_	_	
17-67	3203-3204	_	_	_	
17-68	3204-3205	1	_	_	
17-69	3205-3206	.	_	_	
17-70	3206-3209	log	_	_	
17-71	3210-3217	dev_top	_	_	
17-72	3217-3218	_	_	_	
17-73	3218-3219	1	_	_	
17-74	3219-3220	.	_	_	
17-75	3220-3223	log	_	_	
17-76	3226-3227	$	_	_	
17-77	3228-3235	python2	_	_	
17-78	3236-3250	execute_dev.py	_	_	
17-79	3256-3257	#	_	_	
17-80	3257-3259	Q2	_	_	
17-81	3260-3261	(	_	_	
17-82	3261-3270	predition	_	_	
17-83	3270-3271	)	_	_	
17-84	3272-3278	result	_	_	
17-85	3279-3281	is	_	_	
17-86	3282-3287	wrong	_	_	
17-87	3287-3288	:	_	_	
17-88	3289-3293	1254	_	_	
17-89	3298-3299	#	_	_	
17-90	3299-3301	Q1	_	_	
17-91	3302-3304	or	_	_	
17-92	3305-3307	Q2	_	_	
17-93	3308-3312	fail	_	_	
17-94	3313-3315	to	_	_	
17-95	3316-3321	parse	_	_	
17-96	3321-3322	:	_	_	
17-97	3323-3324	0	_	_	
17-98	3329-3330	#	_	_	
17-99	3330-3332	Q1	_	_	
17-100	3333-3334	(	_	_	
17-101	3334-3340	ground	_	_	
17-102	3341-3346	truth	_	_	
17-103	3346-3347	)	_	_	
17-104	3348-3352	exec	_	_	
17-105	3353-3355	to	_	_	
17-106	3356-3360	None	_	_	
17-107	3360-3361	:	_	_	
17-108	3362-3364	20	_	_	
17-109	3369-3370	#	_	_	
17-110	3370-3372	Q1	_	_	
17-111	3373-3374	(	_	_	
17-112	3374-3380	ground	_	_	
17-113	3381-3386	truth	_	_	
17-114	3386-3387	)	_	_	
17-115	3388-3394	failed	_	_	
17-116	3395-3397	to	_	_	
17-117	3398-3405	execute	_	_	
17-118	3405-3406	:	_	_	
17-119	3407-3408	0	_	_	
17-120	3413-3420	Logical	_	_	
17-121	3421-3425	Form	_	_	
17-122	3426-3434	Accuracy	*	EVALMETRIC	
17-123	3434-3435	:	_	_	
17-124	3436-3450	0.631383269546	_	_	
17-125	3455-3462	Execute	_	_	
17-126	3463-3471	Accuracy	*	EVALMETRIC	
17-127	3471-3472	:	_	_	
17-128	3473-3486	0.68277747403	_	_	
17-129	3489-3490	`	_	_	
17-130	3490-3491	`	_	_	
17-131	3491-3492	`	_	_	
17-132	3495-3496	-	_	_	
17-133	3497-3501	Test	_	_	
17-134	3502-3505	set	_	_	
17-135	3506-3507	`	_	_	
17-136	3507-3508	`	_	_	
17-137	3508-3509	`	_	_	
17-138	3510-3511	$	_	_	
17-139	3512-3517	mkdir	_	_	
17-140	3518-3519	-	_	_	
17-141	3519-3520	p	_	_	
17-142	3521-3522	$	_	_	
17-143	3522-3523	{	_	_	
17-144	3523-3529	OUTDIR	_	_	
17-145	3529-3530	}	_	_	
17-146	3530-3531	_	_	_	
17-147	3531-3535	test	_	_	
17-148	3536-3537	$	_	_	
17-149	3538-3544	python	_	_	
17-150	3545-3551	run.py	_	_	
17-151	3552-3553	-	_	_	
17-152	3553-3554	-	_	_	
17-153	3554-3563	input-dir	_	_	
17-154	3564-3565	.	_	_	

#Text=/input --output-dir ${OUTDIR}_test \\ 
#Text=    --config config/nl2prog.meta_2_0.001.rank.testconfig \\
#Text=    --meta_learning --test-model model_zoo/meta_sum/table_nl_prog-40  --production
#Text=```
#Text=* Run execution for test set as follows:
#Text=  ```
#Text=  $ cp ${OUTDIR}_test/test_top_1.log
18-1	3565-3566	/	_	_	
18-2	3566-3571	input	_	_	
18-3	3572-3573	-	_	_	
18-4	3573-3574	-	_	_	
18-5	3574-3584	output-dir	_	_	
18-6	3585-3586	$	_	_	
18-7	3586-3587	{	_	_	
18-8	3587-3593	OUTDIR	_	_	
18-9	3593-3594	}	_	_	
18-10	3594-3595	_	_	_	
18-11	3595-3599	test	_	_	
18-12	3600-3601	\	_	_	
18-13	3607-3608	-	_	_	
18-14	3608-3609	-	_	_	
18-15	3609-3615	config	_	_	
18-16	3616-3622	config	_	_	
18-17	3622-3623	/	_	_	
18-18	3623-3635	nl2prog.meta	_	_	
18-19	3635-3636	_	_	_	
18-20	3636-3637	2	_	_	
18-21	3637-3638	_	_	_	
18-22	3638-3643	0.001	_	_	
18-23	3643-3644	.	_	_	
18-24	3644-3659	rank.testconfig	_	_	
18-25	3660-3661	\	_	_	
18-26	3666-3667	-	_	_	
18-27	3667-3668	-	_	_	
18-28	3668-3681	meta_learning	_	_	
18-29	3682-3683	-	_	_	
18-30	3683-3684	-	_	_	
18-31	3684-3694	test-model	_	_	
18-32	3695-3704	model_zoo	_	_	
18-33	3704-3705	/	_	_	
18-34	3705-3713	meta_sum	_	_	
18-35	3713-3714	/	_	_	
18-36	3714-3727	table_nl_prog	_	_	
18-37	3727-3728	-	_	_	
18-38	3728-3730	40	_	_	
18-39	3732-3733	-	_	_	
18-40	3733-3734	-	_	_	
18-41	3734-3744	production	_	_	
18-42	3745-3746	`	_	_	
18-43	3746-3747	`	_	_	
18-44	3747-3748	`	_	_	
18-45	3749-3750	*	_	_	
18-46	3751-3754	Run	_	_	
18-47	3755-3764	execution	_	_	
18-48	3765-3768	for	_	_	
18-49	3769-3773	test	_	_	
18-50	3774-3777	set	_	_	
18-51	3778-3780	as	_	_	
18-52	3781-3788	follows	_	_	
18-53	3788-3789	:	_	_	
18-54	3792-3793	`	_	_	
18-55	3793-3794	`	_	_	
18-56	3794-3795	`	_	_	
18-57	3798-3799	$	_	_	
18-58	3800-3802	cp	_	_	
18-59	3803-3804	$	_	_	
18-60	3804-3805	{	_	_	
18-61	3805-3811	OUTDIR	_	_	
18-62	3811-3812	}	_	_	
18-63	3812-3813	_	_	_	
18-64	3813-3817	test	_	_	
18-65	3817-3818	/	_	_	
18-66	3818-3826	test_top	_	_	
18-67	3826-3827	_	_	_	
18-68	3827-3828	1	_	_	
18-69	3828-3829	.	_	_	
18-70	3829-3832	log	_	_	

#Text=.
19-1	3833-3834	.	_	_	

#Text=$ python2 execute.py
#Text=    #Q2 (predition) result is wrong: 2556
#Text=    #Q1 or Q2 fail to parse: 0
#Text=    #Q1 (ground truth) exec to None: 48
#Text=    #Q1 (ground truth) failed to execute: 0
#Text=    Logical Form Accuracy: 0.628073829775
#Text=    Execute Accuracy: 0.680379563733
#Text=  ```
#Text=
#Text=- Baseline model on test set
#Text= ```
#Text= $ OUTDIR=output/base_sum
#Text= $ python run.py --input-dir .
20-1	3837-3838	$	_	_	
20-2	3839-3846	python2	_	_	
20-3	3847-3857	execute.py	_	_	
20-4	3862-3863	#	_	_	
20-5	3863-3865	Q2	_	_	
20-6	3866-3867	(	_	_	
20-7	3867-3876	predition	_	_	
20-8	3876-3877	)	_	_	
20-9	3878-3884	result	_	_	
20-10	3885-3887	is	_	_	
20-11	3888-3893	wrong	_	_	
20-12	3893-3894	:	_	_	
20-13	3895-3899	2556	_	_	
20-14	3904-3905	#	_	_	
20-15	3905-3907	Q1	_	_	
20-16	3908-3910	or	_	_	
20-17	3911-3913	Q2	_	_	
20-18	3914-3918	fail	_	_	
20-19	3919-3921	to	_	_	
20-20	3922-3927	parse	_	_	
20-21	3927-3928	:	_	_	
20-22	3929-3930	0	_	_	
20-23	3935-3936	#	_	_	
20-24	3936-3938	Q1	_	_	
20-25	3939-3940	(	_	_	
20-26	3940-3946	ground	_	_	
20-27	3947-3952	truth	_	_	
20-28	3952-3953	)	_	_	
20-29	3954-3958	exec	_	_	
20-30	3959-3961	to	_	_	
20-31	3962-3966	None	_	_	
20-32	3966-3967	:	_	_	
20-33	3968-3970	48	_	_	
20-34	3975-3976	#	_	_	
20-35	3976-3978	Q1	_	_	
20-36	3979-3980	(	_	_	
20-37	3980-3986	ground	_	_	
20-38	3987-3992	truth	_	_	
20-39	3992-3993	)	_	_	
20-40	3994-4000	failed	_	_	
20-41	4001-4003	to	_	_	
20-42	4004-4011	execute	_	_	
20-43	4011-4012	:	_	_	
20-44	4013-4014	0	_	_	
20-45	4019-4026	Logical	_	_	
20-46	4027-4031	Form	_	_	
20-47	4032-4040	Accuracy	*	EVALMETRIC	
20-48	4040-4041	:	_	_	
20-49	4042-4056	0.628073829775	_	_	
20-50	4061-4068	Execute	_	_	
20-51	4069-4077	Accuracy	*	EVALMETRIC	
20-52	4077-4078	:	_	_	
20-53	4079-4093	0.680379563733	_	_	
20-54	4096-4097	`	_	_	
20-55	4097-4098	`	_	_	
20-56	4098-4099	`	_	_	
20-57	4101-4102	-	_	_	
20-58	4103-4111	Baseline	_	_	
20-59	4112-4117	model	_	_	
20-60	4118-4120	on	_	_	
20-61	4121-4125	test	_	_	
20-62	4126-4129	set	_	_	
20-63	4131-4132	`	_	_	
20-64	4132-4133	`	_	_	
20-65	4133-4134	`	_	_	
20-66	4136-4137	$	_	_	
20-67	4138-4144	OUTDIR	_	_	
20-68	4144-4145	=	_	_	
20-69	4145-4151	output	_	_	
20-70	4151-4152	/	_	_	
20-71	4152-4160	base_sum	_	_	
20-72	4162-4163	$	_	_	
20-73	4164-4170	python	_	_	
20-74	4171-4177	run.py	_	_	
20-75	4178-4179	-	_	_	
20-76	4179-4180	-	_	_	
20-77	4180-4189	input-dir	_	_	
20-78	4190-4191	.	_	_	

#Text=/input --output-dir ${OUTDIR}_test \\
#Text=    --config config/nl2prog.testconfig --production  \\
#Text=    --test-model model_zoo/base_sum/table_nl_prog-79 --production
#Text= ```
#Text=
#Text=* Run execution for the baseline model on test set as follows:
#Text=  ```
#Text=  $ cp ${OUTDIR}_test/test_top_1.log
21-1	4191-4192	/	_	_	
21-2	4192-4197	input	_	_	
21-3	4198-4199	-	_	_	
21-4	4199-4200	-	_	_	
21-5	4200-4210	output-dir	_	_	
21-6	4211-4212	$	_	_	
21-7	4212-4213	{	_	_	
21-8	4213-4219	OUTDIR	_	_	
21-9	4219-4220	}	_	_	
21-10	4220-4221	_	_	_	
21-11	4221-4225	test	_	_	
21-12	4226-4227	\	_	_	
21-13	4232-4233	-	_	_	
21-14	4233-4234	-	_	_	
21-15	4234-4240	config	_	_	
21-16	4241-4247	config	_	_	
21-17	4247-4248	/	_	_	
21-18	4248-4266	nl2prog.testconfig	_	_	
21-19	4267-4268	-	_	_	
21-20	4268-4269	-	_	_	
21-21	4269-4279	production	_	_	
21-22	4281-4282	\	_	_	
21-23	4287-4288	-	_	_	
21-24	4288-4289	-	_	_	
21-25	4289-4299	test-model	_	_	
21-26	4300-4309	model_zoo	_	_	
21-27	4309-4310	/	_	_	
21-28	4310-4318	base_sum	_	_	
21-29	4318-4319	/	_	_	
21-30	4319-4332	table_nl_prog	_	_	
21-31	4332-4333	-	_	_	
21-32	4333-4335	79	_	_	
21-33	4336-4337	-	_	_	
21-34	4337-4338	-	_	_	
21-35	4338-4348	production	_	_	
21-36	4350-4351	`	_	_	
21-37	4351-4352	`	_	_	
21-38	4352-4353	`	_	_	
21-39	4355-4356	*	_	_	
21-40	4357-4360	Run	_	_	
21-41	4361-4370	execution	_	_	
21-42	4371-4374	for	_	_	
21-43	4375-4378	the	_	_	
21-44	4379-4387	baseline	_	_	
21-45	4388-4393	model	_	_	
21-46	4394-4396	on	_	_	
21-47	4397-4401	test	_	_	
21-48	4402-4405	set	_	_	
21-49	4406-4408	as	_	_	
21-50	4409-4416	follows	_	_	
21-51	4416-4417	:	_	_	
21-52	4420-4421	`	_	_	
21-53	4421-4422	`	_	_	
21-54	4422-4423	`	_	_	
21-55	4426-4427	$	_	_	
21-56	4428-4430	cp	_	_	
21-57	4431-4432	$	_	_	
21-58	4432-4433	{	_	_	
21-59	4433-4439	OUTDIR	_	_	
21-60	4439-4440	}	_	_	
21-61	4440-4441	_	_	_	
21-62	4441-4445	test	_	_	
21-63	4445-4446	/	_	_	
21-64	4446-4454	test_top	_	_	
21-65	4454-4455	_	_	_	
21-66	4455-4456	1	_	_	
21-67	4456-4457	.	_	_	
21-68	4457-4460	log	_	_	

#Text=.
22-1	4461-4462	.	_	_	

#Text=$ python2 execute.py
#Text=    #Q2 (predition) result is wrong: 2636
#Text=    #Q1 or Q2 fail to parse: 0
#Text=    #Q1 (ground truth) exec to None: 48
#Text=    #Q1 (ground truth) failed to execute: 0
#Text=    Logical Form Accuracy: 0.614592374009
#Text=    Execute Accuracy: 0.668055314471
#Text=  ```
#Text=
#Text=
#Text=# Pre-trained Models
#Text=- Download [pretrained model checkpoints](https://1drv.ms/u/s!
23-1	4465-4466	$	_	_	
23-2	4467-4474	python2	_	_	
23-3	4475-4485	execute.py	_	_	
23-4	4490-4491	#	_	_	
23-5	4491-4493	Q2	_	_	
23-6	4494-4495	(	_	_	
23-7	4495-4504	predition	_	_	
23-8	4504-4505	)	_	_	
23-9	4506-4512	result	_	_	
23-10	4513-4515	is	_	_	
23-11	4516-4521	wrong	_	_	
23-12	4521-4522	:	_	_	
23-13	4523-4527	2636	_	_	
23-14	4532-4533	#	_	_	
23-15	4533-4535	Q1	_	_	
23-16	4536-4538	or	_	_	
23-17	4539-4541	Q2	_	_	
23-18	4542-4546	fail	_	_	
23-19	4547-4549	to	_	_	
23-20	4550-4555	parse	_	_	
23-21	4555-4556	:	_	_	
23-22	4557-4558	0	_	_	
23-23	4563-4564	#	_	_	
23-24	4564-4566	Q1	_	_	
23-25	4567-4568	(	_	_	
23-26	4568-4574	ground	_	_	
23-27	4575-4580	truth	_	_	
23-28	4580-4581	)	_	_	
23-29	4582-4586	exec	_	_	
23-30	4587-4589	to	_	_	
23-31	4590-4594	None	_	_	
23-32	4594-4595	:	_	_	
23-33	4596-4598	48	_	_	
23-34	4603-4604	#	_	_	
23-35	4604-4606	Q1	_	_	
23-36	4607-4608	(	_	_	
23-37	4608-4614	ground	_	_	
23-38	4615-4620	truth	_	_	
23-39	4620-4621	)	_	_	
23-40	4622-4628	failed	_	_	
23-41	4629-4631	to	_	_	
23-42	4632-4639	execute	_	_	
23-43	4639-4640	:	_	_	
23-44	4641-4642	0	_	_	
23-45	4647-4654	Logical	_	_	
23-46	4655-4659	Form	_	_	
23-47	4660-4668	Accuracy	*	EVALMETRIC	
23-48	4668-4669	:	_	_	
23-49	4670-4684	0.614592374009	_	_	
23-50	4689-4696	Execute	_	_	
23-51	4697-4705	Accuracy	*	EVALMETRIC	
23-52	4705-4706	:	_	_	
23-53	4707-4721	0.668055314471	_	_	
23-54	4724-4725	`	_	_	
23-55	4725-4726	`	_	_	
23-56	4726-4727	`	_	_	
23-57	4730-4731	#	_	_	
23-58	4732-4743	Pre-trained	_	_	
23-59	4744-4750	Models	_	_	
23-60	4751-4752	-	_	_	
23-61	4753-4761	Download	_	_	
23-62	4762-4763	[	_	_	
23-63	4763-4773	pretrained	_	_	
23-64	4774-4779	model	_	_	
23-65	4780-4791	checkpoints	_	_	
23-66	4791-4792	]	_	_	
23-67	4792-4793	(	_	_	
23-68	4793-4798	https	_	_	
23-69	4798-4799	:	_	_	
23-70	4799-4800	/	_	_	
23-71	4800-4801	/	_	_	
23-72	4801-4808	1drv.ms	_	_	
23-73	4808-4809	/	_	_	
23-74	4809-4810	u	_	_	
23-75	4810-4811	/	_	_	
23-76	4811-4812	s	_	_	
23-77	4812-4813	!	_	_	

#Text=AryzSDJYB5TxnDR5I4rYjLi4HUYz) to ``model_zoo/`` 
#Text=- Run ``tar -xvjf model_zoo.tar.bz2`` to extract pretrain models
24-1	4813-4841	AryzSDJYB5TxnDR5I4rYjLi4HUYz	_	_	
24-2	4841-4842	)	_	_	
24-3	4843-4845	to	_	_	
24-4	4846-4847	`	_	_	
24-5	4847-4848	`	_	_	
24-6	4848-4857	model_zoo	_	_	
24-7	4857-4858	/	_	_	
24-8	4858-4859	`	_	_	
24-9	4859-4860	`	_	_	
24-10	4862-4863	-	_	_	
24-11	4864-4867	Run	_	_	
24-12	4868-4869	`	_	_	
24-13	4869-4870	`	_	_	
24-14	4870-4873	tar	_	_	
24-15	4874-4875	-	_	_	
24-16	4875-4879	xvjf	_	_	
24-17	4880-4897	model_zoo.tar.bz2	_	_	
24-18	4897-4898	`	_	_	
24-19	4898-4899	`	_	_	
24-20	4900-4902	to	_	_	
24-21	4903-4910	extract	_	_	
24-22	4911-4919	pretrain	_	_	
24-23	4920-4926	models	_	_	

#Text=.
25-1	4926-4927	.	_	_	

#Text=+ Meta + Sum loss: `model_zoo/meta_sum`
#Text=  + Base Sum loss: `model_zoo/base_sum`
#Text=
#Text=
#Text=# Requirements 
#Text=- Tensorflow 1.4
#Text=- python 3.6
#Text=- [Stanza](https://github.com/stanfordnlp/stanza)
#Text=
#Text=
#Text=# Citation
#Text=
#Text=If you use the code in your paper, then please cite it as:
#Text=
#Text=
#Text=
#Text=```
#Text=@inproceedings{pshuang2018PT-MAML,
#Text=  author    = {Po{-}Sen Huang and
#Text=               Chenglong Wang and
#Text=               Rishabh Singh and
#Text=               Wen-tau Yih and
#Text=               Xiaodong He},
#Text=  title     = {Natural Language to Structured Query Generation via Meta-Learning},
#Text=  booktitle = {NAACL},
#Text=  year      = {2018},
#Text=}
#Text=```
#Text=
#Text=
#Text=```
#Text=@inproceedings{2018executionguided,
#Text=  author    = {Chenglong Wang and
#Text=               Po{-}Sen Huang and
#Text=               Alex Polozov and
#Text=               Marc Brockschmidt and 
#Text=               Rishabh Singh},
#Text=  title = "{Execution-Guided Neural Program Decoding}",
#Text=  booktitle = {ICML workshop on Neural Abstract Machines & Program Induction v2 (NAMPI)},
#Text=  year = {2018}
#Text=}
#Text=```
#Text=
#Text=
#Text=and
#Text=
#Text=
#Text=```
#Text=@techreport{chenglong,
#Text=  author = {Wang, Chenglong and Brockschmidt, Marc and Singh, Rishabh},
#Text=  title = {Pointing Out {SQL} Queries From Text},
#Text=  number = {MSR-TR-2017-45},
#Text=  year = {2017},
#Text=  month = {November},
#Text=  url = {https://www.microsoft.com/en-us/research/publication/pointing-sql-queries-text/},
#Text=}
#Text=```
#Text=
#Text=
#Text=
#Text=# Contributing
#Text=
#Text=This project welcomes contributions and suggestions.
26-1	4931-4932	+	_	_	
26-2	4933-4937	Meta	_	_	
26-3	4938-4939	+	_	_	
26-4	4940-4943	Sum	_	_	
26-5	4944-4948	loss	_	_	
26-6	4948-4949	:	_	_	
26-7	4950-4951	`	_	_	
26-8	4951-4960	model_zoo	_	_	
26-9	4960-4961	/	_	_	
26-10	4961-4969	meta_sum	_	_	
26-11	4969-4970	`	_	_	
26-12	4973-4974	+	_	_	
26-13	4975-4979	Base	_	_	
26-14	4980-4983	Sum	_	_	
26-15	4984-4988	loss	_	_	
26-16	4988-4989	:	_	_	
26-17	4990-4991	`	_	_	
26-18	4991-5000	model_zoo	_	_	
26-19	5000-5001	/	_	_	
26-20	5001-5009	base_sum	_	_	
26-21	5009-5010	`	_	_	
26-22	5013-5014	#	_	_	
26-23	5015-5027	Requirements	_	_	
26-24	5029-5030	-	_	_	
26-25	5031-5041	Tensorflow	*[6]	SOFTWARE[6]	
26-26	5042-5045	1.4	*[6]	SOFTWARE[6]	
26-27	5046-5047	-	_	_	
26-28	5048-5054	python	*[7]	PROGLANG[7]	
26-29	5055-5058	3.6	*[7]	PROGLANG[7]	
26-30	5059-5060	-	_	_	
26-31	5061-5062	[	_	_	
26-32	5062-5068	Stanza	*	SOFTWARE	
26-33	5068-5069	]	_	_	
26-34	5069-5070	(	_	_	
26-35	5070-5075	https	_	_	
26-36	5075-5076	:	_	_	
26-37	5076-5077	/	_	_	
26-38	5077-5078	/	_	_	
26-39	5078-5088	github.com	_	_	
26-40	5088-5089	/	_	_	
26-41	5089-5100	stanfordnlp	_	_	
26-42	5100-5101	/	_	_	
26-43	5101-5107	stanza	*	SOFTWARE	
26-44	5107-5108	)	_	_	
26-45	5111-5112	#	_	_	
26-46	5113-5121	Citation	_	_	
26-47	5123-5125	If	_	_	
26-48	5126-5129	you	_	_	
26-49	5130-5133	use	_	_	
26-50	5134-5137	the	_	_	
26-51	5138-5142	code	_	_	
26-52	5143-5145	in	_	_	
26-53	5146-5150	your	_	_	
26-54	5151-5156	paper	_	_	
26-55	5156-5157	,	_	_	
26-56	5158-5162	then	_	_	
26-57	5163-5169	please	_	_	
26-58	5170-5174	cite	_	_	
26-59	5175-5177	it	_	_	
26-60	5178-5180	as	_	_	
26-61	5180-5181	:	_	_	
26-62	5185-5186	`	_	_	
26-63	5186-5187	`	_	_	
26-64	5187-5188	`	_	_	
26-65	5189-5190	@	_	_	
26-66	5190-5203	inproceedings	_	_	
26-67	5203-5204	{	_	_	
26-68	5204-5222	pshuang2018PT-MAML	_	_	
26-69	5222-5223	,	_	_	
26-70	5226-5232	author	_	_	
26-71	5236-5237	=	_	_	
26-72	5238-5239	{	_	_	
26-73	5239-5241	Po	_	_	
26-74	5241-5242	{	_	_	
26-75	5242-5243	-	_	_	
26-76	5243-5244	}	_	_	
26-77	5244-5247	Sen	_	_	
26-78	5248-5253	Huang	_	_	
26-79	5254-5257	and	_	_	
26-80	5273-5282	Chenglong	_	_	
26-81	5283-5287	Wang	_	_	
26-82	5288-5291	and	_	_	
26-83	5307-5314	Rishabh	_	_	
26-84	5315-5320	Singh	_	_	
26-85	5321-5324	and	_	_	
26-86	5340-5347	Wen-tau	_	_	
26-87	5348-5351	Yih	_	_	
26-88	5352-5355	and	_	_	
26-89	5371-5379	Xiaodong	_	_	
26-90	5380-5382	He	_	_	
26-91	5382-5383	}	_	_	
26-92	5383-5384	,	_	_	
26-93	5387-5392	title	_	_	
26-94	5397-5398	=	_	_	
26-95	5399-5400	{	_	_	
26-96	5400-5407	Natural	*[8]	PUBLICATION[8]	
26-97	5408-5416	Language	*[8]	PUBLICATION[8]	
26-98	5417-5419	to	*[8]	PUBLICATION[8]	
26-99	5420-5430	Structured	*[8]	PUBLICATION[8]	
26-100	5431-5436	Query	*[8]	PUBLICATION[8]	
26-101	5437-5447	Generation	*[8]	PUBLICATION[8]	
26-102	5448-5451	via	*[8]	PUBLICATION[8]	
26-103	5452-5465	Meta-Learning	*[8]	PUBLICATION[8]	
26-104	5465-5466	}	_	_	
26-105	5466-5467	,	_	_	
26-106	5470-5479	booktitle	_	_	
26-107	5480-5481	=	_	_	
26-108	5482-5483	{	_	_	
26-109	5483-5488	NAACL	*	CONFERENCE	
26-110	5488-5489	}	_	_	
26-111	5489-5490	,	_	_	
26-112	5493-5497	year	_	_	
26-113	5503-5504	=	_	_	
26-114	5505-5506	{	_	_	
26-115	5506-5510	2018	_	_	
26-116	5510-5511	}	_	_	
26-117	5511-5512	,	_	_	
26-118	5513-5514	}	_	_	
26-119	5515-5516	`	_	_	
26-120	5516-5517	`	_	_	
26-121	5517-5518	`	_	_	
26-122	5521-5522	`	_	_	
26-123	5522-5523	`	_	_	
26-124	5523-5524	`	_	_	
26-125	5525-5526	@	_	_	
26-126	5526-5539	inproceedings	_	_	
26-127	5539-5540	{	_	_	
26-128	5540-5559	2018executionguided	_	_	
26-129	5559-5560	,	_	_	
26-130	5563-5569	author	_	_	
26-131	5573-5574	=	_	_	
26-132	5575-5576	{	_	_	
26-133	5576-5585	Chenglong	_	_	
26-134	5586-5590	Wang	_	_	
26-135	5591-5594	and	_	_	
26-136	5610-5612	Po	_	_	
26-137	5612-5613	{	_	_	
26-138	5613-5614	-	_	_	
26-139	5614-5615	}	_	_	
26-140	5615-5618	Sen	_	_	
26-141	5619-5624	Huang	_	_	
26-142	5625-5628	and	_	_	
26-143	5644-5648	Alex	_	_	
26-144	5649-5656	Polozov	_	_	
26-145	5657-5660	and	_	_	
26-146	5676-5680	Marc	_	_	
26-147	5681-5693	Brockschmidt	_	_	
26-148	5694-5697	and	_	_	
26-149	5714-5721	Rishabh	_	_	
26-150	5722-5727	Singh	_	_	
26-151	5727-5728	}	_	_	
26-152	5728-5729	,	_	_	
26-153	5732-5737	title	_	_	
26-154	5738-5739	=	_	_	
26-155	5740-5741	"	_	_	
26-156	5741-5742	{	_	_	
26-157	5742-5758	Execution-Guided	*[9]	PUBLICATION[9]	
26-158	5759-5765	Neural	*[9]	PUBLICATION[9]	
26-159	5766-5773	Program	*[9]	PUBLICATION[9]	
26-160	5774-5782	Decoding	*[9]	PUBLICATION[9]	
26-161	5782-5783	}	_	_	
26-162	5783-5784	"	_	_	
26-163	5784-5785	,	_	_	
26-164	5788-5797	booktitle	_	_	
26-165	5798-5799	=	_	_	
26-166	5800-5801	{	_	_	
26-167	5801-5805	ICML	*[10]|*[11]|*[12]	PUBLICATION[10]|WORKSHOP[11]|CONFERENCE[12]	
26-168	5806-5814	workshop	*[10]|*[11]	PUBLICATION[10]|WORKSHOP[11]	
26-169	5815-5817	on	*[10]	PUBLICATION[10]	
26-170	5818-5824	Neural	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-171	5825-5833	Abstract	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-172	5834-5842	Machines	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-173	5843-5844	&	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-174	5845-5852	Program	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-175	5853-5862	Induction	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-176	5863-5865	v2	*[10]|*[13]	PUBLICATION[10]|*[13]	
26-177	5866-5867	(	_	_	
26-178	5867-5872	NAMPI	_	_	
26-179	5872-5873	)	_	_	
26-180	5873-5874	}	_	_	
26-181	5874-5875	,	_	_	
26-182	5878-5882	year	_	_	
26-183	5883-5884	=	_	_	
26-184	5885-5886	{	_	_	
26-185	5886-5890	2018	_	_	
26-186	5890-5891	}	_	_	
26-187	5892-5893	}	_	_	
26-188	5894-5895	`	_	_	
26-189	5895-5896	`	_	_	
26-190	5896-5897	`	_	_	
26-191	5900-5903	and	_	_	
26-192	5906-5907	`	_	_	
26-193	5907-5908	`	_	_	
26-194	5908-5909	`	_	_	
26-195	5910-5911	@	_	_	
26-196	5911-5921	techreport	_	_	
26-197	5921-5922	{	_	_	
26-198	5922-5931	chenglong	_	_	
26-199	5931-5932	,	_	_	
26-200	5935-5941	author	_	_	
26-201	5942-5943	=	_	_	
26-202	5944-5945	{	_	_	
26-203	5945-5949	Wang	_	_	
26-204	5949-5950	,	_	_	
26-205	5951-5960	Chenglong	_	_	
26-206	5961-5964	and	_	_	
26-207	5965-5977	Brockschmidt	_	_	
26-208	5977-5978	,	_	_	
26-209	5979-5983	Marc	_	_	
26-210	5984-5987	and	_	_	
26-211	5988-5993	Singh	_	_	
26-212	5993-5994	,	_	_	
26-213	5995-6002	Rishabh	_	_	
26-214	6002-6003	}	_	_	
26-215	6003-6004	,	_	_	
26-216	6007-6012	title	_	_	
26-217	6013-6014	=	_	_	
26-218	6015-6016	{	_	_	
26-219	6016-6024	Pointing	*[14]	PUBLICATION[14]	
26-220	6025-6028	Out	*[14]	PUBLICATION[14]	
26-221	6029-6030	{	*[14]	PUBLICATION[14]	
26-222	6030-6033	SQL	*[14]|*[15]	PUBLICATION[14]|PROGLANG[15]	
26-223	6033-6034	}	*[14]	PUBLICATION[14]	
26-224	6035-6042	Queries	*[14]	PUBLICATION[14]	
26-225	6043-6047	From	*[14]	PUBLICATION[14]	
26-226	6048-6052	Text	*[14]	PUBLICATION[14]	
26-227	6052-6053	}	_	_	
26-228	6053-6054	,	_	_	
26-229	6057-6063	number	_	_	
26-230	6064-6065	=	_	_	
26-231	6066-6067	{	_	_	
26-232	6067-6073	MSR-TR	_	_	
26-233	6073-6074	-	_	_	
26-234	6074-6078	2017	_	_	
26-235	6078-6079	-	_	_	
26-236	6079-6081	45	_	_	
26-237	6081-6082	}	_	_	
26-238	6082-6083	,	_	_	
26-239	6086-6090	year	_	_	
26-240	6091-6092	=	_	_	
26-241	6093-6094	{	_	_	
26-242	6094-6098	2017	_	_	
26-243	6098-6099	}	_	_	
26-244	6099-6100	,	_	_	
26-245	6103-6108	month	_	_	
26-246	6109-6110	=	_	_	
26-247	6111-6112	{	_	_	
26-248	6112-6120	November	_	_	
26-249	6120-6121	}	_	_	
26-250	6121-6122	,	_	_	
26-251	6125-6128	url	_	_	
26-252	6129-6130	=	_	_	
26-253	6131-6132	{	_	_	
26-254	6132-6137	https	_	_	
26-255	6137-6138	:	_	_	
26-256	6138-6139	/	_	_	
26-257	6139-6140	/	_	_	
26-258	6140-6157	www.microsoft.com	_	_	
26-259	6157-6158	/	_	_	
26-260	6158-6163	en-us	_	_	
26-261	6163-6164	/	_	_	
26-262	6164-6172	research	_	_	
26-263	6172-6173	/	_	_	
26-264	6173-6184	publication	_	_	
26-265	6184-6185	/	_	_	
26-266	6185-6210	pointing-sql-queries-text	_	_	
26-266.1	6194-6197	sql	*	PROGLANG	
26-267	6210-6211	/	_	_	
26-268	6211-6212	}	_	_	
26-269	6212-6213	,	_	_	
26-270	6214-6215	}	_	_	
26-271	6216-6217	`	_	_	
26-272	6217-6218	`	_	_	
26-273	6218-6219	`	_	_	
26-274	6223-6224	#	_	_	
26-275	6225-6237	Contributing	_	_	
26-276	6239-6243	This	_	_	
26-277	6244-6251	project	_	_	
26-278	6252-6260	welcomes	_	_	
26-279	6261-6274	contributions	_	_	
26-280	6275-6278	and	_	_	
26-281	6279-6290	suggestions	_	_	
26-282	6290-6291	.	_	_	

#Text=Most contributions require you to agree to a
#Text=Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us
#Text=the rights to use your contribution.
27-1	6293-6297	Most	_	_	
27-2	6298-6311	contributions	_	_	
27-3	6312-6319	require	_	_	
27-4	6320-6323	you	_	_	
27-5	6324-6326	to	_	_	
27-6	6327-6332	agree	_	_	
27-7	6333-6335	to	_	_	
27-8	6336-6337	a	_	_	
27-9	6338-6349	Contributor	*[16]	LICENSE[16]	
27-10	6350-6357	License	*[16]	LICENSE[16]	
27-11	6358-6367	Agreement	*[16]	LICENSE[16]	
27-12	6368-6369	(	_	_	
27-13	6369-6372	CLA	*	LICENSE	
27-14	6372-6373	)	_	_	
27-15	6374-6383	declaring	_	_	
27-16	6384-6388	that	_	_	
27-17	6389-6392	you	_	_	
27-18	6393-6397	have	_	_	
27-19	6398-6401	the	_	_	
27-20	6402-6407	right	_	_	
27-21	6408-6410	to	_	_	
27-22	6410-6411	,	_	_	
27-23	6412-6415	and	_	_	
27-24	6416-6424	actually	_	_	
27-25	6425-6427	do	_	_	
27-26	6427-6428	,	_	_	
27-27	6429-6434	grant	_	_	
27-28	6435-6437	us	_	_	
27-29	6438-6441	the	_	_	
27-30	6442-6448	rights	_	_	
27-31	6449-6451	to	_	_	
27-32	6452-6455	use	_	_	
27-33	6456-6460	your	_	_	
27-34	6461-6473	contribution	_	_	
27-35	6473-6474	.	_	_	

#Text=For details, visit https://cla.microsoft.com.
28-1	6475-6478	For	_	_	
28-2	6479-6486	details	_	_	
28-3	6486-6487	,	_	_	
28-4	6488-6493	visit	_	_	
28-5	6494-6499	https	_	_	
28-6	6499-6500	:	_	_	
28-7	6500-6501	/	_	_	
28-8	6501-6502	/	_	_	
28-9	6502-6519	cla.microsoft.com	_	_	
28-10	6519-6520	.	_	_	

#Text=When you submit a pull request, a CLA-bot will automatically determine whether you need to provide
#Text=a CLA and decorate the PR appropriately (e.g., label, comment).
29-1	6522-6526	When	_	_	
29-2	6527-6530	you	_	_	
29-3	6531-6537	submit	_	_	
29-4	6538-6539	a	_	_	
29-5	6540-6544	pull	_	_	
29-6	6545-6552	request	_	_	
29-7	6552-6553	,	_	_	
29-8	6554-6555	a	_	_	
29-9	6556-6563	CLA-bot	*	SOFTWARE	
29-10	6564-6568	will	_	_	
29-11	6569-6582	automatically	_	_	
29-12	6583-6592	determine	_	_	
29-13	6593-6600	whether	_	_	
29-14	6601-6604	you	_	_	
29-15	6605-6609	need	_	_	
29-16	6610-6612	to	_	_	
29-17	6613-6620	provide	_	_	
29-18	6621-6622	a	_	_	
29-19	6623-6626	CLA	*	LICENSE	
29-20	6627-6630	and	_	_	
29-21	6631-6639	decorate	_	_	
29-22	6640-6643	the	_	_	
29-23	6644-6646	PR	_	_	
29-24	6647-6660	appropriately	_	_	
29-25	6661-6662	(	_	_	
29-26	6662-6665	e.g	_	_	
29-27	6665-6666	.	_	_	
29-28	6666-6667	,	_	_	
29-29	6668-6673	label	_	_	
29-30	6673-6674	,	_	_	
29-31	6675-6682	comment	_	_	
29-32	6682-6683	)	_	_	
29-33	6683-6684	.	_	_	

#Text=Simply follow the instructions
#Text=provided by the bot.
30-1	6685-6691	Simply	_	_	
30-2	6692-6698	follow	_	_	
30-3	6699-6702	the	_	_	
30-4	6703-6715	instructions	_	_	
30-5	6716-6724	provided	_	_	
30-6	6725-6727	by	_	_	
30-7	6728-6731	the	_	_	
30-8	6732-6735	bot	_	_	
30-9	6735-6736	.	_	_	

#Text=You will only need to do this once across all repos using our CLA.
31-1	6737-6740	You	_	_	
31-2	6741-6745	will	_	_	
31-3	6746-6750	only	_	_	
31-4	6751-6755	need	_	_	
31-5	6756-6758	to	_	_	
31-6	6759-6761	do	_	_	
31-7	6762-6766	this	_	_	
31-8	6767-6771	once	_	_	
31-9	6772-6778	across	_	_	
31-10	6779-6782	all	_	_	
31-11	6783-6788	repos	_	_	
31-12	6789-6794	using	_	_	
31-13	6795-6798	our	_	_	
31-14	6799-6802	CLA	*	LICENSE	
31-15	6802-6803	.	_	_	

#Text=This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).
32-1	6805-6809	This	_	_	
32-2	6810-6817	project	_	_	
32-3	6818-6821	has	_	_	
32-4	6822-6829	adopted	_	_	
32-5	6830-6833	the	_	_	
32-6	6834-6835	[	_	_	
32-7	6835-6844	Microsoft	_	_	
32-8	6845-6849	Open	_	_	
32-9	6850-6856	Source	_	_	
32-10	6857-6861	Code	_	_	
32-11	6862-6864	of	_	_	
32-12	6865-6872	Conduct	_	_	
32-13	6872-6873	]	_	_	
32-14	6873-6874	(	_	_	
32-15	6874-6879	https	_	_	
32-16	6879-6880	:	_	_	
32-17	6880-6881	/	_	_	
32-18	6881-6882	/	_	_	
32-19	6882-6906	opensource.microsoft.com	_	_	
32-20	6906-6907	/	_	_	
32-21	6907-6920	codeofconduct	_	_	
32-22	6920-6921	/	_	_	
32-23	6921-6922	)	_	_	
32-24	6922-6923	.	_	_	

#Text=For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or
#Text=contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.
33-1	6924-6927	For	_	_	
33-2	6928-6932	more	_	_	
33-3	6933-6944	information	_	_	
33-4	6945-6948	see	_	_	
33-5	6949-6952	the	_	_	
33-6	6953-6954	[	_	_	
33-7	6954-6958	Code	_	_	
33-8	6959-6961	of	_	_	
33-9	6962-6969	Conduct	_	_	
33-10	6970-6973	FAQ	_	_	
33-11	6973-6974	]	_	_	
33-12	6974-6975	(	_	_	
33-13	6975-6980	https	_	_	
33-14	6980-6981	:	_	_	
33-15	6981-6982	/	_	_	
33-16	6982-6983	/	_	_	
33-17	6983-7007	opensource.microsoft.com	_	_	
33-18	7007-7008	/	_	_	
33-19	7008-7021	codeofconduct	_	_	
33-20	7021-7022	/	_	_	
33-21	7022-7025	faq	_	_	
33-22	7025-7026	/	_	_	
33-23	7026-7027	)	_	_	
33-24	7028-7030	or	_	_	
33-25	7031-7038	contact	_	_	
33-26	7039-7040	[	_	_	
33-27	7040-7048	opencode	_	_	
33-28	7048-7049	@	_	_	
33-29	7049-7062	microsoft.com	_	_	
33-30	7062-7063	]	_	_	
33-31	7063-7064	(	_	_	
33-32	7064-7070	mailto	_	_	
33-33	7070-7071	:	_	_	
33-34	7071-7079	opencode	_	_	
33-35	7079-7080	@	_	_	
33-36	7080-7093	microsoft.com	_	_	
33-37	7093-7094	)	_	_	
33-38	7095-7099	with	_	_	
33-39	7100-7103	any	_	_	
33-40	7104-7114	additional	_	_	
33-41	7115-7124	questions	_	_	
33-42	7125-7127	or	_	_	
33-43	7128-7136	comments	_	_	
33-44	7136-7137	.	_	_	
