#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=<div align="center">
#Text=  <img src="https://github.com/user-attachments/assets/53d5c1f8-8fbc-4e0f-bd62-db16797492b0" alt="slideflow logo">
#Text=
#Text=  [!
1-1	0-1	<	_	_	
1-2	1-4	div	_	_	
1-3	5-10	align	_	_	
1-4	10-11	=	_	_	
1-5	11-12	"	_	_	
1-6	12-18	center	_	_	
1-7	18-19	"	_	_	
1-8	19-20	>	_	_	
1-9	23-24	<	_	_	
1-10	24-27	img	_	_	
1-11	28-31	src	_	_	
1-12	31-32	=	_	_	
1-13	32-33	"	_	_	
1-14	33-38	https	_	_	
1-15	38-39	:	_	_	
1-16	39-40	/	_	_	
1-17	40-41	/	_	_	
1-18	41-51	github.com	_	_	
1-19	51-52	/	_	_	
1-20	52-68	user-attachments	_	_	
1-21	68-69	/	_	_	
1-22	69-75	assets	_	_	
1-23	75-76	/	_	_	
1-24	76-84	53d5c1f8	_	_	
1-25	84-85	-	_	_	
1-26	85-89	8fbc	_	_	
1-27	89-90	-	_	_	
1-28	90-99	4e0f-bd62	_	_	
1-29	99-100	-	_	_	
1-30	100-112	db16797492b0	_	_	
1-31	112-113	"	_	_	
1-32	114-117	alt	_	_	
1-33	117-118	=	_	_	
1-34	118-119	"	_	_	
1-35	119-128	slideflow	_	_	
1-36	129-133	logo	_	_	
1-37	133-134	"	_	_	
1-38	134-135	>	_	_	
1-39	139-140	[	_	_	
1-40	140-141	!	_	_	

#Text=[DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5703792.svg)](https://doi.org/10.5281/zenodo.5703792)
#Text=  [!
2-1	141-142	[	_	_	
2-2	142-145	DOI	_	_	
2-3	145-146	]	_	_	
2-4	146-147	(	_	_	
2-5	147-152	https	_	_	
2-6	152-153	:	_	_	
2-7	153-154	/	_	_	
2-8	154-155	/	_	_	
2-9	155-165	zenodo.org	_	_	
2-10	165-166	/	_	_	
2-11	166-171	badge	_	_	
2-12	171-172	/	_	_	
2-13	172-175	DOI	_	_	
2-14	175-176	/	_	_	
2-15	176-183	10.5281	_	_	
2-16	183-184	/	_	_	
2-17	184-190	zenodo	_	_	
2-18	190-198	.5703792	_	_	
2-19	198-199	.	_	_	
2-20	199-202	svg	_	_	
2-21	202-203	)	_	_	
2-22	203-204	]	_	_	
2-23	204-205	(	_	_	
2-24	205-210	https	_	_	
2-25	210-211	:	_	_	
2-26	211-212	/	_	_	
2-27	212-213	/	_	_	
2-28	213-220	doi.org	_	_	
2-29	220-221	/	_	_	
2-30	221-228	10.5281	_	_	
2-31	228-229	/	_	_	
2-32	229-235	zenodo	_	_	
2-33	235-243	.5703792	_	_	
2-34	243-244	)	_	_	
2-35	247-248	[	_	_	
2-36	248-249	!	_	_	

#Text=[Python application](https://github.com/slideflow/slideflow/actions/workflows/python-app.yml/badge.svg?
3-1	249-250	[	_	_	
3-2	250-256	Python	*	PROGLANG	
3-3	257-268	application	_	_	
3-4	268-269	]	_	_	
3-5	269-270	(	_	_	
3-6	270-275	https	_	_	
3-7	275-276	:	_	_	
3-8	276-277	/	_	_	
3-9	277-278	/	_	_	
3-10	278-288	github.com	_	_	
3-11	288-289	/	_	_	
3-12	289-298	slideflow	_	_	
3-13	298-299	/	_	_	
3-14	299-308	slideflow	_	_	
3-15	308-309	/	_	_	
3-16	309-316	actions	_	_	
3-17	316-317	/	_	_	
3-18	317-326	workflows	_	_	
3-19	326-327	/	_	_	
3-20	327-341	python-app.yml	_	_	
3-20.1	327-333	python	*	PROGLANG	
3-21	341-342	/	_	_	
3-22	342-351	badge.svg	_	_	
3-23	351-352	?	_	_	

#Text=branch=master)](https://github.com/slideflow/slideflow/actions/workflows/python-app.yml)
#Text=  [!
4-1	352-358	branch	_	_	
4-2	358-359	=	_	_	
4-3	359-365	master	_	_	
4-4	365-366	)	_	_	
4-5	366-367	]	_	_	
4-6	367-368	(	_	_	
4-7	368-373	https	_	_	
4-8	373-374	:	_	_	
4-9	374-375	/	_	_	
4-10	375-376	/	_	_	
4-11	376-386	github.com	_	_	
4-12	386-387	/	_	_	
4-13	387-396	slideflow	_	_	
4-14	396-397	/	_	_	
4-15	397-406	slideflow	_	_	
4-16	406-407	/	_	_	
4-17	407-414	actions	_	_	
4-18	414-415	/	_	_	
4-19	415-424	workflows	_	_	
4-20	424-425	/	_	_	
4-21	425-439	python-app.yml	_	_	
4-22	439-440	)	_	_	
4-23	443-444	[	_	_	
4-24	444-445	!	_	_	

#Text=[PyPI version](https://badge.fury.io/py/slideflow.svg)](https://badge.fury.io/py/slideflow)
#Text=
#Text=  [ArXiv](https://arxiv.org/abs/2304.04142) | [Docs](https://slideflow.dev) | [Slideflow Studio](https://slideflow.dev/studio/) | [Cite](#reference) | [✨ What's New in 3.0 ✨](https://github.com/slideflow/slideflow/releases/tag/3.0.0)
#Text=
#Text=  ______________________________________________________________________
#Text=
#Text=  !
5-1	445-446	[	_	_	
5-2	446-450	PyPI	_	_	
5-3	451-458	version	_	_	
5-4	458-459	]	_	_	
5-5	459-460	(	_	_	
5-6	460-465	https	_	_	
5-7	465-466	:	_	_	
5-8	466-467	/	_	_	
5-9	467-468	/	_	_	
5-10	468-481	badge.fury.io	_	_	
5-11	481-482	/	_	_	
5-12	482-484	py	_	_	
5-13	484-485	/	_	_	
5-14	485-498	slideflow.svg	_	_	
5-15	498-499	)	_	_	
5-16	499-500	]	_	_	
5-17	500-501	(	_	_	
5-18	501-506	https	_	_	
5-19	506-507	:	_	_	
5-20	507-508	/	_	_	
5-21	508-509	/	_	_	
5-22	509-522	badge.fury.io	_	_	
5-23	522-523	/	_	_	
5-24	523-525	py	_	_	
5-25	525-526	/	_	_	
5-26	526-535	slideflow	_	_	
5-27	535-536	)	_	_	
5-28	540-541	[	_	_	
5-29	541-546	ArXiv	_	_	
5-30	546-547	]	_	_	
5-31	547-548	(	_	_	
5-32	548-553	https	_	_	
5-33	553-554	:	_	_	
5-34	554-555	/	_	_	
5-35	555-556	/	_	_	
5-36	556-565	arxiv.org	_	_	
5-37	565-566	/	_	_	
5-38	566-569	abs	_	_	
5-39	569-570	/	_	_	
5-40	570-580	2304.04142	_	_	
5-41	580-581	)	_	_	
5-42	582-583	|	_	_	
5-43	584-585	[	_	_	
5-44	585-589	Docs	_	_	
5-45	589-590	]	_	_	
5-46	590-591	(	_	_	
5-47	591-596	https	_	_	
5-48	596-597	:	_	_	
5-49	597-598	/	_	_	
5-50	598-599	/	_	_	
5-51	599-612	slideflow.dev	_	_	
5-52	612-613	)	_	_	
5-53	614-615	|	_	_	
5-54	616-617	[	_	_	
5-55	617-626	Slideflow	_	_	
5-56	627-633	Studio	_	_	
5-57	633-634	]	_	_	
5-58	634-635	(	_	_	
5-59	635-640	https	_	_	
5-60	640-641	:	_	_	
5-61	641-642	/	_	_	
5-62	642-643	/	_	_	
5-63	643-656	slideflow.dev	_	_	
5-64	656-657	/	_	_	
5-65	657-663	studio	_	_	
5-66	663-664	/	_	_	
5-67	664-665	)	_	_	
5-68	666-667	|	_	_	
5-69	668-669	[	_	_	
5-70	669-673	Cite	_	_	
5-71	673-674	]	_	_	
5-72	674-675	(	_	_	
5-73	675-676	#	_	_	
5-74	676-685	reference	_	_	
5-75	685-686	)	_	_	
5-76	687-688	|	_	_	
5-77	689-690	[	_	_	
5-78	690-691	✨	_	_	
5-79	692-698	What's	_	_	
5-80	699-702	New	_	_	
5-81	703-705	in	_	_	
5-82	706-709	3.0	_	_	
5-83	710-711	✨	_	_	
5-84	711-712	]	_	_	
5-85	712-713	(	_	_	
5-86	713-718	https	_	_	
5-87	718-719	:	_	_	
5-88	719-720	/	_	_	
5-89	720-721	/	_	_	
5-90	721-731	github.com	_	_	
5-91	731-732	/	_	_	
5-92	732-741	slideflow	_	_	
5-93	741-742	/	_	_	
5-94	742-751	slideflow	_	_	
5-95	751-752	/	_	_	
5-96	752-760	releases	_	_	
5-97	760-761	/	_	_	
5-98	761-764	tag	_	_	
5-99	764-765	/	_	_	
5-100	765-770	3.0.0	_	_	
5-101	770-771	)	_	_	
5-102	775-776	_	_	_	
5-103	776-777	_	_	_	
5-104	777-778	_	_	_	
5-105	778-779	_	_	_	
5-106	779-780	_	_	_	
5-107	780-781	_	_	_	
5-108	781-782	_	_	_	
5-109	782-783	_	_	_	
5-110	783-784	_	_	_	
5-111	784-785	_	_	_	
5-112	785-786	_	_	_	
5-113	786-787	_	_	_	
5-114	787-788	_	_	_	
5-115	788-789	_	_	_	
5-116	789-790	_	_	_	
5-117	790-791	_	_	_	
5-118	791-792	_	_	_	
5-119	792-793	_	_	_	
5-120	793-794	_	_	_	
5-121	794-795	_	_	_	
5-122	795-796	_	_	_	
5-123	796-797	_	_	_	
5-124	797-798	_	_	_	
5-125	798-799	_	_	_	
5-126	799-800	_	_	_	
5-127	800-801	_	_	_	
5-128	801-802	_	_	_	
5-129	802-803	_	_	_	
5-130	803-804	_	_	_	
5-131	804-805	_	_	_	
5-132	805-806	_	_	_	
5-133	806-807	_	_	_	
5-134	807-808	_	_	_	
5-135	808-809	_	_	_	
5-136	809-810	_	_	_	
5-137	810-811	_	_	_	
5-138	811-812	_	_	_	
5-139	812-813	_	_	_	
5-140	813-814	_	_	_	
5-141	814-815	_	_	_	
5-142	815-816	_	_	_	
5-143	816-817	_	_	_	
5-144	817-818	_	_	_	
5-145	818-819	_	_	_	
5-146	819-820	_	_	_	
5-147	820-821	_	_	_	
5-148	821-822	_	_	_	
5-149	822-823	_	_	_	
5-150	823-824	_	_	_	
5-151	824-825	_	_	_	
5-152	825-826	_	_	_	
5-153	826-827	_	_	_	
5-154	827-828	_	_	_	
5-155	828-829	_	_	_	
5-156	829-830	_	_	_	
5-157	830-831	_	_	_	
5-158	831-832	_	_	_	
5-159	832-833	_	_	_	
5-160	833-834	_	_	_	
5-161	834-835	_	_	_	
5-162	835-836	_	_	_	
5-163	836-837	_	_	_	
5-164	837-838	_	_	_	
5-165	838-839	_	_	_	
5-166	839-840	_	_	_	
5-167	840-841	_	_	_	
5-168	841-842	_	_	_	
5-169	842-843	_	_	_	
5-170	843-844	_	_	_	
5-171	844-845	_	_	_	
5-172	849-850	!	_	_	

#Text=[Slideflow Studio: a visualization tool for interacting with models and whole-slide images.]
6-1	850-851	[	_	_	
6-2	851-860	Slideflow	_	_	
6-3	861-867	Studio	_	_	
6-4	867-868	:	_	_	
6-5	869-870	a	_	_	
6-6	871-884	visualization	_	_	
6-7	885-889	tool	_	_	
6-8	890-893	for	_	_	
6-9	894-905	interacting	_	_	
6-10	906-910	with	_	_	
6-11	911-917	models	_	_	
6-12	918-921	and	_	_	
6-13	922-933	whole-slide	_	_	
6-14	934-940	images	_	_	
6-15	940-941	.	_	_	
6-16	941-942	]	_	_	

#Text=(https://github.com/slideflow/slideflow/assets/48372806/7f43d8cb-dc80-427d-84c4-3e5a35fa1472)
#Text=
#Text=</div>
#Text=
#Text=**Slideflow is a deep learning library for digital pathology, offering a user-friendly interface for model development.**
#Text=  
#Text=Designed for both medical researchers and AI enthusiasts, the goal of Slideflow is to provide an accessible, easy-to-use interface for developing state-of-the-art pathology models.
7-1	942-943	(	_	_	
7-2	943-948	https	_	_	
7-3	948-949	:	_	_	
7-4	949-950	/	_	_	
7-5	950-951	/	_	_	
7-6	951-961	github.com	_	_	
7-7	961-962	/	_	_	
7-8	962-971	slideflow	_	_	
7-9	971-972	/	_	_	
7-10	972-981	slideflow	_	_	
7-11	981-982	/	_	_	
7-12	982-988	assets	_	_	
7-13	988-989	/	_	_	
7-14	989-997	48372806	_	_	
7-15	997-998	/	_	_	
7-16	998-1011	7f43d8cb-dc80	_	_	
7-17	1011-1012	-	_	_	
7-18	1012-1016	427d	_	_	
7-19	1016-1017	-	_	_	
7-20	1017-1021	84c4	_	_	
7-21	1021-1022	-	_	_	
7-22	1022-1034	3e5a35fa1472	_	_	
7-23	1034-1035	)	_	_	
7-24	1037-1038	<	_	_	
7-25	1038-1039	/	_	_	
7-26	1039-1042	div	_	_	
7-27	1042-1043	>	_	_	
7-28	1045-1046	*	_	_	
7-29	1046-1047	*	_	_	
7-30	1047-1056	Slideflow	*	SOFTWARE	
7-31	1057-1059	is	_	_	
7-32	1060-1061	a	_	_	
7-33	1062-1066	deep	_	_	
7-34	1067-1075	learning	_	_	
7-35	1076-1083	library	_	_	
7-36	1084-1087	for	_	_	
7-37	1088-1095	digital	_	_	
7-38	1096-1105	pathology	_	_	
7-39	1105-1106	,	_	_	
7-40	1107-1115	offering	_	_	
7-41	1116-1117	a	_	_	
7-42	1118-1131	user-friendly	_	_	
7-43	1132-1141	interface	_	_	
7-44	1142-1145	for	_	_	
7-45	1146-1151	model	_	_	
7-46	1152-1163	development	_	_	
7-47	1163-1164	.	_	_	
7-48	1164-1165	*	_	_	
7-49	1165-1166	*	_	_	
7-50	1170-1178	Designed	_	_	
7-51	1179-1182	for	_	_	
7-52	1183-1187	both	_	_	
7-53	1188-1195	medical	_	_	
7-54	1196-1207	researchers	_	_	
7-55	1208-1211	and	_	_	
7-56	1212-1214	AI	_	_	
7-57	1215-1226	enthusiasts	_	_	
7-58	1226-1227	,	_	_	
7-59	1228-1231	the	_	_	
7-60	1232-1236	goal	_	_	
7-61	1237-1239	of	_	_	
7-62	1240-1249	Slideflow	*	SOFTWARE	
7-63	1250-1252	is	_	_	
7-64	1253-1255	to	_	_	
7-65	1256-1263	provide	_	_	
7-66	1264-1266	an	_	_	
7-67	1267-1277	accessible	_	_	
7-68	1277-1278	,	_	_	
7-69	1279-1290	easy-to-use	_	_	
7-70	1291-1300	interface	_	_	
7-71	1301-1304	for	_	_	
7-72	1305-1315	developing	_	_	
7-73	1316-1332	state-of-the-art	_	_	
7-74	1333-1342	pathology	_	_	
7-75	1343-1349	models	_	_	
7-76	1349-1350	.	_	_	

#Text=Slideflow has been built with the future in mind, offering a scalable platform for digital biomarker development that bridges the gap between ever-evolving, sophisticated methods and the needs of a clinical researcher.
8-1	1351-1360	Slideflow	*	SOFTWARE	
8-2	1361-1364	has	_	_	
8-3	1365-1369	been	_	_	
8-4	1370-1375	built	_	_	
8-5	1376-1380	with	_	_	
8-6	1381-1384	the	_	_	
8-7	1385-1391	future	_	_	
8-8	1392-1394	in	_	_	
8-9	1395-1399	mind	_	_	
8-10	1399-1400	,	_	_	
8-11	1401-1409	offering	_	_	
8-12	1410-1411	a	_	_	
8-13	1412-1420	scalable	_	_	
8-14	1421-1429	platform	_	_	
8-15	1430-1433	for	_	_	
8-16	1434-1441	digital	_	_	
8-17	1442-1451	biomarker	_	_	
8-18	1452-1463	development	_	_	
8-19	1464-1468	that	_	_	
8-20	1469-1476	bridges	_	_	
8-21	1477-1480	the	_	_	
8-22	1481-1484	gap	_	_	
8-23	1485-1492	between	_	_	
8-24	1493-1506	ever-evolving	_	_	
8-25	1506-1507	,	_	_	
8-26	1508-1521	sophisticated	_	_	
8-27	1522-1529	methods	_	_	
8-28	1530-1533	and	_	_	
8-29	1534-1537	the	_	_	
8-30	1538-1543	needs	_	_	
8-31	1544-1546	of	_	_	
8-32	1547-1548	a	_	_	
8-33	1549-1557	clinical	_	_	
8-34	1558-1568	researcher	_	_	
8-35	1568-1569	.	_	_	

#Text=For developers, Slideflow provides multiple endpoints for integration with other packages and external training paradigms, allowing you to leverage highly optimized, pathology-specific processes with the latest ML methodologies.
#Text=
#Text=
#Text=
#Text=## 🚀 Features
#Text=- Easy-to-use, highly customizable training pipelines
#Text=- Robust **[slide processing](https://slideflow.dev/slide_processing) and [stain normalization](https://slideflow.dev/norm)** toolkit
#Text=- Support for training with **[weakly-supervised](https://slideflow.dev/training) or [strongly-supervised](https://slideflow.dev/tile_labels)** labels
#Text=- Built-in, state-of-the-art **[foundation models](https://slideflow.dev/features)**
#Text=- **[Multiple-instance learning (MIL)](https://slideflow.dev/mil)**
#Text=- **[Self-supervised learning (SSL)](https://slideflow.dev/ssl)**
#Text=- **[Generative adversarial networks (GANs)](https://slideflow.dev/training)**
#Text=- **Explainability tools**: [Heatmaps](https://slideflow.dev/evaluation/#heatmaps), [mosaic maps](https://slideflow.dev/posthoc/#mosaic-maps), [saliency maps](https://slideflow.dev/saliency/), [synthetic histology](https://slideflow.dev/stylegan)
#Text=- Robust **[layer activation analysis](https://slideflow.dev/posthoc)** tools
#Text=- **[Uncertainty quantification](https://slideflow.dev/uq)**
#Text=- **[Interactive user interface](https://slideflow.dev/studio)** for model deployment
#Text=- ... and more!
9-1	1570-1573	For	_	_	
9-2	1574-1584	developers	_	_	
9-3	1584-1585	,	_	_	
9-4	1586-1595	Slideflow	*	SOFTWARE	
9-5	1596-1604	provides	_	_	
9-6	1605-1613	multiple	_	_	
9-7	1614-1623	endpoints	_	_	
9-8	1624-1627	for	_	_	
9-9	1628-1639	integration	_	_	
9-10	1640-1644	with	_	_	
9-11	1645-1650	other	_	_	
9-12	1651-1659	packages	_	_	
9-13	1660-1663	and	_	_	
9-14	1664-1672	external	_	_	
9-15	1673-1681	training	_	_	
9-16	1682-1691	paradigms	_	_	
9-17	1691-1692	,	_	_	
9-18	1693-1701	allowing	_	_	
9-19	1702-1705	you	_	_	
9-20	1706-1708	to	_	_	
9-21	1709-1717	leverage	_	_	
9-22	1718-1724	highly	_	_	
9-23	1725-1734	optimized	_	_	
9-24	1734-1735	,	_	_	
9-25	1736-1754	pathology-specific	_	_	
9-26	1755-1764	processes	_	_	
9-27	1765-1769	with	_	_	
9-28	1770-1773	the	_	_	
9-29	1774-1780	latest	_	_	
9-30	1781-1783	ML	_	_	
9-31	1784-1797	methodologies	_	_	
9-32	1797-1798	.	_	_	
9-33	1802-1803	#	_	_	
9-34	1803-1804	#	_	_	
9-35	1805-1807	🚀	_	_	
9-36	1808-1816	Features	_	_	
9-37	1817-1818	-	_	_	
9-38	1819-1830	Easy-to-use	_	_	
9-39	1830-1831	,	_	_	
9-40	1832-1838	highly	_	_	
9-41	1839-1851	customizable	_	_	
9-42	1852-1860	training	_	_	
9-43	1861-1870	pipelines	_	_	
9-44	1871-1872	-	_	_	
9-45	1873-1879	Robust	_	_	
9-46	1880-1881	*	_	_	
9-47	1881-1882	*	_	_	
9-48	1882-1883	[	_	_	
9-49	1883-1888	slide	_	_	
9-50	1889-1899	processing	_	_	
9-51	1899-1900	]	_	_	
9-52	1900-1901	(	_	_	
9-53	1901-1906	https	_	_	
9-54	1906-1907	:	_	_	
9-55	1907-1908	/	_	_	
9-56	1908-1909	/	_	_	
9-57	1909-1922	slideflow.dev	_	_	
9-57.1	1909-1918	slideflow	*	SOFTWARE	
9-58	1922-1923	/	_	_	
9-59	1923-1939	slide_processing	_	_	
9-60	1939-1940	)	_	_	
9-61	1941-1944	and	_	_	
9-62	1945-1946	[	_	_	
9-63	1946-1951	stain	_	_	
9-64	1952-1965	normalization	_	_	
9-65	1965-1966	]	_	_	
9-66	1966-1967	(	_	_	
9-67	1967-1972	https	_	_	
9-68	1972-1973	:	_	_	
9-69	1973-1974	/	_	_	
9-70	1974-1975	/	_	_	
9-71	1975-1988	slideflow.dev	_	_	
9-71.1	1975-1984	slideflow	*	SOFTWARE	
9-72	1988-1989	/	_	_	
9-73	1989-1993	norm	_	_	
9-74	1993-1994	)	_	_	
9-75	1994-1995	*	_	_	
9-76	1995-1996	*	_	_	
9-77	1997-2004	toolkit	_	_	
9-78	2005-2006	-	_	_	
9-79	2007-2014	Support	_	_	
9-80	2015-2018	for	_	_	
9-81	2019-2027	training	_	_	
9-82	2028-2032	with	_	_	
9-83	2033-2034	*	_	_	
9-84	2034-2035	*	_	_	
9-85	2035-2036	[	_	_	
9-86	2036-2053	weakly-supervised	_	_	
9-87	2053-2054	]	_	_	
9-88	2054-2055	(	_	_	
9-89	2055-2060	https	_	_	
9-90	2060-2061	:	_	_	
9-91	2061-2062	/	_	_	
9-92	2062-2063	/	_	_	
9-93	2063-2076	slideflow.dev	_	_	
9-93.1	2063-2072	slideflow	*	SOFTWARE	
9-94	2076-2077	/	_	_	
9-95	2077-2085	training	_	_	
9-96	2085-2086	)	_	_	
9-97	2087-2089	or	_	_	
9-98	2090-2091	[	_	_	
9-99	2091-2110	strongly-supervised	_	_	
9-100	2110-2111	]	_	_	
9-101	2111-2112	(	_	_	
9-102	2112-2117	https	_	_	
9-103	2117-2118	:	_	_	
9-104	2118-2119	/	_	_	
9-105	2119-2120	/	_	_	
9-106	2120-2133	slideflow.dev	_	_	
9-106.1	2120-2129	slideflow	*	SOFTWARE	
9-107	2133-2134	/	_	_	
9-108	2134-2145	tile_labels	_	_	
9-109	2145-2146	)	_	_	
9-110	2146-2147	*	_	_	
9-111	2147-2148	*	_	_	
9-112	2149-2155	labels	_	_	
9-113	2156-2157	-	_	_	
9-114	2158-2166	Built-in	_	_	
9-115	2166-2167	,	_	_	
9-116	2168-2184	state-of-the-art	_	_	
9-117	2185-2186	*	_	_	
9-118	2186-2187	*	_	_	
9-119	2187-2188	[	_	_	
9-120	2188-2198	foundation	_	_	
9-121	2199-2205	models	_	_	
9-122	2205-2206	]	_	_	
9-123	2206-2207	(	_	_	
9-124	2207-2212	https	_	_	
9-125	2212-2213	:	_	_	
9-126	2213-2214	/	_	_	
9-127	2214-2215	/	_	_	
9-128	2215-2228	slideflow.dev	_	_	
9-128.1	2215-2224	slideflow	*	SOFTWARE	
9-129	2228-2229	/	_	_	
9-130	2229-2237	features	_	_	
9-131	2237-2238	)	_	_	
9-132	2238-2239	*	_	_	
9-133	2239-2240	*	_	_	
9-134	2241-2242	-	_	_	
9-135	2243-2244	*	_	_	
9-136	2244-2245	*	_	_	
9-137	2245-2246	[	_	_	
9-138	2246-2263	Multiple-instance	_	_	
9-139	2264-2272	learning	_	_	
9-140	2273-2274	(	_	_	
9-141	2274-2277	MIL	_	_	
9-142	2277-2278	)	_	_	
9-143	2278-2279	]	_	_	
9-144	2279-2280	(	_	_	
9-145	2280-2285	https	_	_	
9-146	2285-2286	:	_	_	
9-147	2286-2287	/	_	_	
9-148	2287-2288	/	_	_	
9-149	2288-2301	slideflow.dev	_	_	
9-149.1	2288-2297	slideflow	*	SOFTWARE	
9-150	2301-2302	/	_	_	
9-151	2302-2305	mil	_	_	
9-152	2305-2306	)	_	_	
9-153	2306-2307	*	_	_	
9-154	2307-2308	*	_	_	
9-155	2309-2310	-	_	_	
9-156	2311-2312	*	_	_	
9-157	2312-2313	*	_	_	
9-158	2313-2314	[	_	_	
9-159	2314-2329	Self-supervised	_	_	
9-160	2330-2338	learning	_	_	
9-161	2339-2340	(	_	_	
9-162	2340-2343	SSL	_	_	
9-163	2343-2344	)	_	_	
9-164	2344-2345	]	_	_	
9-165	2345-2346	(	_	_	
9-166	2346-2351	https	_	_	
9-167	2351-2352	:	_	_	
9-168	2352-2353	/	_	_	
9-169	2353-2354	/	_	_	
9-170	2354-2367	slideflow.dev	_	_	
9-170.1	2354-2363	slideflow	*	SOFTWARE	
9-171	2367-2368	/	_	_	
9-172	2368-2371	ssl	_	_	
9-173	2371-2372	)	_	_	
9-174	2372-2373	*	_	_	
9-175	2373-2374	*	_	_	
9-176	2375-2376	-	_	_	
9-177	2377-2378	*	_	_	
9-178	2378-2379	*	_	_	
9-179	2379-2380	[	_	_	
9-180	2380-2390	Generative	_	_	
9-181	2391-2402	adversarial	_	_	
9-182	2403-2411	networks	_	_	
9-183	2412-2413	(	_	_	
9-184	2413-2417	GANs	_	_	
9-185	2417-2418	)	_	_	
9-186	2418-2419	]	_	_	
9-187	2419-2420	(	_	_	
9-188	2420-2425	https	_	_	
9-189	2425-2426	:	_	_	
9-190	2426-2427	/	_	_	
9-191	2427-2428	/	_	_	
9-192	2428-2441	slideflow.dev	_	_	
9-192.1	2428-2437	slideflow	*	SOFTWARE	
9-193	2441-2442	/	_	_	
9-194	2442-2450	training	_	_	
9-195	2450-2451	)	_	_	
9-196	2451-2452	*	_	_	
9-197	2452-2453	*	_	_	
9-198	2454-2455	-	_	_	
9-199	2456-2457	*	_	_	
9-200	2457-2458	*	_	_	
9-201	2458-2472	Explainability	_	_	
9-202	2473-2478	tools	_	_	
9-203	2478-2479	*	_	_	
9-204	2479-2480	*	_	_	
9-205	2480-2481	:	_	_	
9-206	2482-2483	[	_	_	
9-207	2483-2491	Heatmaps	*	SOFTWARE	
9-208	2491-2492	]	_	_	
9-209	2492-2493	(	_	_	
9-210	2493-2498	https	_	_	
9-211	2498-2499	:	_	_	
9-212	2499-2500	/	_	_	
9-213	2500-2501	/	_	_	
9-214	2501-2514	slideflow.dev	_	_	
9-214.1	2501-2510	slideflow	*	SOFTWARE	
9-215	2514-2515	/	_	_	
9-216	2515-2525	evaluation	_	_	
9-217	2525-2526	/	_	_	
9-218	2526-2527	#	_	_	
9-219	2527-2535	heatmaps	*	SOFTWARE	
9-220	2535-2536	)	_	_	
9-221	2536-2537	,	_	_	
9-222	2538-2539	[	_	_	
9-223	2539-2545	mosaic	*[1]	SOFTWARE[1]	
9-224	2546-2550	maps	*[1]	SOFTWARE[1]	
9-225	2550-2551	]	_	_	
9-226	2551-2552	(	_	_	
9-227	2552-2557	https	_	_	
9-228	2557-2558	:	_	_	
9-229	2558-2559	/	_	_	
9-230	2559-2560	/	_	_	
9-231	2560-2573	slideflow.dev	_	_	
9-231.1	2560-2569	slideflow	*	SOFTWARE	
9-232	2573-2574	/	_	_	
9-233	2574-2581	posthoc	_	_	
9-234	2581-2582	/	_	_	
9-235	2582-2583	#	_	_	
9-236	2583-2594	mosaic-maps	*	SOFTWARE	
9-237	2594-2595	)	_	_	
9-238	2595-2596	,	_	_	
9-239	2597-2598	[	_	_	
9-240	2598-2606	saliency	*[2]	SOFTWARE[2]	
9-241	2607-2611	maps	*[2]	SOFTWARE[2]	
9-242	2611-2612	]	_	_	
9-243	2612-2613	(	_	_	
9-244	2613-2618	https	_	_	
9-245	2618-2619	:	_	_	
9-246	2619-2620	/	_	_	
9-247	2620-2621	/	_	_	
9-248	2621-2634	slideflow.dev	_	_	
9-248.1	2621-2630	slideflow	*	SOFTWARE	
9-249	2634-2635	/	_	_	
9-250	2635-2643	saliency	_	_	
9-251	2643-2644	/	_	_	
9-252	2644-2645	)	_	_	
9-253	2645-2646	,	_	_	
9-254	2647-2648	[	_	_	
9-255	2648-2657	synthetic	_	_	
9-256	2658-2667	histology	_	_	
9-257	2667-2668	]	_	_	
9-258	2668-2669	(	_	_	
9-259	2669-2674	https	_	_	
9-260	2674-2675	:	_	_	
9-261	2675-2676	/	_	_	
9-262	2676-2677	/	_	_	
9-263	2677-2690	slideflow.dev	_	_	
9-263.1	2677-2686	slideflow	*	SOFTWARE	
9-264	2690-2691	/	_	_	
9-265	2691-2699	stylegan	_	_	
9-266	2699-2700	)	_	_	
9-267	2701-2702	-	_	_	
9-268	2703-2709	Robust	_	_	
9-269	2710-2711	*	_	_	
9-270	2711-2712	*	_	_	
9-271	2712-2713	[	_	_	
9-272	2713-2718	layer	_	_	
9-273	2719-2729	activation	_	_	
9-274	2730-2738	analysis	_	_	
9-275	2738-2739	]	_	_	
9-276	2739-2740	(	_	_	
9-277	2740-2745	https	_	_	
9-278	2745-2746	:	_	_	
9-279	2746-2747	/	_	_	
9-280	2747-2748	/	_	_	
9-281	2748-2761	slideflow.dev	_	_	
9-281.1	2748-2757	slideflow	*	SOFTWARE	
9-282	2761-2762	/	_	_	
9-283	2762-2769	posthoc	_	_	
9-284	2769-2770	)	_	_	
9-285	2770-2771	*	_	_	
9-286	2771-2772	*	_	_	
9-287	2773-2778	tools	_	_	
9-288	2779-2780	-	_	_	
9-289	2781-2782	*	_	_	
9-290	2782-2783	*	_	_	
9-291	2783-2784	[	_	_	
9-292	2784-2795	Uncertainty	_	_	
9-293	2796-2810	quantification	_	_	
9-294	2810-2811	]	_	_	
9-295	2811-2812	(	_	_	
9-296	2812-2817	https	_	_	
9-297	2817-2818	:	_	_	
9-298	2818-2819	/	_	_	
9-299	2819-2820	/	_	_	
9-300	2820-2833	slideflow.dev	_	_	
9-300.1	2820-2829	slideflow	*	SOFTWARE	
9-301	2833-2834	/	_	_	
9-302	2834-2836	uq	_	_	
9-303	2836-2837	)	_	_	
9-304	2837-2838	*	_	_	
9-305	2838-2839	*	_	_	
9-306	2840-2841	-	_	_	
9-307	2842-2843	*	_	_	
9-308	2843-2844	*	_	_	
9-309	2844-2845	[	_	_	
9-310	2845-2856	Interactive	_	_	
9-311	2857-2861	user	_	_	
9-312	2862-2871	interface	_	_	
9-313	2871-2872	]	_	_	
9-314	2872-2873	(	_	_	
9-315	2873-2878	https	_	_	
9-316	2878-2879	:	_	_	
9-317	2879-2880	/	_	_	
9-318	2880-2881	/	_	_	
9-319	2881-2894	slideflow.dev	_	_	
9-319.1	2881-2890	slideflow	*	SOFTWARE	
9-320	2894-2895	/	_	_	
9-321	2895-2901	studio	_	_	
9-322	2901-2902	)	_	_	
9-323	2902-2903	*	_	_	
9-324	2903-2904	*	_	_	
9-325	2905-2908	for	_	_	
9-326	2909-2914	model	_	_	
9-327	2915-2925	deployment	_	_	
9-328	2926-2927	-	_	_	
9-329	2928-2929	.	_	_	
9-330	2929-2930	.	_	_	
9-331	2930-2931	.	_	_	
9-332	2932-2935	and	_	_	
9-333	2936-2940	more	_	_	
9-334	2940-2941	!	_	_	

#Text=Full documentation with example tutorials can be found at [slideflow.dev](https://www.slideflow.dev/).
#Text=
#Text=## Requirements
#Text=- Python >= 3.7 (<3.10 if using [cuCIM](https://docs.rapids.ai/api/cucim/stable/))
#Text=- [PyTorch](https://pytorch.org/) >= 1.9 _or_ [Tensorflow](https://www.tensorflow.org/) 2.5-2.11
#Text=
#Text=### Optional
#Text=- [Libvips](https://libvips.github.io/libvips/) >= 8.9 (alternative slide reader, adds support for *.scn, *.mrxs, *.ndpi, *.vms, and *.vmu files).
#Text=- Linear solver (for preserved-site cross-validation)
#Text=  - [CPLEX](https://www.ibm.com/docs/en/icos/12.10.0?
10-1	2943-2947	Full	_	_	
10-2	2948-2961	documentation	_	_	
10-3	2962-2966	with	_	_	
10-4	2967-2974	example	_	_	
10-5	2975-2984	tutorials	_	_	
10-6	2985-2988	can	_	_	
10-7	2989-2991	be	_	_	
10-8	2992-2997	found	_	_	
10-9	2998-3000	at	_	_	
10-10	3001-3002	[	_	_	
10-11	3002-3015	slideflow.dev	_	_	
10-11.1	3002-3011	slideflow	*	SOFTWARE	
10-12	3015-3016	]	_	_	
10-13	3016-3017	(	_	_	
10-14	3017-3022	https	_	_	
10-15	3022-3023	:	_	_	
10-16	3023-3024	/	_	_	
10-17	3024-3025	/	_	_	
10-18	3025-3042	www.slideflow.dev	_	_	
10-18.1	3029-3038	slideflow	*	SOFTWARE	
10-19	3042-3043	/	_	_	
10-20	3043-3044	)	_	_	
10-21	3044-3045	.	_	_	
10-22	3047-3048	#	_	_	
10-23	3048-3049	#	_	_	
10-24	3050-3062	Requirements	_	_	
10-25	3063-3064	-	_	_	
10-26	3065-3071	Python	*[3]	*[3]	
10-27	3072-3073	>	*[3]	*[3]	
10-28	3073-3074	=	*[3]	*[3]	
10-29	3075-3078	3.7	*[3]	*[3]	
10-30	3079-3080	(	_	_	
10-31	3080-3081	<	_	_	
10-32	3081-3085	3.10	_	_	
10-33	3086-3088	if	_	_	
10-34	3089-3094	using	_	_	
10-35	3095-3096	[	_	_	
10-36	3096-3101	cuCIM	*	SOFTWARE	
10-37	3101-3102	]	_	_	
10-38	3102-3103	(	_	_	
10-39	3103-3108	https	_	_	
10-40	3108-3109	:	_	_	
10-41	3109-3110	/	_	_	
10-42	3110-3111	/	_	_	
10-43	3111-3125	docs.rapids.ai	_	_	
10-44	3125-3126	/	_	_	
10-45	3126-3129	api	_	_	
10-46	3129-3130	/	_	_	
10-47	3130-3135	cucim	*	SOFTWARE	
10-48	3135-3136	/	_	_	
10-49	3136-3142	stable	_	_	
10-50	3142-3143	/	_	_	
10-51	3143-3144	)	_	_	
10-52	3144-3145	)	_	_	
10-53	3146-3147	-	_	_	
10-54	3148-3149	[	_	_	
10-55	3149-3156	PyTorch	*	SOFTWARE	
10-56	3156-3157	]	_	_	
10-57	3157-3158	(	_	_	
10-58	3158-3163	https	_	_	
10-59	3163-3164	:	_	_	
10-60	3164-3165	/	_	_	
10-61	3165-3166	/	_	_	
10-62	3166-3177	pytorch.org	_	_	
10-62.1	3166-3173	pytorch	*	SOFTWARE	
10-63	3177-3178	/	_	_	
10-64	3178-3179	)	_	_	
10-65	3180-3181	>	_	_	
10-66	3181-3182	=	_	_	
10-67	3183-3186	1.9	_	_	
10-68	3187-3188	_	_	_	
10-69	3188-3190	or	_	_	
10-70	3190-3191	_	_	_	
10-71	3192-3193	[	_	_	
10-72	3193-3203	Tensorflow	*	SOFTWARE	
10-73	3203-3204	]	_	_	
10-74	3204-3205	(	_	_	
10-75	3205-3210	https	_	_	
10-76	3210-3211	:	_	_	
10-77	3211-3212	/	_	_	
10-78	3212-3213	/	_	_	
10-79	3213-3231	www.tensorflow.org	_	_	
10-79.1	3217-3227	tensorflow	*	SOFTWARE	
10-80	3231-3232	/	_	_	
10-81	3232-3233	)	_	_	
10-82	3234-3237	2.5	_	_	
10-83	3237-3238	-	_	_	
10-84	3238-3242	2.11	_	_	
10-85	3244-3245	#	_	_	
10-86	3245-3246	#	_	_	
10-87	3246-3247	#	_	_	
10-88	3248-3256	Optional	_	_	
10-89	3257-3258	-	_	_	
10-90	3259-3260	[	_	_	
10-91	3260-3267	Libvips	*	SOFTWARE	
10-92	3267-3268	]	_	_	
10-93	3268-3269	(	_	_	
10-94	3269-3274	https	_	_	
10-95	3274-3275	:	_	_	
10-96	3275-3276	/	_	_	
10-97	3276-3277	/	_	_	
10-98	3277-3294	libvips.github.io	_	_	
10-99	3294-3295	/	_	_	
10-100	3295-3302	libvips	_	_	
10-101	3302-3303	/	_	_	
10-102	3303-3304	)	_	_	
10-103	3305-3306	>	_	_	
10-104	3306-3307	=	_	_	
10-105	3308-3311	8.9	_	_	
10-106	3312-3313	(	_	_	
10-107	3313-3324	alternative	_	_	
10-108	3325-3330	slide	_	_	
10-109	3331-3337	reader	_	_	
10-110	3337-3338	,	_	_	
10-111	3339-3343	adds	_	_	
10-112	3344-3351	support	_	_	
10-113	3352-3355	for	_	_	
10-114	3356-3357	*	_	_	
10-115	3357-3358	.	_	_	
10-116	3358-3361	scn	_	_	
10-117	3361-3362	,	_	_	
10-118	3363-3364	*	_	_	
10-119	3364-3365	.	_	_	
10-120	3365-3369	mrxs	_	_	
10-121	3369-3370	,	_	_	
10-122	3371-3372	*	_	_	
10-123	3372-3373	.	_	_	
10-124	3373-3377	ndpi	_	_	
10-125	3377-3378	,	_	_	
10-126	3379-3380	*	_	_	
10-127	3380-3381	.	_	_	
10-128	3381-3384	vms	_	_	
10-129	3384-3385	,	_	_	
10-130	3386-3389	and	_	_	
10-131	3390-3391	*	_	_	
10-132	3391-3392	.	_	_	
10-133	3392-3395	vmu	_	_	
10-134	3396-3401	files	_	_	
10-135	3401-3402	)	_	_	
10-136	3402-3403	.	_	_	
10-137	3404-3405	-	_	_	
10-138	3406-3412	Linear	_	_	
10-139	3413-3419	solver	_	_	
10-140	3420-3421	(	_	_	
10-141	3421-3424	for	_	_	
10-142	3425-3439	preserved-site	_	_	
10-143	3440-3456	cross-validation	_	_	
10-144	3456-3457	)	_	_	
10-145	3460-3461	-	_	_	
10-146	3462-3463	[	_	_	
10-147	3463-3468	CPLEX	*	SOFTWARE	
10-148	3468-3469	]	_	_	
10-149	3469-3470	(	_	_	
10-150	3470-3475	https	_	_	
10-151	3475-3476	:	_	_	
10-152	3476-3477	/	_	_	
10-153	3477-3478	/	_	_	
10-154	3478-3489	www.ibm.com	_	_	
10-155	3489-3490	/	_	_	
10-156	3490-3494	docs	_	_	
10-157	3494-3495	/	_	_	
10-158	3495-3497	en	_	_	
10-159	3497-3498	/	_	_	
10-160	3498-3502	icos	_	_	
10-161	3502-3503	/	_	_	
10-162	3503-3510	12.10.0	_	_	
10-163	3510-3511	?	_	_	

#Text=topic=v12100-installing-cplex-optimization-studio) 20.1.0 with [Python API](https://www.ibm.com/docs/en/icos/12.10.0?
11-1	3511-3516	topic	_	_	
11-2	3516-3517	=	_	_	
11-3	3517-3523	v12100	_	_	
11-4	3523-3524	-	_	_	
11-5	3524-3560	installing-cplex-optimization-studio	_	_	
11-6	3560-3561	)	_	_	
11-7	3562-3568	20.1.0	_	_	
11-8	3569-3573	with	_	_	
11-9	3574-3575	[	_	_	
11-10	3575-3581	Python	*	PROGLANG	
11-11	3582-3585	API	_	_	
11-12	3585-3586	]	_	_	
11-13	3586-3587	(	_	_	
11-14	3587-3592	https	_	_	
11-15	3592-3593	:	_	_	
11-16	3593-3594	/	_	_	
11-17	3594-3595	/	_	_	
11-18	3595-3606	www.ibm.com	_	_	
11-19	3606-3607	/	_	_	
11-20	3607-3611	docs	_	_	
11-21	3611-3612	/	_	_	
11-22	3612-3614	en	_	_	
11-23	3614-3615	/	_	_	
11-24	3615-3619	icos	_	_	
11-25	3619-3620	/	_	_	
11-26	3620-3627	12.10.0	_	_	
11-27	3627-3628	?	_	_	

#Text=topic=cplex-setting-up-python-api)
#Text=  - _or_ [Pyomo](http://www.pyomo.org/installation) with [Bonmin](https://anaconda.org/conda-forge/coinbonmin) solver
#Text=
#Text=
#Text=## 📥 Installation
#Text=Slideflow can be installed with PyPI, as a Docker container, or run from source.
#Text=
#Text=### Method 1: Install via pip
#Text=
#Text=```
#Text=pip3 install --upgrade setuptools pip wheel
#Text=pip3 install slideflow[cucim] cupy-cuda11x
#Text=```
#Text=
#Text=The `cupy` package name depends on the installed CUDA version; [see here](https://docs.cupy.dev/en/stable/install.html#installing-cupy) for installation instructions.
12-1	3628-3633	topic	_	_	
12-2	3633-3634	=	_	_	
12-3	3634-3661	cplex-setting-up-python-api	_	_	
12-4	3661-3662	)	_	_	
12-5	3665-3666	-	_	_	
12-6	3667-3668	_	_	_	
12-7	3668-3670	or	_	_	
12-8	3670-3671	_	_	_	
12-9	3672-3673	[	_	_	
12-10	3673-3678	Pyomo	*	SOFTWARE	
12-11	3678-3679	]	_	_	
12-12	3679-3680	(	_	_	
12-13	3680-3684	http	_	_	
12-14	3684-3685	:	_	_	
12-15	3685-3686	/	_	_	
12-16	3686-3687	/	_	_	
12-17	3687-3700	www.pyomo.org	_	_	
12-18	3700-3701	/	_	_	
12-19	3701-3713	installation	_	_	
12-20	3713-3714	)	_	_	
12-21	3715-3719	with	_	_	
12-22	3720-3721	[	_	_	
12-23	3721-3727	Bonmin	*	SOFTWARE	
12-24	3727-3728	]	_	_	
12-25	3728-3729	(	_	_	
12-26	3729-3734	https	_	_	
12-27	3734-3735	:	_	_	
12-28	3735-3736	/	_	_	
12-29	3736-3737	/	_	_	
12-30	3737-3749	anaconda.org	_	_	
12-31	3749-3750	/	_	_	
12-32	3750-3761	conda-forge	_	_	
12-33	3761-3762	/	_	_	
12-34	3762-3772	coinbonmin	_	_	
12-35	3772-3773	)	_	_	
12-36	3774-3780	solver	_	_	
12-37	3783-3784	#	_	_	
12-38	3784-3785	#	_	_	
12-39	3786-3788	📥	_	_	
12-40	3789-3801	Installation	_	_	
12-41	3802-3811	Slideflow	_	_	
12-42	3812-3815	can	_	_	
12-43	3816-3818	be	_	_	
12-44	3819-3828	installed	_	_	
12-45	3829-3833	with	_	_	
12-46	3834-3838	PyPI	*	SOFTWARE	
12-47	3838-3839	,	_	_	
12-48	3840-3842	as	_	_	
12-49	3843-3844	a	_	_	
12-50	3845-3851	Docker	_	_	
12-51	3852-3861	container	_	_	
12-52	3861-3862	,	_	_	
12-53	3863-3865	or	_	_	
12-54	3866-3869	run	_	_	
12-55	3870-3874	from	_	_	
12-56	3875-3881	source	_	_	
12-57	3881-3882	.	_	_	
12-58	3884-3885	#	_	_	
12-59	3885-3886	#	_	_	
12-60	3886-3887	#	_	_	
12-61	3888-3894	Method	_	_	
12-62	3895-3896	1	_	_	
12-63	3896-3897	:	_	_	
12-64	3898-3905	Install	_	_	
12-65	3906-3909	via	_	_	
12-66	3910-3913	pip	*	SOFTWARE	
12-67	3915-3916	`	_	_	
12-68	3916-3917	`	_	_	
12-69	3917-3918	`	_	_	
12-70	3919-3923	pip3	_	_	
12-71	3924-3931	install	_	_	
12-72	3932-3933	-	_	_	
12-73	3933-3934	-	_	_	
12-74	3934-3941	upgrade	_	_	
12-75	3942-3952	setuptools	_	_	
12-76	3953-3956	pip	*	SOFTWARE	
12-77	3957-3962	wheel	_	_	
12-78	3963-3967	pip3	_	_	
12-79	3968-3975	install	_	_	
12-80	3976-3985	slideflow	*	SOFTWARE	
12-81	3985-3986	[	_	_	
12-82	3986-3991	cucim	*	SOFTWARE	
12-83	3991-3992	]	_	_	
12-84	3993-4005	cupy-cuda11x	_	_	
12-85	4006-4007	`	_	_	
12-86	4007-4008	`	_	_	
12-87	4008-4009	`	_	_	
12-88	4011-4014	The	_	_	
12-89	4015-4016	`	_	_	
12-90	4016-4020	cupy	*	SOFTWARE	
12-91	4020-4021	`	_	_	
12-92	4022-4029	package	_	_	
12-93	4030-4034	name	_	_	
12-94	4035-4042	depends	_	_	
12-95	4043-4045	on	_	_	
12-96	4046-4049	the	_	_	
12-97	4050-4059	installed	_	_	
12-98	4060-4064	CUDA	*	SOFTWARE	
12-99	4065-4072	version	_	_	
12-100	4072-4073	;	_	_	
12-101	4074-4075	[	_	_	
12-102	4075-4078	see	_	_	
12-103	4079-4083	here	_	_	
12-104	4083-4084	]	_	_	
12-105	4084-4085	(	_	_	
12-106	4085-4090	https	_	_	
12-107	4090-4091	:	_	_	
12-108	4091-4092	/	_	_	
12-109	4092-4093	/	_	_	
12-110	4093-4106	docs.cupy.dev	_	_	
12-110.1	4098-4102	cupy	*	SOFTWARE	
12-111	4106-4107	/	_	_	
12-112	4107-4109	en	_	_	
12-113	4109-4110	/	_	_	
12-114	4110-4116	stable	_	_	
12-115	4116-4117	/	_	_	
12-116	4117-4129	install.html	_	_	
12-117	4129-4130	#	_	_	
12-118	4130-4145	installing-cupy	_	_	
12-118.1	4141-4145	cupy	*	SOFTWARE	
12-119	4145-4146	)	_	_	
12-120	4147-4150	for	_	_	
12-121	4151-4163	installation	_	_	
12-122	4164-4176	instructions	_	_	
12-123	4176-4177	.	_	_	

#Text=`cupy` is not required if using Libvips.
#Text=
#Text=### Method 2: Docker image
#Text=
#Text=Alternatively, pre-configured [docker images](https://hub.docker.com/repository/docker/jamesdolezal/slideflow) are available with OpenSlide/Libvips and the latest version of either Tensorflow and PyTorch.
13-1	4178-4179	`	_	_	
13-2	4179-4183	cupy	*	SOFTWARE	
13-3	4183-4184	`	_	_	
13-4	4185-4187	is	_	_	
13-5	4188-4191	not	_	_	
13-6	4192-4200	required	_	_	
13-7	4201-4203	if	_	_	
13-8	4204-4209	using	_	_	
13-9	4210-4217	Libvips	_	_	
13-10	4217-4218	.	_	_	
13-11	4220-4221	#	_	_	
13-12	4221-4222	#	_	_	
13-13	4222-4223	#	_	_	
13-14	4224-4230	Method	_	_	
13-15	4231-4232	2	_	_	
13-16	4232-4233	:	_	_	
13-17	4234-4240	Docker	*	SOFTWARE	
13-18	4241-4246	image	_	_	
13-19	4248-4261	Alternatively	_	_	
13-20	4261-4262	,	_	_	
13-21	4263-4277	pre-configured	_	_	
13-22	4278-4279	[	_	_	
13-23	4279-4285	docker	*	SOFTWARE	
13-24	4286-4292	images	_	_	
13-25	4292-4293	]	_	_	
13-26	4293-4294	(	_	_	
13-27	4294-4299	https	_	_	
13-28	4299-4300	:	_	_	
13-29	4300-4301	/	_	_	
13-30	4301-4302	/	_	_	
13-31	4302-4316	hub.docker.com	_	_	
13-31.1	4306-4312	docker	*	SOFTWARE	
13-32	4316-4317	/	_	_	
13-33	4317-4327	repository	_	_	
13-34	4327-4328	/	_	_	
13-35	4328-4334	docker	_	_	
13-36	4334-4335	/	_	_	
13-37	4335-4347	jamesdolezal	_	_	
13-38	4347-4348	/	_	_	
13-39	4348-4357	slideflow	*	SOFTWARE	
13-40	4357-4358	)	_	_	
13-41	4359-4362	are	_	_	
13-42	4363-4372	available	_	_	
13-43	4373-4377	with	_	_	
13-44	4378-4387	OpenSlide	_	_	
13-45	4387-4388	/	_	_	
13-46	4388-4395	Libvips	_	_	
13-47	4396-4399	and	_	_	
13-48	4400-4403	the	_	_	
13-49	4404-4410	latest	_	_	
13-50	4411-4418	version	_	_	
13-51	4419-4421	of	_	_	
13-52	4422-4428	either	_	_	
13-53	4429-4439	Tensorflow	*	SOFTWARE	
13-54	4440-4443	and	_	_	
13-55	4444-4451	PyTorch	*	SOFTWARE	
13-56	4451-4452	.	_	_	

#Text=To install with the Tensorflow backend:
#Text=
#Text=```
#Text=docker pull jamesdolezal/slideflow:latest-tf
#Text=docker run -it --gpus all jamesdolezal/slideflow:latest-tf
#Text=```
#Text=
#Text=To install with the PyTorch backend:
#Text=
#Text=```
#Text=docker pull jamesdolezal/slideflow:latest-torch
#Text=docker run -it --shm-size=2g --gpus all jamesdolezal/slideflow:latest-torch
#Text=```
#Text=
#Text=### Method 3: From source
#Text=
#Text=To run from source, clone this repository, install the conda development environment, and build a wheel:
#Text=
#Text=```
#Text=git clone https://github.com/slideflow/slideflow
#Text=conda env create -f slideflow/environment.yml
#Text=conda activate slideflow
#Text=pip install -e slideflow/ cupy-cuda11x
#Text=```
#Text=
#Text=### Non-Commercial Add-ons
#Text=
#Text=To add additional tools and pretrained models available under a non-commercial license, install `slideflow-gpl` and `slideflow-noncommercial`:
#Text=
#Text=```
#Text=pip install slideflow-gpl slideflow-noncommercial
#Text=```
#Text=
#Text=This will provide integrated access to 6 additional pretrained foundation models ([UNI](https://www.nature.com/articles/s41591-024-02857-3), [HistoSSL](https://www.medrxiv.org/content/10.1101/2023.07.21.23292757v2.full.pdf), [GigaPath](https://aka.ms/gigapath), [PLIP](https://www.nature.com/articles/s41591-023-02504-3), [RetCCL](https://www.sciencedirect.com/science/article/abs/pii/S1361841522002730), and [CTransPath](https://www.sciencedirect.com/science/article/abs/pii/S1361841522002043)), the MIL architecture [CLAM](https://www.nature.com/articles/s41551-020-00682-w), the UQ algorithm [BISCUIT](https://www.nature.com/articles/s41467-022-34025-x), and the GAN framework [StyleGAN3](https://nvlabs-fi-cdn.nvidia.com/stylegan3/stylegan3-paper.pdf).
#Text=
#Text=## ⚙️ Configuration
#Text=
#Text=### Deep learning (PyTorch vs.
14-1	4453-4455	To	_	_	
14-2	4456-4463	install	_	_	
14-3	4464-4468	with	_	_	
14-4	4469-4472	the	_	_	
14-5	4473-4483	Tensorflow	*	SOFTWARE	
14-6	4484-4491	backend	_	_	
14-7	4491-4492	:	_	_	
14-8	4494-4495	`	_	_	
14-9	4495-4496	`	_	_	
14-10	4496-4497	`	_	_	
14-11	4498-4504	docker	*	SOFTWARE	
14-12	4505-4509	pull	_	_	
14-13	4510-4522	jamesdolezal	_	_	
14-14	4522-4523	/	_	_	
14-15	4523-4532	slideflow	*	SOFTWARE	
14-16	4532-4533	:	_	_	
14-17	4533-4542	latest-tf	_	_	
14-18	4543-4549	docker	*	SOFTWARE	
14-19	4550-4553	run	_	_	
14-20	4554-4555	-	_	_	
14-21	4555-4557	it	_	_	
14-22	4558-4559	-	_	_	
14-23	4559-4560	-	_	_	
14-24	4560-4564	gpus	_	_	
14-25	4565-4568	all	_	_	
14-26	4569-4581	jamesdolezal	_	_	
14-27	4581-4582	/	_	_	
14-28	4582-4591	slideflow	*	SOFTWARE	
14-29	4591-4592	:	_	_	
14-30	4592-4601	latest-tf	_	_	
14-31	4602-4603	`	_	_	
14-32	4603-4604	`	_	_	
14-33	4604-4605	`	_	_	
14-34	4607-4609	To	_	_	
14-35	4610-4617	install	_	_	
14-36	4618-4622	with	_	_	
14-37	4623-4626	the	_	_	
14-38	4627-4634	PyTorch	*	SOFTWARE	
14-39	4635-4642	backend	_	_	
14-40	4642-4643	:	_	_	
14-41	4645-4646	`	_	_	
14-42	4646-4647	`	_	_	
14-43	4647-4648	`	_	_	
14-44	4649-4655	docker	*	SOFTWARE	
14-45	4656-4660	pull	_	_	
14-46	4661-4673	jamesdolezal	_	_	
14-47	4673-4674	/	_	_	
14-48	4674-4683	slideflow	*	SOFTWARE	
14-49	4683-4684	:	_	_	
14-50	4684-4696	latest-torch	_	_	
14-50.1	4691-4696	torch	*	SOFTWARE	
14-51	4697-4703	docker	*	SOFTWARE	
14-52	4704-4707	run	_	_	
14-53	4708-4709	-	_	_	
14-54	4709-4711	it	_	_	
14-55	4712-4713	-	_	_	
14-56	4713-4714	-	_	_	
14-57	4714-4722	shm-size	_	_	
14-58	4722-4723	=	_	_	
14-59	4723-4725	2g	_	_	
14-60	4726-4727	-	_	_	
14-61	4727-4728	-	_	_	
14-62	4728-4732	gpus	_	_	
14-63	4733-4736	all	_	_	
14-64	4737-4749	jamesdolezal	_	_	
14-65	4749-4750	/	_	_	
14-66	4750-4759	slideflow	*	SOFTWARE	
14-67	4759-4760	:	_	_	
14-68	4760-4772	latest-torch	_	_	
14-68.1	4767-4772	torch	*	SOFTWARE	
14-69	4773-4774	`	_	_	
14-70	4774-4775	`	_	_	
14-71	4775-4776	`	_	_	
14-72	4778-4779	#	_	_	
14-73	4779-4780	#	_	_	
14-74	4780-4781	#	_	_	
14-75	4782-4788	Method	_	_	
14-76	4789-4790	3	_	_	
14-77	4790-4791	:	_	_	
14-78	4792-4796	From	_	_	
14-79	4797-4803	source	_	_	
14-80	4805-4807	To	_	_	
14-81	4808-4811	run	_	_	
14-82	4812-4816	from	_	_	
14-83	4817-4823	source	_	_	
14-84	4823-4824	,	_	_	
14-85	4825-4830	clone	_	_	
14-86	4831-4835	this	_	_	
14-87	4836-4846	repository	_	_	
14-88	4846-4847	,	_	_	
14-89	4848-4855	install	_	_	
14-90	4856-4859	the	_	_	
14-91	4860-4865	conda	_	_	
14-92	4866-4877	development	_	_	
14-93	4878-4889	environment	_	_	
14-94	4889-4890	,	_	_	
14-95	4891-4894	and	_	_	
14-96	4895-4900	build	_	_	
14-97	4901-4902	a	_	_	
14-98	4903-4908	wheel	_	_	
14-99	4908-4909	:	_	_	
14-100	4911-4912	`	_	_	
14-101	4912-4913	`	_	_	
14-102	4913-4914	`	_	_	
14-103	4915-4918	git	_	_	
14-104	4919-4924	clone	_	_	
14-105	4925-4930	https	_	_	
14-106	4930-4931	:	_	_	
14-107	4931-4932	/	_	_	
14-108	4932-4933	/	_	_	
14-109	4933-4943	github.com	_	_	
14-110	4943-4944	/	_	_	
14-111	4944-4953	slideflow	_	_	
14-112	4953-4954	/	_	_	
14-113	4954-4963	slideflow	_	_	
14-114	4964-4969	conda	_	_	
14-115	4970-4973	env	_	_	
14-116	4974-4980	create	_	_	
14-117	4981-4982	-	_	_	
14-118	4982-4983	f	_	_	
14-119	4984-4993	slideflow	*	SOFTWARE	
14-120	4993-4994	/	_	_	
14-121	4994-5009	environment.yml	_	_	
14-122	5010-5015	conda	_	_	
14-123	5016-5024	activate	_	_	
14-124	5025-5034	slideflow	*	SOFTWARE	
14-125	5035-5038	pip	*	SOFTWARE	
14-126	5039-5046	install	_	_	
14-127	5047-5048	-	_	_	
14-128	5048-5049	e	_	_	
14-129	5050-5059	slideflow	*	SOFTWARE	
14-130	5059-5060	/	_	_	
14-131	5061-5073	cupy-cuda11x	_	_	
14-131.1	5061-5065	cupy	*	SOFTWARE	
14-132	5074-5075	`	_	_	
14-133	5075-5076	`	_	_	
14-134	5076-5077	`	_	_	
14-135	5079-5080	#	_	_	
14-136	5080-5081	#	_	_	
14-137	5081-5082	#	_	_	
14-138	5083-5097	Non-Commercial	_	_	
14-139	5098-5105	Add-ons	_	_	
14-140	5107-5109	To	_	_	
14-141	5110-5113	add	_	_	
14-142	5114-5124	additional	_	_	
14-143	5125-5130	tools	_	_	
14-144	5131-5134	and	_	_	
14-145	5135-5145	pretrained	_	_	
14-146	5146-5152	models	_	_	
14-147	5153-5162	available	_	_	
14-148	5163-5168	under	_	_	
14-149	5169-5170	a	_	_	
14-150	5171-5185	non-commercial	_	_	
14-151	5186-5193	license	_	_	
14-152	5193-5194	,	_	_	
14-153	5195-5202	install	_	_	
14-154	5203-5204	`	_	_	
14-155	5204-5217	slideflow-gpl	_	_	
14-156	5217-5218	`	_	_	
14-157	5219-5222	and	_	_	
14-158	5223-5224	`	_	_	
14-159	5224-5247	slideflow-noncommercial	_	_	
14-160	5247-5248	`	_	_	
14-161	5248-5249	:	_	_	
14-162	5251-5252	`	_	_	
14-163	5252-5253	`	_	_	
14-164	5253-5254	`	_	_	
14-165	5255-5258	pip	*	SOFTWARE	
14-166	5259-5266	install	_	_	
14-167	5267-5280	slideflow-gpl	_	_	
14-167.1	5267-5276	slideflow	*	SOFTWARE	
14-168	5281-5304	slideflow-noncommercial	_	_	
14-169	5305-5306	`	_	_	
14-170	5306-5307	`	_	_	
14-171	5307-5308	`	_	_	
14-172	5310-5314	This	_	_	
14-173	5315-5319	will	_	_	
14-174	5320-5327	provide	_	_	
14-175	5328-5338	integrated	_	_	
14-176	5339-5345	access	_	_	
14-177	5346-5348	to	_	_	
14-178	5349-5350	6	_	_	
14-179	5351-5361	additional	_	_	
14-180	5362-5372	pretrained	_	_	
14-181	5373-5383	foundation	_	_	
14-182	5384-5390	models	_	_	
14-183	5391-5392	(	_	_	
14-184	5392-5393	[	_	_	
14-185	5393-5396	UNI	_	_	
14-186	5396-5397	]	_	_	
14-187	5397-5398	(	_	_	
14-188	5398-5403	https	_	_	
14-189	5403-5404	:	_	_	
14-190	5404-5405	/	_	_	
14-191	5405-5406	/	_	_	
14-192	5406-5420	www.nature.com	_	_	
14-193	5420-5421	/	_	_	
14-194	5421-5429	articles	_	_	
14-195	5429-5430	/	_	_	
14-196	5430-5436	s41591	_	_	
14-197	5436-5437	-	_	_	
14-198	5437-5440	024	_	_	
14-199	5440-5441	-	_	_	
14-200	5441-5446	02857	_	_	
14-201	5446-5447	-	_	_	
14-202	5447-5448	3	_	_	
14-203	5448-5449	)	_	_	
14-204	5449-5450	,	_	_	
14-205	5451-5452	[	_	_	
14-206	5452-5460	HistoSSL	_	_	
14-207	5460-5461	]	_	_	
14-208	5461-5462	(	_	_	
14-209	5462-5467	https	_	_	
14-210	5467-5468	:	_	_	
14-211	5468-5469	/	_	_	
14-212	5469-5470	/	_	_	
14-213	5470-5485	www.medrxiv.org	_	_	
14-214	5485-5486	/	_	_	
14-215	5486-5493	content	_	_	
14-216	5493-5494	/	_	_	
14-217	5494-5501	10.1101	_	_	
14-218	5501-5502	/	_	_	
14-219	5502-5523	2023.07.21.23292757v2	_	_	
14-220	5523-5524	.	_	_	
14-221	5524-5532	full.pdf	_	_	
14-222	5532-5533	)	_	_	
14-223	5533-5534	,	_	_	
14-224	5535-5536	[	_	_	
14-225	5536-5544	GigaPath	_	_	
14-226	5544-5545	]	_	_	
14-227	5545-5546	(	_	_	
14-228	5546-5551	https	_	_	
14-229	5551-5552	:	_	_	
14-230	5552-5553	/	_	_	
14-231	5553-5554	/	_	_	
14-232	5554-5560	aka.ms	_	_	
14-233	5560-5561	/	_	_	
14-234	5561-5569	gigapath	_	_	
14-235	5569-5570	)	_	_	
14-236	5570-5571	,	_	_	
14-237	5572-5573	[	_	_	
14-238	5573-5577	PLIP	_	_	
14-239	5577-5578	]	_	_	
14-240	5578-5579	(	_	_	
14-241	5579-5584	https	_	_	
14-242	5584-5585	:	_	_	
14-243	5585-5586	/	_	_	
14-244	5586-5587	/	_	_	
14-245	5587-5601	www.nature.com	_	_	
14-246	5601-5602	/	_	_	
14-247	5602-5610	articles	_	_	
14-248	5610-5611	/	_	_	
14-249	5611-5617	s41591	_	_	
14-250	5617-5618	-	_	_	
14-251	5618-5621	023	_	_	
14-252	5621-5622	-	_	_	
14-253	5622-5627	02504	_	_	
14-254	5627-5628	-	_	_	
14-255	5628-5629	3	_	_	
14-256	5629-5630	)	_	_	
14-257	5630-5631	,	_	_	
14-258	5632-5633	[	_	_	
14-259	5633-5639	RetCCL	_	_	
14-260	5639-5640	]	_	_	
14-261	5640-5641	(	_	_	
14-262	5641-5646	https	_	_	
14-263	5646-5647	:	_	_	
14-264	5647-5648	/	_	_	
14-265	5648-5649	/	_	_	
14-266	5649-5670	www.sciencedirect.com	_	_	
14-267	5670-5671	/	_	_	
14-268	5671-5678	science	_	_	
14-269	5678-5679	/	_	_	
14-270	5679-5686	article	_	_	
14-271	5686-5687	/	_	_	
14-272	5687-5690	abs	_	_	
14-273	5690-5691	/	_	_	
14-274	5691-5694	pii	_	_	
14-275	5694-5695	/	_	_	
14-276	5695-5712	S1361841522002730	_	_	
14-277	5712-5713	)	_	_	
14-278	5713-5714	,	_	_	
14-279	5715-5718	and	_	_	
14-280	5719-5720	[	_	_	
14-281	5720-5730	CTransPath	_	_	
14-282	5730-5731	]	_	_	
14-283	5731-5732	(	_	_	
14-284	5732-5737	https	_	_	
14-285	5737-5738	:	_	_	
14-286	5738-5739	/	_	_	
14-287	5739-5740	/	_	_	
14-288	5740-5761	www.sciencedirect.com	_	_	
14-289	5761-5762	/	_	_	
14-290	5762-5769	science	_	_	
14-291	5769-5770	/	_	_	
14-292	5770-5777	article	_	_	
14-293	5777-5778	/	_	_	
14-294	5778-5781	abs	_	_	
14-295	5781-5782	/	_	_	
14-296	5782-5785	pii	_	_	
14-297	5785-5786	/	_	_	
14-298	5786-5803	S1361841522002043	_	_	
14-299	5803-5804	)	_	_	
14-300	5804-5805	)	_	_	
14-301	5805-5806	,	_	_	
14-302	5807-5810	the	_	_	
14-303	5811-5814	MIL	_	_	
14-304	5815-5827	architecture	_	_	
14-305	5828-5829	[	_	_	
14-306	5829-5833	CLAM	_	_	
14-307	5833-5834	]	_	_	
14-308	5834-5835	(	_	_	
14-309	5835-5840	https	_	_	
14-310	5840-5841	:	_	_	
14-311	5841-5842	/	_	_	
14-312	5842-5843	/	_	_	
14-313	5843-5857	www.nature.com	_	_	
14-314	5857-5858	/	_	_	
14-315	5858-5866	articles	_	_	
14-316	5866-5867	/	_	_	
14-317	5867-5873	s41551	_	_	
14-318	5873-5874	-	_	_	
14-319	5874-5877	020	_	_	
14-320	5877-5878	-	_	_	
14-321	5878-5883	00682	_	_	
14-322	5883-5884	-	_	_	
14-323	5884-5885	w	_	_	
14-324	5885-5886	)	_	_	
14-325	5886-5887	,	_	_	
14-326	5888-5891	the	_	_	
14-327	5892-5894	UQ	_	_	
14-328	5895-5904	algorithm	_	_	
14-329	5905-5906	[	_	_	
14-330	5906-5913	BISCUIT	_	_	
14-331	5913-5914	]	_	_	
14-332	5914-5915	(	_	_	
14-333	5915-5920	https	_	_	
14-334	5920-5921	:	_	_	
14-335	5921-5922	/	_	_	
14-336	5922-5923	/	_	_	
14-337	5923-5937	www.nature.com	_	_	
14-338	5937-5938	/	_	_	
14-339	5938-5946	articles	_	_	
14-340	5946-5947	/	_	_	
14-341	5947-5953	s41467	_	_	
14-342	5953-5954	-	_	_	
14-343	5954-5957	022	_	_	
14-344	5957-5958	-	_	_	
14-345	5958-5963	34025	_	_	
14-346	5963-5964	-	_	_	
14-347	5964-5965	x	_	_	
14-348	5965-5966	)	_	_	
14-349	5966-5967	,	_	_	
14-350	5968-5971	and	_	_	
14-351	5972-5975	the	_	_	
14-352	5976-5979	GAN	_	_	
14-353	5980-5989	framework	_	_	
14-354	5990-5991	[	_	_	
14-355	5991-6000	StyleGAN3	*	SOFTWARE	
14-356	6000-6001	]	_	_	
14-357	6001-6002	(	_	_	
14-358	6002-6007	https	_	_	
14-359	6007-6008	:	_	_	
14-360	6008-6009	/	_	_	
14-361	6009-6010	/	_	_	
14-362	6010-6034	nvlabs-fi-cdn.nvidia.com	_	_	
14-363	6034-6035	/	_	_	
14-364	6035-6044	stylegan3	*	SOFTWARE	
14-365	6044-6045	/	_	_	
14-366	6045-6054	stylegan3	_	_	
14-367	6054-6055	-	_	_	
14-368	6055-6064	paper.pdf	_	_	
14-369	6064-6065	)	_	_	
14-370	6065-6066	.	_	_	
14-371	6068-6069	#	_	_	
14-372	6069-6070	#	_	_	
14-373	6071-6073	⚙️	_	_	
14-374	6074-6087	Configuration	_	_	
14-375	6089-6090	#	_	_	
14-376	6090-6091	#	_	_	
14-377	6091-6092	#	_	_	
14-378	6093-6097	Deep	_	_	
14-379	6098-6106	learning	_	_	
14-380	6107-6108	(	_	_	
14-381	6108-6115	PyTorch	*	SOFTWARE	
14-382	6116-6118	vs	_	_	
14-383	6118-6119	.	_	_	

#Text=Tensorflow)
#Text=
#Text=Slideflow supports both PyTorch and Tensorflow, defaulting to PyTorch if both are available.
15-1	6120-6130	Tensorflow	*	SOFTWARE	
15-2	6130-6131	)	_	_	
15-3	6133-6142	Slideflow	_	_	
15-4	6143-6151	supports	_	_	
15-5	6152-6156	both	_	_	
15-6	6157-6164	PyTorch	*	SOFTWARE	
15-7	6165-6168	and	_	_	
15-8	6169-6179	Tensorflow	*	SOFTWARE	
15-9	6179-6180	,	_	_	
15-10	6181-6191	defaulting	_	_	
15-11	6192-6194	to	_	_	
15-12	6195-6202	PyTorch	*	SOFTWARE	
15-13	6203-6205	if	_	_	
15-14	6206-6210	both	_	_	
15-15	6211-6214	are	_	_	
15-16	6215-6224	available	_	_	
15-17	6224-6225	.	_	_	

#Text=You can specify the backend to use with the environmental variable `SF_BACKEND`.
16-1	6226-6229	You	_	_	
16-2	6230-6233	can	_	_	
16-3	6234-6241	specify	_	_	
16-4	6242-6245	the	_	_	
16-5	6246-6253	backend	_	_	
16-6	6254-6256	to	_	_	
16-7	6257-6260	use	_	_	
16-8	6261-6265	with	_	_	
16-9	6266-6269	the	_	_	
16-10	6270-6283	environmental	_	_	
16-11	6284-6292	variable	_	_	
16-12	6293-6294	`	_	_	
16-13	6294-6304	SF_BACKEND	_	_	
16-14	6304-6305	`	_	_	
16-15	6305-6306	.	_	_	

#Text=For example:
#Text=
#Text=```
#Text=export SF_BACKEND=tensorflow
#Text=```
#Text=
#Text=### Slide reading (cuCIM vs.
17-1	6307-6310	For	_	_	
17-2	6311-6318	example	_	_	
17-3	6318-6319	:	_	_	
17-4	6321-6322	`	_	_	
17-5	6322-6323	`	_	_	
17-6	6323-6324	`	_	_	
17-7	6325-6331	export	_	_	
17-8	6332-6342	SF_BACKEND	_	_	
17-9	6342-6343	=	_	_	
17-10	6343-6353	tensorflow	*	SOFTWARE	
17-11	6354-6355	`	_	_	
17-12	6355-6356	`	_	_	
17-13	6356-6357	`	_	_	
17-14	6359-6360	#	_	_	
17-15	6360-6361	#	_	_	
17-16	6361-6362	#	_	_	
17-17	6363-6368	Slide	_	_	
17-18	6369-6376	reading	_	_	
17-19	6377-6378	(	_	_	
17-20	6378-6383	cuCIM	*	SOFTWARE	
17-21	6384-6386	vs	_	_	
17-22	6386-6387	.	_	_	

#Text=Libvips)
#Text=
#Text=By default, Slideflow reads whole-slide images using [cuCIM](https://docs.rapids.ai/api/cucim/stable/).
18-1	6388-6395	Libvips	*	SOFTWARE	
18-2	6395-6396	)	_	_	
18-3	6398-6400	By	_	_	
18-4	6401-6408	default	_	_	
18-5	6408-6409	,	_	_	
18-6	6410-6419	Slideflow	*	SOFTWARE	
18-7	6420-6425	reads	_	_	
18-8	6426-6437	whole-slide	_	_	
18-9	6438-6444	images	_	_	
18-10	6445-6450	using	_	_	
18-11	6451-6452	[	_	_	
18-12	6452-6457	cuCIM	*	SOFTWARE	
18-13	6457-6458	]	_	_	
18-14	6458-6459	(	_	_	
18-15	6459-6464	https	_	_	
18-16	6464-6465	:	_	_	
18-17	6465-6466	/	_	_	
18-18	6466-6467	/	_	_	
18-19	6467-6481	docs.rapids.ai	_	_	
18-20	6481-6482	/	_	_	
18-21	6482-6485	api	_	_	
18-22	6485-6486	/	_	_	
18-23	6486-6491	cucim	_	_	
18-24	6491-6492	/	_	_	
18-25	6492-6498	stable	_	_	
18-26	6498-6499	/	_	_	
18-27	6499-6500	)	_	_	
18-28	6500-6501	.	_	_	

#Text=Although much faster than other openslide-based frameworks, it supports fewer slide scanner formats.
19-1	6502-6510	Although	_	_	
19-2	6511-6515	much	_	_	
19-3	6516-6522	faster	_	_	
19-4	6523-6527	than	_	_	
19-5	6528-6533	other	_	_	
19-6	6534-6549	openslide-based	_	_	
19-7	6550-6560	frameworks	_	_	
19-8	6560-6561	,	_	_	
19-9	6562-6564	it	_	_	
19-10	6565-6573	supports	_	_	
19-11	6574-6579	fewer	_	_	
19-12	6580-6585	slide	_	_	
19-13	6586-6593	scanner	_	_	
19-14	6594-6601	formats	_	_	
19-15	6601-6602	.	_	_	

#Text=Slideflow also includes a [Libvips](https://libvips.github.io/libvips/) backend, which adds support for *.scn, *.mrxs, *.ndpi, *.vms, and *.vmu files.
20-1	6603-6612	Slideflow	_	_	
20-2	6613-6617	also	_	_	
20-3	6618-6626	includes	_	_	
20-4	6627-6628	a	_	_	
20-5	6629-6630	[	_	_	
20-6	6630-6637	Libvips	*	SOFTWARE	
20-7	6637-6638	]	_	_	
20-8	6638-6639	(	_	_	
20-9	6639-6644	https	_	_	
20-10	6644-6645	:	_	_	
20-11	6645-6646	/	_	_	
20-12	6646-6647	/	_	_	
20-13	6647-6664	libvips.github.io	_	_	
20-14	6664-6665	/	_	_	
20-15	6665-6672	libvips	*	SOFTWARE	
20-16	6672-6673	/	_	_	
20-17	6673-6674	)	_	_	
20-18	6675-6682	backend	_	_	
20-19	6682-6683	,	_	_	
20-20	6684-6689	which	_	_	
20-21	6690-6694	adds	_	_	
20-22	6695-6702	support	_	_	
20-23	6703-6706	for	_	_	
20-24	6707-6708	*	_	_	
20-25	6708-6709	.	_	_	
20-26	6709-6712	scn	_	_	
20-27	6712-6713	,	_	_	
20-28	6714-6715	*	_	_	
20-29	6715-6716	.	_	_	
20-30	6716-6720	mrxs	_	_	
20-31	6720-6721	,	_	_	
20-32	6722-6723	*	_	_	
20-33	6723-6724	.	_	_	
20-34	6724-6728	ndpi	_	_	
20-35	6728-6729	,	_	_	
20-36	6730-6731	*	_	_	
20-37	6731-6732	.	_	_	
20-38	6732-6735	vms	_	_	
20-39	6735-6736	,	_	_	
20-40	6737-6740	and	_	_	
20-41	6741-6742	*	_	_	
20-42	6742-6743	.	_	_	
20-43	6743-6746	vmu	_	_	
20-44	6747-6752	files	_	_	
20-45	6752-6753	.	_	_	

#Text=You can set the active slide backend with the environmental variable `SF_SLIDE_BACKEND`:
#Text=
#Text=```
#Text=export SF_SLIDE_BACKEND=libvips
#Text=```
#Text=
#Text=
#Text=## Getting started
#Text=Slideflow experiments are organized into [Projects](https://slideflow.dev/project_setup), which supervise storage of whole-slide images, extracted tiles, and patient-level annotations.
21-1	6754-6757	You	_	_	
21-2	6758-6761	can	_	_	
21-3	6762-6765	set	_	_	
21-4	6766-6769	the	_	_	
21-5	6770-6776	active	_	_	
21-6	6777-6782	slide	_	_	
21-7	6783-6790	backend	_	_	
21-8	6791-6795	with	_	_	
21-9	6796-6799	the	_	_	
21-10	6800-6813	environmental	_	_	
21-11	6814-6822	variable	_	_	
21-12	6823-6824	`	_	_	
21-13	6824-6840	SF_SLIDE_BACKEND	_	_	
21-14	6840-6841	`	_	_	
21-15	6841-6842	:	_	_	
21-16	6844-6845	`	_	_	
21-17	6845-6846	`	_	_	
21-18	6846-6847	`	_	_	
21-19	6848-6854	export	_	_	
21-20	6855-6871	SF_SLIDE_BACKEND	_	_	
21-21	6871-6872	=	_	_	
21-22	6872-6879	libvips	_	_	
21-23	6880-6881	`	_	_	
21-24	6881-6882	`	_	_	
21-25	6882-6883	`	_	_	
21-26	6886-6887	#	_	_	
21-27	6887-6888	#	_	_	
21-28	6889-6896	Getting	_	_	
21-29	6897-6904	started	_	_	
21-30	6905-6914	Slideflow	_	_	
21-31	6915-6926	experiments	_	_	
21-32	6927-6930	are	_	_	
21-33	6931-6940	organized	_	_	
21-34	6941-6945	into	_	_	
21-35	6946-6947	[	_	_	
21-36	6947-6955	Projects	_	_	
21-37	6955-6956	]	_	_	
21-38	6956-6957	(	_	_	
21-39	6957-6962	https	_	_	
21-40	6962-6963	:	_	_	
21-41	6963-6964	/	_	_	
21-42	6964-6965	/	_	_	
21-43	6965-6978	slideflow.dev	_	_	
21-44	6978-6979	/	_	_	
21-45	6979-6992	project_setup	_	_	
21-46	6992-6993	)	_	_	
21-47	6993-6994	,	_	_	
21-48	6995-7000	which	_	_	
21-49	7001-7010	supervise	_	_	
21-50	7011-7018	storage	_	_	
21-51	7019-7021	of	_	_	
21-52	7022-7033	whole-slide	_	_	
21-53	7034-7040	images	_	_	
21-54	7040-7041	,	_	_	
21-55	7042-7051	extracted	_	_	
21-56	7052-7057	tiles	_	_	
21-57	7057-7058	,	_	_	
21-58	7059-7062	and	_	_	
21-59	7063-7076	patient-level	_	_	
21-60	7077-7088	annotations	_	_	
21-61	7088-7089	.	_	_	

#Text=The fastest way to get started is to use one of our preconfigured projects, which will automatically download slides from the Genomic Data Commons:
#Text=
#Text=```python
#Text=import slideflow as sf
#Text=
#Text=P = sf.create_project(
#Text=    root='/project/destination',
#Text=    cfg=sf.project.LungAdenoSquam(),
#Text=    download=True
#Text=)
#Text=```
#Text=
#Text=After the slides have been downloaded and verified, you can skip to [Extract tiles from slides](#extract-tiles-from-slides).
22-1	7090-7093	The	_	_	
22-2	7094-7101	fastest	_	_	
22-3	7102-7105	way	_	_	
22-4	7106-7108	to	_	_	
22-5	7109-7112	get	_	_	
22-6	7113-7120	started	_	_	
22-7	7121-7123	is	_	_	
22-8	7124-7126	to	_	_	
22-9	7127-7130	use	_	_	
22-10	7131-7134	one	_	_	
22-11	7135-7137	of	_	_	
22-12	7138-7141	our	_	_	
22-13	7142-7155	preconfigured	_	_	
22-14	7156-7164	projects	_	_	
22-15	7164-7165	,	_	_	
22-16	7166-7171	which	_	_	
22-17	7172-7176	will	_	_	
22-18	7177-7190	automatically	_	_	
22-19	7191-7199	download	_	_	
22-20	7200-7206	slides	_	_	
22-21	7207-7211	from	_	_	
22-22	7212-7215	the	_	_	
22-23	7216-7223	Genomic	_	_	
22-24	7224-7228	Data	_	_	
22-25	7229-7236	Commons	_	_	
22-26	7236-7237	:	_	_	
22-27	7239-7240	`	_	_	
22-28	7240-7241	`	_	_	
22-29	7241-7242	`	_	_	
22-30	7242-7248	python	*	PROGLANG	
22-31	7249-7255	import	_	_	
22-32	7256-7265	slideflow	*	SOFTWARE	
22-33	7266-7268	as	_	_	
22-34	7269-7271	sf	_	_	
22-35	7273-7274	P	_	_	
22-36	7275-7276	=	_	_	
22-37	7277-7294	sf.create_project	_	_	
22-38	7294-7295	(	_	_	
22-39	7300-7304	root	_	_	
22-40	7304-7305	=	_	_	
22-41	7305-7306	'	_	_	
22-42	7306-7307	/	_	_	
22-43	7307-7314	project	_	_	
22-44	7314-7315	/	_	_	
22-45	7315-7326	destination	_	_	
22-46	7326-7327	'	_	_	
22-47	7327-7328	,	_	_	
22-48	7333-7336	cfg	_	_	
22-49	7336-7337	=	_	_	
22-50	7337-7362	sf.project.LungAdenoSquam	_	_	
22-51	7362-7363	(	_	_	
22-52	7363-7364	)	_	_	
22-53	7364-7365	,	_	_	
22-54	7370-7378	download	_	_	
22-55	7378-7379	=	_	_	
22-56	7379-7383	True	_	_	
22-57	7384-7385	)	_	_	
22-58	7386-7387	`	_	_	
22-59	7387-7388	`	_	_	
22-60	7388-7389	`	_	_	
22-61	7391-7396	After	_	_	
22-62	7397-7400	the	_	_	
22-63	7401-7407	slides	_	_	
22-64	7408-7412	have	_	_	
22-65	7413-7417	been	_	_	
22-66	7418-7428	downloaded	_	_	
22-67	7429-7432	and	_	_	
22-68	7433-7441	verified	_	_	
22-69	7441-7442	,	_	_	
22-70	7443-7446	you	_	_	
22-71	7447-7450	can	_	_	
22-72	7451-7455	skip	_	_	
22-73	7456-7458	to	_	_	
22-74	7459-7460	[	_	_	
22-75	7460-7467	Extract	_	_	
22-76	7468-7473	tiles	_	_	
22-77	7474-7478	from	_	_	
22-78	7479-7485	slides	_	_	
22-79	7485-7486	]	_	_	
22-80	7486-7487	(	_	_	
22-81	7487-7488	#	_	_	
22-82	7488-7513	extract-tiles-from-slides	_	_	
22-83	7513-7514	)	_	_	
22-84	7514-7515	.	_	_	

#Text=Alternatively, to create a new custom project, supply the location of patient-level annotations (CSV), slides, and a destination for TFRecords to be saved:
#Text=
#Text=```python
#Text=import slideflow as sf
#Text=P = sf.create_project(
#Text=  '/project/path',
#Text=  annotations="/patient/annotations.csv",
#Text=  slides="/slides/directory",
#Text=  tfrecords="/tfrecords/directory"
#Text=)
#Text=```
#Text=
#Text=Ensure that the annotations file has a `slide` column for each annotation entry with the filename (without extension) of the corresponding slide.
#Text=
#Text=### Extract tiles from slides
#Text=
#Text=Next, whole-slide images are segmented into smaller image tiles and saved in `*.tfrecords` format.
23-1	7517-7530	Alternatively	_	_	
23-2	7530-7531	,	_	_	
23-3	7532-7534	to	_	_	
23-4	7535-7541	create	_	_	
23-5	7542-7543	a	_	_	
23-6	7544-7547	new	_	_	
23-7	7548-7554	custom	_	_	
23-8	7555-7562	project	_	_	
23-9	7562-7563	,	_	_	
23-10	7564-7570	supply	_	_	
23-11	7571-7574	the	_	_	
23-12	7575-7583	location	_	_	
23-13	7584-7586	of	_	_	
23-14	7587-7600	patient-level	_	_	
23-15	7601-7612	annotations	_	_	
23-16	7613-7614	(	_	_	
23-17	7614-7617	CSV	_	_	
23-18	7617-7618	)	_	_	
23-19	7618-7619	,	_	_	
23-20	7620-7626	slides	_	_	
23-21	7626-7627	,	_	_	
23-22	7628-7631	and	_	_	
23-23	7632-7633	a	_	_	
23-24	7634-7645	destination	_	_	
23-25	7646-7649	for	_	_	
23-26	7650-7659	TFRecords	_	_	
23-27	7660-7662	to	_	_	
23-28	7663-7665	be	_	_	
23-29	7666-7671	saved	_	_	
23-30	7671-7672	:	_	_	
23-31	7674-7675	`	_	_	
23-32	7675-7676	`	_	_	
23-33	7676-7677	`	_	_	
23-34	7677-7683	python	*	PROGLANG	
23-35	7684-7690	import	_	_	
23-36	7691-7700	slideflow	*	SOFTWARE	
23-37	7701-7703	as	_	_	
23-38	7704-7706	sf	_	_	
23-39	7707-7708	P	_	_	
23-40	7709-7710	=	_	_	
23-41	7711-7728	sf.create_project	_	_	
23-42	7728-7729	(	_	_	
23-43	7732-7733	'	_	_	
23-44	7733-7734	/	_	_	
23-45	7734-7741	project	_	_	
23-46	7741-7742	/	_	_	
23-47	7742-7746	path	_	_	
23-48	7746-7747	'	_	_	
23-49	7747-7748	,	_	_	
23-50	7751-7762	annotations	_	_	
23-51	7762-7763	=	_	_	
23-52	7763-7764	"	_	_	
23-53	7764-7765	/	_	_	
23-54	7765-7772	patient	_	_	
23-55	7772-7773	/	_	_	
23-56	7773-7788	annotations.csv	_	_	
23-57	7788-7789	"	_	_	
23-58	7789-7790	,	_	_	
23-59	7793-7799	slides	_	_	
23-60	7799-7800	=	_	_	
23-61	7800-7801	"	_	_	
23-62	7801-7802	/	_	_	
23-63	7802-7808	slides	_	_	
23-64	7808-7809	/	_	_	
23-65	7809-7818	directory	_	_	
23-66	7818-7819	"	_	_	
23-67	7819-7820	,	_	_	
23-68	7823-7832	tfrecords	_	_	
23-69	7832-7833	=	_	_	
23-70	7833-7834	"	_	_	
23-71	7834-7835	/	_	_	
23-72	7835-7844	tfrecords	_	_	
23-73	7844-7845	/	_	_	
23-74	7845-7854	directory	_	_	
23-75	7854-7855	"	_	_	
23-76	7856-7857	)	_	_	
23-77	7858-7859	`	_	_	
23-78	7859-7860	`	_	_	
23-79	7860-7861	`	_	_	
23-80	7863-7869	Ensure	_	_	
23-81	7870-7874	that	_	_	
23-82	7875-7878	the	_	_	
23-83	7879-7890	annotations	_	_	
23-84	7891-7895	file	_	_	
23-85	7896-7899	has	_	_	
23-86	7900-7901	a	_	_	
23-87	7902-7903	`	_	_	
23-88	7903-7908	slide	_	_	
23-89	7908-7909	`	_	_	
23-90	7910-7916	column	_	_	
23-91	7917-7920	for	_	_	
23-92	7921-7925	each	_	_	
23-93	7926-7936	annotation	_	_	
23-94	7937-7942	entry	_	_	
23-95	7943-7947	with	_	_	
23-96	7948-7951	the	_	_	
23-97	7952-7960	filename	_	_	
23-98	7961-7962	(	_	_	
23-99	7962-7969	without	_	_	
23-100	7970-7979	extension	_	_	
23-101	7979-7980	)	_	_	
23-102	7981-7983	of	_	_	
23-103	7984-7987	the	_	_	
23-104	7988-8001	corresponding	_	_	
23-105	8002-8007	slide	_	_	
23-106	8007-8008	.	_	_	
23-107	8010-8011	#	_	_	
23-108	8011-8012	#	_	_	
23-109	8012-8013	#	_	_	
23-110	8014-8021	Extract	_	_	
23-111	8022-8027	tiles	_	_	
23-112	8028-8032	from	_	_	
23-113	8033-8039	slides	_	_	
23-114	8041-8045	Next	_	_	
23-115	8045-8046	,	_	_	
23-116	8047-8058	whole-slide	_	_	
23-117	8059-8065	images	_	_	
23-118	8066-8069	are	_	_	
23-119	8070-8079	segmented	_	_	
23-120	8080-8084	into	_	_	
23-121	8085-8092	smaller	_	_	
23-122	8093-8098	image	_	_	
23-123	8099-8104	tiles	_	_	
23-124	8105-8108	and	_	_	
23-125	8109-8114	saved	_	_	
23-126	8115-8117	in	_	_	
23-127	8118-8119	`	_	_	
23-128	8119-8120	*	_	_	
23-129	8120-8121	.	_	_	
23-130	8121-8130	tfrecords	_	_	
23-131	8130-8131	`	_	_	
23-132	8132-8138	format	_	_	
23-133	8138-8139	.	_	_	

#Text=[Extract tiles](https://slideflow.dev/slide_processing) from slides at a given magnification (width in microns size) and resolution (width in pixels) using `sf.Project.extract_tiles()`:
#Text=
#Text=```python
#Text=P.extract_tiles(
#Text=  tile_px=299,  # Tile size, in pixels
#Text=  tile_um=302   # Tile size, in microns
#Text=)
#Text=```
#Text=
#Text=If slides are on a network drive or a spinning HDD, tile extraction can be accelerated by buffering slides to a SSD or ramdisk:
#Text=
#Text=```python
#Text=P.extract_tiles(
#Text=  ...,
#Text=  buffer="/mnt/ramdisk"
#Text=)
#Text=```
#Text=
#Text=### Training models
#Text=
#Text=Once tiles are extracted, models can be [trained](https://slideflow.dev/training).
24-1	8140-8141	[	_	_	
24-2	8141-8148	Extract	_	_	
24-3	8149-8154	tiles	_	_	
24-4	8154-8155	]	_	_	
24-5	8155-8156	(	_	_	
24-6	8156-8161	https	_	_	
24-7	8161-8162	:	_	_	
24-8	8162-8163	/	_	_	
24-9	8163-8164	/	_	_	
24-10	8164-8177	slideflow.dev	_	_	
24-11	8177-8178	/	_	_	
24-12	8178-8194	slide_processing	_	_	
24-13	8194-8195	)	_	_	
24-14	8196-8200	from	_	_	
24-15	8201-8207	slides	_	_	
24-16	8208-8210	at	_	_	
24-17	8211-8212	a	_	_	
24-18	8213-8218	given	_	_	
24-19	8219-8232	magnification	_	_	
24-20	8233-8234	(	_	_	
24-21	8234-8239	width	_	_	
24-22	8240-8242	in	_	_	
24-23	8243-8250	microns	_	_	
24-24	8251-8255	size	_	_	
24-25	8255-8256	)	_	_	
24-26	8257-8260	and	_	_	
24-27	8261-8271	resolution	_	_	
24-28	8272-8273	(	_	_	
24-29	8273-8278	width	_	_	
24-30	8279-8281	in	_	_	
24-31	8282-8288	pixels	_	_	
24-32	8288-8289	)	_	_	
24-33	8290-8295	using	_	_	
24-34	8296-8297	`	_	_	
24-35	8297-8321	sf.Project.extract_tiles	_	_	
24-36	8321-8322	(	_	_	
24-37	8322-8323	)	_	_	
24-38	8323-8324	`	_	_	
24-39	8324-8325	:	_	_	
24-40	8327-8328	`	_	_	
24-41	8328-8329	`	_	_	
24-42	8329-8330	`	_	_	
24-43	8330-8336	python	*	PROGLANG	
24-44	8337-8352	P.extract_tiles	_	_	
24-45	8352-8353	(	_	_	
24-46	8356-8363	tile_px	_	_	
24-47	8363-8364	=	_	_	
24-48	8364-8367	299	_	_	
24-49	8367-8368	,	_	_	
24-50	8370-8371	#	_	_	
24-51	8372-8376	Tile	_	_	
24-52	8377-8381	size	_	_	
24-53	8381-8382	,	_	_	
24-54	8383-8385	in	_	_	
24-55	8386-8392	pixels	_	_	
24-56	8395-8402	tile_um	_	_	
24-57	8402-8403	=	_	_	
24-58	8403-8406	302	_	_	
24-59	8409-8410	#	_	_	
24-60	8411-8415	Tile	_	_	
24-61	8416-8420	size	_	_	
24-62	8420-8421	,	_	_	
24-63	8422-8424	in	_	_	
24-64	8425-8432	microns	_	_	
24-65	8433-8434	)	_	_	
24-66	8435-8436	`	_	_	
24-67	8436-8437	`	_	_	
24-68	8437-8438	`	_	_	
24-69	8440-8442	If	_	_	
24-70	8443-8449	slides	_	_	
24-71	8450-8453	are	_	_	
24-72	8454-8456	on	_	_	
24-73	8457-8458	a	_	_	
24-74	8459-8466	network	_	_	
24-75	8467-8472	drive	_	_	
24-76	8473-8475	or	_	_	
24-77	8476-8477	a	_	_	
24-78	8478-8486	spinning	_	_	
24-79	8487-8490	HDD	_	_	
24-80	8490-8491	,	_	_	
24-81	8492-8496	tile	_	_	
24-82	8497-8507	extraction	_	_	
24-83	8508-8511	can	_	_	
24-84	8512-8514	be	_	_	
24-85	8515-8526	accelerated	_	_	
24-86	8527-8529	by	_	_	
24-87	8530-8539	buffering	_	_	
24-88	8540-8546	slides	_	_	
24-89	8547-8549	to	_	_	
24-90	8550-8551	a	_	_	
24-91	8552-8555	SSD	_	_	
24-92	8556-8558	or	_	_	
24-93	8559-8566	ramdisk	_	_	
24-94	8566-8567	:	_	_	
24-95	8569-8570	`	_	_	
24-96	8570-8571	`	_	_	
24-97	8571-8572	`	_	_	
24-98	8572-8578	python	*	PROGLANG	
24-99	8579-8594	P.extract_tiles	_	_	
24-100	8594-8595	(	_	_	
24-101	8598-8599	.	_	_	
24-102	8599-8600	.	_	_	
24-103	8600-8601	.	_	_	
24-104	8601-8602	,	_	_	
24-105	8605-8611	buffer	_	_	
24-106	8611-8612	=	_	_	
24-107	8612-8613	"	_	_	
24-108	8613-8614	/	_	_	
24-109	8614-8617	mnt	_	_	
24-110	8617-8618	/	_	_	
24-111	8618-8625	ramdisk	_	_	
24-112	8625-8626	"	_	_	
24-113	8627-8628	)	_	_	
24-114	8629-8630	`	_	_	
24-115	8630-8631	`	_	_	
24-116	8631-8632	`	_	_	
24-117	8634-8635	#	_	_	
24-118	8635-8636	#	_	_	
24-119	8636-8637	#	_	_	
24-120	8638-8646	Training	_	_	
24-121	8647-8653	models	_	_	
24-122	8655-8659	Once	_	_	
24-123	8660-8665	tiles	_	_	
24-124	8666-8669	are	_	_	
24-125	8670-8679	extracted	_	_	
24-126	8679-8680	,	_	_	
24-127	8681-8687	models	_	_	
24-128	8688-8691	can	_	_	
24-129	8692-8694	be	_	_	
24-130	8695-8696	[	_	_	
24-131	8696-8703	trained	_	_	
24-132	8703-8704	]	_	_	
24-133	8704-8705	(	_	_	
24-134	8705-8710	https	_	_	
24-135	8710-8711	:	_	_	
24-136	8711-8712	/	_	_	
24-137	8712-8713	/	_	_	
24-138	8713-8726	slideflow.dev	_	_	
24-138.1	8713-8722	slideflow	*	SOFTWARE	
24-139	8726-8727	/	_	_	
24-140	8727-8735	training	_	_	
24-141	8735-8736	)	_	_	
24-142	8736-8737	.	_	_	

#Text=Start by configuring a set of [hyperparameters](https://slideflow.dev/model#modelparams):
#Text=
#Text=```python
#Text=params = sf.ModelParams(
#Text=  tile_px=299,
#Text=  tile_um=302,
#Text=  batch_size=32,
#Text=  model='xception',
#Text=  learning_rate=0.0001,
#Text=  ...
#Text=)
#Text=```
#Text=
#Text=Models can then be trained using these parameters.
25-1	8738-8743	Start	_	_	
25-2	8744-8746	by	_	_	
25-3	8747-8758	configuring	_	_	
25-4	8759-8760	a	_	_	
25-5	8761-8764	set	_	_	
25-6	8765-8767	of	_	_	
25-7	8768-8769	[	_	_	
25-8	8769-8784	hyperparameters	_	_	
25-9	8784-8785	]	_	_	
25-10	8785-8786	(	_	_	
25-11	8786-8791	https	_	_	
25-12	8791-8792	:	_	_	
25-13	8792-8793	/	_	_	
25-14	8793-8794	/	_	_	
25-15	8794-8807	slideflow.dev	_	_	
25-15.1	8794-8803	slideflow	*	SOFTWARE	
25-16	8807-8808	/	_	_	
25-17	8808-8813	model	_	_	
25-18	8813-8814	#	_	_	
25-19	8814-8825	modelparams	_	_	
25-20	8825-8826	)	_	_	
25-21	8826-8827	:	_	_	
25-22	8829-8830	`	_	_	
25-23	8830-8831	`	_	_	
25-24	8831-8832	`	_	_	
25-25	8832-8838	python	*	PROGLANG	
25-26	8839-8845	params	_	_	
25-27	8846-8847	=	_	_	
25-28	8848-8862	sf.ModelParams	_	_	
25-29	8862-8863	(	_	_	
25-30	8866-8873	tile_px	_	_	
25-31	8873-8874	=	_	_	
25-32	8874-8877	299	_	_	
25-33	8877-8878	,	_	_	
25-34	8881-8888	tile_um	_	_	
25-35	8888-8889	=	_	_	
25-36	8889-8892	302	_	_	
25-37	8892-8893	,	_	_	
25-38	8896-8906	batch_size	_	_	
25-39	8906-8907	=	_	_	
25-40	8907-8909	32	_	_	
25-41	8909-8910	,	_	_	
25-42	8913-8918	model	_	_	
25-43	8918-8919	=	_	_	
25-44	8919-8920	'	_	_	
25-45	8920-8928	xception	_	_	
25-46	8928-8929	'	_	_	
25-47	8929-8930	,	_	_	
25-48	8933-8946	learning_rate	_	_	
25-49	8946-8947	=	_	_	
25-50	8947-8953	0.0001	_	_	
25-51	8953-8954	,	_	_	
25-52	8957-8958	.	_	_	
25-53	8958-8959	.	_	_	
25-54	8959-8960	.	_	_	
25-55	8961-8962	)	_	_	
25-56	8963-8964	`	_	_	
25-57	8964-8965	`	_	_	
25-58	8965-8966	`	_	_	
25-59	8968-8974	Models	_	_	
25-60	8975-8978	can	_	_	
25-61	8979-8983	then	_	_	
25-62	8984-8986	be	_	_	
25-63	8987-8994	trained	_	_	
25-64	8995-9000	using	_	_	
25-65	9001-9006	these	_	_	
25-66	9007-9017	parameters	_	_	
25-67	9017-9018	.	_	_	

#Text=Models can be trained to categorical, multi-categorical, continuous, or time-series outcomes, and the training process is [highly configurable](https://slideflow.dev/training).
26-1	9019-9025	Models	_	_	
26-2	9026-9029	can	_	_	
26-3	9030-9032	be	_	_	
26-4	9033-9040	trained	_	_	
26-5	9041-9043	to	_	_	
26-6	9044-9055	categorical	_	_	
26-7	9055-9056	,	_	_	
26-8	9057-9074	multi-categorical	_	_	
26-9	9074-9075	,	_	_	
26-10	9076-9086	continuous	_	_	
26-11	9086-9087	,	_	_	
26-12	9088-9090	or	_	_	
26-13	9091-9102	time-series	_	_	
26-14	9103-9111	outcomes	_	_	
26-15	9111-9112	,	_	_	
26-16	9113-9116	and	_	_	
26-17	9117-9120	the	_	_	
26-18	9121-9129	training	_	_	
26-19	9130-9137	process	_	_	
26-20	9138-9140	is	_	_	
26-21	9141-9142	[	_	_	
26-22	9142-9148	highly	_	_	
26-23	9149-9161	configurable	_	_	
26-24	9161-9162	]	_	_	
26-25	9162-9163	(	_	_	
26-26	9163-9168	https	_	_	
26-27	9168-9169	:	_	_	
26-28	9169-9170	/	_	_	
26-29	9170-9171	/	_	_	
26-30	9171-9184	slideflow.dev	_	_	
26-30.1	9171-9180	slideflow	*	SOFTWARE	
26-31	9184-9185	/	_	_	
26-32	9185-9193	training	_	_	
26-33	9193-9194	)	_	_	
26-34	9194-9195	.	_	_	

#Text=For example, to train models in cross-validation to predict the outcome `'category1'` as stored in the project annotations file:
#Text=
#Text=```python
#Text=P.train(
#Text=  'category1',
#Text=  params=params,
#Text=  save_predictions=True,
#Text=  multi_gpu=True
#Text=)
#Text=```
#Text=
#Text=### Evaluation, heatmaps, mosaic maps, and more
#Text=
#Text=Slideflow includes a host of additional tools, including model [evaluation and prediction](https://slideflow.dev/evaluation), [heatmaps](https://slideflow.dev/evaluation#heatmaps), analysis of [layer activations](https://slideflow.dev/posthoc), [mosaic maps](https://slideflow.dev/posthoc#mosaic-maps), and more.
27-1	9196-9199	For	_	_	
27-2	9200-9207	example	_	_	
27-3	9207-9208	,	_	_	
27-4	9209-9211	to	_	_	
27-5	9212-9217	train	_	_	
27-6	9218-9224	models	_	_	
27-7	9225-9227	in	_	_	
27-8	9228-9244	cross-validation	_	_	
27-9	9245-9247	to	_	_	
27-10	9248-9255	predict	_	_	
27-11	9256-9259	the	_	_	
27-12	9260-9267	outcome	_	_	
27-13	9268-9269	`	_	_	
27-14	9269-9270	'	_	_	
27-15	9270-9279	category1	_	_	
27-16	9279-9280	'	_	_	
27-17	9280-9281	`	_	_	
27-18	9282-9284	as	_	_	
27-19	9285-9291	stored	_	_	
27-20	9292-9294	in	_	_	
27-21	9295-9298	the	_	_	
27-22	9299-9306	project	_	_	
27-23	9307-9318	annotations	_	_	
27-24	9319-9323	file	_	_	
27-25	9323-9324	:	_	_	
27-26	9326-9327	`	_	_	
27-27	9327-9328	`	_	_	
27-28	9328-9329	`	_	_	
27-29	9329-9335	python	*	PROGLANG	
27-30	9336-9343	P.train	_	_	
27-31	9343-9344	(	_	_	
27-32	9347-9348	'	_	_	
27-33	9348-9357	category1	_	_	
27-34	9357-9358	'	_	_	
27-35	9358-9359	,	_	_	
27-36	9362-9368	params	_	_	
27-37	9368-9369	=	_	_	
27-38	9369-9375	params	_	_	
27-39	9375-9376	,	_	_	
27-40	9379-9395	save_predictions	_	_	
27-41	9395-9396	=	_	_	
27-42	9396-9400	True	_	_	
27-43	9400-9401	,	_	_	
27-44	9404-9413	multi_gpu	_	_	
27-45	9413-9414	=	_	_	
27-46	9414-9418	True	_	_	
27-47	9419-9420	)	_	_	
27-48	9421-9422	`	_	_	
27-49	9422-9423	`	_	_	
27-50	9423-9424	`	_	_	
27-51	9426-9427	#	_	_	
27-52	9427-9428	#	_	_	
27-53	9428-9429	#	_	_	
27-54	9430-9440	Evaluation	_	_	
27-55	9440-9441	,	_	_	
27-56	9442-9450	heatmaps	_	_	
27-57	9450-9451	,	_	_	
27-58	9452-9458	mosaic	_	_	
27-59	9459-9463	maps	_	_	
27-60	9463-9464	,	_	_	
27-61	9465-9468	and	_	_	
27-62	9469-9473	more	_	_	
27-63	9475-9484	Slideflow	*	SOFTWARE	
27-64	9485-9493	includes	_	_	
27-65	9494-9495	a	_	_	
27-66	9496-9500	host	_	_	
27-67	9501-9503	of	_	_	
27-68	9504-9514	additional	_	_	
27-69	9515-9520	tools	_	_	
27-70	9520-9521	,	_	_	
27-71	9522-9531	including	_	_	
27-72	9532-9537	model	_	_	
27-73	9538-9539	[	_	_	
27-74	9539-9549	evaluation	_	_	
27-75	9550-9553	and	_	_	
27-76	9554-9564	prediction	_	_	
27-77	9564-9565	]	_	_	
27-78	9565-9566	(	_	_	
27-79	9566-9571	https	_	_	
27-80	9571-9572	:	_	_	
27-81	9572-9573	/	_	_	
27-82	9573-9574	/	_	_	
27-83	9574-9587	slideflow.dev	_	_	
27-83.1	9574-9583	slideflow	*	SOFTWARE	
27-84	9587-9588	/	_	_	
27-85	9588-9598	evaluation	_	_	
27-86	9598-9599	)	_	_	
27-87	9599-9600	,	_	_	
27-88	9601-9602	[	_	_	
27-89	9602-9610	heatmaps	_	_	
27-90	9610-9611	]	_	_	
27-91	9611-9612	(	_	_	
27-92	9612-9617	https	_	_	
27-93	9617-9618	:	_	_	
27-94	9618-9619	/	_	_	
27-95	9619-9620	/	_	_	
27-96	9620-9633	slideflow.dev	_	_	
27-96.1	9620-9629	slideflow	*	SOFTWARE	
27-97	9633-9634	/	_	_	
27-98	9634-9644	evaluation	_	_	
27-99	9644-9645	#	_	_	
27-100	9645-9653	heatmaps	_	_	
27-101	9653-9654	)	_	_	
27-102	9654-9655	,	_	_	
27-103	9656-9664	analysis	_	_	
27-104	9665-9667	of	_	_	
27-105	9668-9669	[	_	_	
27-106	9669-9674	layer	_	_	
27-107	9675-9686	activations	_	_	
27-108	9686-9687	]	_	_	
27-109	9687-9688	(	_	_	
27-110	9688-9693	https	_	_	
27-111	9693-9694	:	_	_	
27-112	9694-9695	/	_	_	
27-113	9695-9696	/	_	_	
27-114	9696-9709	slideflow.dev	_	_	
27-114.1	9696-9705	slideflow	*	SOFTWARE	
27-115	9709-9710	/	_	_	
27-116	9710-9717	posthoc	_	_	
27-117	9717-9718	)	_	_	
27-118	9718-9719	,	_	_	
27-119	9720-9721	[	_	_	
27-120	9721-9727	mosaic	_	_	
27-121	9728-9732	maps	_	_	
27-122	9732-9733	]	_	_	
27-123	9733-9734	(	_	_	
27-124	9734-9739	https	_	_	
27-125	9739-9740	:	_	_	
27-126	9740-9741	/	_	_	
27-127	9741-9742	/	_	_	
27-128	9742-9755	slideflow.dev	_	_	
27-128.1	9742-9751	slideflow	*	SOFTWARE	
27-129	9755-9756	/	_	_	
27-130	9756-9763	posthoc	_	_	
27-131	9763-9764	#	_	_	
27-132	9764-9775	mosaic-maps	_	_	
27-133	9775-9776	)	_	_	
27-134	9776-9777	,	_	_	
27-135	9778-9781	and	_	_	
27-136	9782-9786	more	_	_	
27-137	9786-9787	.	_	_	

#Text=See our [full documentation](https://slideflow.dev) for more details and tutorials.
#Text=
#Text=## 📚 Publications
#Text=
#Text=Slideflow has been used by:
#Text=
#Text=- [Dolezal et al](https://www.nature.com/articles/s41379-020-00724-3), _Modern Pathology_, 2020
#Text=- [Rosenberg et al](https://ascopubs.org/doi/10.1200/JCO.2020.38.15_suppl.e23529), _Journal of Clinical Oncology_ [abstract], 2020
#Text=- [Howard et al](https://www.nature.com/articles/s41467-021-24698-1), _Nature Communications_, 2021
#Text=- [Dolezal et al](https://www.nature.com/articles/s41467-022-34025-x) _Nature Communications_, 2022
#Text=- [Storozuk et al](https://www.nature.com/articles/s41379-022-01039-1.pdf), _Modern Pathology_ [abstract], 2022
#Text=- [Partin et al](https://doi.org/10.3389/fmed.2023.1058919) _Front Med_, 2022
#Text=- [Dolezal et al](https://ascopubs.org/doi/abs/10.1200/JCO.2022.40.16_suppl.8549) _Journal of Clinical Oncology_ [abstract], 2022
#Text=- [Dolezal et al](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9792820/) _Mediastinum_ [abstract], 2022
#Text=- [Howard et al](https://www.nature.com/articles/s41523-023-00530-5) _npj Breast Cancer_, 2023
#Text=- [Dolezal et al](https://www.nature.com/articles/s41698-023-00399-4) _npj Precision Oncology_, 2023
#Text=- [Hieromnimon et al](https://doi.org/10.1101/2023.03.22.533810) [bioRxiv], 2023
#Text=- [Carrillo-Perez et al](https://doi.org/10.1186/s40644-023-00586-3) _Cancer Imaging_, 2023
#Text=
#Text=## 🔓 License
#Text=This code is made available under the Apache-2.0 license.
#Text=
#Text=## 🔗 Reference
#Text=If you find our work useful for your research, or if you use parts of this code, please consider citing as follows:
#Text=
#Text=Dolezal, J.M., Kochanny, S., Dyer, E. et al.
28-1	9788-9791	See	_	_	
28-2	9792-9795	our	_	_	
28-3	9796-9797	[	_	_	
28-4	9797-9801	full	_	_	
28-5	9802-9815	documentation	_	_	
28-6	9815-9816	]	_	_	
28-7	9816-9817	(	_	_	
28-8	9817-9822	https	_	_	
28-9	9822-9823	:	_	_	
28-10	9823-9824	/	_	_	
28-11	9824-9825	/	_	_	
28-12	9825-9838	slideflow.dev	_	_	
28-12.1	9825-9834	slideflow	*	SOFTWARE	
28-13	9838-9839	)	_	_	
28-14	9840-9843	for	_	_	
28-15	9844-9848	more	_	_	
28-16	9849-9856	details	_	_	
28-17	9857-9860	and	_	_	
28-18	9861-9870	tutorials	_	_	
28-19	9870-9871	.	_	_	
28-20	9873-9874	#	_	_	
28-21	9874-9875	#	_	_	
28-22	9876-9878	📚	_	_	
28-23	9879-9891	Publications	_	_	
28-24	9893-9902	Slideflow	*	SOFTWARE	
28-25	9903-9906	has	_	_	
28-26	9907-9911	been	_	_	
28-27	9912-9916	used	_	_	
28-28	9917-9919	by	_	_	
28-29	9919-9920	:	_	_	
28-30	9922-9923	-	_	_	
28-31	9924-9925	[	_	_	
28-32	9925-9932	Dolezal	_	_	
28-33	9933-9935	et	_	_	
28-34	9936-9938	al	_	_	
28-35	9938-9939	]	_	_	
28-36	9939-9940	(	_	_	
28-37	9940-9945	https	_	_	
28-38	9945-9946	:	_	_	
28-39	9946-9947	/	_	_	
28-40	9947-9948	/	_	_	
28-41	9948-9962	www.nature.com	_	_	
28-42	9962-9963	/	_	_	
28-43	9963-9971	articles	_	_	
28-44	9971-9972	/	_	_	
28-45	9972-9978	s41379	_	_	
28-46	9978-9979	-	_	_	
28-47	9979-9982	020	_	_	
28-48	9982-9983	-	_	_	
28-49	9983-9988	00724	_	_	
28-50	9988-9989	-	_	_	
28-51	9989-9990	3	_	_	
28-52	9990-9991	)	_	_	
28-53	9991-9992	,	_	_	
28-54	9993-9994	_	_	_	
28-55	9994-10000	Modern	_	_	
28-56	10001-10010	Pathology	_	_	
28-57	10010-10011	_	_	_	
28-58	10011-10012	,	_	_	
28-59	10013-10017	2020	_	_	
28-60	10018-10019	-	_	_	
28-61	10020-10021	[	_	_	
28-62	10021-10030	Rosenberg	_	_	
28-63	10031-10033	et	_	_	
28-64	10034-10036	al	_	_	
28-65	10036-10037	]	_	_	
28-66	10037-10038	(	_	_	
28-67	10038-10043	https	_	_	
28-68	10043-10044	:	_	_	
28-69	10044-10045	/	_	_	
28-70	10045-10046	/	_	_	
28-71	10046-10058	ascopubs.org	_	_	
28-72	10058-10059	/	_	_	
28-73	10059-10062	doi	_	_	
28-74	10062-10063	/	_	_	
28-75	10063-10070	10.1200	_	_	
28-76	10070-10071	/	_	_	
28-77	10071-10074	JCO	_	_	
28-78	10074-10085	.2020.38.15	_	_	
28-79	10085-10086	_	_	_	
28-80	10086-10098	suppl.e23529	_	_	
28-81	10098-10099	)	_	_	
28-82	10099-10100	,	_	_	
28-83	10101-10102	_	_	_	
28-84	10102-10109	Journal	_	_	
28-85	10110-10112	of	_	_	
28-86	10113-10121	Clinical	_	_	
28-87	10122-10130	Oncology	_	_	
28-88	10130-10131	_	_	_	
28-89	10132-10133	[	_	_	
28-90	10133-10141	abstract	_	_	
28-91	10141-10142	]	_	_	
28-92	10142-10143	,	_	_	
28-93	10144-10148	2020	_	_	
28-94	10149-10150	-	_	_	
28-95	10151-10152	[	_	_	
28-96	10152-10158	Howard	_	_	
28-97	10159-10161	et	_	_	
28-98	10162-10164	al	_	_	
28-99	10164-10165	]	_	_	
28-100	10165-10166	(	_	_	
28-101	10166-10171	https	_	_	
28-102	10171-10172	:	_	_	
28-103	10172-10173	/	_	_	
28-104	10173-10174	/	_	_	
28-105	10174-10188	www.nature.com	_	_	
28-106	10188-10189	/	_	_	
28-107	10189-10197	articles	_	_	
28-108	10197-10198	/	_	_	
28-109	10198-10204	s41467	_	_	
28-110	10204-10205	-	_	_	
28-111	10205-10208	021	_	_	
28-112	10208-10209	-	_	_	
28-113	10209-10214	24698	_	_	
28-114	10214-10215	-	_	_	
28-115	10215-10216	1	_	_	
28-116	10216-10217	)	_	_	
28-117	10217-10218	,	_	_	
28-118	10219-10220	_	_	_	
28-119	10220-10226	Nature	_	_	
28-120	10227-10241	Communications	_	_	
28-121	10241-10242	_	_	_	
28-122	10242-10243	,	_	_	
28-123	10244-10248	2021	_	_	
28-124	10249-10250	-	_	_	
28-125	10251-10252	[	_	_	
28-126	10252-10259	Dolezal	_	_	
28-127	10260-10262	et	_	_	
28-128	10263-10265	al	_	_	
28-129	10265-10266	]	_	_	
28-130	10266-10267	(	_	_	
28-131	10267-10272	https	_	_	
28-132	10272-10273	:	_	_	
28-133	10273-10274	/	_	_	
28-134	10274-10275	/	_	_	
28-135	10275-10289	www.nature.com	_	_	
28-136	10289-10290	/	_	_	
28-137	10290-10298	articles	_	_	
28-138	10298-10299	/	_	_	
28-139	10299-10305	s41467	_	_	
28-140	10305-10306	-	_	_	
28-141	10306-10309	022	_	_	
28-142	10309-10310	-	_	_	
28-143	10310-10315	34025	_	_	
28-144	10315-10316	-	_	_	
28-145	10316-10317	x	_	_	
28-146	10317-10318	)	_	_	
28-147	10319-10320	_	_	_	
28-148	10320-10326	Nature	_	_	
28-149	10327-10341	Communications	_	_	
28-150	10341-10342	_	_	_	
28-151	10342-10343	,	_	_	
28-152	10344-10348	2022	_	_	
28-153	10349-10350	-	_	_	
28-154	10351-10352	[	_	_	
28-155	10352-10360	Storozuk	_	_	
28-156	10361-10363	et	_	_	
28-157	10364-10366	al	_	_	
28-158	10366-10367	]	_	_	
28-159	10367-10368	(	_	_	
28-160	10368-10373	https	_	_	
28-161	10373-10374	:	_	_	
28-162	10374-10375	/	_	_	
28-163	10375-10376	/	_	_	
28-164	10376-10390	www.nature.com	_	_	
28-165	10390-10391	/	_	_	
28-166	10391-10399	articles	_	_	
28-167	10399-10400	/	_	_	
28-168	10400-10406	s41379	_	_	
28-169	10406-10407	-	_	_	
28-170	10407-10410	022	_	_	
28-171	10410-10411	-	_	_	
28-172	10411-10416	01039	_	_	
28-173	10416-10417	-	_	_	
28-174	10417-10418	1	_	_	
28-175	10418-10419	.	_	_	
28-176	10419-10422	pdf	_	_	
28-177	10422-10423	)	_	_	
28-178	10423-10424	,	_	_	
28-179	10425-10426	_	_	_	
28-180	10426-10432	Modern	_	_	
28-181	10433-10442	Pathology	_	_	
28-182	10442-10443	_	_	_	
28-183	10444-10445	[	_	_	
28-184	10445-10453	abstract	_	_	
28-185	10453-10454	]	_	_	
28-186	10454-10455	,	_	_	
28-187	10456-10460	2022	_	_	
28-188	10461-10462	-	_	_	
28-189	10463-10464	[	_	_	
28-190	10464-10470	Partin	_	_	
28-191	10471-10473	et	_	_	
28-192	10474-10476	al	_	_	
28-193	10476-10477	]	_	_	
28-194	10477-10478	(	_	_	
28-195	10478-10483	https	_	_	
28-196	10483-10484	:	_	_	
28-197	10484-10485	/	_	_	
28-198	10485-10486	/	_	_	
28-199	10486-10493	doi.org	_	_	
28-200	10493-10494	/	_	_	
28-201	10494-10501	10.3389	_	_	
28-202	10501-10502	/	_	_	
28-203	10502-10506	fmed	_	_	
28-204	10506-10519	.2023.1058919	_	_	
28-205	10519-10520	)	_	_	
28-206	10521-10522	_	_	_	
28-207	10522-10527	Front	_	_	
28-208	10528-10531	Med	_	_	
28-209	10531-10532	_	_	_	
28-210	10532-10533	,	_	_	
28-211	10534-10538	2022	_	_	
28-212	10539-10540	-	_	_	
28-213	10541-10542	[	_	_	
28-214	10542-10549	Dolezal	_	_	
28-215	10550-10552	et	_	_	
28-216	10553-10555	al	_	_	
28-217	10555-10556	]	_	_	
28-218	10556-10557	(	_	_	
28-219	10557-10562	https	_	_	
28-220	10562-10563	:	_	_	
28-221	10563-10564	/	_	_	
28-222	10564-10565	/	_	_	
28-223	10565-10577	ascopubs.org	_	_	
28-224	10577-10578	/	_	_	
28-225	10578-10581	doi	_	_	
28-226	10581-10582	/	_	_	
28-227	10582-10585	abs	_	_	
28-228	10585-10586	/	_	_	
28-229	10586-10593	10.1200	_	_	
28-230	10593-10594	/	_	_	
28-231	10594-10597	JCO	_	_	
28-232	10597-10608	.2022.40.16	_	_	
28-233	10608-10609	_	_	_	
28-234	10609-10614	suppl	_	_	
28-235	10614-10619	.8549	_	_	
28-236	10619-10620	)	_	_	
28-237	10621-10622	_	_	_	
28-238	10622-10629	Journal	_	_	
28-239	10630-10632	of	_	_	
28-240	10633-10641	Clinical	_	_	
28-241	10642-10650	Oncology	_	_	
28-242	10650-10651	_	_	_	
28-243	10652-10653	[	_	_	
28-244	10653-10661	abstract	_	_	
28-245	10661-10662	]	_	_	
28-246	10662-10663	,	_	_	
28-247	10664-10668	2022	_	_	
28-248	10669-10670	-	_	_	
28-249	10671-10672	[	_	_	
28-250	10672-10679	Dolezal	_	_	
28-251	10680-10682	et	_	_	
28-252	10683-10685	al	_	_	
28-253	10685-10686	]	_	_	
28-254	10686-10687	(	_	_	
28-255	10687-10692	https	_	_	
28-256	10692-10693	:	_	_	
28-257	10693-10694	/	_	_	
28-258	10694-10695	/	_	_	
28-259	10695-10715	www.ncbi.nlm.nih.gov	_	_	
28-260	10715-10716	/	_	_	
28-261	10716-10719	pmc	_	_	
28-262	10719-10720	/	_	_	
28-263	10720-10728	articles	_	_	
28-264	10728-10729	/	_	_	
28-265	10729-10739	PMC9792820	_	_	
28-266	10739-10740	/	_	_	
28-267	10740-10741	)	_	_	
28-268	10742-10743	_	_	_	
28-269	10743-10754	Mediastinum	_	_	
28-270	10754-10755	_	_	_	
28-271	10756-10757	[	_	_	
28-272	10757-10765	abstract	_	_	
28-273	10765-10766	]	_	_	
28-274	10766-10767	,	_	_	
28-275	10768-10772	2022	_	_	
28-276	10773-10774	-	_	_	
28-277	10775-10776	[	_	_	
28-278	10776-10782	Howard	_	_	
28-279	10783-10785	et	_	_	
28-280	10786-10788	al	_	_	
28-281	10788-10789	]	_	_	
28-282	10789-10790	(	_	_	
28-283	10790-10795	https	_	_	
28-284	10795-10796	:	_	_	
28-285	10796-10797	/	_	_	
28-286	10797-10798	/	_	_	
28-287	10798-10812	www.nature.com	_	_	
28-288	10812-10813	/	_	_	
28-289	10813-10821	articles	_	_	
28-290	10821-10822	/	_	_	
28-291	10822-10828	s41523	_	_	
28-292	10828-10829	-	_	_	
28-293	10829-10832	023	_	_	
28-294	10832-10833	-	_	_	
28-295	10833-10838	00530	_	_	
28-296	10838-10839	-	_	_	
28-297	10839-10840	5	_	_	
28-298	10840-10841	)	_	_	
28-299	10842-10843	_	_	_	
28-300	10843-10846	npj	_	_	
28-301	10847-10853	Breast	_	_	
28-302	10854-10860	Cancer	_	_	
28-303	10860-10861	_	_	_	
28-304	10861-10862	,	_	_	
28-305	10863-10867	2023	_	_	
28-306	10868-10869	-	_	_	
28-307	10870-10871	[	_	_	
28-308	10871-10878	Dolezal	_	_	
28-309	10879-10881	et	_	_	
28-310	10882-10884	al	_	_	
28-311	10884-10885	]	_	_	
28-312	10885-10886	(	_	_	
28-313	10886-10891	https	_	_	
28-314	10891-10892	:	_	_	
28-315	10892-10893	/	_	_	
28-316	10893-10894	/	_	_	
28-317	10894-10908	www.nature.com	_	_	
28-318	10908-10909	/	_	_	
28-319	10909-10917	articles	_	_	
28-320	10917-10918	/	_	_	
28-321	10918-10924	s41698	_	_	
28-322	10924-10925	-	_	_	
28-323	10925-10928	023	_	_	
28-324	10928-10929	-	_	_	
28-325	10929-10934	00399	_	_	
28-326	10934-10935	-	_	_	
28-327	10935-10936	4	_	_	
28-328	10936-10937	)	_	_	
28-329	10938-10939	_	_	_	
28-330	10939-10942	npj	_	_	
28-331	10943-10952	Precision	_	_	
28-332	10953-10961	Oncology	_	_	
28-333	10961-10962	_	_	_	
28-334	10962-10963	,	_	_	
28-335	10964-10968	2023	_	_	
28-336	10969-10970	-	_	_	
28-337	10971-10972	[	_	_	
28-338	10972-10983	Hieromnimon	_	_	
28-339	10984-10986	et	_	_	
28-340	10987-10989	al	_	_	
28-341	10989-10990	]	_	_	
28-342	10990-10991	(	_	_	
28-343	10991-10996	https	_	_	
28-344	10996-10997	:	_	_	
28-345	10997-10998	/	_	_	
28-346	10998-10999	/	_	_	
28-347	10999-11006	doi.org	_	_	
28-348	11006-11007	/	_	_	
28-349	11007-11014	10.1101	_	_	
28-350	11014-11015	/	_	_	
28-351	11015-11032	2023.03.22.533810	_	_	
28-352	11032-11033	)	_	_	
28-353	11034-11035	[	_	_	
28-354	11035-11042	bioRxiv	_	_	
28-355	11042-11043	]	_	_	
28-356	11043-11044	,	_	_	
28-357	11045-11049	2023	_	_	
28-358	11050-11051	-	_	_	
28-359	11052-11053	[	_	_	
28-360	11053-11067	Carrillo-Perez	_	_	
28-361	11068-11070	et	_	_	
28-362	11071-11073	al	_	_	
28-363	11073-11074	]	_	_	
28-364	11074-11075	(	_	_	
28-365	11075-11080	https	_	_	
28-366	11080-11081	:	_	_	
28-367	11081-11082	/	_	_	
28-368	11082-11083	/	_	_	
28-369	11083-11090	doi.org	_	_	
28-370	11090-11091	/	_	_	
28-371	11091-11098	10.1186	_	_	
28-372	11098-11099	/	_	_	
28-373	11099-11105	s40644	_	_	
28-374	11105-11106	-	_	_	
28-375	11106-11109	023	_	_	
28-376	11109-11110	-	_	_	
28-377	11110-11115	00586	_	_	
28-378	11115-11116	-	_	_	
28-379	11116-11117	3	_	_	
28-380	11117-11118	)	_	_	
28-381	11119-11120	_	_	_	
28-382	11120-11126	Cancer	_	_	
28-383	11127-11134	Imaging	_	_	
28-384	11134-11135	_	_	_	
28-385	11135-11136	,	_	_	
28-386	11137-11141	2023	_	_	
28-387	11143-11144	#	_	_	
28-388	11144-11145	#	_	_	
28-389	11146-11148	🔓	_	_	
28-390	11149-11156	License	_	_	
28-391	11157-11161	This	_	_	
28-392	11162-11166	code	_	_	
28-393	11167-11169	is	_	_	
28-394	11170-11174	made	_	_	
28-395	11175-11184	available	_	_	
28-396	11185-11190	under	_	_	
28-397	11191-11194	the	_	_	
28-398	11195-11201	Apache	*[4]	LICENSE[4]	
28-399	11201-11202	-	*[4]	LICENSE[4]	
28-400	11202-11205	2.0	*[4]	LICENSE[4]	
28-401	11206-11213	license	_	_	
28-402	11213-11214	.	_	_	
28-403	11216-11217	#	_	_	
28-404	11217-11218	#	_	_	
28-405	11219-11221	🔗	_	_	
28-406	11222-11231	Reference	_	_	
28-407	11232-11234	If	_	_	
28-408	11235-11238	you	_	_	
28-409	11239-11243	find	_	_	
28-410	11244-11247	our	_	_	
28-411	11248-11252	work	_	_	
28-412	11253-11259	useful	_	_	
28-413	11260-11263	for	_	_	
28-414	11264-11268	your	_	_	
28-415	11269-11277	research	_	_	
28-416	11277-11278	,	_	_	
28-417	11279-11281	or	_	_	
28-418	11282-11284	if	_	_	
28-419	11285-11288	you	_	_	
28-420	11289-11292	use	_	_	
28-421	11293-11298	parts	_	_	
28-422	11299-11301	of	_	_	
28-423	11302-11306	this	_	_	
28-424	11307-11311	code	_	_	
28-425	11311-11312	,	_	_	
28-426	11313-11319	please	_	_	
28-427	11320-11328	consider	_	_	
28-428	11329-11335	citing	_	_	
28-429	11336-11338	as	_	_	
28-430	11339-11346	follows	_	_	
28-431	11346-11347	:	_	_	
28-432	11349-11356	Dolezal	_	_	
28-433	11356-11357	,	_	_	
28-434	11358-11361	J.M	_	_	
28-435	11361-11362	.	_	_	
28-436	11362-11363	,	_	_	
28-437	11364-11372	Kochanny	_	_	
28-438	11372-11373	,	_	_	
28-439	11374-11375	S	_	_	
28-440	11375-11376	.	_	_	
28-441	11376-11377	,	_	_	
28-442	11378-11382	Dyer	_	_	
28-443	11382-11383	,	_	_	
28-444	11384-11385	E	_	_	
28-445	11385-11386	.	_	_	
28-446	11387-11389	et	_	_	
28-447	11390-11392	al	_	_	
28-448	11392-11393	.	_	_	

#Text=Slideflow: deep learning for digital histopathology with real-time whole-slide visualization.
29-1	11394-11403	Slideflow	*[5]	PUBLICATION[5]	
29-2	11403-11404	:	*[5]	PUBLICATION[5]	
29-3	11405-11409	deep	*[5]	PUBLICATION[5]	
29-4	11410-11418	learning	*[5]	PUBLICATION[5]	
29-5	11419-11422	for	*[5]	PUBLICATION[5]	
29-6	11423-11430	digital	*[5]	PUBLICATION[5]	
29-7	11431-11445	histopathology	*[5]	PUBLICATION[5]	
29-8	11446-11450	with	*[5]	PUBLICATION[5]	
29-9	11451-11460	real-time	*[5]	PUBLICATION[5]	
29-10	11461-11472	whole-slide	*[5]	PUBLICATION[5]	
29-11	11473-11486	visualization	*[5]	PUBLICATION[5]	
29-12	11486-11487	.	_	_	

#Text=BMC Bioinformatics 25, 134 (2024). https://doi.org/10.1186/s12859-024-05758-x
#Text=
#Text=```
#Text=@Article{Dolezal2024,
#Text=    author={Dolezal, James M. and Kochanny, Sara and Dyer, Emma and Ramesh, Siddhi and Srisuwananukorn, Andrew and Sacco, Matteo and Howard, Frederick M. and Li, Anran and Mohan, Prajval and Pearson, Alexander T.},
#Text=    title={Slideflow: deep learning for digital histopathology with real-time whole-slide visualization},
#Text=    journal={BMC Bioinformatics},
#Text=    year={2024},
#Text=    month={Mar},
#Text=    day={27},
#Text=    volume={25},
#Text=    number={1},
#Text=    pages={134},
#Text=    doi={10.1186/s12859-024-05758-x},
#Text=    url={https://doi.org/10.1186/s12859-024-05758-x}
#Text=}
#Text=```
30-1	11488-11491	BMC	_	_	
30-2	11492-11506	Bioinformatics	_	_	
30-3	11507-11509	25	_	_	
30-4	11509-11510	,	_	_	
30-5	11511-11514	134	_	_	
30-6	11515-11516	(	_	_	
30-7	11516-11520	2024	_	_	
30-8	11520-11521	)	_	_	
30-9	11521-11522	.	_	_	
30-10	11523-11528	https	_	_	
30-11	11528-11529	:	_	_	
30-12	11529-11530	/	_	_	
30-13	11530-11531	/	_	_	
30-14	11531-11538	doi.org	_	_	
30-15	11538-11539	/	_	_	
30-16	11539-11546	10.1186	_	_	
30-17	11546-11547	/	_	_	
30-18	11547-11553	s12859	_	_	
30-19	11553-11554	-	_	_	
30-20	11554-11557	024	_	_	
30-21	11557-11558	-	_	_	
30-22	11558-11563	05758	_	_	
30-23	11563-11564	-	_	_	
30-24	11564-11565	x	_	_	
30-25	11567-11568	`	_	_	
30-26	11568-11569	`	_	_	
30-27	11569-11570	`	_	_	
30-28	11571-11572	@	_	_	
30-29	11572-11579	Article	_	_	
30-30	11579-11580	{	_	_	
30-31	11580-11591	Dolezal2024	_	_	
30-32	11591-11592	,	_	_	
30-33	11597-11603	author	_	_	
30-34	11603-11604	=	_	_	
30-35	11604-11605	{	_	_	
30-36	11605-11612	Dolezal	_	_	
30-37	11612-11613	,	_	_	
30-38	11614-11619	James	_	_	
30-39	11620-11621	M	_	_	
30-40	11621-11622	.	_	_	
30-41	11623-11626	and	_	_	
30-42	11627-11635	Kochanny	_	_	
30-43	11635-11636	,	_	_	
30-44	11637-11641	Sara	_	_	
30-45	11642-11645	and	_	_	
30-46	11646-11650	Dyer	_	_	
30-47	11650-11651	,	_	_	
30-48	11652-11656	Emma	_	_	
30-49	11657-11660	and	_	_	
30-50	11661-11667	Ramesh	_	_	
30-51	11667-11668	,	_	_	
30-52	11669-11675	Siddhi	_	_	
30-53	11676-11679	and	_	_	
30-54	11680-11695	Srisuwananukorn	_	_	
30-55	11695-11696	,	_	_	
30-56	11697-11703	Andrew	_	_	
30-57	11704-11707	and	_	_	
30-58	11708-11713	Sacco	_	_	
30-59	11713-11714	,	_	_	
30-60	11715-11721	Matteo	_	_	
30-61	11722-11725	and	_	_	
30-62	11726-11732	Howard	_	_	
30-63	11732-11733	,	_	_	
30-64	11734-11743	Frederick	_	_	
30-65	11744-11745	M	_	_	
30-66	11745-11746	.	_	_	
30-67	11747-11750	and	_	_	
30-68	11751-11753	Li	_	_	
30-69	11753-11754	,	_	_	
30-70	11755-11760	Anran	_	_	
30-71	11761-11764	and	_	_	
30-72	11765-11770	Mohan	_	_	
30-73	11770-11771	,	_	_	
30-74	11772-11779	Prajval	_	_	
30-75	11780-11783	and	_	_	
30-76	11784-11791	Pearson	_	_	
30-77	11791-11792	,	_	_	
30-78	11793-11802	Alexander	_	_	
30-79	11803-11804	T	_	_	
30-80	11804-11805	.	_	_	
30-81	11805-11806	}	_	_	
30-82	11806-11807	,	_	_	
30-83	11812-11817	title	_	_	
30-84	11817-11818	=	_	_	
30-85	11818-11819	{	_	_	
30-86	11819-11828	Slideflow	*[6]	PUBLICATION[6]	
30-87	11828-11829	:	*[6]	PUBLICATION[6]	
30-88	11830-11834	deep	*[6]	PUBLICATION[6]	
30-89	11835-11843	learning	*[6]	PUBLICATION[6]	
30-90	11844-11847	for	*[6]	PUBLICATION[6]	
30-91	11848-11855	digital	*[6]	PUBLICATION[6]	
30-92	11856-11870	histopathology	*[6]	PUBLICATION[6]	
30-93	11871-11875	with	*[6]	PUBLICATION[6]	
30-94	11876-11885	real-time	*[6]	PUBLICATION[6]	
30-95	11886-11897	whole-slide	*[6]	PUBLICATION[6]	
30-96	11898-11911	visualization	*[6]	PUBLICATION[6]	
30-97	11911-11912	}	_	_	
30-98	11912-11913	,	_	_	
30-99	11918-11925	journal	_	_	
30-100	11925-11926	=	_	_	
30-101	11926-11927	{	_	_	
30-102	11927-11930	BMC	_	_	
30-103	11931-11945	Bioinformatics	_	_	
30-104	11945-11946	}	_	_	
30-105	11946-11947	,	_	_	
30-106	11952-11956	year	_	_	
30-107	11956-11957	=	_	_	
30-108	11957-11958	{	_	_	
30-109	11958-11962	2024	_	_	
30-110	11962-11963	}	_	_	
30-111	11963-11964	,	_	_	
30-112	11969-11974	month	_	_	
30-113	11974-11975	=	_	_	
30-114	11975-11976	{	_	_	
30-115	11976-11979	Mar	_	_	
30-116	11979-11980	}	_	_	
30-117	11980-11981	,	_	_	
30-118	11986-11989	day	_	_	
30-119	11989-11990	=	_	_	
30-120	11990-11991	{	_	_	
30-121	11991-11993	27	_	_	
30-122	11993-11994	}	_	_	
30-123	11994-11995	,	_	_	
30-124	12000-12006	volume	_	_	
30-125	12006-12007	=	_	_	
30-126	12007-12008	{	_	_	
30-127	12008-12010	25	_	_	
30-128	12010-12011	}	_	_	
30-129	12011-12012	,	_	_	
30-130	12017-12023	number	_	_	
30-131	12023-12024	=	_	_	
30-132	12024-12025	{	_	_	
30-133	12025-12026	1	_	_	
30-134	12026-12027	}	_	_	
30-135	12027-12028	,	_	_	
30-136	12033-12038	pages	_	_	
30-137	12038-12039	=	_	_	
30-138	12039-12040	{	_	_	
30-139	12040-12043	134	_	_	
30-140	12043-12044	}	_	_	
30-141	12044-12045	,	_	_	
30-142	12050-12053	doi	_	_	
30-143	12053-12054	=	_	_	
30-144	12054-12055	{	_	_	
30-145	12055-12062	10.1186	_	_	
30-146	12062-12063	/	_	_	
30-147	12063-12069	s12859	_	_	
30-148	12069-12070	-	_	_	
30-149	12070-12073	024	_	_	
30-150	12073-12074	-	_	_	
30-151	12074-12079	05758	_	_	
30-152	12079-12080	-	_	_	
30-153	12080-12081	x	_	_	
30-154	12081-12082	}	_	_	
30-155	12082-12083	,	_	_	
30-156	12088-12091	url	_	_	
30-157	12091-12092	=	_	_	
30-158	12092-12093	{	_	_	
30-159	12093-12098	https	_	_	
30-160	12098-12099	:	_	_	
30-161	12099-12100	/	_	_	
30-162	12100-12101	/	_	_	
30-163	12101-12108	doi.org	_	_	
30-164	12108-12109	/	_	_	
30-165	12109-12116	10.1186	_	_	
30-166	12116-12117	/	_	_	
30-167	12117-12123	s12859	_	_	
30-168	12123-12124	-	_	_	
30-169	12124-12127	024	_	_	
30-170	12127-12128	-	_	_	
30-171	12128-12133	05758	_	_	
30-172	12133-12134	-	_	_	
30-173	12134-12135	x	_	_	
30-174	12135-12136	}	_	_	
30-175	12137-12138	}	_	_	
30-176	12139-12140	`	_	_	
30-177	12140-12141	`	_	_	
30-178	12141-12142	`	_	_	
