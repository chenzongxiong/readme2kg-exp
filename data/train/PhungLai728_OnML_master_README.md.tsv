#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# OnML (Ontology-based Interpretable Machine Learning for Textual Data)
#Text=
#Text=This is the official implementation of the [Ontology-based Interpretable Machine Learning for Textual Data](https://arxiv.org/pdf/2004.00204.pdf) in Tensorflow.
1-1	0-1	#	_	_	
1-2	2-6	OnML	*	SOFTWARE	
1-3	7-8	(	_	_	
1-4	8-22	Ontology-based	*[1]	PUBLICATION[1]	
1-5	23-36	Interpretable	*[1]	PUBLICATION[1]	
1-6	37-44	Machine	*[1]	PUBLICATION[1]	
1-7	45-53	Learning	*[1]	PUBLICATION[1]	
1-8	54-57	for	*[1]	PUBLICATION[1]	
1-9	58-65	Textual	*[1]	PUBLICATION[1]	
1-10	66-70	Data	*[1]	PUBLICATION[1]	
1-11	70-71	)	_	_	
1-12	73-77	This	_	_	
1-13	78-80	is	_	_	
1-14	81-84	the	_	_	
1-15	85-93	official	_	_	
1-16	94-108	implementation	_	_	
1-17	109-111	of	_	_	
1-18	112-115	the	_	_	
1-19	116-117	[	_	_	
1-20	117-131	Ontology-based	*[2]	PUBLICATION[2]	
1-21	132-145	Interpretable	*[2]	PUBLICATION[2]	
1-22	146-153	Machine	*[2]	PUBLICATION[2]	
1-23	154-162	Learning	*[2]	PUBLICATION[2]	
1-24	163-166	for	*[2]	PUBLICATION[2]	
1-25	167-174	Textual	*[2]	PUBLICATION[2]	
1-26	175-179	Data	*[2]	PUBLICATION[2]	
1-27	179-180	]	_	_	
1-28	180-181	(	_	_	
1-29	181-186	https	_	_	
1-30	186-187	:	_	_	
1-31	187-188	/	_	_	
1-32	188-189	/	_	_	
1-33	189-198	arxiv.org	_	_	
1-34	198-199	/	_	_	
1-35	199-202	pdf	_	_	
1-36	202-203	/	_	_	
1-37	203-213	2004.00204	_	_	
1-38	213-214	.	_	_	
1-39	214-217	pdf	_	_	
1-40	217-218	)	_	_	
1-41	219-221	in	_	_	
1-42	222-232	Tensorflow	*	SOFTWARE	
1-43	232-233	.	_	_	

#Text=If you use this code or our results in your research, please cite as appropriate:
#Text=
#Text=```
#Text=@article{lai2020ontology,
#Text=  title={Ontology-based Interpretable Machine Learning for Textual Data},
#Text=  author={Lai, Phung and Phan, NhatHai and Hu, Han and Badeti, Anuja and Newman, David and Dou, Dejing},
#Text=  journal={International Joint Conference on Neural Networks},
#Text=  year={2020}
#Text=}
#Text=```
#Text=
#Text=
#Text=## Software Requirements
#Text=
#Text=Python 3.5 is used for the current codebase.
2-1	235-237	If	_	_	
2-2	238-241	you	_	_	
2-3	242-245	use	_	_	
2-4	246-250	this	_	_	
2-5	251-255	code	_	_	
2-6	256-258	or	_	_	
2-7	259-262	our	_	_	
2-8	263-270	results	_	_	
2-9	271-273	in	_	_	
2-10	274-278	your	_	_	
2-11	279-287	research	_	_	
2-12	287-288	,	_	_	
2-13	289-295	please	_	_	
2-14	296-300	cite	_	_	
2-15	301-303	as	_	_	
2-16	304-315	appropriate	_	_	
2-17	315-316	:	_	_	
2-18	318-319	`	_	_	
2-19	319-320	`	_	_	
2-20	320-321	`	_	_	
2-21	322-323	@	_	_	
2-22	323-330	article	_	_	
2-23	330-331	{	_	_	
2-24	331-346	lai2020ontology	_	_	
2-25	346-347	,	_	_	
2-26	350-355	title	_	_	
2-27	355-356	=	_	_	
2-28	356-357	{	_	_	
2-29	357-371	Ontology-based	*[3]	PUBLICATION[3]	
2-30	372-385	Interpretable	*[3]	PUBLICATION[3]	
2-31	386-393	Machine	*[3]	PUBLICATION[3]	
2-32	394-402	Learning	*[3]	PUBLICATION[3]	
2-33	403-406	for	*[3]	PUBLICATION[3]	
2-34	407-414	Textual	*[3]	PUBLICATION[3]	
2-35	415-419	Data	*[3]	PUBLICATION[3]	
2-36	419-420	}	_	_	
2-37	420-421	,	_	_	
2-38	424-430	author	_	_	
2-39	430-431	=	_	_	
2-40	431-432	{	_	_	
2-41	432-435	Lai	_	_	
2-42	435-436	,	_	_	
2-43	437-442	Phung	_	_	
2-44	443-446	and	_	_	
2-45	447-451	Phan	_	_	
2-46	451-452	,	_	_	
2-47	453-460	NhatHai	_	_	
2-48	461-464	and	_	_	
2-49	465-467	Hu	_	_	
2-50	467-468	,	_	_	
2-51	469-472	Han	_	_	
2-52	473-476	and	_	_	
2-53	477-483	Badeti	_	_	
2-54	483-484	,	_	_	
2-55	485-490	Anuja	_	_	
2-56	491-494	and	_	_	
2-57	495-501	Newman	_	_	
2-58	501-502	,	_	_	
2-59	503-508	David	_	_	
2-60	509-512	and	_	_	
2-61	513-516	Dou	_	_	
2-62	516-517	,	_	_	
2-63	518-524	Dejing	_	_	
2-64	524-525	}	_	_	
2-65	525-526	,	_	_	
2-66	529-536	journal	_	_	
2-67	536-537	=	_	_	
2-68	537-538	{	_	_	
2-69	538-551	International	*[4]	CONFERENCE[4]	
2-70	552-557	Joint	*[4]	CONFERENCE[4]	
2-71	558-568	Conference	*[4]	CONFERENCE[4]	
2-72	569-571	on	*[4]	CONFERENCE[4]	
2-73	572-578	Neural	*[4]	CONFERENCE[4]	
2-74	579-587	Networks	*[4]	CONFERENCE[4]	
2-75	587-588	}	_	_	
2-76	588-589	,	_	_	
2-77	592-596	year	_	_	
2-78	596-597	=	_	_	
2-79	597-598	{	_	_	
2-80	598-602	2020	_	_	
2-81	602-603	}	_	_	
2-82	604-605	}	_	_	
2-83	606-607	`	_	_	
2-84	607-608	`	_	_	
2-85	608-609	`	_	_	
2-86	612-613	#	_	_	
2-87	613-614	#	_	_	
2-88	615-623	Software	_	_	
2-89	624-636	Requirements	_	_	
2-90	638-644	Python	*[5]	SOFTWARE[5]	
2-91	645-648	3.5	*[5]	SOFTWARE[5]	
2-92	649-651	is	_	_	
2-93	652-656	used	_	_	
2-94	657-660	for	_	_	
2-95	661-664	the	_	_	
2-96	665-672	current	_	_	
2-97	673-681	codebase	_	_	
2-98	681-682	.	_	_	

#Text=Tensorflow 1.1 or later (Tensor 1 only)
#Text=
#Text=Protégé for Ontology
#Text=
#Text=
#Text=## Experiments
#Text=The repository comes with instructions to reproduce the results in the paper or to train the model from scratch:
#Text=
#Text=To view Ontology:
#Text=+ ConSo and DrugAO ontologies used in the paper are provided in folder `ontologies`.
#Text=+ Open ontology locally by [Protégé](https://protege.stanford.edu/products.php).
#Text=+ Open ontology online by importing the ontology on [WebVOWL](http://vowl.visualdataweb.org/webvowl.html).
3-1	684-694	Tensorflow	*[6]	SOFTWARE[6]	
3-2	695-698	1.1	*[6]	SOFTWARE[6]	
3-3	699-701	or	_	_	
3-4	702-707	later	_	_	
3-5	708-709	(	_	_	
3-6	709-715	Tensor	_	_	
3-7	716-717	1	_	_	
3-8	718-722	only	_	_	
3-9	722-723	)	_	_	
3-10	725-732	Protégé	*	SOFTWARE	
3-11	733-736	for	_	_	
3-12	737-745	Ontology	_	_	
3-13	748-749	#	_	_	
3-14	749-750	#	_	_	
3-15	751-762	Experiments	_	_	
3-16	763-766	The	_	_	
3-17	767-777	repository	_	_	
3-18	778-783	comes	_	_	
3-19	784-788	with	_	_	
3-20	789-801	instructions	_	_	
3-21	802-804	to	_	_	
3-22	805-814	reproduce	_	_	
3-23	815-818	the	_	_	
3-24	819-826	results	_	_	
3-25	827-829	in	_	_	
3-26	830-833	the	_	_	
3-27	834-839	paper	_	_	
3-28	840-842	or	_	_	
3-29	843-845	to	_	_	
3-30	846-851	train	_	_	
3-31	852-855	the	_	_	
3-32	856-861	model	_	_	
3-33	862-866	from	_	_	
3-34	867-874	scratch	_	_	
3-35	874-875	:	_	_	
3-36	877-879	To	_	_	
3-37	880-884	view	_	_	
3-38	885-893	Ontology	_	_	
3-39	893-894	:	_	_	
3-40	895-896	+	_	_	
3-41	897-902	ConSo	*	ONTOLOGY	
3-42	903-906	and	_	_	
3-43	907-913	DrugAO	*	ONTOLOGY	
3-44	914-924	ontologies	_	_	
3-45	925-929	used	_	_	
3-46	930-932	in	_	_	
3-47	933-936	the	_	_	
3-48	937-942	paper	_	_	
3-49	943-946	are	_	_	
3-50	947-955	provided	_	_	
3-51	956-958	in	_	_	
3-52	959-965	folder	_	_	
3-53	966-967	`	_	_	
3-54	967-977	ontologies	_	_	
3-55	977-978	`	_	_	
3-56	978-979	.	_	_	
3-57	980-981	+	_	_	
3-58	982-986	Open	_	_	
3-59	987-995	ontology	_	_	
3-60	996-1003	locally	_	_	
3-61	1004-1006	by	_	_	
3-62	1007-1008	[	_	_	
3-63	1008-1015	Protégé	*	SOFTWARE	
3-64	1015-1016	]	_	_	
3-65	1016-1017	(	_	_	
3-66	1017-1022	https	_	_	
3-67	1022-1023	:	_	_	
3-68	1023-1024	/	_	_	
3-69	1024-1025	/	_	_	
3-70	1025-1045	protege.stanford.edu	_	_	
3-70.1	1025-1032	protege	*	SOFTWARE	
3-71	1045-1046	/	_	_	
3-72	1046-1058	products.php	_	_	
3-73	1058-1059	)	_	_	
3-74	1059-1060	.	_	_	
3-75	1061-1062	+	_	_	
3-76	1063-1067	Open	_	_	
3-77	1068-1076	ontology	_	_	
3-78	1077-1083	online	_	_	
3-79	1084-1086	by	_	_	
3-80	1087-1096	importing	_	_	
3-81	1097-1100	the	_	_	
3-82	1101-1109	ontology	_	_	
3-83	1110-1112	on	_	_	
3-84	1113-1114	[	_	_	
3-85	1114-1121	WebVOWL	*	SOFTWARE	
3-86	1121-1122	]	_	_	
3-87	1122-1123	(	_	_	
3-88	1123-1127	http	_	_	
3-89	1127-1128	:	_	_	
3-90	1128-1129	/	_	_	
3-91	1129-1130	/	_	_	
3-92	1130-1152	vowl.visualdataweb.org	_	_	
3-93	1152-1153	/	_	_	
3-94	1153-1165	webvowl.html	_	_	
3-94.1	1153-1160	webvowl	*	SOFTWARE	
3-95	1165-1166	)	_	_	
3-96	1166-1167	.	_	_	

#Text=To reproduce the results:
#Text=+ Clone or download the folder from this repository.
#Text=+ Some large-size data or pretrained models of any file needed to run, if you cannot find it here, please find it on [Google Drive folder](https://drive.google.com/drive/folders/17w6RLR5pTG8BfXN-039YWBMnJWrYGKmK?
4-1	1169-1171	To	_	_	
4-2	1172-1181	reproduce	_	_	
4-3	1182-1185	the	_	_	
4-4	1186-1193	results	_	_	
4-5	1193-1194	:	_	_	
4-6	1195-1196	+	_	_	
4-7	1197-1202	Clone	_	_	
4-8	1203-1205	or	_	_	
4-9	1206-1214	download	_	_	
4-10	1215-1218	the	_	_	
4-11	1219-1225	folder	_	_	
4-12	1226-1230	from	_	_	
4-13	1231-1235	this	_	_	
4-14	1236-1246	repository	_	_	
4-15	1246-1247	.	_	_	
4-16	1248-1249	+	_	_	
4-17	1250-1254	Some	_	_	
4-18	1255-1265	large-size	_	_	
4-19	1266-1270	data	_	_	
4-20	1271-1273	or	_	_	
4-21	1274-1284	pretrained	_	_	
4-22	1285-1291	models	_	_	
4-23	1292-1294	of	_	_	
4-24	1295-1298	any	_	_	
4-25	1299-1303	file	_	_	
4-26	1304-1310	needed	_	_	
4-27	1311-1313	to	_	_	
4-28	1314-1317	run	_	_	
4-29	1317-1318	,	_	_	
4-30	1319-1321	if	_	_	
4-31	1322-1325	you	_	_	
4-32	1326-1332	cannot	_	_	
4-33	1333-1337	find	_	_	
4-34	1338-1340	it	_	_	
4-35	1341-1345	here	_	_	
4-36	1345-1346	,	_	_	
4-37	1347-1353	please	_	_	
4-38	1354-1358	find	_	_	
4-39	1359-1361	it	_	_	
4-40	1362-1364	on	_	_	
4-41	1365-1366	[	_	_	
4-42	1366-1372	Google	*[7]	SOFTWARE[7]	
4-43	1373-1378	Drive	*[7]	SOFTWARE[7]	
4-44	1379-1385	folder	_	_	
4-45	1385-1386	]	_	_	
4-46	1386-1387	(	_	_	
4-47	1387-1392	https	_	_	
4-48	1392-1393	:	_	_	
4-49	1393-1394	/	_	_	
4-50	1394-1395	/	_	_	
4-51	1395-1411	drive.google.com	_	_	
4-52	1411-1412	/	_	_	
4-53	1412-1417	drive	_	_	
4-54	1417-1418	/	_	_	
4-55	1418-1425	folders	_	_	
4-56	1425-1426	/	_	_	
4-57	1426-1442	17w6RLR5pTG8BfXN	_	_	
4-58	1442-1443	-	_	_	
4-59	1443-1459	039YWBMnJWrYGKmK	_	_	
4-60	1459-1460	?	_	_	

#Text=usp=sharing)
5-1	1460-1463	usp	_	_	
5-2	1463-1464	=	_	_	
5-3	1464-1471	sharing	_	_	
5-4	1471-1472	)	_	_	

#Text=.
6-1	1472-1473	.	_	_	

#Text=+ Go to folder `src/` and Run `python3 main_cc.py`
#Text=+ Note: Due to the privacy requirements of Drug data, this repository only provides data and code for consumer complaints.
7-1	1475-1476	+	_	_	
7-2	1477-1479	Go	_	_	
7-3	1480-1482	to	_	_	
7-4	1483-1489	folder	_	_	
7-5	1490-1491	`	_	_	
7-6	1491-1494	src	_	_	
7-7	1494-1495	/	_	_	
7-8	1495-1496	`	_	_	
7-9	1497-1500	and	_	_	
7-10	1501-1504	Run	_	_	
7-11	1505-1506	`	_	_	
7-12	1506-1513	python3	_	_	
7-13	1514-1524	main_cc.py	_	_	
7-14	1524-1525	`	_	_	
7-15	1526-1527	+	_	_	
7-16	1528-1532	Note	_	_	
7-17	1532-1533	:	_	_	
7-18	1534-1537	Due	_	_	
7-19	1538-1540	to	_	_	
7-20	1541-1544	the	_	_	
7-21	1545-1552	privacy	_	_	
7-22	1553-1565	requirements	_	_	
7-23	1566-1568	of	_	_	
7-24	1569-1573	Drug	_	_	
7-25	1574-1578	data	_	_	
7-26	1578-1579	,	_	_	
7-27	1580-1584	this	_	_	
7-28	1585-1595	repository	_	_	
7-29	1596-1600	only	_	_	
7-30	1601-1609	provides	_	_	
7-31	1610-1614	data	_	_	
7-32	1615-1618	and	_	_	
7-33	1619-1623	code	_	_	
7-34	1624-1627	for	_	_	
7-35	1628-1636	consumer	_	_	
7-36	1637-1647	complaints	_	_	
7-37	1647-1648	.	_	_	

#Text=To play with the model, you can:
#Text=+ Change classifier: In this code, the pretrained models are provided in folder `model/` in `h5` and `json` format.
8-1	1651-1653	To	_	_	
8-2	1654-1658	play	_	_	
8-3	1659-1663	with	_	_	
8-4	1664-1667	the	_	_	
8-5	1668-1673	model	_	_	
8-6	1673-1674	,	_	_	
8-7	1675-1678	you	_	_	
8-8	1679-1682	can	_	_	
8-9	1682-1683	:	_	_	
8-10	1684-1685	+	_	_	
8-11	1686-1692	Change	_	_	
8-12	1693-1703	classifier	_	_	
8-13	1703-1704	:	_	_	
8-14	1705-1707	In	_	_	
8-15	1708-1712	this	_	_	
8-16	1713-1717	code	_	_	
8-17	1717-1718	,	_	_	
8-18	1719-1722	the	_	_	
8-19	1723-1733	pretrained	_	_	
8-20	1734-1740	models	_	_	
8-21	1741-1744	are	_	_	
8-22	1745-1753	provided	_	_	
8-23	1754-1756	in	_	_	
8-24	1757-1763	folder	_	_	
8-25	1764-1765	`	_	_	
8-26	1765-1770	model	_	_	
8-27	1770-1771	/	_	_	
8-28	1771-1772	`	_	_	
8-29	1773-1775	in	_	_	
8-30	1776-1777	`	_	_	
8-31	1777-1779	h5	_	_	
8-32	1779-1780	`	_	_	
8-33	1781-1784	and	_	_	
8-34	1785-1786	`	_	_	
8-35	1786-1790	json	_	_	
8-36	1790-1791	`	_	_	
8-37	1792-1798	format	_	_	
8-38	1798-1799	.	_	_	

#Text=You can train your own classifier, save it in the same format, and then load it in the main function.
#Text=+ Customize data, ontology concepts, relations among ontology concepts, anchor list, and stopword list in `data/`.
9-1	1800-1803	You	_	_	
9-2	1804-1807	can	_	_	
9-3	1808-1813	train	_	_	
9-4	1814-1818	your	_	_	
9-5	1819-1822	own	_	_	
9-6	1823-1833	classifier	_	_	
9-7	1833-1834	,	_	_	
9-8	1835-1839	save	_	_	
9-9	1840-1842	it	_	_	
9-10	1843-1845	in	_	_	
9-11	1846-1849	the	_	_	
9-12	1850-1854	same	_	_	
9-13	1855-1861	format	_	_	
9-14	1861-1862	,	_	_	
9-15	1863-1866	and	_	_	
9-16	1867-1871	then	_	_	
9-17	1872-1876	load	_	_	
9-18	1877-1879	it	_	_	
9-19	1880-1882	in	_	_	
9-20	1883-1886	the	_	_	
9-21	1887-1891	main	_	_	
9-22	1892-1900	function	_	_	
9-23	1900-1901	.	_	_	
9-24	1902-1903	+	_	_	
9-25	1904-1913	Customize	_	_	
9-26	1914-1918	data	_	_	
9-27	1918-1919	,	_	_	
9-28	1920-1928	ontology	_	_	
9-29	1929-1937	concepts	_	_	
9-30	1937-1938	,	_	_	
9-31	1939-1948	relations	_	_	
9-32	1949-1954	among	_	_	
9-33	1955-1963	ontology	_	_	
9-34	1964-1972	concepts	_	_	
9-35	1972-1973	,	_	_	
9-36	1974-1980	anchor	_	_	
9-37	1981-1985	list	_	_	
9-38	1985-1986	,	_	_	
9-39	1987-1990	and	_	_	
9-40	1991-1999	stopword	_	_	
9-41	2000-2004	list	_	_	
9-42	2005-2007	in	_	_	
9-43	2008-2009	`	_	_	
9-44	2009-2013	data	_	_	
9-45	2013-2014	/	_	_	
9-46	2014-2015	`	_	_	
9-47	2015-2016	.	_	_	

#Text=To customize the code with your data or train the prediction model:
#Text=+ Go to `reproduce` folder.
10-1	2018-2020	To	_	_	
10-2	2021-2030	customize	_	_	
10-3	2031-2034	the	_	_	
10-4	2035-2039	code	_	_	
10-5	2040-2044	with	_	_	
10-6	2045-2049	your	_	_	
10-7	2050-2054	data	_	_	
10-8	2055-2057	or	_	_	
10-9	2058-2063	train	_	_	
10-10	2064-2067	the	_	_	
10-11	2068-2078	prediction	_	_	
10-12	2079-2084	model	_	_	
10-13	2084-2085	:	_	_	
10-14	2086-2087	+	_	_	
10-15	2088-2090	Go	_	_	
10-16	2091-2093	to	_	_	
10-17	2094-2095	`	_	_	
10-18	2095-2104	reproduce	_	_	
10-19	2104-2105	`	_	_	
10-20	2106-2112	folder	_	_	
10-21	2112-2113	.	_	_	

#Text=Instructions are provided there. 
#Text=
#Text=## Common issues reported
#Text=I received several emails about problems while running the code, but in general, I found that is just the version compatibility issues.
11-1	2114-2126	Instructions	_	_	
11-2	2127-2130	are	_	_	
11-3	2131-2139	provided	_	_	
11-4	2140-2145	there	_	_	
11-5	2145-2146	.	_	_	
11-6	2149-2150	#	_	_	
11-7	2150-2151	#	_	_	
11-8	2152-2158	Common	_	_	
11-9	2159-2165	issues	_	_	
11-10	2166-2174	reported	_	_	
11-11	2175-2176	I	_	_	
11-12	2177-2185	received	_	_	
11-13	2186-2193	several	_	_	
11-14	2194-2200	emails	_	_	
11-15	2201-2206	about	_	_	
11-16	2207-2215	problems	_	_	
11-17	2216-2221	while	_	_	
11-18	2222-2229	running	_	_	
11-19	2230-2233	the	_	_	
11-20	2234-2238	code	_	_	
11-21	2238-2239	,	_	_	
11-22	2240-2243	but	_	_	
11-23	2244-2246	in	_	_	
11-24	2247-2254	general	_	_	
11-25	2254-2255	,	_	_	
11-26	2256-2257	I	_	_	
11-27	2258-2263	found	_	_	
11-28	2264-2268	that	_	_	
11-29	2269-2271	is	_	_	
11-30	2272-2276	just	_	_	
11-31	2277-2280	the	_	_	
11-32	2281-2288	version	_	_	
11-33	2289-2302	compatibility	_	_	
11-34	2303-2309	issues	_	_	
11-35	2309-2310	.	_	_	

#Text=The common errors and how to solve it are as follows:
#Text=
#Text=+ `module has no attribute "placeholder"`: This is because you are using Tensorflow 2, while the code is using Tensorflow 1.
12-1	2311-2314	The	_	_	
12-2	2315-2321	common	_	_	
12-3	2322-2328	errors	_	_	
12-4	2329-2332	and	_	_	
12-5	2333-2336	how	_	_	
12-6	2337-2339	to	_	_	
12-7	2340-2345	solve	_	_	
12-8	2346-2348	it	_	_	
12-9	2349-2352	are	_	_	
12-10	2353-2355	as	_	_	
12-11	2356-2363	follows	_	_	
12-12	2363-2364	:	_	_	
12-13	2366-2367	+	_	_	
12-14	2368-2369	`	_	_	
12-15	2369-2375	module	_	_	
12-16	2376-2379	has	_	_	
12-17	2380-2382	no	_	_	
12-18	2383-2392	attribute	_	_	
12-19	2393-2394	"	_	_	
12-20	2394-2405	placeholder	_	_	
12-21	2405-2406	"	_	_	
12-22	2406-2407	`	_	_	
12-23	2407-2408	:	_	_	
12-24	2409-2413	This	_	_	
12-25	2414-2416	is	_	_	
12-26	2417-2424	because	_	_	
12-27	2425-2428	you	_	_	
12-28	2429-2432	are	_	_	
12-29	2433-2438	using	_	_	
12-30	2439-2449	Tensorflow	*[8]	SOFTWARE[8]	
12-31	2450-2451	2	*[8]	SOFTWARE[8]	
12-32	2451-2452	,	_	_	
12-33	2453-2458	while	_	_	
12-34	2459-2462	the	_	_	
12-35	2463-2467	code	_	_	
12-36	2468-2470	is	_	_	
12-37	2471-2476	using	_	_	
12-38	2477-2487	Tensorflow	*[9]	SOFTWARE[9]	
12-39	2488-2489	1	*[9]	SOFTWARE[9]	
12-40	2489-2490	.	_	_	

#Text=Please [disable TF2](https://www.tensorflow.org/api_docs/python/tf/compat/v1/disable_v2_behavior) behaviors by adding the line `tf.compat.v1.disable_v2_behavior()` after the line of importing TF in all the files
13-1	2491-2497	Please	_	_	
13-2	2498-2499	[	_	_	
13-3	2499-2506	disable	_	_	
13-4	2507-2510	TF2	_	_	
13-5	2510-2511	]	_	_	
13-6	2511-2512	(	_	_	
13-7	2512-2517	https	_	_	
13-8	2517-2518	:	_	_	
13-9	2518-2519	/	_	_	
13-10	2519-2520	/	_	_	
13-11	2520-2538	www.tensorflow.org	_	_	
13-12	2538-2539	/	_	_	
13-13	2539-2547	api_docs	_	_	
13-14	2547-2548	/	_	_	
13-15	2548-2554	python	*	PROGLANG	
13-16	2554-2555	/	_	_	
13-17	2555-2557	tf	_	_	
13-18	2557-2558	/	_	_	
13-19	2558-2564	compat	_	_	
13-20	2564-2565	/	_	_	
13-21	2565-2567	v1	_	_	
13-22	2567-2568	/	_	_	
13-23	2568-2578	disable_v2	_	_	
13-24	2578-2579	_	_	_	
13-25	2579-2587	behavior	_	_	
13-26	2587-2588	)	_	_	
13-27	2589-2598	behaviors	_	_	
13-28	2599-2601	by	_	_	
13-29	2602-2608	adding	_	_	
13-30	2609-2612	the	_	_	
13-31	2613-2617	line	_	_	
13-32	2618-2619	`	_	_	
13-33	2619-2631	tf.compat.v1	_	_	
13-34	2631-2632	.	_	_	
13-35	2632-2642	disable_v2	_	_	
13-36	2642-2643	_	_	_	
13-37	2643-2651	behavior	_	_	
13-38	2651-2652	(	_	_	
13-39	2652-2653	)	_	_	
13-40	2653-2654	`	_	_	
13-41	2655-2660	after	_	_	
13-42	2661-2664	the	_	_	
13-43	2665-2669	line	_	_	
13-44	2670-2672	of	_	_	
13-45	2673-2682	importing	_	_	
13-46	2683-2685	TF	_	_	
13-47	2686-2688	in	_	_	
13-48	2689-2692	all	_	_	
13-49	2693-2696	the	_	_	
13-50	2697-2702	files	_	_	

#Text=.
14-1	2702-2703	.	_	_	

#Text=+ `object of type "NoneType" has no len`: I guess you are using Python 3.7.
15-1	2706-2707	+	_	_	
15-2	2708-2709	`	_	_	
15-3	2709-2715	object	_	_	
15-4	2716-2718	of	_	_	
15-5	2719-2723	type	_	_	
15-6	2724-2725	"	_	_	
15-7	2725-2733	NoneType	_	_	
15-8	2733-2734	"	_	_	
15-9	2735-2738	has	_	_	
15-10	2739-2741	no	_	_	
15-11	2742-2745	len	_	_	
15-12	2745-2746	`	_	_	
15-13	2746-2747	:	_	_	
15-14	2748-2749	I	_	_	
15-15	2750-2755	guess	_	_	
15-16	2756-2759	you	_	_	
15-17	2760-2763	are	_	_	
15-18	2764-2769	using	_	_	
15-19	2770-2776	Python	*[10]	SOFTWARE[10]	
15-20	2777-2780	3.7	*[10]	SOFTWARE[10]	
15-21	2780-2781	.	_	_	

#Text=Note that this code uses part of [LIME](https://github.com/marcotcr/lime) for visualization, and that visualization does not work with Python 3.7  ([error](https://github.com/marcotcr/lime/issues/294)).
16-1	2782-2786	Note	_	_	
16-2	2787-2791	that	_	_	
16-3	2792-2796	this	_	_	
16-4	2797-2801	code	_	_	
16-5	2802-2806	uses	_	_	
16-6	2807-2811	part	_	_	
16-7	2812-2814	of	_	_	
16-8	2815-2816	[	_	_	
16-9	2816-2820	LIME	*	SOFTWARE	
16-10	2820-2821	]	_	_	
16-11	2821-2822	(	_	_	
16-12	2822-2827	https	_	_	
16-13	2827-2828	:	_	_	
16-14	2828-2829	/	_	_	
16-15	2829-2830	/	_	_	
16-16	2830-2840	github.com	_	_	
16-17	2840-2841	/	_	_	
16-18	2841-2849	marcotcr	_	_	
16-19	2849-2850	/	_	_	
16-20	2850-2854	lime	*	SOFTWARE	
16-21	2854-2855	)	_	_	
16-22	2856-2859	for	_	_	
16-23	2860-2873	visualization	_	_	
16-24	2873-2874	,	_	_	
16-25	2875-2878	and	_	_	
16-26	2879-2883	that	_	_	
16-27	2884-2897	visualization	_	_	
16-28	2898-2902	does	_	_	
16-29	2903-2906	not	_	_	
16-30	2907-2911	work	_	_	
16-31	2912-2916	with	_	_	
16-32	2917-2923	Python	*[11]	SOFTWARE[11]	
16-33	2924-2927	3.7	*[11]	SOFTWARE[11]	
16-34	2929-2930	(	_	_	
16-35	2930-2931	[	_	_	
16-36	2931-2936	error	_	_	
16-37	2936-2937	]	_	_	
16-38	2937-2938	(	_	_	
16-39	2938-2943	https	_	_	
16-40	2943-2944	:	_	_	
16-41	2944-2945	/	_	_	
16-42	2945-2946	/	_	_	
16-43	2946-2956	github.com	_	_	
16-44	2956-2957	/	_	_	
16-45	2957-2965	marcotcr	_	_	
16-46	2965-2966	/	_	_	
16-47	2966-2970	lime	*	SOFTWARE	
16-48	2970-2971	/	_	_	
16-49	2971-2977	issues	_	_	
16-50	2977-2978	/	_	_	
16-51	2978-2981	294	_	_	
16-52	2981-2982	)	_	_	
16-53	2982-2983	)	_	_	
16-54	2983-2984	.	_	_	

#Text=So I recommend you to use Python3 < 3.7 to be able to run the whole code; otherwise, you can run OnML but no visualization.
17-1	2985-2987	So	_	_	
17-2	2988-2989	I	_	_	
17-3	2990-2999	recommend	_	_	
17-4	3000-3003	you	_	_	
17-5	3004-3006	to	_	_	
17-6	3007-3010	use	_	_	
17-7	3011-3018	Python3	*	SOFTWARE	
17-8	3019-3020	<	_	_	
17-9	3021-3024	3.7	_	_	
17-10	3025-3027	to	_	_	
17-11	3028-3030	be	_	_	
17-12	3031-3035	able	_	_	
17-13	3036-3038	to	_	_	
17-14	3039-3042	run	_	_	
17-15	3043-3046	the	_	_	
17-16	3047-3052	whole	_	_	
17-17	3053-3057	code	_	_	
17-18	3057-3058	;	_	_	
17-19	3059-3068	otherwise	_	_	
17-20	3068-3069	,	_	_	
17-21	3070-3073	you	_	_	
17-22	3074-3077	can	_	_	
17-23	3078-3081	run	_	_	
17-24	3082-3086	OnML	*	SOFTWARE	
17-25	3087-3090	but	_	_	
17-26	3091-3093	no	_	_	
17-27	3094-3107	visualization	_	_	
17-28	3107-3108	.	_	_	

#Text=To avoid install/uninstall the package, I recommend you to create an environment while using the code, so that it will not affect other code's running.
#Text=1.
18-1	3110-3112	To	_	_	
18-2	3113-3118	avoid	_	_	
18-3	3119-3126	install	_	_	
18-4	3126-3127	/	_	_	
18-5	3127-3136	uninstall	_	_	
18-6	3137-3140	the	_	_	
18-7	3141-3148	package	_	_	
18-8	3148-3149	,	_	_	
18-9	3150-3151	I	_	_	
18-10	3152-3161	recommend	_	_	
18-11	3162-3165	you	_	_	
18-12	3166-3168	to	_	_	
18-13	3169-3175	create	_	_	
18-14	3176-3178	an	_	_	
18-15	3179-3190	environment	_	_	
18-16	3191-3196	while	_	_	
18-17	3197-3202	using	_	_	
18-18	3203-3206	the	_	_	
18-19	3207-3211	code	_	_	
18-20	3211-3212	,	_	_	
18-21	3213-3215	so	_	_	
18-22	3216-3220	that	_	_	
18-23	3221-3223	it	_	_	
18-24	3224-3228	will	_	_	
18-25	3229-3232	not	_	_	
18-26	3233-3239	affect	_	_	
18-27	3240-3245	other	_	_	
18-28	3246-3252	code's	_	_	
18-29	3253-3260	running	_	_	
18-30	3260-3261	.	_	_	
18-31	3262-3263	1	_	_	
18-32	3263-3264	.	_	_	

#Text=Create an environment by: `conda create -n name-of-environment python=version-of-python`, e.g., conda create -n my_py37 python=3.7
#Text=2.
19-1	3265-3271	Create	_	_	
19-2	3272-3274	an	_	_	
19-3	3275-3286	environment	_	_	
19-4	3287-3289	by	_	_	
19-5	3289-3290	:	_	_	
19-6	3291-3292	`	_	_	
19-7	3292-3297	conda	*	SOFTWARE	
19-8	3298-3304	create	_	_	
19-9	3305-3306	-	_	_	
19-10	3306-3307	n	_	_	
19-11	3308-3327	name-of-environment	_	_	
19-12	3328-3334	python	*	SOFTWARE	
19-13	3334-3335	=	_	_	
19-14	3335-3352	version-of-python	_	_	
19-14.1	3346-3352	python	*	SOFTWARE	
19-15	3352-3353	`	_	_	
19-16	3353-3354	,	_	_	
19-17	3355-3358	e.g	_	_	
19-18	3358-3359	.	_	_	
19-19	3359-3360	,	_	_	
19-20	3361-3366	conda	*	SOFTWARE	
19-21	3367-3373	create	_	_	
19-22	3374-3375	-	_	_	
19-23	3375-3376	n	_	_	
19-24	3377-3384	my_py37	_	_	
19-25	3385-3391	python	*[12]	SOFTWARE[12]	
19-26	3391-3392	=	*[12]	SOFTWARE[12]	
19-27	3392-3395	3.7	*[12]	SOFTWARE[12]	
19-28	3396-3397	2	*[12]	SOFTWARE[12]	
19-29	3397-3398	.	_	_	

#Text=Activate the created environment by: `conda activate name-of-environment`, e.g., conda activate my_py37
#Text=3.
20-1	3399-3407	Activate	_	_	
20-2	3408-3411	the	_	_	
20-3	3412-3419	created	_	_	
20-4	3420-3431	environment	_	_	
20-5	3432-3434	by	_	_	
20-6	3434-3435	:	_	_	
20-7	3436-3437	`	_	_	
20-8	3437-3442	conda	*	SOFTWARE	
20-9	3443-3451	activate	_	_	
20-10	3452-3471	name-of-environment	_	_	
20-11	3471-3472	`	_	_	
20-12	3472-3473	,	_	_	
20-13	3474-3477	e.g	_	_	
20-14	3477-3478	.	_	_	
20-15	3478-3479	,	_	_	
20-16	3480-3485	conda	*	SOFTWARE	
20-17	3486-3494	activate	_	_	
20-18	3495-3502	my_py37	_	_	
20-19	3503-3504	3	_	_	
20-20	3504-3505	.	_	_	

#Text=Install needed packages to run the code (If we dont know which packages to install, just run the code, the error about needed packages will show up)
#Text=4.
21-1	3506-3513	Install	_	_	
21-2	3514-3520	needed	_	_	
21-3	3521-3529	packages	_	_	
21-4	3530-3532	to	_	_	
21-5	3533-3536	run	_	_	
21-6	3537-3540	the	_	_	
21-7	3541-3545	code	_	_	
21-8	3546-3547	(	_	_	
21-9	3547-3549	If	_	_	
21-10	3550-3552	we	_	_	
21-11	3553-3557	dont	_	_	
21-12	3558-3562	know	_	_	
21-13	3563-3568	which	_	_	
21-14	3569-3577	packages	_	_	
21-15	3578-3580	to	_	_	
21-16	3581-3588	install	_	_	
21-17	3588-3589	,	_	_	
21-18	3590-3594	just	_	_	
21-19	3595-3598	run	_	_	
21-20	3599-3602	the	_	_	
21-21	3603-3607	code	_	_	
21-22	3607-3608	,	_	_	
21-23	3609-3612	the	_	_	
21-24	3613-3618	error	_	_	
21-25	3619-3624	about	_	_	
21-26	3625-3631	needed	_	_	
21-27	3632-3640	packages	_	_	
21-28	3641-3645	will	_	_	
21-29	3646-3650	show	_	_	
21-30	3651-3653	up	_	_	
21-31	3653-3654	)	_	_	
21-32	3655-3656	4	_	_	
21-33	3656-3657	.	_	_	

#Text=Deactivate the environment after using: `conda deactivate`
#Text=
#Text=## Potential issues 
#Text=If you have any issues while running the code or further information, please send email directly to the first author of this paper (`tl353@njit.edu`).
22-1	3658-3668	Deactivate	_	_	
22-2	3669-3672	the	_	_	
22-3	3673-3684	environment	_	_	
22-4	3685-3690	after	_	_	
22-5	3691-3696	using	_	_	
22-6	3696-3697	:	_	_	
22-7	3698-3699	`	_	_	
22-8	3699-3704	conda	*	SOFTWARE	
22-9	3705-3715	deactivate	_	_	
22-10	3715-3716	`	_	_	
22-11	3718-3719	#	_	_	
22-12	3719-3720	#	_	_	
22-13	3721-3730	Potential	_	_	
22-14	3731-3737	issues	_	_	
22-15	3739-3741	If	_	_	
22-16	3742-3745	you	_	_	
22-17	3746-3750	have	_	_	
22-18	3751-3754	any	_	_	
22-19	3755-3761	issues	_	_	
22-20	3762-3767	while	_	_	
22-21	3768-3775	running	_	_	
22-22	3776-3779	the	_	_	
22-23	3780-3784	code	_	_	
22-24	3785-3787	or	_	_	
22-25	3788-3795	further	_	_	
22-26	3796-3807	information	_	_	
22-27	3807-3808	,	_	_	
22-28	3809-3815	please	_	_	
22-29	3816-3820	send	_	_	
22-30	3821-3826	email	_	_	
22-31	3827-3835	directly	_	_	
22-32	3836-3838	to	_	_	
22-33	3839-3842	the	_	_	
22-34	3843-3848	first	_	_	
22-35	3849-3855	author	_	_	
22-36	3856-3858	of	_	_	
22-37	3859-3863	this	_	_	
22-38	3864-3869	paper	_	_	
22-39	3870-3871	(	_	_	
22-40	3871-3872	`	_	_	
22-41	3872-3877	tl353	_	_	
22-42	3877-3878	@	_	_	
22-43	3878-3886	njit.edu	_	_	
22-44	3886-3887	`	_	_	
22-45	3887-3888	)	_	_	
22-46	3888-3889	.	_	_	
