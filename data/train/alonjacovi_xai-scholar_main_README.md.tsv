#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# XAI-Scholar
#Text=
#Text=Code and data for deriving empirical trends in XAI.
#Text=
#Text=## Sources
#Text=Please check the accompanying [Medium blogpost](https://medium.com/@alonjacovi/trends-in-explainable-ai-xai-literature-a1db485e871) and [Arxiv report](http://arxiv.org/abs/2301.05433).
1-1	0-1	#	_	_	
1-2	2-13	XAI-Scholar	_	_	
1-3	15-19	Code	_	_	
1-4	20-23	and	_	_	
1-5	24-28	data	_	_	
1-6	29-32	for	_	_	
1-7	33-41	deriving	_	_	
1-8	42-51	empirical	_	_	
1-9	52-58	trends	_	_	
1-10	59-61	in	_	_	
1-11	62-65	XAI	_	_	
1-12	65-66	.	_	_	
1-13	68-69	#	_	_	
1-14	69-70	#	_	_	
1-15	71-78	Sources	_	_	
1-16	79-85	Please	_	_	
1-17	86-91	check	_	_	
1-18	92-95	the	_	_	
1-19	96-108	accompanying	_	_	
1-20	109-110	[	_	_	
1-21	110-116	Medium	_	_	
1-22	117-125	blogpost	_	_	
1-23	125-126	]	_	_	
1-24	126-127	(	_	_	
1-25	127-132	https	_	_	
1-26	132-133	:	_	_	
1-27	133-134	/	_	_	
1-28	134-135	/	_	_	
1-29	135-145	medium.com	_	_	
1-30	145-146	/	_	_	
1-31	146-147	@	_	_	
1-32	147-157	alonjacovi	_	_	
1-33	157-158	/	_	_	
1-34	158-209	trends-in-explainable-ai-xai-literature-a1db485e871	_	_	
1-35	209-210	)	_	_	
1-36	211-214	and	_	_	
1-37	215-216	[	_	_	
1-38	216-221	Arxiv	_	_	
1-39	222-228	report	_	_	
1-40	228-229	]	_	_	
1-41	229-230	(	_	_	
1-42	230-234	http	_	_	
1-43	234-235	:	_	_	
1-44	235-236	/	_	_	
1-45	236-237	/	_	_	
1-46	237-246	arxiv.org	_	_	
1-47	246-247	/	_	_	
1-48	247-250	abs	_	_	
1-49	250-251	/	_	_	
1-50	251-261	2301.05433	_	_	
1-51	261-262	)	_	_	
1-52	262-263	.	_	_	

#Text=The data was collected as described in the above links.
2-1	265-268	The	_	_	
2-2	269-273	data	_	_	
2-3	274-277	was	_	_	
2-4	278-287	collected	_	_	
2-5	288-290	as	_	_	
2-6	291-300	described	_	_	
2-7	301-303	in	_	_	
2-8	304-307	the	_	_	
2-9	308-313	above	_	_	
2-10	314-319	links	_	_	
2-11	319-320	.	_	_	

#Text=To recap, it is a mix of keyword search via SemanticScholar, and manual curation.
3-1	321-323	To	_	_	
3-2	324-329	recap	_	_	
3-3	329-330	,	_	_	
3-4	331-333	it	_	_	
3-5	334-336	is	_	_	
3-6	337-338	a	_	_	
3-7	339-342	mix	_	_	
3-8	343-345	of	_	_	
3-9	346-353	keyword	_	_	
3-10	354-360	search	_	_	
3-11	361-364	via	_	_	
3-12	365-380	SemanticScholar	*	SOFTWARE	
3-13	380-381	,	_	_	
3-14	382-385	and	_	_	
3-15	386-392	manual	_	_	
3-16	393-401	curation	_	_	
3-17	401-402	.	_	_	

#Text=The final collection has 5199 papers as of December 31st 2022.
4-1	403-406	The	_	_	
4-2	407-412	final	_	_	
4-3	413-423	collection	_	_	
4-4	424-427	has	_	_	
4-5	428-432	5199	_	_	
4-6	433-439	papers	_	_	
4-7	440-442	as	_	_	
4-8	443-445	of	_	_	
4-9	446-454	December	_	_	
4-10	455-459	31st	_	_	
4-11	460-464	2022	_	_	
4-12	464-465	.	_	_	

#Text=The code used to interface with SemanticScholar uses the unofficial [semanticscholar](https://github.com/danielnsilva/semanticscholar) python library.
5-1	467-470	The	_	_	
5-2	471-475	code	_	_	
5-3	476-480	used	_	_	
5-4	481-483	to	_	_	
5-5	484-493	interface	_	_	
5-6	494-498	with	_	_	
5-7	499-514	SemanticScholar	*	SOFTWARE	
5-8	515-519	uses	_	_	
5-9	520-523	the	_	_	
5-10	524-534	unofficial	_	_	
5-11	535-536	[	_	_	
5-12	536-551	semanticscholar	*	SOFTWARE	
5-13	551-552	]	_	_	
5-14	552-553	(	_	_	
5-15	553-558	https	_	_	
5-16	558-559	:	_	_	
5-17	559-560	/	_	_	
5-18	560-561	/	_	_	
5-19	561-571	github.com	_	_	
5-20	571-572	/	_	_	
5-21	572-584	danielnsilva	_	_	
5-22	584-585	/	_	_	
5-23	585-600	semanticscholar	*	SOFTWARE	
5-24	600-601	)	_	_	
5-25	602-608	python	*	PROGLANG	
5-26	609-616	library	_	_	
5-27	616-617	.	_	_	

#Text=Install with `pip install semanticscholar`.
6-1	618-625	Install	_	_	
6-2	626-630	with	_	_	
6-3	631-632	`	_	_	
6-4	632-635	pip	*	SOFTWARE	
6-5	636-643	install	_	_	
6-6	644-659	semanticscholar	*	SOFTWARE	
6-7	659-660	`	_	_	
6-8	660-661	.	_	_	

#Text=The plots and graphs use [Seaborn](https://seaborn.pydata.org/) and [GraphOnline](http://graphonline.ru/en/).
#Text=
#Text=## Format
#Text=`XAI-Scholar_analysis.ipynb` is a Jupyter Notebook with the code necessary to reproduce the results in the medium/arxiv reports.
7-1	662-665	The	_	_	
7-2	666-671	plots	_	_	
7-3	672-675	and	_	_	
7-4	676-682	graphs	_	_	
7-5	683-686	use	_	_	
7-6	687-688	[	_	_	
7-7	688-695	Seaborn	_	_	
7-8	695-696	]	_	_	
7-9	696-697	(	_	_	
7-10	697-702	https	_	_	
7-11	702-703	:	_	_	
7-12	703-704	/	_	_	
7-13	704-705	/	_	_	
7-14	705-723	seaborn.pydata.org	_	_	
7-15	723-724	/	_	_	
7-16	724-725	)	_	_	
7-17	726-729	and	_	_	
7-18	730-731	[	_	_	
7-19	731-742	GraphOnline	_	_	
7-20	742-743	]	_	_	
7-21	743-744	(	_	_	
7-22	744-748	http	_	_	
7-23	748-749	:	_	_	
7-24	749-750	/	_	_	
7-25	750-751	/	_	_	
7-26	751-765	graphonline.ru	_	_	
7-27	765-766	/	_	_	
7-28	766-768	en	_	_	
7-29	768-769	/	_	_	
7-30	769-770	)	_	_	
7-31	770-771	.	_	_	
7-32	773-774	#	_	_	
7-33	774-775	#	_	_	
7-34	776-782	Format	_	_	
7-35	783-784	`	_	_	
7-36	784-810	XAI-Scholar_analysis.ipynb	_	_	
7-37	810-811	`	_	_	
7-38	812-814	is	_	_	
7-39	815-816	a	_	_	
7-40	817-824	Jupyter	_	_	
7-41	825-833	Notebook	_	_	
7-42	834-838	with	_	_	
7-43	839-842	the	_	_	
7-44	843-847	code	_	_	
7-45	848-857	necessary	_	_	
7-46	858-860	to	_	_	
7-47	861-870	reproduce	_	_	
7-48	871-874	the	_	_	
7-49	875-882	results	_	_	
7-50	883-885	in	_	_	
7-51	886-889	the	_	_	
7-52	890-896	medium	_	_	
7-53	896-897	/	_	_	
7-54	897-902	arxiv	_	_	
7-55	903-910	reports	_	_	
7-56	910-911	.	_	_	

#Text=`xai-scholar.json` is a json dictionary with 5199 SemanticScholar `paperId` keys.
8-1	913-914	`	_	_	
8-2	914-930	xai-scholar.json	_	_	
8-3	930-931	`	_	_	
8-4	932-934	is	_	_	
8-5	935-936	a	_	_	
8-6	937-941	json	_	_	
8-7	942-952	dictionary	_	_	
8-8	953-957	with	_	_	
8-9	958-962	5199	_	_	
8-10	963-978	SemanticScholar	_	_	
8-11	979-980	`	_	_	
8-12	980-987	paperId	_	_	
8-13	987-988	`	_	_	
8-14	989-993	keys	_	_	
8-15	993-994	.	_	_	

#Text=Each paper has the standard fields given by the SemanticScholar API:
#Text=* `paperId`
#Text=* `externalIds`
#Text=* `url`
#Text=* `title`
#Text=* `abstract`
#Text=* `venue`
#Text=* `year`
#Text=* `referenceCount`
#Text=* `citationCount`
#Text=* `influentialCitationCount`
#Text=* `isOpenAccess`
#Text=* `fieldsOfStudy`
#Text=* `s2FieldsOfStudy`
#Text=* `tldr`
#Text=* `publicationTypes`
#Text=* `publicationDate`
#Text=* `journal`
#Text=* `authors`
#Text=
#Text=Note: Some of the papers are missing some of the fields, or they are marked as empty or `None`.
9-1	996-1000	Each	_	_	
9-2	1001-1006	paper	_	_	
9-3	1007-1010	has	_	_	
9-4	1011-1014	the	_	_	
9-5	1015-1023	standard	_	_	
9-6	1024-1030	fields	_	_	
9-7	1031-1036	given	_	_	
9-8	1037-1039	by	_	_	
9-9	1040-1043	the	_	_	
9-10	1044-1059	SemanticScholar	*	SOFTWARE	
9-11	1060-1063	API	_	_	
9-12	1063-1064	:	_	_	
9-13	1065-1066	*	_	_	
9-14	1067-1068	`	_	_	
9-15	1068-1075	paperId	_	_	
9-16	1075-1076	`	_	_	
9-17	1077-1078	*	_	_	
9-18	1079-1080	`	_	_	
9-19	1080-1091	externalIds	_	_	
9-20	1091-1092	`	_	_	
9-21	1093-1094	*	_	_	
9-22	1095-1096	`	_	_	
9-23	1096-1099	url	_	_	
9-24	1099-1100	`	_	_	
9-25	1101-1102	*	_	_	
9-26	1103-1104	`	_	_	
9-27	1104-1109	title	_	_	
9-28	1109-1110	`	_	_	
9-29	1111-1112	*	_	_	
9-30	1113-1114	`	_	_	
9-31	1114-1122	abstract	_	_	
9-32	1122-1123	`	_	_	
9-33	1124-1125	*	_	_	
9-34	1126-1127	`	_	_	
9-35	1127-1132	venue	_	_	
9-36	1132-1133	`	_	_	
9-37	1134-1135	*	_	_	
9-38	1136-1137	`	_	_	
9-39	1137-1141	year	_	_	
9-40	1141-1142	`	_	_	
9-41	1143-1144	*	_	_	
9-42	1145-1146	`	_	_	
9-43	1146-1160	referenceCount	_	_	
9-44	1160-1161	`	_	_	
9-45	1162-1163	*	_	_	
9-46	1164-1165	`	_	_	
9-47	1165-1178	citationCount	_	_	
9-48	1178-1179	`	_	_	
9-49	1180-1181	*	_	_	
9-50	1182-1183	`	_	_	
9-51	1183-1207	influentialCitationCount	_	_	
9-52	1207-1208	`	_	_	
9-53	1209-1210	*	_	_	
9-54	1211-1212	`	_	_	
9-55	1212-1224	isOpenAccess	_	_	
9-56	1224-1225	`	_	_	
9-57	1226-1227	*	_	_	
9-58	1228-1229	`	_	_	
9-59	1229-1242	fieldsOfStudy	_	_	
9-60	1242-1243	`	_	_	
9-61	1244-1245	*	_	_	
9-62	1246-1247	`	_	_	
9-63	1247-1262	s2FieldsOfStudy	_	_	
9-64	1262-1263	`	_	_	
9-65	1264-1265	*	_	_	
9-66	1266-1267	`	_	_	
9-67	1267-1271	tldr	_	_	
9-68	1271-1272	`	_	_	
9-69	1273-1274	*	_	_	
9-70	1275-1276	`	_	_	
9-71	1276-1292	publicationTypes	_	_	
9-72	1292-1293	`	_	_	
9-73	1294-1295	*	_	_	
9-74	1296-1297	`	_	_	
9-75	1297-1312	publicationDate	_	_	
9-76	1312-1313	`	_	_	
9-77	1314-1315	*	_	_	
9-78	1316-1317	`	_	_	
9-79	1317-1324	journal	_	_	
9-80	1324-1325	`	_	_	
9-81	1326-1327	*	_	_	
9-82	1328-1329	`	_	_	
9-83	1329-1336	authors	_	_	
9-84	1336-1337	`	_	_	
9-85	1339-1343	Note	_	_	
9-86	1343-1344	:	_	_	
9-87	1345-1349	Some	_	_	
9-88	1350-1352	of	_	_	
9-89	1353-1356	the	_	_	
9-90	1357-1363	papers	_	_	
9-91	1364-1367	are	_	_	
9-92	1368-1375	missing	_	_	
9-93	1376-1380	some	_	_	
9-94	1381-1383	of	_	_	
9-95	1384-1387	the	_	_	
9-96	1388-1394	fields	_	_	
9-97	1394-1395	,	_	_	
9-98	1396-1398	or	_	_	
9-99	1399-1403	they	_	_	
9-100	1404-1407	are	_	_	
9-101	1408-1414	marked	_	_	
9-102	1415-1417	as	_	_	
9-103	1418-1423	empty	_	_	
9-104	1424-1426	or	_	_	
9-105	1427-1428	`	_	_	
9-106	1428-1432	None	_	_	
9-107	1432-1433	`	_	_	
9-108	1433-1434	.	_	_	

#Text=The following fields are missing in `xai-scholar.json` and need to be retrieved from SemanticScholar due to their large size (expect around 1 GB without `embedding`):
#Text=* `embedding`
#Text=* `citations`
#Text=* `references`
#Text=
#Text=The code to do so is in the jupyter notebook - but it simply calls `semanticscholar.get_paper(paperId)` for each `paperId`.
10-1	1437-1440	The	_	_	
10-2	1441-1450	following	_	_	
10-3	1451-1457	fields	_	_	
10-4	1458-1461	are	_	_	
10-5	1462-1469	missing	_	_	
10-6	1470-1472	in	_	_	
10-7	1473-1474	`	_	_	
10-8	1474-1490	xai-scholar.json	_	_	
10-9	1490-1491	`	_	_	
10-10	1492-1495	and	_	_	
10-11	1496-1500	need	_	_	
10-12	1501-1503	to	_	_	
10-13	1504-1506	be	_	_	
10-14	1507-1516	retrieved	_	_	
10-15	1517-1521	from	_	_	
10-16	1522-1537	SemanticScholar	_	_	
10-17	1538-1541	due	_	_	
10-18	1542-1544	to	_	_	
10-19	1545-1550	their	_	_	
10-20	1551-1556	large	_	_	
10-21	1557-1561	size	_	_	
10-22	1562-1563	(	_	_	
10-23	1563-1569	expect	_	_	
10-24	1570-1576	around	_	_	
10-25	1577-1578	1	_	_	
10-26	1579-1581	GB	_	_	
10-27	1582-1589	without	_	_	
10-28	1590-1591	`	_	_	
10-29	1591-1600	embedding	_	_	
10-30	1600-1601	`	_	_	
10-31	1601-1602	)	_	_	
10-32	1602-1603	:	_	_	
10-33	1604-1605	*	_	_	
10-34	1606-1607	`	_	_	
10-35	1607-1616	embedding	_	_	
10-36	1616-1617	`	_	_	
10-37	1618-1619	*	_	_	
10-38	1620-1621	`	_	_	
10-39	1621-1630	citations	_	_	
10-40	1630-1631	`	_	_	
10-41	1632-1633	*	_	_	
10-42	1634-1635	`	_	_	
10-43	1635-1645	references	_	_	
10-44	1645-1646	`	_	_	
10-45	1648-1651	The	_	_	
10-46	1652-1656	code	_	_	
10-47	1657-1659	to	_	_	
10-48	1660-1662	do	_	_	
10-49	1663-1665	so	_	_	
10-50	1666-1668	is	_	_	
10-51	1669-1671	in	_	_	
10-52	1672-1675	the	_	_	
10-53	1676-1683	jupyter	*[1]	SOFTWARE[1]	
10-54	1684-1692	notebook	*[1]	SOFTWARE[1]	
10-55	1693-1694	-	_	_	
10-56	1695-1698	but	_	_	
10-57	1699-1701	it	_	_	
10-58	1702-1708	simply	_	_	
10-59	1709-1714	calls	_	_	
10-60	1715-1716	`	_	_	
10-61	1716-1741	semanticscholar.get_paper	_	_	
10-61.1	1716-1731	semanticscholar	*	SOFTWARE	
10-62	1741-1742	(	_	_	
10-63	1742-1749	paperId	_	_	
10-64	1749-1750	)	_	_	
10-65	1750-1751	`	_	_	
10-66	1752-1755	for	_	_	
10-67	1756-1760	each	_	_	
10-68	1761-1762	`	_	_	
10-69	1762-1769	paperId	_	_	
10-70	1769-1770	`	_	_	
10-71	1770-1771	.	_	_	
