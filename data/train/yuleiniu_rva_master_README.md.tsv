#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=Recursive Visual Attention in Visual Dialog
#Text=====================================
#Text=
#Text=This repository contains the code for the following paper:
#Text=
#Text=* Yulei Niu, Hanwang Zhang, Manli Zhang, Jianhong Zhang, Zhiwu Lu, Ji-Rong Wen, *Recursive Visual Attention in Visual Dialog*.
1-1	0-9	Recursive	*[1]	PUBLICATION[1]	
1-2	10-16	Visual	*[1]	PUBLICATION[1]	
1-3	17-26	Attention	*[1]	PUBLICATION[1]	
1-4	27-29	in	*[1]	PUBLICATION[1]	
1-5	30-36	Visual	*[1]	PUBLICATION[1]	
1-6	37-43	Dialog	*[1]	PUBLICATION[1]	
1-7	44-45	=	_	_	
1-8	45-46	=	_	_	
1-9	46-47	=	_	_	
1-10	47-48	=	_	_	
1-11	48-49	=	_	_	
1-12	49-50	=	_	_	
1-13	50-51	=	_	_	
1-14	51-52	=	_	_	
1-15	52-53	=	_	_	
1-16	53-54	=	_	_	
1-17	54-55	=	_	_	
1-18	55-56	=	_	_	
1-19	56-57	=	_	_	
1-20	57-58	=	_	_	
1-21	58-59	=	_	_	
1-22	59-60	=	_	_	
1-23	60-61	=	_	_	
1-24	61-62	=	_	_	
1-25	62-63	=	_	_	
1-26	63-64	=	_	_	
1-27	64-65	=	_	_	
1-28	65-66	=	_	_	
1-29	66-67	=	_	_	
1-30	67-68	=	_	_	
1-31	68-69	=	_	_	
1-32	69-70	=	_	_	
1-33	70-71	=	_	_	
1-34	71-72	=	_	_	
1-35	72-73	=	_	_	
1-36	73-74	=	_	_	
1-37	74-75	=	_	_	
1-38	75-76	=	_	_	
1-39	76-77	=	_	_	
1-40	77-78	=	_	_	
1-41	78-79	=	_	_	
1-42	79-80	=	_	_	
1-43	82-86	This	_	_	
1-44	87-97	repository	_	_	
1-45	98-106	contains	_	_	
1-46	107-110	the	_	_	
1-47	111-115	code	_	_	
1-48	116-119	for	_	_	
1-49	120-123	the	_	_	
1-50	124-133	following	_	_	
1-51	134-139	paper	_	_	
1-52	139-140	:	_	_	
1-53	142-143	*	_	_	
1-54	144-149	Yulei	_	_	
1-55	150-153	Niu	_	_	
1-56	153-154	,	_	_	
1-57	155-162	Hanwang	_	_	
1-58	163-168	Zhang	_	_	
1-59	168-169	,	_	_	
1-60	170-175	Manli	_	_	
1-61	176-181	Zhang	_	_	
1-62	181-182	,	_	_	
1-63	183-191	Jianhong	_	_	
1-64	192-197	Zhang	_	_	
1-65	197-198	,	_	_	
1-66	199-204	Zhiwu	_	_	
1-67	205-207	Lu	_	_	
1-68	207-208	,	_	_	
1-69	209-216	Ji-Rong	_	_	
1-70	217-220	Wen	_	_	
1-71	220-221	,	_	_	
1-72	222-223	*	_	_	
1-73	223-232	Recursive	*[2]	PUBLICATION[2]	
1-74	233-239	Visual	*[2]	PUBLICATION[2]	
1-75	240-249	Attention	*[2]	PUBLICATION[2]	
1-76	250-252	in	*[2]	PUBLICATION[2]	
1-77	253-259	Visual	*[2]	PUBLICATION[2]	
1-78	260-266	Dialog	*[2]	PUBLICATION[2]	
1-79	266-267	*	_	_	
1-80	267-268	.	_	_	

#Text=In CVPR, 2019.
2-1	269-271	In	_	_	
2-2	272-276	CVPR	*	CONFERENCE	
2-3	276-277	,	_	_	
2-4	278-282	2019	_	_	
2-5	282-283	.	_	_	

#Text=([PDF](https://arxiv.org/pdf/1812.02664.pdf))
#Text=
#Text=```
#Text=@InProceedings{niu2019recursive,
#Text=    author = {Niu, Yulei and Zhang, Hanwang and Zhang, Manli and Zhang, Jianhong and Lu, Zhiwu and Wen, Ji-Rong},
#Text=    title = {Recursive Visual Attention in Visual Dialog},
#Text=    booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},
#Text=    month = {June},
#Text=    year = {2019}
#Text=}
#Text=
#Text=```
#Text=
#Text=This code is reimplemented as a fork of [batra-mlp-lab/visdial-challenge-starter-pytorch][6].
3-1	284-285	(	_	_	
3-2	285-286	[	_	_	
3-3	286-289	PDF	_	_	
3-4	289-290	]	_	_	
3-5	290-291	(	_	_	
3-6	291-296	https	_	_	
3-7	296-297	:	_	_	
3-8	297-298	/	_	_	
3-9	298-299	/	_	_	
3-10	299-308	arxiv.org	_	_	
3-11	308-309	/	_	_	
3-12	309-312	pdf	_	_	
3-13	312-313	/	_	_	
3-14	313-323	1812.02664	_	_	
3-15	323-324	.	_	_	
3-16	324-327	pdf	_	_	
3-17	327-328	)	_	_	
3-18	328-329	)	_	_	
3-19	331-332	`	_	_	
3-20	332-333	`	_	_	
3-21	333-334	`	_	_	
3-22	335-336	@	_	_	
3-23	336-349	InProceedings	_	_	
3-24	349-350	{	_	_	
3-25	350-366	niu2019recursive	_	_	
3-26	366-367	,	_	_	
3-27	372-378	author	_	_	
3-28	379-380	=	_	_	
3-29	381-382	{	_	_	
3-30	382-385	Niu	_	_	
3-31	385-386	,	_	_	
3-32	387-392	Yulei	_	_	
3-33	393-396	and	_	_	
3-34	397-402	Zhang	_	_	
3-35	402-403	,	_	_	
3-36	404-411	Hanwang	_	_	
3-37	412-415	and	_	_	
3-38	416-421	Zhang	_	_	
3-39	421-422	,	_	_	
3-40	423-428	Manli	_	_	
3-41	429-432	and	_	_	
3-42	433-438	Zhang	_	_	
3-43	438-439	,	_	_	
3-44	440-448	Jianhong	_	_	
3-45	449-452	and	_	_	
3-46	453-455	Lu	_	_	
3-47	455-456	,	_	_	
3-48	457-462	Zhiwu	_	_	
3-49	463-466	and	_	_	
3-50	467-470	Wen	_	_	
3-51	470-471	,	_	_	
3-52	472-479	Ji-Rong	_	_	
3-53	479-480	}	_	_	
3-54	480-481	,	_	_	
3-55	486-491	title	_	_	
3-56	492-493	=	_	_	
3-57	494-495	{	_	_	
3-58	495-504	Recursive	*[3]	PUBLICATION[3]	
3-59	505-511	Visual	*[3]	PUBLICATION[3]	
3-60	512-521	Attention	*[3]	PUBLICATION[3]	
3-61	522-524	in	*[3]	PUBLICATION[3]	
3-62	525-531	Visual	*[3]	PUBLICATION[3]	
3-63	532-538	Dialog	*[3]	PUBLICATION[3]	
3-64	538-539	}	_	_	
3-65	539-540	,	_	_	
3-66	545-554	booktitle	_	_	
3-67	555-556	=	_	_	
3-68	557-558	{	_	_	
3-69	558-561	The	*[4]	PUBLICATION[4]	
3-70	562-566	IEEE	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-71	567-577	Conference	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-72	578-580	on	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-73	581-589	Computer	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-74	590-596	Vision	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-75	597-600	and	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-76	601-608	Pattern	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-77	609-620	Recognition	*[4]|*[5]	PUBLICATION[4]|CONFERENCE[5]	
3-78	621-622	(	*[4]	PUBLICATION[4]	
3-79	622-626	CVPR	*[4]|*[6]	PUBLICATION[4]|CONFERENCE[6]	
3-80	626-627	)	*[4]	PUBLICATION[4]	
3-81	627-628	}	_	_	
3-82	628-629	,	_	_	
3-83	634-639	month	_	_	
3-84	640-641	=	_	_	
3-85	642-643	{	_	_	
3-86	643-647	June	_	_	
3-87	647-648	}	_	_	
3-88	648-649	,	_	_	
3-89	654-658	year	_	_	
3-90	659-660	=	_	_	
3-91	661-662	{	_	_	
3-92	662-666	2019	_	_	
3-93	666-667	}	_	_	
3-94	668-669	}	_	_	
3-95	671-672	`	_	_	
3-96	672-673	`	_	_	
3-97	673-674	`	_	_	
3-98	676-680	This	_	_	
3-99	681-685	code	_	_	
3-100	686-688	is	_	_	
3-101	689-702	reimplemented	_	_	
3-102	703-705	as	_	_	
3-103	706-707	a	_	_	
3-104	708-712	fork	_	_	
3-105	713-715	of	_	_	
3-106	716-717	[	_	_	
3-107	717-730	batra-mlp-lab	_	_	
3-108	730-731	/	_	_	
3-109	731-764	visdial-challenge-starter-pytorch	_	_	
3-109.1	757-764	pytorch	*	SOFTWARE	
3-110	764-765	]	_	_	
3-111	765-766	[	_	_	
3-112	766-767	6	_	_	
3-113	767-768	]	_	_	
3-114	768-769	.	_	_	

#Text=Setup and Dependencies
#Text=----------------------
#Text=
#Text=This code is implemented using PyTorch v1.0, and provides out of the box support with CUDA 9 and CuDNN 7.
4-1	772-777	Setup	_	_	
4-2	778-781	and	_	_	
4-3	782-794	Dependencies	_	_	
4-4	795-796	-	_	_	
4-5	796-797	-	_	_	
4-6	797-798	-	_	_	
4-7	798-799	-	_	_	
4-8	799-800	-	_	_	
4-9	800-801	-	_	_	
4-10	801-802	-	_	_	
4-11	802-803	-	_	_	
4-12	803-804	-	_	_	
4-13	804-805	-	_	_	
4-14	805-806	-	_	_	
4-15	806-807	-	_	_	
4-16	807-808	-	_	_	
4-17	808-809	-	_	_	
4-18	809-810	-	_	_	
4-19	810-811	-	_	_	
4-20	811-812	-	_	_	
4-21	812-813	-	_	_	
4-22	813-814	-	_	_	
4-23	814-815	-	_	_	
4-24	815-816	-	_	_	
4-25	816-817	-	_	_	
4-26	819-823	This	_	_	
4-27	824-828	code	_	_	
4-28	829-831	is	_	_	
4-29	832-843	implemented	_	_	
4-30	844-849	using	_	_	
4-31	850-857	PyTorch	*[7]	SOFTWARE[7]	
4-32	858-862	v1.0	*[7]	SOFTWARE[7]	
4-33	862-863	,	_	_	
4-34	864-867	and	_	_	
4-35	868-876	provides	_	_	
4-36	877-880	out	_	_	
4-37	881-883	of	_	_	
4-38	884-887	the	_	_	
4-39	888-891	box	_	_	
4-40	892-899	support	_	_	
4-41	900-904	with	_	_	
4-42	905-909	CUDA	*[8]	SOFTWARE[8]	
4-43	910-911	9	*[8]	SOFTWARE[8]	
4-44	912-915	and	_	_	
4-45	916-921	CuDNN	*[9]	SOFTWARE[9]	
4-46	922-923	7	*[9]	SOFTWARE[9]	
4-47	923-924	.	_	_	

#Text=Anaconda/Miniconda is the recommended to set up this codebase: 
#Text=
#Text=### Anaconda or Miniconda
#Text=
#Text=1.
5-1	925-933	Anaconda	*	SOFTWARE	
5-2	933-934	/	_	_	
5-3	934-943	Miniconda	*	SOFTWARE	
5-4	944-946	is	_	_	
5-5	947-950	the	_	_	
5-6	951-962	recommended	_	_	
5-7	963-965	to	_	_	
5-8	966-969	set	_	_	
5-9	970-972	up	_	_	
5-10	973-977	this	_	_	
5-11	978-986	codebase	_	_	
5-12	986-987	:	_	_	
5-13	990-991	#	_	_	
5-14	991-992	#	_	_	
5-15	992-993	#	_	_	
5-16	994-1002	Anaconda	*	SOFTWARE	
5-17	1003-1005	or	_	_	
5-18	1006-1015	Miniconda	*	SOFTWARE	
5-19	1017-1018	1	_	_	
5-20	1018-1019	.	_	_	

#Text=Install Anaconda or Miniconda distribution based on Python3+ from their [downloads' site][1].
#Text=2.
6-1	1020-1027	Install	_	_	
6-2	1028-1036	Anaconda	*	SOFTWARE	
6-3	1037-1039	or	_	_	
6-4	1040-1049	Miniconda	*	SOFTWARE	
6-5	1050-1062	distribution	_	_	
6-6	1063-1068	based	_	_	
6-7	1069-1071	on	_	_	
6-8	1072-1079	Python3	*[10]	PROGLANG[10]	
6-9	1079-1080	+	*[10]	PROGLANG[10]	
6-10	1081-1085	from	_	_	
6-11	1086-1091	their	_	_	
6-12	1092-1093	[	_	_	
6-13	1093-1102	downloads	_	_	
6-14	1102-1103	'	_	_	
6-15	1104-1108	site	_	_	
6-16	1108-1109	]	_	_	
6-17	1109-1110	[	_	_	
6-18	1110-1111	1	_	_	
6-19	1111-1112	]	_	_	
6-20	1112-1113	.	_	_	
6-21	1114-1115	2	_	_	
6-22	1115-1116	.	_	_	

#Text=Clone this repository and create an environment:
#Text=
#Text=```shell
#Text=git clone https://www.github.com/yuleiniu/rva
#Text=conda create -n visdial-ch python=3.6
#Text=
#Text=# activate the environment and install all dependencies
#Text=conda activate visdial-ch
#Text=cd rva/
#Text=pip install -r requirements.txt
#Text=
#Text=# install this codebase as a package in development version
#Text=python setup.py develop
#Text=```
#Text=
#Text=
#Text=Download Data
#Text=-------------
#Text=
#Text=1.
7-1	1117-1122	Clone	_	_	
7-2	1123-1127	this	_	_	
7-3	1128-1138	repository	_	_	
7-4	1139-1142	and	_	_	
7-5	1143-1149	create	_	_	
7-6	1150-1152	an	_	_	
7-7	1153-1164	environment	_	_	
7-8	1164-1165	:	_	_	
7-9	1167-1168	`	_	_	
7-10	1168-1169	`	_	_	
7-11	1169-1170	`	_	_	
7-12	1170-1175	shell	*	PROGLANG	
7-13	1176-1179	git	*	SOFTWARE	
7-14	1180-1185	clone	_	_	
7-15	1186-1191	https	_	_	
7-16	1191-1192	:	_	_	
7-17	1192-1193	/	_	_	
7-18	1193-1194	/	_	_	
7-19	1194-1208	www.github.com	_	_	
7-20	1208-1209	/	_	_	
7-21	1209-1217	yuleiniu	_	_	
7-22	1217-1218	/	_	_	
7-23	1218-1221	rva	_	_	
7-24	1222-1227	conda	*	SOFTWARE	
7-25	1228-1234	create	_	_	
7-26	1235-1236	-	_	_	
7-27	1236-1237	n	_	_	
7-28	1238-1248	visdial-ch	_	_	
7-29	1249-1255	python	*[11]	PROGLANG[11]	
7-30	1255-1256	=	*[11]	PROGLANG[11]	
7-31	1256-1259	3.6	*[11]	PROGLANG[11]	
7-32	1261-1262	#	_	_	
7-33	1263-1271	activate	_	_	
7-34	1272-1275	the	_	_	
7-35	1276-1287	environment	_	_	
7-36	1288-1291	and	_	_	
7-37	1292-1299	install	_	_	
7-38	1300-1303	all	_	_	
7-39	1304-1316	dependencies	_	_	
7-40	1317-1322	conda	*	SOFTWARE	
7-41	1323-1331	activate	_	_	
7-42	1332-1342	visdial-ch	_	_	
7-43	1343-1345	cd	_	_	
7-44	1346-1349	rva	_	_	
7-45	1349-1350	/	_	_	
7-46	1351-1354	pip	*	SOFTWARE	
7-47	1355-1362	install	_	_	
7-48	1363-1364	-	_	_	
7-49	1364-1365	r	_	_	
7-50	1366-1382	requirements.txt	_	_	
7-51	1384-1385	#	_	_	
7-52	1386-1393	install	_	_	
7-53	1394-1398	this	_	_	
7-54	1399-1407	codebase	_	_	
7-55	1408-1410	as	_	_	
7-56	1411-1412	a	_	_	
7-57	1413-1420	package	_	_	
7-58	1421-1423	in	_	_	
7-59	1424-1435	development	_	_	
7-60	1436-1443	version	_	_	
7-61	1444-1450	python	*	SOFTWARE	
7-62	1451-1459	setup.py	_	_	
7-63	1460-1467	develop	_	_	
7-64	1468-1469	`	_	_	
7-65	1469-1470	`	_	_	
7-66	1470-1471	`	_	_	
7-67	1474-1482	Download	_	_	
7-68	1483-1487	Data	_	_	
7-69	1488-1489	-	_	_	
7-70	1489-1490	-	_	_	
7-71	1490-1491	-	_	_	
7-72	1491-1492	-	_	_	
7-73	1492-1493	-	_	_	
7-74	1493-1494	-	_	_	
7-75	1494-1495	-	_	_	
7-76	1495-1496	-	_	_	
7-77	1496-1497	-	_	_	
7-78	1497-1498	-	_	_	
7-79	1498-1499	-	_	_	
7-80	1499-1500	-	_	_	
7-81	1500-1501	-	_	_	
7-82	1503-1504	1	_	_	
7-83	1504-1505	.	_	_	

#Text=Download the VisDial v1.0 dialog json files from [here][3] and keep it under `$PROJECT_ROOT/data` directory, for default arguments to work effectively.
#Text=
#Text=2.
8-1	1506-1514	Download	_	_	
8-2	1515-1518	the	_	_	
8-3	1519-1526	VisDial	*[12]	DATASET[12]	
8-4	1527-1531	v1.0	*[12]	DATASET[12]	
8-5	1532-1538	dialog	_	_	
8-6	1539-1543	json	_	_	
8-7	1544-1549	files	_	_	
8-8	1550-1554	from	_	_	
8-9	1555-1556	[	_	_	
8-10	1556-1560	here	_	_	
8-11	1560-1561	]	_	_	
8-12	1561-1562	[	_	_	
8-13	1562-1563	3	_	_	
8-14	1563-1564	]	_	_	
8-15	1565-1568	and	_	_	
8-16	1569-1573	keep	_	_	
8-17	1574-1576	it	_	_	
8-18	1577-1582	under	_	_	
8-19	1583-1584	`	_	_	
8-20	1584-1585	$	_	_	
8-21	1585-1597	PROJECT_ROOT	_	_	
8-22	1597-1598	/	_	_	
8-23	1598-1602	data	_	_	
8-24	1602-1603	`	_	_	
8-25	1604-1613	directory	_	_	
8-26	1613-1614	,	_	_	
8-27	1615-1618	for	_	_	
8-28	1619-1626	default	_	_	
8-29	1627-1636	arguments	_	_	
8-30	1637-1639	to	_	_	
8-31	1640-1644	work	_	_	
8-32	1645-1656	effectively	_	_	
8-33	1656-1657	.	_	_	
8-34	1659-1660	2	_	_	
8-35	1660-1661	.	_	_	

#Text=Get the word counts for VisDial v1.0 train split [here][4].
9-1	1662-1665	Get	_	_	
9-2	1666-1669	the	_	_	
9-3	1670-1674	word	_	_	
9-4	1675-1681	counts	_	_	
9-5	1682-1685	for	_	_	
9-6	1686-1693	VisDial	*[13]	DATASET[13]	
9-7	1694-1698	v1.0	*[13]	DATASET[13]	
9-8	1699-1704	train	_	_	
9-9	1705-1710	split	_	_	
9-10	1711-1712	[	_	_	
9-11	1712-1716	here	_	_	
9-12	1716-1717	]	_	_	
9-13	1717-1718	[	_	_	
9-14	1718-1719	4	_	_	
9-15	1719-1720	]	_	_	
9-16	1720-1721	.	_	_	

#Text=They are used to build the vocabulary.
#Text=
#Text=3.
10-1	1722-1726	They	_	_	
10-2	1727-1730	are	_	_	
10-3	1731-1735	used	_	_	
10-4	1736-1738	to	_	_	
10-5	1739-1744	build	_	_	
10-6	1745-1748	the	_	_	
10-7	1749-1759	vocabulary	_	_	
10-8	1759-1760	.	_	_	
10-9	1762-1763	3	_	_	
10-10	1763-1764	.	_	_	

#Text=[batra-mlp-lab][6] provides pre-extracted image features of VisDial v1.0 images, using a Faster-RCNN pre-trained on Visual Genome.
11-1	1765-1766	[	_	_	
11-2	1766-1779	batra-mlp-lab	_	_	
11-3	1779-1780	]	_	_	
11-4	1780-1781	[	_	_	
11-5	1781-1782	6	_	_	
11-6	1782-1783	]	_	_	
11-7	1784-1792	provides	_	_	
11-8	1793-1806	pre-extracted	_	_	
11-9	1807-1812	image	_	_	
11-10	1813-1821	features	_	_	
11-11	1822-1824	of	_	_	
11-12	1825-1832	VisDial	*[14]	DATASET[14]	
11-13	1833-1837	v1.0	*[14]	DATASET[14]	
11-14	1838-1844	images	_	_	
11-15	1844-1845	,	_	_	
11-16	1846-1851	using	_	_	
11-17	1852-1853	a	_	_	
11-18	1854-1865	Faster-RCNN	_	_	
11-19	1866-1877	pre-trained	_	_	
11-20	1878-1880	on	_	_	
11-21	1881-1887	Visual	*[15]	DATASET[15]	
11-22	1888-1894	Genome	*[15]	DATASET[15]	
11-23	1894-1895	.	_	_	

#Text=If you wish to extract your own image features, skip this step and download VisDial v1.0 images from [here][3] instead.
12-1	1896-1898	If	_	_	
12-2	1899-1902	you	_	_	
12-3	1903-1907	wish	_	_	
12-4	1908-1910	to	_	_	
12-5	1911-1918	extract	_	_	
12-6	1919-1923	your	_	_	
12-7	1924-1927	own	_	_	
12-8	1928-1933	image	_	_	
12-9	1934-1942	features	_	_	
12-10	1942-1943	,	_	_	
12-11	1944-1948	skip	_	_	
12-12	1949-1953	this	_	_	
12-13	1954-1958	step	_	_	
12-14	1959-1962	and	_	_	
12-15	1963-1971	download	_	_	
12-16	1972-1979	VisDial	*[16]	DATASET[16]	
12-17	1980-1984	v1.0	*[16]	DATASET[16]	
12-18	1985-1991	images	_	_	
12-19	1992-1996	from	_	_	
12-20	1997-1998	[	_	_	
12-21	1998-2002	here	_	_	
12-22	2002-2003	]	_	_	
12-23	2003-2004	[	_	_	
12-24	2004-2005	3	_	_	
12-25	2005-2006	]	_	_	
12-26	2007-2014	instead	_	_	
12-27	2014-2015	.	_	_	

#Text=Extracted features for v1.0 train, val and test are available for download at these links.
13-1	2016-2025	Extracted	_	_	
13-2	2026-2034	features	_	_	
13-3	2035-2038	for	_	_	
13-4	2039-2043	v1.0	_	_	
13-5	2044-2049	train	_	_	
13-6	2049-2050	,	_	_	
13-7	2051-2054	val	_	_	
13-8	2055-2058	and	_	_	
13-9	2059-2063	test	_	_	
13-10	2064-2067	are	_	_	
13-11	2068-2077	available	_	_	
13-12	2078-2081	for	_	_	
13-13	2082-2090	download	_	_	
13-14	2091-2093	at	_	_	
13-15	2094-2099	these	_	_	
13-16	2100-2105	links	_	_	
13-17	2105-2106	.	_	_	

#Text=Note that these files do not contain the bounding box information
14-1	2107-2111	Note	_	_	
14-2	2112-2116	that	_	_	
14-3	2117-2122	these	_	_	
14-4	2123-2128	files	_	_	
14-5	2129-2131	do	_	_	
14-6	2132-2135	not	_	_	
14-7	2136-2143	contain	_	_	
14-8	2144-2147	the	_	_	
14-9	2148-2156	bounding	_	_	
14-10	2157-2160	box	_	_	
14-11	2161-2172	information	_	_	

#Text=.
15-1	2172-2173	.	_	_	

#Text=* [`features_faster_rcnn_x101_train.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_faster_rcnn_x101_train.h5): Bottom-up features of 36 proposals from images of `train` split
16-1	2177-2178	*	_	_	
16-2	2179-2180	[	_	_	
16-3	2180-2181	`	_	_	
16-4	2181-2206	features_faster_rcnn_x101	_	_	
16-5	2206-2207	_	_	_	
16-6	2207-2215	train.h5	_	_	
16-7	2215-2216	`	_	_	
16-8	2216-2217	]	_	_	
16-9	2217-2218	(	_	_	
16-10	2218-2223	https	_	_	
16-11	2223-2224	:	_	_	
16-12	2224-2225	/	_	_	
16-13	2225-2226	/	_	_	
16-14	2226-2228	s3	_	_	
16-15	2228-2229	.	_	_	
16-16	2229-2242	amazonaws.com	_	_	
16-17	2242-2243	/	_	_	
16-18	2243-2256	visual-dialog	_	_	
16-19	2256-2257	/	_	_	
16-20	2257-2261	data	_	_	
16-21	2261-2262	/	_	_	
16-22	2262-2266	v1.0	_	_	
16-23	2266-2267	/	_	_	
16-24	2267-2271	2019	_	_	
16-25	2271-2272	/	_	_	
16-26	2272-2297	features_faster_rcnn_x101	_	_	
16-27	2297-2298	_	_	_	
16-28	2298-2306	train.h5	_	_	
16-29	2306-2307	)	_	_	
16-30	2307-2308	:	_	_	
16-31	2309-2318	Bottom-up	_	_	
16-32	2319-2327	features	_	_	
16-33	2328-2330	of	_	_	
16-34	2331-2333	36	_	_	
16-35	2334-2343	proposals	_	_	
16-36	2344-2348	from	_	_	
16-37	2349-2355	images	_	_	
16-38	2356-2358	of	_	_	
16-39	2359-2360	`	_	_	
16-40	2360-2365	train	_	_	
16-41	2365-2366	`	_	_	
16-42	2367-2372	split	_	_	

#Text=.
17-1	2372-2373	.	_	_	

#Text=* [`features_faster_rcnn_x101_val.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_faster_rcnn_x101_val.h5): Bottom-up features of 36 proposals from images of `val` split
18-1	2376-2377	*	_	_	
18-2	2378-2379	[	_	_	
18-3	2379-2380	`	_	_	
18-4	2380-2405	features_faster_rcnn_x101	_	_	
18-5	2405-2406	_	_	_	
18-6	2406-2412	val.h5	_	_	
18-7	2412-2413	`	_	_	
18-8	2413-2414	]	_	_	
18-9	2414-2415	(	_	_	
18-10	2415-2420	https	_	_	
18-11	2420-2421	:	_	_	
18-12	2421-2422	/	_	_	
18-13	2422-2423	/	_	_	
18-14	2423-2425	s3	_	_	
18-15	2425-2426	.	_	_	
18-16	2426-2439	amazonaws.com	_	_	
18-17	2439-2440	/	_	_	
18-18	2440-2453	visual-dialog	_	_	
18-19	2453-2454	/	_	_	
18-20	2454-2458	data	_	_	
18-21	2458-2459	/	_	_	
18-22	2459-2463	v1.0	_	_	
18-23	2463-2464	/	_	_	
18-24	2464-2468	2019	_	_	
18-25	2468-2469	/	_	_	
18-26	2469-2494	features_faster_rcnn_x101	_	_	
18-27	2494-2495	_	_	_	
18-28	2495-2501	val.h5	_	_	
18-29	2501-2502	)	_	_	
18-30	2502-2503	:	_	_	
18-31	2504-2513	Bottom-up	_	_	
18-32	2514-2522	features	_	_	
18-33	2523-2525	of	_	_	
18-34	2526-2528	36	_	_	
18-35	2529-2538	proposals	_	_	
18-36	2539-2543	from	_	_	
18-37	2544-2550	images	_	_	
18-38	2551-2553	of	_	_	
18-39	2554-2555	`	_	_	
18-40	2555-2558	val	_	_	
18-41	2558-2559	`	_	_	
18-42	2560-2565	split	_	_	

#Text=.
19-1	2565-2566	.	_	_	

#Text=* [`features_faster_rcnn_x101_test.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_faster_rcnn_x101_test.h5): Bottom-up features of 36 proposals from images of `test` split.
#Text=
#Text=4.
20-1	2569-2570	*	_	_	
20-2	2571-2572	[	_	_	
20-3	2572-2573	`	_	_	
20-4	2573-2598	features_faster_rcnn_x101	_	_	
20-5	2598-2599	_	_	_	
20-6	2599-2606	test.h5	_	_	
20-7	2606-2607	`	_	_	
20-8	2607-2608	]	_	_	
20-9	2608-2609	(	_	_	
20-10	2609-2614	https	_	_	
20-11	2614-2615	:	_	_	
20-12	2615-2616	/	_	_	
20-13	2616-2617	/	_	_	
20-14	2617-2619	s3	_	_	
20-15	2619-2620	.	_	_	
20-16	2620-2633	amazonaws.com	_	_	
20-17	2633-2634	/	_	_	
20-18	2634-2647	visual-dialog	_	_	
20-19	2647-2648	/	_	_	
20-20	2648-2652	data	_	_	
20-21	2652-2653	/	_	_	
20-22	2653-2657	v1.0	_	_	
20-23	2657-2658	/	_	_	
20-24	2658-2662	2019	_	_	
20-25	2662-2663	/	_	_	
20-26	2663-2688	features_faster_rcnn_x101	_	_	
20-27	2688-2689	_	_	_	
20-28	2689-2696	test.h5	_	_	
20-29	2696-2697	)	_	_	
20-30	2697-2698	:	_	_	
20-31	2699-2708	Bottom-up	_	_	
20-32	2709-2717	features	_	_	
20-33	2718-2720	of	_	_	
20-34	2721-2723	36	_	_	
20-35	2724-2733	proposals	_	_	
20-36	2734-2738	from	_	_	
20-37	2739-2745	images	_	_	
20-38	2746-2748	of	_	_	
20-39	2749-2750	`	_	_	
20-40	2750-2754	test	_	_	
20-41	2754-2755	`	_	_	
20-42	2756-2761	split	_	_	
20-43	2761-2762	.	_	_	
20-44	2764-2765	4	_	_	
20-45	2765-2766	.	_	_	

#Text=[batra-mlp-lab][6] also provides pre-extracted FC7 features from VGG16
21-1	2767-2768	[	_	_	
21-2	2768-2781	batra-mlp-lab	_	_	
21-3	2781-2782	]	_	_	
21-4	2782-2783	[	_	_	
21-5	2783-2784	6	_	_	
21-6	2784-2785	]	_	_	
21-7	2786-2790	also	_	_	
21-8	2791-2799	provides	_	_	
21-9	2800-2813	pre-extracted	_	_	
21-10	2814-2817	FC7	_	_	
21-11	2818-2826	features	_	_	
21-12	2827-2831	from	_	_	
21-13	2832-2837	VGG16	_	_	

#Text=.
22-1	2837-2838	.	_	_	

#Text=* [`features_vgg16_fc7_train.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_vgg16_fc7_train.h5): VGG16 FC7 features from images of `train` split
23-1	2842-2843	*	_	_	
23-2	2844-2845	[	_	_	
23-3	2845-2846	`	_	_	
23-4	2846-2860	features_vgg16	_	_	
23-5	2860-2861	_	_	_	
23-6	2861-2864	fc7	_	_	
23-7	2864-2865	_	_	_	
23-8	2865-2873	train.h5	_	_	
23-9	2873-2874	`	_	_	
23-10	2874-2875	]	_	_	
23-11	2875-2876	(	_	_	
23-12	2876-2881	https	_	_	
23-13	2881-2882	:	_	_	
23-14	2882-2883	/	_	_	
23-15	2883-2884	/	_	_	
23-16	2884-2886	s3	_	_	
23-17	2886-2887	.	_	_	
23-18	2887-2900	amazonaws.com	_	_	
23-19	2900-2901	/	_	_	
23-20	2901-2914	visual-dialog	_	_	
23-21	2914-2915	/	_	_	
23-22	2915-2919	data	_	_	
23-23	2919-2920	/	_	_	
23-24	2920-2924	v1.0	_	_	
23-25	2924-2925	/	_	_	
23-26	2925-2929	2019	_	_	
23-27	2929-2930	/	_	_	
23-28	2930-2944	features_vgg16	_	_	
23-29	2944-2945	_	_	_	
23-30	2945-2948	fc7	_	_	
23-31	2948-2949	_	_	_	
23-32	2949-2957	train.h5	_	_	
23-33	2957-2958	)	_	_	
23-34	2958-2959	:	_	_	
23-35	2960-2965	VGG16	_	_	
23-36	2966-2969	FC7	_	_	
23-37	2970-2978	features	_	_	
23-38	2979-2983	from	_	_	
23-39	2984-2990	images	_	_	
23-40	2991-2993	of	_	_	
23-41	2994-2995	`	_	_	
23-42	2995-3000	train	_	_	
23-43	3000-3001	`	_	_	
23-44	3002-3007	split	_	_	

#Text=.
24-1	3007-3008	.	_	_	

#Text=* [`features_vgg16_fc7_val.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_vgg16_fc7_val.h5): VGG16 FC7 features from images of `val` split
25-1	3011-3012	*	_	_	
25-2	3013-3014	[	_	_	
25-3	3014-3015	`	_	_	
25-4	3015-3029	features_vgg16	_	_	
25-5	3029-3030	_	_	_	
25-6	3030-3033	fc7	_	_	
25-7	3033-3034	_	_	_	
25-8	3034-3040	val.h5	_	_	
25-9	3040-3041	`	_	_	
25-10	3041-3042	]	_	_	
25-11	3042-3043	(	_	_	
25-12	3043-3048	https	_	_	
25-13	3048-3049	:	_	_	
25-14	3049-3050	/	_	_	
25-15	3050-3051	/	_	_	
25-16	3051-3053	s3	_	_	
25-17	3053-3054	.	_	_	
25-18	3054-3067	amazonaws.com	_	_	
25-19	3067-3068	/	_	_	
25-20	3068-3081	visual-dialog	_	_	
25-21	3081-3082	/	_	_	
25-22	3082-3086	data	_	_	
25-23	3086-3087	/	_	_	
25-24	3087-3091	v1.0	_	_	
25-25	3091-3092	/	_	_	
25-26	3092-3096	2019	_	_	
25-27	3096-3097	/	_	_	
25-28	3097-3111	features_vgg16	_	_	
25-29	3111-3112	_	_	_	
25-30	3112-3115	fc7	_	_	
25-31	3115-3116	_	_	_	
25-32	3116-3122	val.h5	_	_	
25-33	3122-3123	)	_	_	
25-34	3123-3124	:	_	_	
25-35	3125-3130	VGG16	_	_	
25-36	3131-3134	FC7	_	_	
25-37	3135-3143	features	_	_	
25-38	3144-3148	from	_	_	
25-39	3149-3155	images	_	_	
25-40	3156-3158	of	_	_	
25-41	3159-3160	`	_	_	
25-42	3160-3163	val	_	_	
25-43	3163-3164	`	_	_	
25-44	3165-3170	split	_	_	

#Text=.
26-1	3170-3171	.	_	_	

#Text=* [`features_vgg16_fc7_test.h5`](https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/features_vgg16_fc7_test.h5): VGG16 FC7 features from images of `test` split.
#Text=
#Text=5.
27-1	3174-3175	*	_	_	
27-2	3176-3177	[	_	_	
27-3	3177-3178	`	_	_	
27-4	3178-3192	features_vgg16	_	_	
27-5	3192-3193	_	_	_	
27-6	3193-3196	fc7	_	_	
27-7	3196-3197	_	_	_	
27-8	3197-3204	test.h5	_	_	
27-9	3204-3205	`	_	_	
27-10	3205-3206	]	_	_	
27-11	3206-3207	(	_	_	
27-12	3207-3212	https	_	_	
27-13	3212-3213	:	_	_	
27-14	3213-3214	/	_	_	
27-15	3214-3215	/	_	_	
27-16	3215-3217	s3	_	_	
27-17	3217-3218	.	_	_	
27-18	3218-3231	amazonaws.com	_	_	
27-19	3231-3232	/	_	_	
27-20	3232-3245	visual-dialog	_	_	
27-21	3245-3246	/	_	_	
27-22	3246-3250	data	_	_	
27-23	3250-3251	/	_	_	
27-24	3251-3255	v1.0	_	_	
27-25	3255-3256	/	_	_	
27-26	3256-3260	2019	_	_	
27-27	3260-3261	/	_	_	
27-28	3261-3275	features_vgg16	_	_	
27-29	3275-3276	_	_	_	
27-30	3276-3279	fc7	_	_	
27-31	3279-3280	_	_	_	
27-32	3280-3287	test.h5	_	_	
27-33	3287-3288	)	_	_	
27-34	3288-3289	:	_	_	
27-35	3290-3295	VGG16	_	_	
27-36	3296-3299	FC7	_	_	
27-37	3300-3308	features	_	_	
27-38	3309-3313	from	_	_	
27-39	3314-3320	images	_	_	
27-40	3321-3323	of	_	_	
27-41	3324-3325	`	_	_	
27-42	3325-3329	test	_	_	
27-43	3329-3330	`	_	_	
27-44	3331-3336	split	_	_	
27-45	3336-3337	.	_	_	
27-46	3339-3340	5	_	_	
27-47	3340-3341	.	_	_	

#Text=Download the GloVe pretrained word vectors from [here][12], and keep `glove.6B.300d.txt` under `$PROJECT_ROOT/data` directory.
28-1	3342-3350	Download	_	_	
28-2	3351-3354	the	_	_	
28-3	3355-3360	GloVe	_	_	
28-4	3361-3371	pretrained	_	_	
28-5	3372-3376	word	_	_	
28-6	3377-3384	vectors	_	_	
28-7	3385-3389	from	_	_	
28-8	3390-3391	[	_	_	
28-9	3391-3395	here	_	_	
28-10	3395-3396	]	_	_	
28-11	3396-3397	[	_	_	
28-12	3397-3399	12	_	_	
28-13	3399-3400	]	_	_	
28-14	3400-3401	,	_	_	
28-15	3402-3405	and	_	_	
28-16	3406-3410	keep	_	_	
28-17	3411-3412	`	_	_	
28-18	3412-3417	glove	_	_	
28-19	3417-3420	.6B	_	_	
28-20	3420-3429	.300d.txt	_	_	
28-21	3429-3430	`	_	_	
28-22	3431-3436	under	_	_	
28-23	3437-3438	`	_	_	
28-24	3438-3439	$	_	_	
28-25	3439-3451	PROJECT_ROOT	_	_	
28-26	3451-3452	/	_	_	
28-27	3452-3456	data	_	_	
28-28	3456-3457	`	_	_	
28-29	3458-3467	directory	_	_	
28-30	3467-3468	.	_	_	

#Text=Extracting Features (Optional)
#Text=-------------
#Text=
#Text=### With Docker (Optional)
#Text=For Dockerfile, please refer to [batra-mlp-lab/visdial-challenge-starter-pytorch][8].
#Text=
#Text=### Without Docker (Optional)
#Text=
#Text=0.
29-1	3470-3480	Extracting	_	_	
29-2	3481-3489	Features	_	_	
29-3	3490-3491	(	_	_	
29-4	3491-3499	Optional	_	_	
29-5	3499-3500	)	_	_	
29-6	3501-3502	-	_	_	
29-7	3502-3503	-	_	_	
29-8	3503-3504	-	_	_	
29-9	3504-3505	-	_	_	
29-10	3505-3506	-	_	_	
29-11	3506-3507	-	_	_	
29-12	3507-3508	-	_	_	
29-13	3508-3509	-	_	_	
29-14	3509-3510	-	_	_	
29-15	3510-3511	-	_	_	
29-16	3511-3512	-	_	_	
29-17	3512-3513	-	_	_	
29-18	3513-3514	-	_	_	
29-19	3516-3517	#	_	_	
29-20	3517-3518	#	_	_	
29-21	3518-3519	#	_	_	
29-22	3520-3524	With	_	_	
29-23	3525-3531	Docker	*	SOFTWARE	
29-24	3532-3533	(	_	_	
29-25	3533-3541	Optional	_	_	
29-26	3541-3542	)	_	_	
29-27	3543-3546	For	_	_	
29-28	3547-3557	Dockerfile	_	_	
29-29	3557-3558	,	_	_	
29-30	3559-3565	please	_	_	
29-31	3566-3571	refer	_	_	
29-32	3572-3574	to	_	_	
29-33	3575-3576	[	_	_	
29-34	3576-3589	batra-mlp-lab	_	_	
29-35	3589-3590	/	_	_	
29-36	3590-3623	visdial-challenge-starter-pytorch	_	_	
29-36.1	3616-3623	pytorch	*	SOFTWARE	
29-37	3623-3624	]	_	_	
29-38	3624-3625	[	_	_	
29-39	3625-3626	8	_	_	
29-40	3626-3627	]	_	_	
29-41	3627-3628	.	_	_	
29-42	3630-3631	#	_	_	
29-43	3631-3632	#	_	_	
29-44	3632-3633	#	_	_	
29-45	3634-3641	Without	_	_	
29-46	3642-3648	Docker	*	SOFTWARE	
29-47	3649-3650	(	_	_	
29-48	3650-3658	Optional	_	_	
29-49	3658-3659	)	_	_	
29-50	3661-3662	0	_	_	
29-51	3662-3663	.	_	_	

#Text=Set up opencv, [cocoapi][9] and [Detectron][10].
#Text=
#Text=1.
30-1	3664-3667	Set	_	_	
30-2	3668-3670	up	_	_	
30-3	3671-3677	opencv	*	SOFTWARE	
30-4	3677-3678	,	_	_	
30-5	3679-3680	[	_	_	
30-6	3680-3687	cocoapi	*	SOFTWARE	
30-7	3687-3688	]	_	_	
30-8	3688-3689	[	_	_	
30-9	3689-3690	9	_	_	
30-10	3690-3691	]	_	_	
30-11	3692-3695	and	_	_	
30-12	3696-3697	[	_	_	
30-13	3697-3706	Detectron	*	SOFTWARE	
30-14	3706-3707	]	_	_	
30-15	3707-3708	[	_	_	
30-16	3708-3710	10	_	_	
30-17	3710-3711	]	_	_	
30-18	3711-3712	.	_	_	
30-19	3714-3715	1	_	_	
30-20	3715-3716	.	_	_	

#Text=Prepare the [MSCOCO][11] and [Flickr][3] images.
#Text=
#Text=2.
31-1	3717-3724	Prepare	_	_	
31-2	3725-3728	the	_	_	
31-3	3729-3730	[	_	_	
31-4	3730-3736	MSCOCO	*	DATASET	
31-5	3736-3737	]	_	_	
31-6	3737-3738	[	_	_	
31-7	3738-3740	11	_	_	
31-8	3740-3741	]	_	_	
31-9	3742-3745	and	_	_	
31-10	3746-3747	[	_	_	
31-11	3747-3753	Flickr	*	DATASET	
31-12	3753-3754	]	_	_	
31-13	3754-3755	[	_	_	
31-14	3755-3756	3	_	_	
31-15	3756-3757	]	_	_	
31-16	3758-3764	images	_	_	
31-17	3764-3765	.	_	_	
31-18	3767-3768	2	_	_	
31-19	3768-3769	.	_	_	

#Text=Extract visual features.
32-1	3770-3777	Extract	_	_	
32-2	3778-3784	visual	_	_	
32-3	3785-3793	features	_	_	
32-4	3793-3794	.	_	_	

#Text=```shell
#Text=python .
33-1	3795-3796	`	_	_	
33-2	3796-3797	`	_	_	
33-3	3797-3798	`	_	_	
33-4	3798-3803	shell	*	PROGLANG	
33-5	3804-3810	python	*	SOFTWARE	
33-6	3811-3812	.	_	_	

#Text=/data/extract_features_detectron.py --image-root /path/to/MSCOCO/train2014/ /path/to/MSCOCO/val2014/ --save-path /path/to/feature --split train # Bottom-up features of 36 proposals from images of train split.
#Text=python .
34-1	3812-3813	/	_	_	
34-2	3813-3817	data	_	_	
34-3	3817-3818	/	_	_	
34-4	3818-3847	extract_features_detectron.py	_	_	
34-5	3848-3849	-	_	_	
34-6	3849-3850	-	_	_	
34-7	3850-3860	image-root	_	_	
34-8	3861-3862	/	_	_	
34-9	3862-3866	path	_	_	
34-10	3866-3867	/	_	_	
34-11	3867-3869	to	_	_	
34-12	3869-3870	/	_	_	
34-13	3870-3876	MSCOCO	*	DATASET	
34-14	3876-3877	/	_	_	
34-15	3877-3886	train2014	_	_	
34-16	3886-3887	/	_	_	
34-17	3888-3889	/	_	_	
34-18	3889-3893	path	_	_	
34-19	3893-3894	/	_	_	
34-20	3894-3896	to	_	_	
34-21	3896-3897	/	_	_	
34-22	3897-3903	MSCOCO	*	DATASET	
34-23	3903-3904	/	_	_	
34-24	3904-3911	val2014	_	_	
34-25	3911-3912	/	_	_	
34-26	3913-3914	-	_	_	
34-27	3914-3915	-	_	_	
34-28	3915-3924	save-path	_	_	
34-29	3925-3926	/	_	_	
34-30	3926-3930	path	_	_	
34-31	3930-3931	/	_	_	
34-32	3931-3933	to	_	_	
34-33	3933-3934	/	_	_	
34-34	3934-3941	feature	_	_	
34-35	3942-3943	-	_	_	
34-36	3943-3944	-	_	_	
34-37	3944-3949	split	_	_	
34-38	3950-3955	train	_	_	
34-39	3956-3957	#	_	_	
34-40	3958-3967	Bottom-up	_	_	
34-41	3968-3976	features	_	_	
34-42	3977-3979	of	_	_	
34-43	3980-3982	36	_	_	
34-44	3983-3992	proposals	_	_	
34-45	3993-3997	from	_	_	
34-46	3998-4004	images	_	_	
34-47	4005-4007	of	_	_	
34-48	4008-4013	train	_	_	
34-49	4014-4019	split	_	_	
34-50	4019-4020	.	_	_	
34-51	4021-4027	python	*	SOFTWARE	
34-52	4028-4029	.	_	_	

#Text=/data/extract_features_detectron.py --image-root /path/to/Flickr/VisualDialog_val2018 --save-path /path/to/feature --split val # Bottom-up features of 36 proposals from images of val split.
#Text=python .
35-1	4029-4030	/	_	_	
35-2	4030-4034	data	_	_	
35-3	4034-4035	/	_	_	
35-4	4035-4064	extract_features_detectron.py	_	_	
35-5	4065-4066	-	_	_	
35-6	4066-4067	-	_	_	
35-7	4067-4077	image-root	_	_	
35-8	4078-4079	/	_	_	
35-9	4079-4083	path	_	_	
35-10	4083-4084	/	_	_	
35-11	4084-4086	to	_	_	
35-12	4086-4087	/	_	_	
35-13	4087-4093	Flickr	*	DATASET	
35-14	4093-4094	/	_	_	
35-15	4094-4114	VisualDialog_val2018	_	_	
35-16	4115-4116	-	_	_	
35-17	4116-4117	-	_	_	
35-18	4117-4126	save-path	_	_	
35-19	4127-4128	/	_	_	
35-20	4128-4132	path	_	_	
35-21	4132-4133	/	_	_	
35-22	4133-4135	to	_	_	
35-23	4135-4136	/	_	_	
35-24	4136-4143	feature	_	_	
35-25	4144-4145	-	_	_	
35-26	4145-4146	-	_	_	
35-27	4146-4151	split	_	_	
35-28	4152-4155	val	_	_	
35-29	4156-4157	#	_	_	
35-30	4158-4167	Bottom-up	_	_	
35-31	4168-4176	features	_	_	
35-32	4177-4179	of	_	_	
35-33	4180-4182	36	_	_	
35-34	4183-4192	proposals	_	_	
35-35	4193-4197	from	_	_	
35-36	4198-4204	images	_	_	
35-37	4205-4207	of	_	_	
35-38	4208-4211	val	_	_	
35-39	4212-4217	split	_	_	
35-40	4217-4218	.	_	_	
35-41	4219-4225	python	*	SOFTWARE	
35-42	4226-4227	.	_	_	

#Text=/data/extract_features_detectron.py --image-root /path/to/Flickr/VisualDialog_test2018 --save-path /path/to/feature --split test # Bottom-up features of 36 proposals from images of test split.
#Text=```
#Text=
#Text=Initializing GloVe Word Embeddings
#Text=--------------
#Text=Simply run 
#Text=```shell
#Text=python data/init_glove.py
#Text=```
#Text=
#Text=
#Text=Training
#Text=--------
#Text=
#Text=Train the model provided in this repository as:
#Text=
#Text=```shell
#Text=python train.py --config-yml configs/rva.yml --gpu-ids 0 # provide more ids for multi-GPU execution other args...
#Text=```
#Text=
#Text=### Saving model checkpoints
#Text=
#Text=This script will save model checkpoints at every epoch as per path specified by `--save-dirpath`.
36-1	4227-4228	/	_	_	
36-2	4228-4232	data	_	_	
36-3	4232-4233	/	_	_	
36-4	4233-4262	extract_features_detectron.py	_	_	
36-5	4263-4264	-	_	_	
36-6	4264-4265	-	_	_	
36-7	4265-4275	image-root	_	_	
36-8	4276-4277	/	_	_	
36-9	4277-4281	path	_	_	
36-10	4281-4282	/	_	_	
36-11	4282-4284	to	_	_	
36-12	4284-4285	/	_	_	
36-13	4285-4291	Flickr	*	DATASET	
36-14	4291-4292	/	_	_	
36-15	4292-4313	VisualDialog_test2018	_	_	
36-16	4314-4315	-	_	_	
36-17	4315-4316	-	_	_	
36-18	4316-4325	save-path	_	_	
36-19	4326-4327	/	_	_	
36-20	4327-4331	path	_	_	
36-21	4331-4332	/	_	_	
36-22	4332-4334	to	_	_	
36-23	4334-4335	/	_	_	
36-24	4335-4342	feature	_	_	
36-25	4343-4344	-	_	_	
36-26	4344-4345	-	_	_	
36-27	4345-4350	split	_	_	
36-28	4351-4355	test	_	_	
36-29	4356-4357	#	_	_	
36-30	4358-4367	Bottom-up	_	_	
36-31	4368-4376	features	_	_	
36-32	4377-4379	of	_	_	
36-33	4380-4382	36	_	_	
36-34	4383-4392	proposals	_	_	
36-35	4393-4397	from	_	_	
36-36	4398-4404	images	_	_	
36-37	4405-4407	of	_	_	
36-38	4408-4412	test	_	_	
36-39	4413-4418	split	_	_	
36-40	4418-4419	.	_	_	
36-41	4420-4421	`	_	_	
36-42	4421-4422	`	_	_	
36-43	4422-4423	`	_	_	
36-44	4425-4437	Initializing	_	_	
36-45	4438-4443	GloVe	_	_	
36-46	4444-4448	Word	_	_	
36-47	4449-4459	Embeddings	_	_	
36-48	4460-4461	-	_	_	
36-49	4461-4462	-	_	_	
36-50	4462-4463	-	_	_	
36-51	4463-4464	-	_	_	
36-52	4464-4465	-	_	_	
36-53	4465-4466	-	_	_	
36-54	4466-4467	-	_	_	
36-55	4467-4468	-	_	_	
36-56	4468-4469	-	_	_	
36-57	4469-4470	-	_	_	
36-58	4470-4471	-	_	_	
36-59	4471-4472	-	_	_	
36-60	4472-4473	-	_	_	
36-61	4473-4474	-	_	_	
36-62	4475-4481	Simply	_	_	
36-63	4482-4485	run	_	_	
36-64	4487-4488	`	_	_	
36-65	4488-4489	`	_	_	
36-66	4489-4490	`	_	_	
36-67	4490-4495	shell	*	SOFTWARE	
36-68	4496-4502	python	*	SOFTWARE	
36-69	4503-4507	data	_	_	
36-70	4507-4508	/	_	_	
36-71	4508-4521	init_glove.py	_	_	
36-72	4522-4523	`	_	_	
36-73	4523-4524	`	_	_	
36-74	4524-4525	`	_	_	
36-75	4528-4536	Training	_	_	
36-76	4537-4538	-	_	_	
36-77	4538-4539	-	_	_	
36-78	4539-4540	-	_	_	
36-79	4540-4541	-	_	_	
36-80	4541-4542	-	_	_	
36-81	4542-4543	-	_	_	
36-82	4543-4544	-	_	_	
36-83	4544-4545	-	_	_	
36-84	4547-4552	Train	_	_	
36-85	4553-4556	the	_	_	
36-86	4557-4562	model	_	_	
36-87	4563-4571	provided	_	_	
36-88	4572-4574	in	_	_	
36-89	4575-4579	this	_	_	
36-90	4580-4590	repository	_	_	
36-91	4591-4593	as	_	_	
36-92	4593-4594	:	_	_	
36-93	4596-4597	`	_	_	
36-94	4597-4598	`	_	_	
36-95	4598-4599	`	_	_	
36-96	4599-4604	shell	*	PROGLANG	
36-97	4605-4611	python	*	SOFTWARE	
36-98	4612-4620	train.py	_	_	
36-99	4621-4622	-	_	_	
36-100	4622-4623	-	_	_	
36-101	4623-4633	config-yml	_	_	
36-102	4634-4641	configs	_	_	
36-103	4641-4642	/	_	_	
36-104	4642-4649	rva.yml	_	_	
36-105	4650-4651	-	_	_	
36-106	4651-4652	-	_	_	
36-107	4652-4659	gpu-ids	_	_	
36-108	4660-4661	0	_	_	
36-109	4662-4663	#	_	_	
36-110	4664-4671	provide	_	_	
36-111	4672-4676	more	_	_	
36-112	4677-4680	ids	_	_	
36-113	4681-4684	for	_	_	
36-114	4685-4694	multi-GPU	_	_	
36-115	4695-4704	execution	_	_	
36-116	4705-4710	other	_	_	
36-117	4711-4715	args	_	_	
36-118	4715-4716	.	_	_	
36-119	4716-4717	.	_	_	
36-120	4717-4718	.	_	_	
36-121	4719-4720	`	_	_	
36-122	4720-4721	`	_	_	
36-123	4721-4722	`	_	_	
36-124	4724-4725	#	_	_	
36-125	4725-4726	#	_	_	
36-126	4726-4727	#	_	_	
36-127	4728-4734	Saving	_	_	
36-128	4735-4740	model	_	_	
36-129	4741-4752	checkpoints	_	_	
36-130	4754-4758	This	_	_	
36-131	4759-4765	script	_	_	
36-132	4766-4770	will	_	_	
36-133	4771-4775	save	_	_	
36-134	4776-4781	model	_	_	
36-135	4782-4793	checkpoints	_	_	
36-136	4794-4796	at	_	_	
36-137	4797-4802	every	_	_	
36-138	4803-4808	epoch	_	_	
36-139	4809-4811	as	_	_	
36-140	4812-4815	per	_	_	
36-141	4816-4820	path	_	_	
36-142	4821-4830	specified	_	_	
36-143	4831-4833	by	_	_	
36-144	4834-4835	`	_	_	
36-145	4835-4836	-	_	_	
36-146	4836-4837	-	_	_	
36-147	4837-4849	save-dirpath	_	_	
36-148	4849-4850	`	_	_	
36-149	4850-4851	.	_	_	

#Text=Refer [visdialch/utils/checkpointing.py][7] for more details on how checkpointing is managed.
#Text=
#Text=### Logging
#Text=
#Text=We use [Tensorboard][2] for logging training progress.
37-1	4852-4857	Refer	_	_	
37-2	4858-4859	[	_	_	
37-3	4859-4868	visdialch	_	_	
37-4	4868-4869	/	_	_	
37-5	4869-4874	utils	_	_	
37-6	4874-4875	/	_	_	
37-7	4875-4891	checkpointing.py	_	_	
37-8	4891-4892	]	_	_	
37-9	4892-4893	[	_	_	
37-10	4893-4894	7	_	_	
37-11	4894-4895	]	_	_	
37-12	4896-4899	for	_	_	
37-13	4900-4904	more	_	_	
37-14	4905-4912	details	_	_	
37-15	4913-4915	on	_	_	
37-16	4916-4919	how	_	_	
37-17	4920-4933	checkpointing	_	_	
37-18	4934-4936	is	_	_	
37-19	4937-4944	managed	_	_	
37-20	4944-4945	.	_	_	
37-21	4947-4948	#	_	_	
37-22	4948-4949	#	_	_	
37-23	4949-4950	#	_	_	
37-24	4951-4958	Logging	_	_	
37-25	4960-4962	We	_	_	
37-26	4963-4966	use	_	_	
37-27	4967-4968	[	_	_	
37-28	4968-4979	Tensorboard	*	SOFTWARE	
37-29	4979-4980	]	_	_	
37-30	4980-4981	[	_	_	
37-31	4981-4982	2	_	_	
37-32	4982-4983	]	_	_	
37-33	4984-4987	for	_	_	
37-34	4988-4995	logging	_	_	
37-35	4996-5004	training	_	_	
37-36	5005-5013	progress	_	_	
37-37	5013-5014	.	_	_	

#Text=Recommended: execute `tensorboard --logdir /path/to/save_dir --port 8008` and visit `localhost:8008` in the browser.
38-1	5015-5026	Recommended	_	_	
38-2	5026-5027	:	_	_	
38-3	5028-5035	execute	_	_	
38-4	5036-5037	`	_	_	
38-5	5037-5048	tensorboard	*	SOFTWARE	
38-6	5049-5050	-	_	_	
38-7	5050-5051	-	_	_	
38-8	5051-5057	logdir	_	_	
38-9	5058-5059	/	_	_	
38-10	5059-5063	path	_	_	
38-11	5063-5064	/	_	_	
38-12	5064-5066	to	_	_	
38-13	5066-5067	/	_	_	
38-14	5067-5075	save_dir	_	_	
38-15	5076-5077	-	_	_	
38-16	5077-5078	-	_	_	
38-17	5078-5082	port	_	_	
38-18	5083-5087	8008	_	_	
38-19	5087-5088	`	_	_	
38-20	5089-5092	and	_	_	
38-21	5093-5098	visit	_	_	
38-22	5099-5100	`	_	_	
38-23	5100-5109	localhost	_	_	
38-24	5109-5110	:	_	_	
38-25	5110-5114	8008	_	_	
38-26	5114-5115	`	_	_	
38-27	5116-5118	in	_	_	
38-28	5119-5122	the	_	_	
38-29	5123-5130	browser	_	_	
38-30	5130-5131	.	_	_	

#Text=Evaluation
#Text=----------
#Text=
#Text=Evaluation of a trained model checkpoint can be done as follows:
#Text=
#Text=```shell
#Text=python evaluate.py --config-yml /path/to/config.yml --load-pthpath /path/to/checkpoint.pth --split val --gpu-ids 0
#Text=```
#Text=
#Text=This will generate an EvalAI submission file, and report metrics from the [Visual Dialog paper][5] (Mean reciprocal rank, R@{1, 5, 10}, Mean rank), and Normalized Discounted Cumulative Gain (NDCG), introduced in the first Visual Dialog Challenge (in 2018).
39-1	5134-5144	Evaluation	_	_	
39-2	5145-5146	-	_	_	
39-3	5146-5147	-	_	_	
39-4	5147-5148	-	_	_	
39-5	5148-5149	-	_	_	
39-6	5149-5150	-	_	_	
39-7	5150-5151	-	_	_	
39-8	5151-5152	-	_	_	
39-9	5152-5153	-	_	_	
39-10	5153-5154	-	_	_	
39-11	5154-5155	-	_	_	
39-12	5157-5167	Evaluation	_	_	
39-13	5168-5170	of	_	_	
39-14	5171-5172	a	_	_	
39-15	5173-5180	trained	_	_	
39-16	5181-5186	model	_	_	
39-17	5187-5197	checkpoint	_	_	
39-18	5198-5201	can	_	_	
39-19	5202-5204	be	_	_	
39-20	5205-5209	done	_	_	
39-21	5210-5212	as	_	_	
39-22	5213-5220	follows	_	_	
39-23	5220-5221	:	_	_	
39-24	5223-5224	`	_	_	
39-25	5224-5225	`	_	_	
39-26	5225-5226	`	_	_	
39-27	5226-5231	shell	*	PROGLANG	
39-28	5232-5238	python	*	SOFTWARE	
39-29	5239-5250	evaluate.py	_	_	
39-30	5251-5252	-	_	_	
39-31	5252-5253	-	_	_	
39-32	5253-5263	config-yml	_	_	
39-33	5264-5265	/	_	_	
39-34	5265-5269	path	_	_	
39-35	5269-5270	/	_	_	
39-36	5270-5272	to	_	_	
39-37	5272-5273	/	_	_	
39-38	5273-5283	config.yml	_	_	
39-39	5284-5285	-	_	_	
39-40	5285-5286	-	_	_	
39-41	5286-5298	load-pthpath	_	_	
39-42	5299-5300	/	_	_	
39-43	5300-5304	path	_	_	
39-44	5304-5305	/	_	_	
39-45	5305-5307	to	_	_	
39-46	5307-5308	/	_	_	
39-47	5308-5322	checkpoint.pth	_	_	
39-48	5323-5324	-	_	_	
39-49	5324-5325	-	_	_	
39-50	5325-5330	split	_	_	
39-51	5331-5334	val	_	_	
39-52	5335-5336	-	_	_	
39-53	5336-5337	-	_	_	
39-54	5337-5344	gpu-ids	_	_	
39-55	5345-5346	0	_	_	
39-56	5347-5348	`	_	_	
39-57	5348-5349	`	_	_	
39-58	5349-5350	`	_	_	
39-59	5352-5356	This	_	_	
39-60	5357-5361	will	_	_	
39-61	5362-5370	generate	_	_	
39-62	5371-5373	an	_	_	
39-63	5374-5380	EvalAI	_	_	
39-64	5381-5391	submission	_	_	
39-65	5392-5396	file	_	_	
39-66	5396-5397	,	_	_	
39-67	5398-5401	and	_	_	
39-68	5402-5408	report	_	_	
39-69	5409-5416	metrics	_	_	
39-70	5417-5421	from	_	_	
39-71	5422-5425	the	_	_	
39-72	5426-5427	[	_	_	
39-73	5427-5433	Visual	_	_	
39-74	5434-5440	Dialog	_	_	
39-75	5441-5446	paper	_	_	
39-76	5446-5447	]	_	_	
39-77	5447-5448	[	_	_	
39-78	5448-5449	5	_	_	
39-79	5449-5450	]	_	_	
39-80	5451-5452	(	_	_	
39-81	5452-5456	Mean	*[17]	EVALMETRIC[17]	
39-82	5457-5467	reciprocal	*[17]	EVALMETRIC[17]	
39-83	5468-5472	rank	*[17]	EVALMETRIC[17]	
39-84	5472-5473	,	_	_	
39-85	5474-5475	R	_	_	
39-86	5475-5476	@	_	_	
39-87	5476-5477	{	_	_	
39-88	5477-5478	1	_	_	
39-89	5478-5479	,	_	_	
39-90	5480-5481	5	_	_	
39-91	5481-5482	,	_	_	
39-92	5483-5485	10	_	_	
39-93	5485-5486	}	_	_	
39-94	5486-5487	,	_	_	
39-95	5488-5492	Mean	*[18]	EVALMETRIC[18]	
39-96	5493-5497	rank	*[18]	EVALMETRIC[18]	
39-97	5497-5498	)	_	_	
39-98	5498-5499	,	_	_	
39-99	5500-5503	and	_	_	
39-100	5504-5514	Normalized	*[19]	EVALMETRIC[19]	
39-101	5515-5525	Discounted	*[19]	EVALMETRIC[19]	
39-102	5526-5536	Cumulative	*[19]	EVALMETRIC[19]	
39-103	5537-5541	Gain	*[19]	EVALMETRIC[19]	
39-104	5542-5543	(	_	_	
39-105	5543-5547	NDCG	*	EVALMETRIC	
39-106	5547-5548	)	_	_	
39-107	5548-5549	,	_	_	
39-108	5550-5560	introduced	_	_	
39-109	5561-5563	in	_	_	
39-110	5564-5567	the	_	_	
39-111	5568-5573	first	_	_	
39-112	5574-5580	Visual	_	_	
39-113	5581-5587	Dialog	_	_	
39-114	5588-5597	Challenge	_	_	
39-115	5598-5599	(	_	_	
39-116	5599-5601	in	_	_	
39-117	5602-5606	2018	_	_	
39-118	5606-5607	)	_	_	
39-119	5607-5608	.	_	_	

#Text=The metrics reported here would be the same as those reported through EvalAI by making a submission in `val` phase.
40-1	5610-5613	The	_	_	
40-2	5614-5621	metrics	_	_	
40-3	5622-5630	reported	_	_	
40-4	5631-5635	here	_	_	
40-5	5636-5641	would	_	_	
40-6	5642-5644	be	_	_	
40-7	5645-5648	the	_	_	
40-8	5649-5653	same	_	_	
40-9	5654-5656	as	_	_	
40-10	5657-5662	those	_	_	
40-11	5663-5671	reported	_	_	
40-12	5672-5679	through	_	_	
40-13	5680-5686	EvalAI	_	_	
40-14	5687-5689	by	_	_	
40-15	5690-5696	making	_	_	
40-16	5697-5698	a	_	_	
40-17	5699-5709	submission	_	_	
40-18	5710-5712	in	_	_	
40-19	5713-5714	`	_	_	
40-20	5714-5717	val	_	_	
40-21	5717-5718	`	_	_	
40-22	5719-5724	phase	_	_	
40-23	5724-5725	.	_	_	

#Text=To generate a submission file for `test-std` or `test-challenge` phase, replace `--split val` with `--split test`
41-1	5726-5728	To	_	_	
41-2	5729-5737	generate	_	_	
41-3	5738-5739	a	_	_	
41-4	5740-5750	submission	_	_	
41-5	5751-5755	file	_	_	
41-6	5756-5759	for	_	_	
41-7	5760-5761	`	_	_	
41-8	5761-5769	test-std	_	_	
41-9	5769-5770	`	_	_	
41-10	5771-5773	or	_	_	
41-11	5774-5775	`	_	_	
41-12	5775-5789	test-challenge	_	_	
41-13	5789-5790	`	_	_	
41-14	5791-5796	phase	_	_	
41-15	5796-5797	,	_	_	
41-16	5798-5805	replace	_	_	
41-17	5806-5807	`	_	_	
41-18	5807-5808	-	_	_	
41-19	5808-5809	-	_	_	
41-20	5809-5814	split	_	_	
41-21	5815-5818	val	_	_	
41-22	5818-5819	`	_	_	
41-23	5820-5824	with	_	_	
41-24	5825-5826	`	_	_	
41-25	5826-5827	-	_	_	
41-26	5827-5828	-	_	_	
41-27	5828-5833	split	_	_	
41-28	5834-5838	test	_	_	
41-29	5838-5839	`	_	_	

#Text=.
42-1	5839-5840	.	_	_	

#Text=[1]: https://conda.io/docs/user-guide/install/download.html
#Text=[2]: https://www.github.com/lanpa/tensorboardX
#Text=[3]: https://visualdialog.org/data
#Text=[4]: https://s3.amazonaws.com/visual-dialog/data/v1.0/2019/visdial_1.0_word_counts_train.json
#Text=[5]: https://arxiv.org/abs/1611.08669
#Text=[6]: https://www.github.com/batra-mlp-lab/visdial-challenge-starter-pytorch
#Text=[7]: https://www.github.com/yuleiniu/rva/blob/master/visdialch/utils/checkpointing.py
#Text=[8]: https://www.github.com/batra-mlp-lab/visdial-challenge-starter-pytorch#docker
#Text=[9]: https://www.github.com/cocodataset/cocoapi
#Text=[10]: https://www.github.com/facebookresearch/Detectron
#Text=[11]: http://cocodataset.org/#download
#Text=[12]: http://nlp.stanford.edu/data/glove.6B.zip
43-1	5843-5844	[	_	_	
43-2	5844-5845	1	_	_	
43-3	5845-5846	]	_	_	
43-4	5846-5847	:	_	_	
43-5	5848-5853	https	_	_	
43-6	5853-5854	:	_	_	
43-7	5854-5855	/	_	_	
43-8	5855-5856	/	_	_	
43-9	5856-5864	conda.io	_	_	
43-9.1	5856-5861	conda	*	SOFTWARE	
43-10	5864-5865	/	_	_	
43-11	5865-5869	docs	_	_	
43-12	5869-5870	/	_	_	
43-13	5870-5880	user-guide	_	_	
43-14	5880-5881	/	_	_	
43-15	5881-5888	install	_	_	
43-16	5888-5889	/	_	_	
43-17	5889-5902	download.html	_	_	
43-18	5903-5904	[	_	_	
43-19	5904-5905	2	_	_	
43-20	5905-5906	]	_	_	
43-21	5906-5907	:	_	_	
43-22	5908-5913	https	_	_	
43-23	5913-5914	:	_	_	
43-24	5914-5915	/	_	_	
43-25	5915-5916	/	_	_	
43-26	5916-5930	www.github.com	_	_	
43-27	5930-5931	/	_	_	
43-28	5931-5936	lanpa	_	_	
43-29	5936-5937	/	_	_	
43-30	5937-5949	tensorboardX	*	SOFTWARE	
43-31	5950-5951	[	_	_	
43-32	5951-5952	3	_	_	
43-33	5952-5953	]	_	_	
43-34	5953-5954	:	_	_	
43-35	5955-5960	https	_	_	
43-36	5960-5961	:	_	_	
43-37	5961-5962	/	_	_	
43-38	5962-5963	/	_	_	
43-39	5963-5979	visualdialog.org	_	_	
43-40	5979-5980	/	_	_	
43-41	5980-5984	data	_	_	
43-42	5985-5986	[	_	_	
43-43	5986-5987	4	_	_	
43-44	5987-5988	]	_	_	
43-45	5988-5989	:	_	_	
43-46	5990-5995	https	_	_	
43-47	5995-5996	:	_	_	
43-48	5996-5997	/	_	_	
43-49	5997-5998	/	_	_	
43-50	5998-6000	s3	_	_	
43-51	6000-6001	.	_	_	
43-52	6001-6014	amazonaws.com	_	_	
43-53	6014-6015	/	_	_	
43-54	6015-6028	visual-dialog	_	_	
43-55	6028-6029	/	_	_	
43-56	6029-6033	data	_	_	
43-57	6033-6034	/	_	_	
43-58	6034-6038	v1.0	_	_	
43-59	6038-6039	/	_	_	
43-60	6039-6043	2019	_	_	
43-61	6043-6044	/	_	_	
43-62	6044-6051	visdial	_	_	
43-63	6051-6052	_	_	_	
43-64	6052-6055	1.0	_	_	
43-65	6055-6056	_	_	_	
43-66	6056-6078	word_counts_train.json	_	_	
43-67	6079-6080	[	_	_	
43-68	6080-6081	5	_	_	
43-69	6081-6082	]	_	_	
43-70	6082-6083	:	_	_	
43-71	6084-6089	https	_	_	
43-72	6089-6090	:	_	_	
43-73	6090-6091	/	_	_	
43-74	6091-6092	/	_	_	
43-75	6092-6101	arxiv.org	_	_	
43-76	6101-6102	/	_	_	
43-77	6102-6105	abs	_	_	
43-78	6105-6106	/	_	_	
43-79	6106-6116	1611.08669	_	_	
43-80	6117-6118	[	_	_	
43-81	6118-6119	6	_	_	
43-82	6119-6120	]	_	_	
43-83	6120-6121	:	_	_	
43-84	6122-6127	https	_	_	
43-85	6127-6128	:	_	_	
43-86	6128-6129	/	_	_	
43-87	6129-6130	/	_	_	
43-88	6130-6144	www.github.com	_	_	
43-89	6144-6145	/	_	_	
43-90	6145-6158	batra-mlp-lab	_	_	
43-91	6158-6159	/	_	_	
43-92	6159-6192	visdial-challenge-starter-pytorch	_	_	
43-92.1	6185-6192	pytorch	*	SOFTWARE	
43-93	6193-6194	[	_	_	
43-94	6194-6195	7	_	_	
43-95	6195-6196	]	_	_	
43-96	6196-6197	:	_	_	
43-97	6198-6203	https	_	_	
43-98	6203-6204	:	_	_	
43-99	6204-6205	/	_	_	
43-100	6205-6206	/	_	_	
43-101	6206-6220	www.github.com	_	_	
43-102	6220-6221	/	_	_	
43-103	6221-6229	yuleiniu	_	_	
43-104	6229-6230	/	_	_	
43-105	6230-6233	rva	_	_	
43-106	6233-6234	/	_	_	
43-107	6234-6238	blob	_	_	
43-108	6238-6239	/	_	_	
43-109	6239-6245	master	_	_	
43-110	6245-6246	/	_	_	
43-111	6246-6255	visdialch	_	_	
43-112	6255-6256	/	_	_	
43-113	6256-6261	utils	_	_	
43-114	6261-6262	/	_	_	
43-115	6262-6278	checkpointing.py	_	_	
43-116	6279-6280	[	_	_	
43-117	6280-6281	8	_	_	
43-118	6281-6282	]	_	_	
43-119	6282-6283	:	_	_	
43-120	6284-6289	https	_	_	
43-121	6289-6290	:	_	_	
43-122	6290-6291	/	_	_	
43-123	6291-6292	/	_	_	
43-124	6292-6306	www.github.com	_	_	
43-125	6306-6307	/	_	_	
43-126	6307-6320	batra-mlp-lab	_	_	
43-127	6320-6321	/	_	_	
43-128	6321-6354	visdial-challenge-starter-pytorch	_	_	
43-128.1	6347-6354	pytorch	*	SOFTWARE	
43-129	6354-6355	#	_	_	
43-130	6355-6361	docker	*	SOFTWARE	
43-131	6362-6363	[	_	_	
43-132	6363-6364	9	_	_	
43-133	6364-6365	]	_	_	
43-134	6365-6366	:	_	_	
43-135	6367-6372	https	_	_	
43-136	6372-6373	:	_	_	
43-137	6373-6374	/	_	_	
43-138	6374-6375	/	_	_	
43-139	6375-6389	www.github.com	_	_	
43-140	6389-6390	/	_	_	
43-141	6390-6401	cocodataset	_	_	
43-142	6401-6402	/	_	_	
43-143	6402-6409	cocoapi	_	_	
43-144	6410-6411	[	_	_	
43-145	6411-6413	10	_	_	
43-146	6413-6414	]	_	_	
43-147	6414-6415	:	_	_	
43-148	6416-6421	https	_	_	
43-149	6421-6422	:	_	_	
43-150	6422-6423	/	_	_	
43-151	6423-6424	/	_	_	
43-152	6424-6438	www.github.com	_	_	
43-153	6438-6439	/	_	_	
43-154	6439-6455	facebookresearch	_	_	
43-155	6455-6456	/	_	_	
43-156	6456-6465	Detectron	_	_	
43-157	6466-6467	[	_	_	
43-158	6467-6469	11	_	_	
43-159	6469-6470	]	_	_	
43-160	6470-6471	:	_	_	
43-161	6472-6476	http	_	_	
43-162	6476-6477	:	_	_	
43-163	6477-6478	/	_	_	
43-164	6478-6479	/	_	_	
43-165	6479-6494	cocodataset.org	_	_	
43-166	6494-6495	/	_	_	
43-167	6495-6496	#	_	_	
43-168	6496-6504	download	_	_	
43-169	6505-6506	[	_	_	
43-170	6506-6508	12	_	_	
43-171	6508-6509	]	_	_	
43-172	6509-6510	:	_	_	
43-173	6511-6515	http	_	_	
43-174	6515-6516	:	_	_	
43-175	6516-6517	/	_	_	
43-176	6517-6518	/	_	_	
43-177	6518-6534	nlp.stanford.edu	_	_	
43-178	6534-6535	/	_	_	
43-179	6535-6539	data	_	_	
43-180	6539-6540	/	_	_	
43-181	6540-6545	glove	_	_	
43-182	6545-6552	.6B.zip	_	_	
