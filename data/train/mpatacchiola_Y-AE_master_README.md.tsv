#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=<p align="center">
#Text=<img src="etc/img/fig_samples.png" width="800">
#Text=</p>
#Text=
#Text=This repository contains the official implementation of the paper: 
#Text=
#Text=*"Y-Autoencoders: disentangling latent representations via sequential-encoding"*, Massimiliano Patacchiola, Patrick Fox-Roberts, Edward Rosten.
1-1	1-2	<	_	_	
1-2	2-3	p	_	_	
1-3	4-9	align	_	_	
1-4	9-10	=	_	_	
1-5	10-11	"	_	_	
1-6	11-17	center	_	_	
1-7	17-18	"	_	_	
1-8	18-19	>	_	_	
1-9	20-21	<	_	_	
1-10	21-24	img	_	_	
1-11	25-28	src	_	_	
1-12	28-29	=	_	_	
1-13	29-30	"	_	_	
1-14	30-33	etc	_	_	
1-15	33-34	/	_	_	
1-16	34-37	img	_	_	
1-17	37-38	/	_	_	
1-18	38-53	fig_samples.png	_	_	
1-19	53-54	"	_	_	
1-20	55-60	width	_	_	
1-21	60-61	=	_	_	
1-22	61-62	"	_	_	
1-23	62-65	800	_	_	
1-24	65-66	"	_	_	
1-25	66-67	>	_	_	
1-26	68-69	<	_	_	
1-27	69-70	/	_	_	
1-28	70-71	p	_	_	
1-29	71-72	>	_	_	
1-30	74-78	This	_	_	
1-31	79-89	repository	_	_	
1-32	90-98	contains	_	_	
1-33	99-102	the	_	_	
1-34	103-111	official	_	_	
1-35	112-126	implementation	_	_	
1-36	127-129	of	_	_	
1-37	130-133	the	_	_	
1-38	134-139	paper	_	_	
1-39	139-140	:	_	_	
1-40	143-144	*	_	_	
1-41	144-145	"	_	_	
1-42	145-159	Y-Autoencoders	*[1]	PUBLICATION[1]	
1-43	159-160	:	*[1]	PUBLICATION[1]	
1-44	161-174	disentangling	*[1]	PUBLICATION[1]	
1-45	175-181	latent	*[1]	PUBLICATION[1]	
1-46	182-197	representations	*[1]	PUBLICATION[1]	
1-47	198-201	via	*[1]	PUBLICATION[1]	
1-48	202-221	sequential-encoding	*[1]	PUBLICATION[1]	
1-49	221-222	"	_	_	
1-50	222-223	*	_	_	
1-51	223-224	,	_	_	
1-52	225-237	Massimiliano	_	_	
1-53	238-249	Patacchiola	_	_	
1-54	249-250	,	_	_	
1-55	251-258	Patrick	_	_	
1-56	259-270	Fox-Roberts	_	_	
1-57	270-271	,	_	_	
1-58	272-278	Edward	_	_	
1-59	279-285	Rosten	_	_	
1-60	285-286	.	_	_	

#Text=Pattern Recognition Letters, vol. 140, pp. 59-65.
2-1	287-294	Pattern	_	_	
2-2	295-306	Recognition	_	_	
2-3	307-314	Letters	_	_	
2-4	314-315	,	_	_	
2-5	316-319	vol	_	_	
2-6	319-320	.	_	_	
2-7	321-324	140	_	_	
2-8	324-325	,	_	_	
2-9	326-328	pp	_	_	
2-10	328-329	.	_	_	
2-11	330-332	59	_	_	
2-12	332-333	-	_	_	
2-13	333-335	65	_	_	
2-14	335-336	.	_	_	

#Text=[[download paper from arxiv]](https://arxiv.org/pdf/1907.10949.pdf)
#Text=
#Text=Please, cite this paper if you use the code in this repository as part of a published research project:
#Text=
#Text=```
#Text=@article{patacchiola2020yautoencoders,
#Text=  title={Y-Autoencoders: disentangling latent representations via sequential-encoding},
#Text=  author={Patacchiola, Massimiliano and Fox-Roberts, Patrick and Rosten, Edward},
#Text=  journal={Pattern Recognition Letters},
#Text=  volume={140},
#Text=  pages={59--65},
#Text=  year={2020}
#Text=}
#Text=```
#Text=
#Text=This code allows reproducing the quantitative results reported in the paper.
3-1	337-338	[	_	_	
3-2	338-339	[	_	_	
3-3	339-347	download	_	_	
3-4	348-353	paper	_	_	
3-5	354-358	from	_	_	
3-6	359-364	arxiv	_	_	
3-7	364-365	]	_	_	
3-8	365-366	]	_	_	
3-9	366-367	(	_	_	
3-10	367-372	https	_	_	
3-11	372-373	:	_	_	
3-12	373-374	/	_	_	
3-13	374-375	/	_	_	
3-14	375-384	arxiv.org	_	_	
3-15	384-385	/	_	_	
3-16	385-388	pdf	_	_	
3-17	388-389	/	_	_	
3-18	389-399	1907.10949	_	_	
3-19	399-400	.	_	_	
3-20	400-403	pdf	_	_	
3-21	403-404	)	_	_	
3-22	406-412	Please	_	_	
3-23	412-413	,	_	_	
3-24	414-418	cite	_	_	
3-25	419-423	this	_	_	
3-26	424-429	paper	_	_	
3-27	430-432	if	_	_	
3-28	433-436	you	_	_	
3-29	437-440	use	_	_	
3-30	441-444	the	_	_	
3-31	445-449	code	_	_	
3-32	450-452	in	_	_	
3-33	453-457	this	_	_	
3-34	458-468	repository	_	_	
3-35	469-471	as	_	_	
3-36	472-476	part	_	_	
3-37	477-479	of	_	_	
3-38	480-481	a	_	_	
3-39	482-491	published	_	_	
3-40	492-500	research	_	_	
3-41	501-508	project	_	_	
3-42	508-509	:	_	_	
3-43	511-512	`	_	_	
3-44	512-513	`	_	_	
3-45	513-514	`	_	_	
3-46	515-516	@	_	_	
3-47	516-523	article	_	_	
3-48	523-524	{	_	_	
3-49	524-552	patacchiola2020yautoencoders	_	_	
3-50	552-553	,	_	_	
3-51	556-561	title	_	_	
3-52	561-562	=	_	_	
3-53	562-563	{	_	_	
3-54	563-577	Y-Autoencoders	*[2]	PUBLICATION[2]	
3-55	577-578	:	*[2]	PUBLICATION[2]	
3-56	579-592	disentangling	*[2]	PUBLICATION[2]	
3-57	593-599	latent	*[2]	PUBLICATION[2]	
3-58	600-615	representations	*[2]	PUBLICATION[2]	
3-59	616-619	via	*[2]	PUBLICATION[2]	
3-60	620-639	sequential-encoding	*[2]	PUBLICATION[2]	
3-61	639-640	}	_	_	
3-62	640-641	,	_	_	
3-63	644-650	author	_	_	
3-64	650-651	=	_	_	
3-65	651-652	{	_	_	
3-66	652-663	Patacchiola	_	_	
3-67	663-664	,	_	_	
3-68	665-677	Massimiliano	_	_	
3-69	678-681	and	_	_	
3-70	682-693	Fox-Roberts	_	_	
3-71	693-694	,	_	_	
3-72	695-702	Patrick	_	_	
3-73	703-706	and	_	_	
3-74	707-713	Rosten	_	_	
3-75	713-714	,	_	_	
3-76	715-721	Edward	_	_	
3-77	721-722	}	_	_	
3-78	722-723	,	_	_	
3-79	726-733	journal	_	_	
3-80	733-734	=	_	_	
3-81	734-735	{	_	_	
3-82	735-742	Pattern	_	_	
3-83	743-754	Recognition	_	_	
3-84	755-762	Letters	_	_	
3-85	762-763	}	_	_	
3-86	763-764	,	_	_	
3-87	767-773	volume	_	_	
3-88	773-774	=	_	_	
3-89	774-775	{	_	_	
3-90	775-778	140	_	_	
3-91	778-779	}	_	_	
3-92	779-780	,	_	_	
3-93	783-788	pages	_	_	
3-94	788-789	=	_	_	
3-95	789-790	{	_	_	
3-96	790-792	59	_	_	
3-97	792-793	-	_	_	
3-98	793-794	-	_	_	
3-99	794-796	65	_	_	
3-100	796-797	}	_	_	
3-101	797-798	,	_	_	
3-102	801-805	year	_	_	
3-103	805-806	=	_	_	
3-104	806-807	{	_	_	
3-105	807-811	2020	_	_	
3-106	811-812	}	_	_	
3-107	813-814	}	_	_	
3-108	815-816	`	_	_	
3-109	816-817	`	_	_	
3-110	817-818	`	_	_	
3-111	820-824	This	_	_	
3-112	825-829	code	_	_	
3-113	830-836	allows	_	_	
3-114	837-848	reproducing	_	_	
3-115	849-852	the	_	_	
3-116	853-865	quantitative	_	_	
3-117	866-873	results	_	_	
3-118	874-882	reported	_	_	
3-119	883-885	in	_	_	
3-120	886-889	the	_	_	
3-121	890-895	paper	_	_	
3-122	895-896	.	_	_	

#Text=In particular the ablation experiment (Section 3.2) and the comparison against baselines experiment (Section 3.3).
4-1	897-899	In	_	_	
4-2	900-910	particular	_	_	
4-3	911-914	the	_	_	
4-4	915-923	ablation	_	_	
4-5	924-934	experiment	_	_	
4-6	935-936	(	_	_	
4-7	936-943	Section	_	_	
4-8	944-947	3.2	_	_	
4-9	947-948	)	_	_	
4-10	949-952	and	_	_	
4-11	953-956	the	_	_	
4-12	957-967	comparison	_	_	
4-13	968-975	against	_	_	
4-14	976-985	baselines	_	_	
4-15	986-996	experiment	_	_	
4-16	997-998	(	_	_	
4-17	998-1005	Section	_	_	
4-18	1006-1009	3.3	_	_	
4-19	1009-1010	)	_	_	
4-20	1010-1011	.	_	_	

#Text=Requirements
#Text=============
#Text=
#Text=The code has been tested on `Ubuntu 18.04.2 LTS`, with `Python 2.7` , `Tensorflow 1.10` and `Numpy 1.15.1`.
5-1	1013-1025	Requirements	_	_	
5-2	1026-1027	=	_	_	
5-3	1027-1028	=	_	_	
5-4	1028-1029	=	_	_	
5-5	1029-1030	=	_	_	
5-6	1030-1031	=	_	_	
5-7	1031-1032	=	_	_	
5-8	1032-1033	=	_	_	
5-9	1033-1034	=	_	_	
5-10	1034-1035	=	_	_	
5-11	1035-1036	=	_	_	
5-12	1036-1037	=	_	_	
5-13	1037-1038	=	_	_	
5-14	1040-1043	The	_	_	
5-15	1044-1048	code	_	_	
5-16	1049-1052	has	_	_	
5-17	1053-1057	been	_	_	
5-18	1058-1064	tested	_	_	
5-19	1065-1067	on	_	_	
5-20	1068-1069	`	_	_	
5-21	1069-1075	Ubuntu	*[3]	SOFTWARE[3]	
5-22	1076-1083	18.04.2	*[3]	SOFTWARE[3]	
5-23	1084-1087	LTS	*[3]	SOFTWARE[3]	
5-24	1087-1088	`	_	_	
5-25	1088-1089	,	_	_	
5-26	1090-1094	with	_	_	
5-27	1095-1096	`	_	_	
5-28	1096-1102	Python	*[4]	PROGLANG[4]	
5-29	1103-1106	2.7	*[4]	PROGLANG[4]	
5-30	1106-1107	`	_	_	
5-31	1108-1109	,	_	_	
5-32	1110-1111	`	_	_	
5-33	1111-1121	Tensorflow	*[5]	SOFTWARE[5]	
5-34	1122-1126	1.10	*[5]	SOFTWARE[5]	
5-35	1126-1127	`	_	_	
5-36	1128-1131	and	_	_	
5-37	1132-1133	`	_	_	
5-38	1133-1138	Numpy	*[6]	SOFTWARE[6]	
5-39	1139-1145	1.15.1	*[6]	SOFTWARE[6]	
5-40	1145-1146	`	_	_	
5-41	1146-1147	.	_	_	

#Text=In the test phase `OpenCV 3.4.3.18` and `Scikit-image 0.14.2` have been used to manipulate and visualize the samples.
6-1	1148-1150	In	_	_	
6-2	1151-1154	the	_	_	
6-3	1155-1159	test	_	_	
6-4	1160-1165	phase	_	_	
6-5	1166-1167	`	_	_	
6-6	1167-1173	OpenCV	*[7]	SOFTWARE[7]	
6-7	1174-1182	3.4.3.18	*[7]	SOFTWARE[7]	
6-8	1182-1183	`	_	_	
6-9	1184-1187	and	_	_	
6-10	1188-1189	`	_	_	
6-11	1189-1201	Scikit-image	*[8]	SOFTWARE[8]	
6-12	1202-1208	0.14.2	*[8]	SOFTWARE[8]	
6-13	1208-1209	`	_	_	
6-14	1210-1214	have	_	_	
6-15	1215-1219	been	_	_	
6-16	1220-1224	used	_	_	
6-17	1225-1227	to	_	_	
6-18	1228-1238	manipulate	_	_	
6-19	1239-1242	and	_	_	
6-20	1243-1252	visualize	_	_	
6-21	1253-1256	the	_	_	
6-22	1257-1264	samples	_	_	
6-23	1264-1265	.	_	_	

#Text=We reccommend the use of a virtual environment (e.g.
7-1	1266-1268	We	_	_	
7-2	1269-1279	reccommend	_	_	
7-3	1280-1283	the	_	_	
7-4	1284-1287	use	_	_	
7-5	1288-1290	of	_	_	
7-6	1291-1292	a	_	_	
7-7	1293-1300	virtual	_	_	
7-8	1301-1312	environment	_	_	
7-9	1313-1314	(	_	_	
7-10	1314-1317	e.g	_	_	
7-11	1317-1318	.	_	_	

#Text=[conda](https://docs.conda.io/en/latest/)) to setup all the packages.
8-1	1319-1320	[	_	_	
8-2	1320-1325	conda	*	SOFTWARE	
8-3	1325-1326	]	_	_	
8-4	1326-1327	(	_	_	
8-5	1327-1332	https	_	_	
8-6	1332-1333	:	_	_	
8-7	1333-1334	/	_	_	
8-8	1334-1335	/	_	_	
8-9	1335-1348	docs.conda.io	_	_	
8-10	1348-1349	/	_	_	
8-11	1349-1351	en	_	_	
8-12	1351-1352	/	_	_	
8-13	1352-1358	latest	_	_	
8-14	1358-1359	/	_	_	
8-15	1359-1360	)	_	_	
8-16	1360-1361	)	_	_	
8-17	1362-1364	to	_	_	
8-18	1365-1370	setup	_	_	
8-19	1371-1374	all	_	_	
8-20	1375-1378	the	_	_	
8-21	1379-1387	packages	_	_	
8-22	1387-1388	.	_	_	

#Text=Even though training and test have been performend on the GeForce GTX 1060, a GPU is not strictly required, but a decent amount of RAM may be necessary in order to load the model and the dataset.
9-1	1389-1393	Even	_	_	
9-2	1394-1400	though	_	_	
9-3	1401-1409	training	_	_	
9-4	1410-1413	and	_	_	
9-5	1414-1418	test	_	_	
9-6	1419-1423	have	_	_	
9-7	1424-1428	been	_	_	
9-8	1429-1439	performend	_	_	
9-9	1440-1442	on	_	_	
9-10	1443-1446	the	_	_	
9-11	1447-1454	GeForce	_	_	
9-12	1455-1458	GTX	_	_	
9-13	1459-1463	1060	_	_	
9-14	1463-1464	,	_	_	
9-15	1465-1466	a	_	_	
9-16	1467-1470	GPU	_	_	
9-17	1471-1473	is	_	_	
9-18	1474-1477	not	_	_	
9-19	1478-1486	strictly	_	_	
9-20	1487-1495	required	_	_	
9-21	1495-1496	,	_	_	
9-22	1497-1500	but	_	_	
9-23	1501-1502	a	_	_	
9-24	1503-1509	decent	_	_	
9-25	1510-1516	amount	_	_	
9-26	1517-1519	of	_	_	
9-27	1520-1523	RAM	_	_	
9-28	1524-1527	may	_	_	
9-29	1528-1530	be	_	_	
9-30	1531-1540	necessary	_	_	
9-31	1541-1543	in	_	_	
9-32	1544-1549	order	_	_	
9-33	1550-1552	to	_	_	
9-34	1553-1557	load	_	_	
9-35	1558-1561	the	_	_	
9-36	1562-1567	model	_	_	
9-37	1568-1571	and	_	_	
9-38	1572-1575	the	_	_	
9-39	1576-1583	dataset	_	_	
9-40	1583-1584	.	_	_	

#Text=To better visualize this README offline the use of `grip` is suggested:
#Text=
#Text=```
#Text=pip install grip
#Text=grip .
10-1	1585-1587	To	_	_	
10-2	1588-1594	better	_	_	
10-3	1595-1604	visualize	_	_	
10-4	1605-1609	this	_	_	
10-5	1610-1616	README	_	_	
10-6	1617-1624	offline	_	_	
10-7	1625-1628	the	_	_	
10-8	1629-1632	use	_	_	
10-9	1633-1635	of	_	_	
10-10	1636-1637	`	_	_	
10-11	1637-1641	grip	*	SOFTWARE	
10-12	1641-1642	`	_	_	
10-13	1643-1645	is	_	_	
10-14	1646-1655	suggested	_	_	
10-15	1655-1656	:	_	_	
10-16	1658-1659	`	_	_	
10-17	1659-1660	`	_	_	
10-18	1660-1661	`	_	_	
10-19	1662-1665	pip	*	SOFTWARE	
10-20	1666-1673	install	_	_	
10-21	1674-1678	grip	*	SOFTWARE	
10-22	1679-1683	grip	*	SOFTWARE	
10-23	1684-1685	.	_	_	

#Text=/README.md
#Text=```
#Text=
#Text=This will allow to visualize the README offline directly from the browser.
11-1	1685-1686	/	_	_	
11-2	1686-1695	README.md	_	_	
11-3	1696-1697	`	_	_	
11-4	1697-1698	`	_	_	
11-5	1698-1699	`	_	_	
11-6	1701-1705	This	_	_	
11-7	1706-1710	will	_	_	
11-8	1711-1716	allow	_	_	
11-9	1717-1719	to	_	_	
11-10	1720-1729	visualize	_	_	
11-11	1730-1733	the	_	_	
11-12	1734-1740	README	_	_	
11-13	1741-1748	offline	_	_	
11-14	1749-1757	directly	_	_	
11-15	1758-1762	from	_	_	
11-16	1763-1766	the	_	_	
11-17	1767-1774	browser	_	_	
11-18	1774-1775	.	_	_	

#Text=To install Tensorflow GPU version 1.10 run this command from `pip`:
#Text=```
#Text=pip install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl
#Text=```
#Text=
#Text=Otherwise you can install the CPU version:
#Text=
#Text=```
#Text=pip install https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.10.0-cp27-none-linux_x86_64.whl
#Text=```
#Text=
#Text=Additional packages can also be installed with `pip`:
#Text=
#Text=```
#Text=pip install opencv-python==3.4.3
#Text=pip install scikit-image==0.14
#Text=```
#Text=
#Text=All the procedures reported below will work only if the current terminal directory is the code folder.
12-1	1777-1779	To	_	_	
12-2	1780-1787	install	_	_	
12-3	1788-1798	Tensorflow	*[9]	SOFTWARE[9]	
12-4	1799-1802	GPU	*[9]	SOFTWARE[9]	
12-5	1803-1810	version	*[9]	SOFTWARE[9]	
12-6	1811-1815	1.10	*[9]	SOFTWARE[9]	
12-7	1816-1819	run	_	_	
12-8	1820-1824	this	_	_	
12-9	1825-1832	command	_	_	
12-10	1833-1837	from	_	_	
12-11	1838-1839	`	_	_	
12-12	1839-1842	pip	*	SOFTWARE	
12-13	1842-1843	`	_	_	
12-14	1843-1844	:	_	_	
12-15	1845-1846	`	_	_	
12-16	1846-1847	`	_	_	
12-17	1847-1848	`	_	_	
12-18	1849-1852	pip	*	SOFTWARE	
12-19	1853-1860	install	_	_	
12-20	1861-1866	https	_	_	
12-21	1866-1867	:	_	_	
12-22	1867-1868	/	_	_	
12-23	1868-1869	/	_	_	
12-24	1869-1891	storage.googleapis.com	_	_	
12-25	1891-1892	/	_	_	
12-26	1892-1902	tensorflow	_	_	
12-27	1902-1903	/	_	_	
12-28	1903-1908	linux	_	_	
12-29	1908-1909	/	_	_	
12-30	1909-1912	gpu	_	_	
12-31	1912-1913	/	_	_	
12-32	1913-1927	tensorflow_gpu	*[10]	SOFTWARE[10]	
12-33	1927-1928	-	*[10]	SOFTWARE[10]	
12-34	1928-1934	1.10.0	*[10]	SOFTWARE[10]	
12-35	1934-1935	-	_	_	
12-36	1935-1939	cp27	_	_	
12-37	1939-1940	-	_	_	
12-38	1940-1954	none-linux_x86	_	_	
12-39	1954-1955	_	_	_	
12-40	1955-1957	64	_	_	
12-41	1957-1958	.	_	_	
12-42	1958-1961	whl	_	_	
12-43	1962-1963	`	_	_	
12-44	1963-1964	`	_	_	
12-45	1964-1965	`	_	_	
12-46	1967-1976	Otherwise	_	_	
12-47	1977-1980	you	_	_	
12-48	1981-1984	can	_	_	
12-49	1985-1992	install	_	_	
12-50	1993-1996	the	_	_	
12-51	1997-2000	CPU	_	_	
12-52	2001-2008	version	_	_	
12-53	2008-2009	:	_	_	
12-54	2011-2012	`	_	_	
12-55	2012-2013	`	_	_	
12-56	2013-2014	`	_	_	
12-57	2015-2018	pip	*	SOFTWARE	
12-58	2019-2026	install	_	_	
12-59	2027-2032	https	_	_	
12-60	2032-2033	:	_	_	
12-61	2033-2034	/	_	_	
12-62	2034-2035	/	_	_	
12-63	2035-2057	storage.googleapis.com	_	_	
12-64	2057-2058	/	_	_	
12-65	2058-2068	tensorflow	_	_	
12-66	2068-2069	/	_	_	
12-67	2069-2074	linux	_	_	
12-68	2074-2075	/	_	_	
12-69	2075-2078	cpu	_	_	
12-70	2078-2079	/	_	_	
12-71	2079-2089	tensorflow	*[11]	SOFTWARE[11]	
12-72	2089-2090	-	*[11]	SOFTWARE[11]	
12-73	2090-2096	1.10.0	*[11]	SOFTWARE[11]	
12-74	2096-2097	-	_	_	
12-75	2097-2101	cp27	_	_	
12-76	2101-2102	-	_	_	
12-77	2102-2116	none-linux_x86	_	_	
12-77.1	2107-2116	linux_x86	*[12]	SOFTWARE[12]	
12-78	2116-2117	_	*[12]	SOFTWARE[12]	
12-79	2117-2119	64	*[12]	SOFTWARE[12]	
12-80	2119-2120	.	_	_	
12-81	2120-2123	whl	_	_	
12-82	2124-2125	`	_	_	
12-83	2125-2126	`	_	_	
12-84	2126-2127	`	_	_	
12-85	2129-2139	Additional	_	_	
12-86	2140-2148	packages	_	_	
12-87	2149-2152	can	_	_	
12-88	2153-2157	also	_	_	
12-89	2158-2160	be	_	_	
12-90	2161-2170	installed	_	_	
12-91	2171-2175	with	_	_	
12-92	2176-2177	`	_	_	
12-93	2177-2180	pip	*	SOFTWARE	
12-94	2180-2181	`	_	_	
12-95	2181-2182	:	_	_	
12-96	2184-2185	`	_	_	
12-97	2185-2186	`	_	_	
12-98	2186-2187	`	_	_	
12-99	2188-2191	pip	*	SOFTWARE	
12-100	2192-2199	install	_	_	
12-101	2200-2213	opencv-python	*[13]	SOFTWARE[13]	
12-102	2213-2214	=	*[13]	SOFTWARE[13]	
12-103	2214-2215	=	*[13]	SOFTWARE[13]	
12-104	2215-2220	3.4.3	*[13]	SOFTWARE[13]	
12-105	2221-2224	pip	*	SOFTWARE	
12-106	2225-2232	install	_	_	
12-107	2233-2245	scikit-image	*[14]	SOFTWARE[14]	
12-108	2245-2246	=	*[14]	SOFTWARE[14]	
12-109	2246-2247	=	*[14]	SOFTWARE[14]	
12-110	2247-2251	0.14	*[14]	SOFTWARE[14]	
12-111	2252-2253	`	_	_	
12-112	2253-2254	`	_	_	
12-113	2254-2255	`	_	_	
12-114	2257-2260	All	_	_	
12-115	2261-2264	the	_	_	
12-116	2265-2275	procedures	_	_	
12-117	2276-2284	reported	_	_	
12-118	2285-2290	below	_	_	
12-119	2291-2295	will	_	_	
12-120	2296-2300	work	_	_	
12-121	2301-2305	only	_	_	
12-122	2306-2308	if	_	_	
12-123	2309-2312	the	_	_	
12-124	2313-2320	current	_	_	
12-125	2321-2329	terminal	_	_	
12-126	2330-2339	directory	_	_	
12-127	2340-2342	is	_	_	
12-128	2343-2346	the	_	_	
12-129	2347-2351	code	_	_	
12-130	2352-2358	folder	_	_	
12-131	2358-2359	.	_	_	

#Text=The MNIST dataset is included in the package but it must be unziped, on a Unix machine run the following command:
#Text=
#Text=```
#Text=unzip .
13-1	2360-2363	The	_	_	
13-2	2364-2369	MNIST	*	DATASET	
13-3	2370-2377	dataset	_	_	
13-4	2378-2380	is	_	_	
13-5	2381-2389	included	_	_	
13-6	2390-2392	in	_	_	
13-7	2393-2396	the	_	_	
13-8	2397-2404	package	_	_	
13-9	2405-2408	but	_	_	
13-10	2409-2411	it	_	_	
13-11	2412-2416	must	_	_	
13-12	2417-2419	be	_	_	
13-13	2420-2427	unziped	_	_	
13-14	2427-2428	,	_	_	
13-15	2429-2431	on	_	_	
13-16	2432-2433	a	_	_	
13-17	2434-2438	Unix	_	_	
13-18	2439-2446	machine	_	_	
13-19	2447-2450	run	_	_	
13-20	2451-2454	the	_	_	
13-21	2455-2464	following	_	_	
13-22	2465-2472	command	_	_	
13-23	2472-2473	:	_	_	
13-24	2475-2476	`	_	_	
13-25	2476-2477	`	_	_	
13-26	2477-2478	`	_	_	
13-27	2479-2484	unzip	_	_	
13-28	2485-2486	.	_	_	

#Text=/datasets/mnist.zip -d .
14-1	2486-2487	/	_	_	
14-2	2487-2495	datasets	_	_	
14-3	2495-2496	/	_	_	
14-4	2496-2505	mnist.zip	_	_	
14-4.1	2496-2501	mnist	*	DATASET	
14-5	2506-2507	-	_	_	
14-6	2507-2508	d	_	_	
14-7	2509-2510	.	_	_	

#Text=/datasets/
#Text=```
#Text=
#Text=This will add the folders `.
15-1	2510-2511	/	_	_	
15-2	2511-2519	datasets	_	_	
15-3	2519-2520	/	_	_	
15-4	2521-2522	`	_	_	
15-5	2522-2523	`	_	_	
15-6	2523-2524	`	_	_	
15-7	2526-2530	This	_	_	
15-8	2531-2535	will	_	_	
15-9	2536-2539	add	_	_	
15-10	2540-2543	the	_	_	
15-11	2544-2551	folders	_	_	
15-12	2552-2553	`	_	_	
15-13	2553-2554	.	_	_	

#Text=/datasets/mnist/train` and `.
16-1	2554-2555	/	_	_	
16-2	2555-2563	datasets	_	_	
16-3	2563-2564	/	_	_	
16-4	2564-2569	mnist	*	DATASET	
16-5	2569-2570	/	_	_	
16-6	2570-2575	train	_	_	
16-7	2575-2576	`	_	_	
16-8	2577-2580	and	_	_	
16-9	2581-2582	`	_	_	
16-10	2582-2583	.	_	_	

#Text=/datasets/mnist/test` needed for the experiments.
17-1	2583-2584	/	_	_	
17-2	2584-2592	datasets	_	_	
17-3	2592-2593	/	_	_	
17-4	2593-2598	mnist	*	DATASET	
17-5	2598-2599	/	_	_	
17-6	2599-2603	test	_	_	
17-7	2603-2604	`	_	_	
17-8	2605-2611	needed	_	_	
17-9	2612-2615	for	_	_	
17-10	2616-2619	the	_	_	
17-11	2620-2631	experiments	_	_	
17-12	2631-2632	.	_	_	

#Text=Training
#Text==========
#Text=
#Text=The file `train.py` allows training the architectures with given hyperparameters.
18-1	2634-2642	Training	_	_	
18-2	2643-2644	=	_	_	
18-3	2644-2645	=	_	_	
18-4	2645-2646	=	_	_	
18-5	2646-2647	=	_	_	
18-6	2647-2648	=	_	_	
18-7	2648-2649	=	_	_	
18-8	2649-2650	=	_	_	
18-9	2650-2651	=	_	_	
18-10	2651-2652	=	_	_	
18-11	2654-2657	The	_	_	
18-12	2658-2662	file	_	_	
18-13	2663-2664	`	_	_	
18-14	2664-2672	train.py	_	_	
18-15	2672-2673	`	_	_	
18-16	2674-2680	allows	_	_	
18-17	2681-2689	training	_	_	
18-18	2690-2693	the	_	_	
18-19	2694-2707	architectures	_	_	
18-20	2708-2712	with	_	_	
18-21	2713-2718	given	_	_	
18-22	2719-2734	hyperparameters	_	_	
18-23	2734-2735	.	_	_	

#Text=By default those are set in agreement with the baseline condition reported in the paper: number of epochs=100, learning rate=0.0001, implicit units=32, lambda explicit=1.0, lambda implicit=1.0.
19-1	2736-2738	By	_	_	
19-2	2739-2746	default	_	_	
19-3	2747-2752	those	_	_	
19-4	2753-2756	are	_	_	
19-5	2757-2760	set	_	_	
19-6	2761-2763	in	_	_	
19-7	2764-2773	agreement	_	_	
19-8	2774-2778	with	_	_	
19-9	2779-2782	the	_	_	
19-10	2783-2791	baseline	_	_	
19-11	2792-2801	condition	_	_	
19-12	2802-2810	reported	_	_	
19-13	2811-2813	in	_	_	
19-14	2814-2817	the	_	_	
19-15	2818-2823	paper	_	_	
19-16	2823-2824	:	_	_	
19-17	2825-2831	number	_	_	
19-18	2832-2834	of	_	_	
19-19	2835-2841	epochs	_	_	
19-20	2841-2842	=	_	_	
19-21	2842-2845	100	_	_	
19-22	2845-2846	,	_	_	
19-23	2847-2855	learning	_	_	
19-24	2856-2860	rate	_	_	
19-25	2860-2861	=	_	_	
19-26	2861-2867	0.0001	_	_	
19-27	2867-2868	,	_	_	
19-28	2869-2877	implicit	_	_	
19-29	2878-2883	units	_	_	
19-30	2883-2884	=	_	_	
19-31	2884-2886	32	_	_	
19-32	2886-2887	,	_	_	
19-33	2888-2894	lambda	_	_	
19-34	2895-2903	explicit	_	_	
19-35	2903-2904	=	_	_	
19-36	2904-2907	1.0	_	_	
19-37	2907-2908	,	_	_	
19-38	2909-2915	lambda	_	_	
19-39	2916-2924	implicit	_	_	
19-40	2924-2925	=	_	_	
19-41	2925-2928	1.0	_	_	
19-42	2928-2929	.	_	_	

#Text=Ablation study
#Text=--------------
#Text=To reproduce the four ablation conditions simply set the parameters `lambda_e` and `lambda_i` in the command line:
#Text=
#Text=**Condition lambda_e=0.0 and lambda_i=0.0**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=0.0 --lambda_i=0.0
#Text=```
#Text=
#Text=**Condition lambda_e=1.0 and lambda_i=0.0**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=1.0 --lambda_i=0.0
#Text=```
#Text=
#Text=**Condition lambda_e=0.0 and lambda_i=1.0**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=0.0 --lambda_i=1.0
#Text=```
#Text=
#Text=**Condition lambda_e=1.0 and lambda_i=1.0**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=1.0 --lambda_i=1.0
#Text=```
#Text=
#Text=Comparison against baselines
#Text=------------------------------
#Text=The following commands can be used to train the four models:
#Text=
#Text=**Y-AE**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=1.0 --lambda_i=1.0
#Text=```
#Text=
#Text=**Y-AE + ablation**
#Text=
#Text=```
#Text=python train.py --arch="yae" --lambda_e=1.0 --lambda_i=0.0
#Text=```
#Text=
#Text=**cAE**
#Text=
#Text=```
#Text=python train.py --arch="cae"
#Text=```
#Text=
#Text=**cAE + regularization**
#Text=
#Text=```
#Text=python train.py --arch="cae" --epochs=20 --implicit_units=16 --wdecay=0.0001
#Text=```
#Text=
#Text=**adversarial-AE + regularization**
#Text=
#Text=```
#Text=python train.py --arch="aae" --epochs=20 --implicit_units=16 --wdecay=0.0001
#Text=```
#Text=
#Text=**VAE**
#Text=
#Text=```
#Text=python train.py --arch="vae"
#Text=```
#Text=
#Text=**beta-VAE**
#Text=
#Text=```
#Text=python train.py --arch="vae" --beta=2.0
#Text=```
#Text=
#Text=Note that the folders in `.
20-1	2932-2940	Ablation	_	_	
20-2	2941-2946	study	_	_	
20-3	2947-2948	-	_	_	
20-4	2948-2949	-	_	_	
20-5	2949-2950	-	_	_	
20-6	2950-2951	-	_	_	
20-7	2951-2952	-	_	_	
20-8	2952-2953	-	_	_	
20-9	2953-2954	-	_	_	
20-10	2954-2955	-	_	_	
20-11	2955-2956	-	_	_	
20-12	2956-2957	-	_	_	
20-13	2957-2958	-	_	_	
20-14	2958-2959	-	_	_	
20-15	2959-2960	-	_	_	
20-16	2960-2961	-	_	_	
20-17	2962-2964	To	_	_	
20-18	2965-2974	reproduce	_	_	
20-19	2975-2978	the	_	_	
20-20	2979-2983	four	_	_	
20-21	2984-2992	ablation	_	_	
20-22	2993-3003	conditions	_	_	
20-23	3004-3010	simply	_	_	
20-24	3011-3014	set	_	_	
20-25	3015-3018	the	_	_	
20-26	3019-3029	parameters	_	_	
20-27	3030-3031	`	_	_	
20-28	3031-3039	lambda_e	_	_	
20-29	3039-3040	`	_	_	
20-30	3041-3044	and	_	_	
20-31	3045-3046	`	_	_	
20-32	3046-3054	lambda_i	_	_	
20-33	3054-3055	`	_	_	
20-34	3056-3058	in	_	_	
20-35	3059-3062	the	_	_	
20-36	3063-3070	command	_	_	
20-37	3071-3075	line	_	_	
20-38	3075-3076	:	_	_	
20-39	3078-3079	*	_	_	
20-40	3079-3080	*	_	_	
20-41	3080-3089	Condition	_	_	
20-42	3090-3098	lambda_e	_	_	
20-43	3098-3099	=	_	_	
20-44	3099-3102	0.0	_	_	
20-45	3103-3106	and	_	_	
20-46	3107-3115	lambda_i	_	_	
20-47	3115-3116	=	_	_	
20-48	3116-3119	0.0	_	_	
20-49	3119-3120	*	_	_	
20-50	3120-3121	*	_	_	
20-51	3123-3124	`	_	_	
20-52	3124-3125	`	_	_	
20-53	3125-3126	`	_	_	
20-54	3127-3133	python	*	SOFTWARE	
20-55	3134-3142	train.py	_	_	
20-56	3143-3144	-	_	_	
20-57	3144-3145	-	_	_	
20-58	3145-3149	arch	_	_	
20-59	3149-3150	=	_	_	
20-60	3150-3151	"	_	_	
20-61	3151-3154	yae	_	_	
20-62	3154-3155	"	_	_	
20-63	3156-3157	-	_	_	
20-64	3157-3158	-	_	_	
20-65	3158-3166	lambda_e	_	_	
20-66	3166-3167	=	_	_	
20-67	3167-3170	0.0	_	_	
20-68	3171-3172	-	_	_	
20-69	3172-3173	-	_	_	
20-70	3173-3181	lambda_i	_	_	
20-71	3181-3182	=	_	_	
20-72	3182-3185	0.0	_	_	
20-73	3186-3187	`	_	_	
20-74	3187-3188	`	_	_	
20-75	3188-3189	`	_	_	
20-76	3191-3192	*	_	_	
20-77	3192-3193	*	_	_	
20-78	3193-3202	Condition	_	_	
20-79	3203-3211	lambda_e	_	_	
20-80	3211-3212	=	_	_	
20-81	3212-3215	1.0	_	_	
20-82	3216-3219	and	_	_	
20-83	3220-3228	lambda_i	_	_	
20-84	3228-3229	=	_	_	
20-85	3229-3232	0.0	_	_	
20-86	3232-3233	*	_	_	
20-87	3233-3234	*	_	_	
20-88	3236-3237	`	_	_	
20-89	3237-3238	`	_	_	
20-90	3238-3239	`	_	_	
20-91	3240-3246	python	*	SOFTWARE	
20-92	3247-3255	train.py	_	_	
20-93	3256-3257	-	_	_	
20-94	3257-3258	-	_	_	
20-95	3258-3262	arch	_	_	
20-96	3262-3263	=	_	_	
20-97	3263-3264	"	_	_	
20-98	3264-3267	yae	_	_	
20-99	3267-3268	"	_	_	
20-100	3269-3270	-	_	_	
20-101	3270-3271	-	_	_	
20-102	3271-3279	lambda_e	_	_	
20-103	3279-3280	=	_	_	
20-104	3280-3283	1.0	_	_	
20-105	3284-3285	-	_	_	
20-106	3285-3286	-	_	_	
20-107	3286-3294	lambda_i	_	_	
20-108	3294-3295	=	_	_	
20-109	3295-3298	0.0	_	_	
20-110	3299-3300	`	_	_	
20-111	3300-3301	`	_	_	
20-112	3301-3302	`	_	_	
20-113	3304-3305	*	_	_	
20-114	3305-3306	*	_	_	
20-115	3306-3315	Condition	_	_	
20-116	3316-3324	lambda_e	_	_	
20-117	3324-3325	=	_	_	
20-118	3325-3328	0.0	_	_	
20-119	3329-3332	and	_	_	
20-120	3333-3341	lambda_i	_	_	
20-121	3341-3342	=	_	_	
20-122	3342-3345	1.0	_	_	
20-123	3345-3346	*	_	_	
20-124	3346-3347	*	_	_	
20-125	3349-3350	`	_	_	
20-126	3350-3351	`	_	_	
20-127	3351-3352	`	_	_	
20-128	3353-3359	python	*	SOFTWARE	
20-129	3360-3368	train.py	_	_	
20-130	3369-3370	-	_	_	
20-131	3370-3371	-	_	_	
20-132	3371-3375	arch	_	_	
20-133	3375-3376	=	_	_	
20-134	3376-3377	"	_	_	
20-135	3377-3380	yae	_	_	
20-136	3380-3381	"	_	_	
20-137	3382-3383	-	_	_	
20-138	3383-3384	-	_	_	
20-139	3384-3392	lambda_e	_	_	
20-140	3392-3393	=	_	_	
20-141	3393-3396	0.0	_	_	
20-142	3397-3398	-	_	_	
20-143	3398-3399	-	_	_	
20-144	3399-3407	lambda_i	_	_	
20-145	3407-3408	=	_	_	
20-146	3408-3411	1.0	_	_	
20-147	3412-3413	`	_	_	
20-148	3413-3414	`	_	_	
20-149	3414-3415	`	_	_	
20-150	3417-3418	*	_	_	
20-151	3418-3419	*	_	_	
20-152	3419-3428	Condition	_	_	
20-153	3429-3437	lambda_e	_	_	
20-154	3437-3438	=	_	_	
20-155	3438-3441	1.0	_	_	
20-156	3442-3445	and	_	_	
20-157	3446-3454	lambda_i	_	_	
20-158	3454-3455	=	_	_	
20-159	3455-3458	1.0	_	_	
20-160	3458-3459	*	_	_	
20-161	3459-3460	*	_	_	
20-162	3462-3463	`	_	_	
20-163	3463-3464	`	_	_	
20-164	3464-3465	`	_	_	
20-165	3466-3472	python	*	SOFTWARE	
20-166	3473-3481	train.py	_	_	
20-167	3482-3483	-	_	_	
20-168	3483-3484	-	_	_	
20-169	3484-3488	arch	_	_	
20-170	3488-3489	=	_	_	
20-171	3489-3490	"	_	_	
20-172	3490-3493	yae	_	_	
20-173	3493-3494	"	_	_	
20-174	3495-3496	-	_	_	
20-175	3496-3497	-	_	_	
20-176	3497-3505	lambda_e	_	_	
20-177	3505-3506	=	_	_	
20-178	3506-3509	1.0	_	_	
20-179	3510-3511	-	_	_	
20-180	3511-3512	-	_	_	
20-181	3512-3520	lambda_i	_	_	
20-182	3520-3521	=	_	_	
20-183	3521-3524	1.0	_	_	
20-184	3525-3526	`	_	_	
20-185	3526-3527	`	_	_	
20-186	3527-3528	`	_	_	
20-187	3530-3540	Comparison	_	_	
20-188	3541-3548	against	_	_	
20-189	3549-3558	baselines	_	_	
20-190	3559-3560	-	_	_	
20-191	3560-3561	-	_	_	
20-192	3561-3562	-	_	_	
20-193	3562-3563	-	_	_	
20-194	3563-3564	-	_	_	
20-195	3564-3565	-	_	_	
20-196	3565-3566	-	_	_	
20-197	3566-3567	-	_	_	
20-198	3567-3568	-	_	_	
20-199	3568-3569	-	_	_	
20-200	3569-3570	-	_	_	
20-201	3570-3571	-	_	_	
20-202	3571-3572	-	_	_	
20-203	3572-3573	-	_	_	
20-204	3573-3574	-	_	_	
20-205	3574-3575	-	_	_	
20-206	3575-3576	-	_	_	
20-207	3576-3577	-	_	_	
20-208	3577-3578	-	_	_	
20-209	3578-3579	-	_	_	
20-210	3579-3580	-	_	_	
20-211	3580-3581	-	_	_	
20-212	3581-3582	-	_	_	
20-213	3582-3583	-	_	_	
20-214	3583-3584	-	_	_	
20-215	3584-3585	-	_	_	
20-216	3585-3586	-	_	_	
20-217	3586-3587	-	_	_	
20-218	3587-3588	-	_	_	
20-219	3588-3589	-	_	_	
20-220	3590-3593	The	_	_	
20-221	3594-3603	following	_	_	
20-222	3604-3612	commands	_	_	
20-223	3613-3616	can	_	_	
20-224	3617-3619	be	_	_	
20-225	3620-3624	used	_	_	
20-226	3625-3627	to	_	_	
20-227	3628-3633	train	_	_	
20-228	3634-3637	the	_	_	
20-229	3638-3642	four	_	_	
20-230	3643-3649	models	_	_	
20-231	3649-3650	:	_	_	
20-232	3652-3653	*	_	_	
20-233	3653-3654	*	_	_	
20-234	3654-3658	Y-AE	_	_	
20-235	3658-3659	*	_	_	
20-236	3659-3660	*	_	_	
20-237	3662-3663	`	_	_	
20-238	3663-3664	`	_	_	
20-239	3664-3665	`	_	_	
20-240	3666-3672	python	*	SOFTWARE	
20-241	3673-3681	train.py	_	_	
20-242	3682-3683	-	_	_	
20-243	3683-3684	-	_	_	
20-244	3684-3688	arch	_	_	
20-245	3688-3689	=	_	_	
20-246	3689-3690	"	_	_	
20-247	3690-3693	yae	_	_	
20-248	3693-3694	"	_	_	
20-249	3695-3696	-	_	_	
20-250	3696-3697	-	_	_	
20-251	3697-3705	lambda_e	_	_	
20-252	3705-3706	=	_	_	
20-253	3706-3709	1.0	_	_	
20-254	3710-3711	-	_	_	
20-255	3711-3712	-	_	_	
20-256	3712-3720	lambda_i	_	_	
20-257	3720-3721	=	_	_	
20-258	3721-3724	1.0	_	_	
20-259	3725-3726	`	_	_	
20-260	3726-3727	`	_	_	
20-261	3727-3728	`	_	_	
20-262	3730-3731	*	_	_	
20-263	3731-3732	*	_	_	
20-264	3732-3736	Y-AE	_	_	
20-265	3737-3738	+	_	_	
20-266	3739-3747	ablation	_	_	
20-267	3747-3748	*	_	_	
20-268	3748-3749	*	_	_	
20-269	3751-3752	`	_	_	
20-270	3752-3753	`	_	_	
20-271	3753-3754	`	_	_	
20-272	3755-3761	python	*	SOFTWARE	
20-273	3762-3770	train.py	_	_	
20-274	3771-3772	-	_	_	
20-275	3772-3773	-	_	_	
20-276	3773-3777	arch	_	_	
20-277	3777-3778	=	_	_	
20-278	3778-3779	"	_	_	
20-279	3779-3782	yae	_	_	
20-280	3782-3783	"	_	_	
20-281	3784-3785	-	_	_	
20-282	3785-3786	-	_	_	
20-283	3786-3794	lambda_e	_	_	
20-284	3794-3795	=	_	_	
20-285	3795-3798	1.0	_	_	
20-286	3799-3800	-	_	_	
20-287	3800-3801	-	_	_	
20-288	3801-3809	lambda_i	_	_	
20-289	3809-3810	=	_	_	
20-290	3810-3813	0.0	_	_	
20-291	3814-3815	`	_	_	
20-292	3815-3816	`	_	_	
20-293	3816-3817	`	_	_	
20-294	3819-3820	*	_	_	
20-295	3820-3821	*	_	_	
20-296	3821-3824	cAE	_	_	
20-297	3824-3825	*	_	_	
20-298	3825-3826	*	_	_	
20-299	3828-3829	`	_	_	
20-300	3829-3830	`	_	_	
20-301	3830-3831	`	_	_	
20-302	3832-3838	python	*	SOFTWARE	
20-303	3839-3847	train.py	_	_	
20-304	3848-3849	-	_	_	
20-305	3849-3850	-	_	_	
20-306	3850-3854	arch	_	_	
20-307	3854-3855	=	_	_	
20-308	3855-3856	"	_	_	
20-309	3856-3859	cae	_	_	
20-310	3859-3860	"	_	_	
20-311	3861-3862	`	_	_	
20-312	3862-3863	`	_	_	
20-313	3863-3864	`	_	_	
20-314	3866-3867	*	_	_	
20-315	3867-3868	*	_	_	
20-316	3868-3871	cAE	_	_	
20-317	3872-3873	+	_	_	
20-318	3874-3888	regularization	_	_	
20-319	3888-3889	*	_	_	
20-320	3889-3890	*	_	_	
20-321	3892-3893	`	_	_	
20-322	3893-3894	`	_	_	
20-323	3894-3895	`	_	_	
20-324	3896-3902	python	*	SOFTWARE	
20-325	3903-3911	train.py	_	_	
20-326	3912-3913	-	_	_	
20-327	3913-3914	-	_	_	
20-328	3914-3918	arch	_	_	
20-329	3918-3919	=	_	_	
20-330	3919-3920	"	_	_	
20-331	3920-3923	cae	_	_	
20-332	3923-3924	"	_	_	
20-333	3925-3926	-	_	_	
20-334	3926-3927	-	_	_	
20-335	3927-3933	epochs	_	_	
20-336	3933-3934	=	_	_	
20-337	3934-3936	20	_	_	
20-338	3937-3938	-	_	_	
20-339	3938-3939	-	_	_	
20-340	3939-3953	implicit_units	_	_	
20-341	3953-3954	=	_	_	
20-342	3954-3956	16	_	_	
20-343	3957-3958	-	_	_	
20-344	3958-3959	-	_	_	
20-345	3959-3965	wdecay	_	_	
20-346	3965-3966	=	_	_	
20-347	3966-3972	0.0001	_	_	
20-348	3973-3974	`	_	_	
20-349	3974-3975	`	_	_	
20-350	3975-3976	`	_	_	
20-351	3978-3979	*	_	_	
20-352	3979-3980	*	_	_	
20-353	3980-3994	adversarial-AE	_	_	
20-354	3995-3996	+	_	_	
20-355	3997-4011	regularization	_	_	
20-356	4011-4012	*	_	_	
20-357	4012-4013	*	_	_	
20-358	4015-4016	`	_	_	
20-359	4016-4017	`	_	_	
20-360	4017-4018	`	_	_	
20-361	4019-4025	python	*	SOFTWARE	
20-362	4026-4034	train.py	_	_	
20-363	4035-4036	-	_	_	
20-364	4036-4037	-	_	_	
20-365	4037-4041	arch	_	_	
20-366	4041-4042	=	_	_	
20-367	4042-4043	"	_	_	
20-368	4043-4046	aae	_	_	
20-369	4046-4047	"	_	_	
20-370	4048-4049	-	_	_	
20-371	4049-4050	-	_	_	
20-372	4050-4056	epochs	_	_	
20-373	4056-4057	=	_	_	
20-374	4057-4059	20	_	_	
20-375	4060-4061	-	_	_	
20-376	4061-4062	-	_	_	
20-377	4062-4076	implicit_units	_	_	
20-378	4076-4077	=	_	_	
20-379	4077-4079	16	_	_	
20-380	4080-4081	-	_	_	
20-381	4081-4082	-	_	_	
20-382	4082-4088	wdecay	_	_	
20-383	4088-4089	=	_	_	
20-384	4089-4095	0.0001	_	_	
20-385	4096-4097	`	_	_	
20-386	4097-4098	`	_	_	
20-387	4098-4099	`	_	_	
20-388	4101-4102	*	_	_	
20-389	4102-4103	*	_	_	
20-390	4103-4106	VAE	_	_	
20-391	4106-4107	*	_	_	
20-392	4107-4108	*	_	_	
20-393	4110-4111	`	_	_	
20-394	4111-4112	`	_	_	
20-395	4112-4113	`	_	_	
20-396	4114-4120	python	*	SOFTWARE	
20-397	4121-4129	train.py	_	_	
20-398	4130-4131	-	_	_	
20-399	4131-4132	-	_	_	
20-400	4132-4136	arch	_	_	
20-401	4136-4137	=	_	_	
20-402	4137-4138	"	_	_	
20-403	4138-4141	vae	_	_	
20-404	4141-4142	"	_	_	
20-405	4143-4144	`	_	_	
20-406	4144-4145	`	_	_	
20-407	4145-4146	`	_	_	
20-408	4148-4149	*	_	_	
20-409	4149-4150	*	_	_	
20-410	4150-4158	beta-VAE	_	_	
20-411	4158-4159	*	_	_	
20-412	4159-4160	*	_	_	
20-413	4162-4163	`	_	_	
20-414	4163-4164	`	_	_	
20-415	4164-4165	`	_	_	
20-416	4166-4172	python	*	SOFTWARE	
20-417	4173-4181	train.py	_	_	
20-418	4182-4183	-	_	_	
20-419	4183-4184	-	_	_	
20-420	4184-4188	arch	_	_	
20-421	4188-4189	=	_	_	
20-422	4189-4190	"	_	_	
20-423	4190-4193	vae	_	_	
20-424	4193-4194	"	_	_	
20-425	4195-4196	-	_	_	
20-426	4196-4197	-	_	_	
20-427	4197-4201	beta	_	_	
20-428	4201-4202	=	_	_	
20-429	4202-4205	2.0	_	_	
20-430	4206-4207	`	_	_	
20-431	4207-4208	`	_	_	
20-432	4208-4209	`	_	_	
20-433	4211-4215	Note	_	_	
20-434	4216-4220	that	_	_	
20-435	4221-4224	the	_	_	
20-436	4225-4232	folders	_	_	
20-437	4233-4235	in	_	_	
20-438	4236-4237	`	_	_	
20-439	4237-4238	.	_	_	

#Text=/results` are automatically named to separate the different conditions.
21-1	4238-4239	/	_	_	
21-2	4239-4246	results	_	_	
21-3	4246-4247	`	_	_	
21-4	4248-4251	are	_	_	
21-5	4252-4265	automatically	_	_	
21-6	4266-4271	named	_	_	
21-7	4272-4274	to	_	_	
21-8	4275-4283	separate	_	_	
21-9	4284-4287	the	_	_	
21-10	4288-4297	different	_	_	
21-11	4298-4308	conditions	_	_	
21-12	4308-4309	.	_	_	

#Text=The logs are saved in the `log` subdir and they can be visualized through tensorboard:
#Text=
#Text=```
#Text=tensorboard --logdir=".
22-1	4310-4313	The	_	_	
22-2	4314-4318	logs	_	_	
22-3	4319-4322	are	_	_	
22-4	4323-4328	saved	_	_	
22-5	4329-4331	in	_	_	
22-6	4332-4335	the	_	_	
22-7	4336-4337	`	_	_	
22-8	4337-4340	log	_	_	
22-9	4340-4341	`	_	_	
22-10	4342-4348	subdir	_	_	
22-11	4349-4352	and	_	_	
22-12	4353-4357	they	_	_	
22-13	4358-4361	can	_	_	
22-14	4362-4364	be	_	_	
22-15	4365-4375	visualized	_	_	
22-16	4376-4383	through	_	_	
22-17	4384-4395	tensorboard	*	SOFTWARE	
22-18	4395-4396	:	_	_	
22-19	4398-4399	`	_	_	
22-20	4399-4400	`	_	_	
22-21	4400-4401	`	_	_	
22-22	4402-4413	tensorboard	*	SOFTWARE	
22-23	4414-4415	-	_	_	
22-24	4415-4416	-	_	_	
22-25	4416-4422	logdir	_	_	
22-26	4422-4423	=	_	_	
22-27	4423-4424	"	_	_	
22-28	4424-4425	.	_	_	

#Text=/path/to/log"
#Text=```
#Text=
#Text=The networks are saved at the end of the training in the `model` subdir.
23-1	4425-4426	/	_	_	
23-2	4426-4430	path	_	_	
23-3	4430-4431	/	_	_	
23-4	4431-4433	to	_	_	
23-5	4433-4434	/	_	_	
23-6	4434-4437	log	_	_	
23-7	4437-4438	"	_	_	
23-8	4439-4440	`	_	_	
23-9	4440-4441	`	_	_	
23-10	4441-4442	`	_	_	
23-11	4444-4447	The	_	_	
23-12	4448-4456	networks	_	_	
23-13	4457-4460	are	_	_	
23-14	4461-4466	saved	_	_	
23-15	4467-4469	at	_	_	
23-16	4470-4473	the	_	_	
23-17	4474-4477	end	_	_	
23-18	4478-4480	of	_	_	
23-19	4481-4484	the	_	_	
23-20	4485-4493	training	_	_	
23-21	4494-4496	in	_	_	
23-22	4497-4500	the	_	_	
23-23	4501-4502	`	_	_	
23-24	4502-4507	model	_	_	
23-25	4507-4508	`	_	_	
23-26	4509-4515	subdir	_	_	
23-27	4515-4516	.	_	_	

#Text=LeNet classifiers
#Text=------------------
#Text=
#Text=It is possible to train a LeNet classifier through the following command:
#Text=
#Text=```
#Text=python train.py --arch="lenet" --epochs=30 --lrate=0.0001 --wdecay=0.0001
#Text=```
#Text=
#Text=To increase the variance of the ensemble each network should be trained with different hyperparameters values.
24-1	4518-4523	LeNet	*	SOFTWARE	
24-2	4524-4535	classifiers	_	_	
24-3	4536-4537	-	_	_	
24-4	4537-4538	-	_	_	
24-5	4538-4539	-	_	_	
24-6	4539-4540	-	_	_	
24-7	4540-4541	-	_	_	
24-8	4541-4542	-	_	_	
24-9	4542-4543	-	_	_	
24-10	4543-4544	-	_	_	
24-11	4544-4545	-	_	_	
24-12	4545-4546	-	_	_	
24-13	4546-4547	-	_	_	
24-14	4547-4548	-	_	_	
24-15	4548-4549	-	_	_	
24-16	4549-4550	-	_	_	
24-17	4550-4551	-	_	_	
24-18	4551-4552	-	_	_	
24-19	4552-4553	-	_	_	
24-20	4553-4554	-	_	_	
24-21	4556-4558	It	_	_	
24-22	4559-4561	is	_	_	
24-23	4562-4570	possible	_	_	
24-24	4571-4573	to	_	_	
24-25	4574-4579	train	_	_	
24-26	4580-4581	a	_	_	
24-27	4582-4587	LeNet	*	SOFTWARE	
24-28	4588-4598	classifier	_	_	
24-29	4599-4606	through	_	_	
24-30	4607-4610	the	_	_	
24-31	4611-4620	following	_	_	
24-32	4621-4628	command	_	_	
24-33	4628-4629	:	_	_	
24-34	4631-4632	`	_	_	
24-35	4632-4633	`	_	_	
24-36	4633-4634	`	_	_	
24-37	4635-4641	python	*	SOFTWARE	
24-38	4642-4650	train.py	_	_	
24-39	4651-4652	-	_	_	
24-40	4652-4653	-	_	_	
24-41	4653-4657	arch	_	_	
24-42	4657-4658	=	_	_	
24-43	4658-4659	"	_	_	
24-44	4659-4664	lenet	*	SOFTWARE	
24-45	4664-4665	"	_	_	
24-46	4666-4667	-	_	_	
24-47	4667-4668	-	_	_	
24-48	4668-4674	epochs	_	_	
24-49	4674-4675	=	_	_	
24-50	4675-4677	30	_	_	
24-51	4678-4679	-	_	_	
24-52	4679-4680	-	_	_	
24-53	4680-4685	lrate	_	_	
24-54	4685-4686	=	_	_	
24-55	4686-4692	0.0001	_	_	
24-56	4693-4694	-	_	_	
24-57	4694-4695	-	_	_	
24-58	4695-4701	wdecay	_	_	
24-59	4701-4702	=	_	_	
24-60	4702-4708	0.0001	_	_	
24-61	4709-4710	`	_	_	
24-62	4710-4711	`	_	_	
24-63	4711-4712	`	_	_	
24-64	4714-4716	To	_	_	
24-65	4717-4725	increase	_	_	
24-66	4726-4729	the	_	_	
24-67	4730-4738	variance	_	_	
24-68	4739-4741	of	_	_	
24-69	4742-4745	the	_	_	
24-70	4746-4754	ensemble	_	_	
24-71	4755-4759	each	_	_	
24-72	4760-4767	network	_	_	
24-73	4768-4774	should	_	_	
24-74	4775-4777	be	_	_	
24-75	4778-4785	trained	_	_	
24-76	4786-4790	with	_	_	
24-77	4791-4800	different	_	_	
24-78	4801-4816	hyperparameters	_	_	
24-79	4817-4823	values	_	_	
24-80	4823-4824	.	_	_	

#Text=Test
#Text======
#Text=
#Text=Losses on the test set
#Text=-----------------------
#Text=
#Text=It is possible to load a pretrained model in order to measure the losses on the test set.
#Text=
#Text=```
#Text=python test.py --arch="cae" --type="loss" --resume=".
25-1	4827-4831	Test	_	_	
25-2	4832-4833	=	_	_	
25-3	4833-4834	=	_	_	
25-4	4834-4835	=	_	_	
25-5	4835-4836	=	_	_	
25-6	4836-4837	=	_	_	
25-7	4839-4845	Losses	_	_	
25-8	4846-4848	on	_	_	
25-9	4849-4852	the	_	_	
25-10	4853-4857	test	_	_	
25-11	4858-4861	set	_	_	
25-12	4862-4863	-	_	_	
25-13	4863-4864	-	_	_	
25-14	4864-4865	-	_	_	
25-15	4865-4866	-	_	_	
25-16	4866-4867	-	_	_	
25-17	4867-4868	-	_	_	
25-18	4868-4869	-	_	_	
25-19	4869-4870	-	_	_	
25-20	4870-4871	-	_	_	
25-21	4871-4872	-	_	_	
25-22	4872-4873	-	_	_	
25-23	4873-4874	-	_	_	
25-24	4874-4875	-	_	_	
25-25	4875-4876	-	_	_	
25-26	4876-4877	-	_	_	
25-27	4877-4878	-	_	_	
25-28	4878-4879	-	_	_	
25-29	4879-4880	-	_	_	
25-30	4880-4881	-	_	_	
25-31	4881-4882	-	_	_	
25-32	4882-4883	-	_	_	
25-33	4883-4884	-	_	_	
25-34	4884-4885	-	_	_	
25-35	4887-4889	It	_	_	
25-36	4890-4892	is	_	_	
25-37	4893-4901	possible	_	_	
25-38	4902-4904	to	_	_	
25-39	4905-4909	load	_	_	
25-40	4910-4911	a	_	_	
25-41	4912-4922	pretrained	_	_	
25-42	4923-4928	model	_	_	
25-43	4929-4931	in	_	_	
25-44	4932-4937	order	_	_	
25-45	4938-4940	to	_	_	
25-46	4941-4948	measure	_	_	
25-47	4949-4952	the	_	_	
25-48	4953-4959	losses	_	_	
25-49	4960-4962	on	_	_	
25-50	4963-4966	the	_	_	
25-51	4967-4971	test	_	_	
25-52	4972-4975	set	_	_	
25-53	4975-4976	.	_	_	
25-54	4978-4979	`	_	_	
25-55	4979-4980	`	_	_	
25-56	4980-4981	`	_	_	
25-57	4982-4988	python	*	SOFTWARE	
25-58	4989-4996	test.py	_	_	
25-59	4997-4998	-	_	_	
25-60	4998-4999	-	_	_	
25-61	4999-5003	arch	_	_	
25-62	5003-5004	=	_	_	
25-63	5004-5005	"	_	_	
25-64	5005-5008	cae	_	_	
25-65	5008-5009	"	_	_	
25-66	5010-5011	-	_	_	
25-67	5011-5012	-	_	_	
25-68	5012-5016	type	_	_	
25-69	5016-5017	=	_	_	
25-70	5017-5018	"	_	_	
25-71	5018-5022	loss	_	_	
25-72	5022-5023	"	_	_	
25-73	5024-5025	-	_	_	
25-74	5025-5026	-	_	_	
25-75	5026-5032	resume	_	_	
25-76	5032-5033	=	_	_	
25-77	5033-5034	"	_	_	
25-78	5034-5035	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16/model/131315_27032019_4679/model.ckpt" --path=".
26-1	5035-5036	/	_	_	
26-2	5036-5043	results	_	_	
26-3	5043-5044	/	_	_	
26-4	5044-5052	cae_ep10	_	_	
26-5	5052-5053	_	_	_	
26-6	5053-5065	wdecay0.0001	_	_	
26-7	5065-5066	_	_	_	
26-8	5066-5073	units16	_	_	
26-9	5073-5074	/	_	_	
26-10	5074-5079	model	_	_	
26-11	5079-5080	/	_	_	
26-12	5080-5086	131315	_	_	
26-13	5086-5087	_	_	_	
26-14	5087-5095	27032019	_	_	
26-15	5095-5096	_	_	_	
26-16	5096-5100	4679	_	_	
26-17	5100-5101	/	_	_	
26-18	5101-5111	model.ckpt	_	_	
26-19	5111-5112	"	_	_	
26-20	5113-5114	-	_	_	
26-21	5114-5115	-	_	_	
26-22	5115-5119	path	_	_	
26-23	5119-5120	=	_	_	
26-24	5120-5121	"	_	_	
26-25	5121-5122	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16"
#Text=```
#Text=
#Text=This will show on the terminal the average loss and will save a CVS file in the `test_loss` folder.
27-1	5122-5123	/	_	_	
27-2	5123-5130	results	_	_	
27-3	5130-5131	/	_	_	
27-4	5131-5139	cae_ep10	_	_	
27-5	5139-5140	_	_	_	
27-6	5140-5152	wdecay0.0001	_	_	
27-7	5152-5153	_	_	_	
27-8	5153-5160	units16	_	_	
27-9	5160-5161	"	_	_	
27-10	5162-5163	`	_	_	
27-11	5163-5164	`	_	_	
27-12	5164-5165	`	_	_	
27-13	5167-5171	This	_	_	
27-14	5172-5176	will	_	_	
27-15	5177-5181	show	_	_	
27-16	5182-5184	on	_	_	
27-17	5185-5188	the	_	_	
27-18	5189-5197	terminal	_	_	
27-19	5198-5201	the	_	_	
27-20	5202-5209	average	_	_	
27-21	5210-5214	loss	_	_	
27-22	5215-5218	and	_	_	
27-23	5219-5223	will	_	_	
27-24	5224-5228	save	_	_	
27-25	5229-5230	a	_	_	
27-26	5231-5234	CVS	_	_	
27-27	5235-5239	file	_	_	
27-28	5240-5242	in	_	_	
27-29	5243-5246	the	_	_	
27-30	5247-5248	`	_	_	
27-31	5248-5257	test_loss	_	_	
27-32	5257-5258	`	_	_	
27-33	5259-5265	folder	_	_	
27-34	5265-5266	.	_	_	

#Text=Generating artificial data
#Text=----------------------------
#Text=
#Text=A pretrained model can be used to generate artificial data from the test set.
28-1	5268-5278	Generating	_	_	
28-2	5279-5289	artificial	_	_	
28-3	5290-5294	data	_	_	
28-4	5295-5296	-	_	_	
28-5	5296-5297	-	_	_	
28-6	5297-5298	-	_	_	
28-7	5298-5299	-	_	_	
28-8	5299-5300	-	_	_	
28-9	5300-5301	-	_	_	
28-10	5301-5302	-	_	_	
28-11	5302-5303	-	_	_	
28-12	5303-5304	-	_	_	
28-13	5304-5305	-	_	_	
28-14	5305-5306	-	_	_	
28-15	5306-5307	-	_	_	
28-16	5307-5308	-	_	_	
28-17	5308-5309	-	_	_	
28-18	5309-5310	-	_	_	
28-19	5310-5311	-	_	_	
28-20	5311-5312	-	_	_	
28-21	5312-5313	-	_	_	
28-22	5313-5314	-	_	_	
28-23	5314-5315	-	_	_	
28-24	5315-5316	-	_	_	
28-25	5316-5317	-	_	_	
28-26	5317-5318	-	_	_	
28-27	5318-5319	-	_	_	
28-28	5319-5320	-	_	_	
28-29	5320-5321	-	_	_	
28-30	5321-5322	-	_	_	
28-31	5322-5323	-	_	_	
28-32	5325-5326	A	_	_	
28-33	5327-5337	pretrained	_	_	
28-34	5338-5343	model	_	_	
28-35	5344-5347	can	_	_	
28-36	5348-5350	be	_	_	
28-37	5351-5355	used	_	_	
28-38	5356-5358	to	_	_	
28-39	5359-5367	generate	_	_	
28-40	5368-5378	artificial	_	_	
28-41	5379-5383	data	_	_	
28-42	5384-5388	from	_	_	
28-43	5389-5392	the	_	_	
28-44	5393-5397	test	_	_	
28-45	5398-5401	set	_	_	
28-46	5401-5402	.	_	_	

#Text=The model is loaded in memory and the test set iterated element by element.
29-1	5403-5406	The	_	_	
29-2	5407-5412	model	_	_	
29-3	5413-5415	is	_	_	
29-4	5416-5422	loaded	_	_	
29-5	5423-5425	in	_	_	
29-6	5426-5432	memory	_	_	
29-7	5433-5436	and	_	_	
29-8	5437-5440	the	_	_	
29-9	5441-5445	test	_	_	
29-10	5446-5449	set	_	_	
29-11	5450-5458	iterated	_	_	
29-12	5459-5466	element	_	_	
29-13	5467-5469	by	_	_	
29-14	5470-5477	element	_	_	
29-15	5477-5478	.	_	_	

#Text=For each input 10 artificial digits are generated, each digit should keep the style of the input but with a different content.
30-1	5479-5482	For	_	_	
30-2	5483-5487	each	_	_	
30-3	5488-5493	input	_	_	
30-4	5494-5496	10	_	_	
30-5	5497-5507	artificial	_	_	
30-6	5508-5514	digits	_	_	
30-7	5515-5518	are	_	_	
30-8	5519-5528	generated	_	_	
30-9	5528-5529	,	_	_	
30-10	5530-5534	each	_	_	
30-11	5535-5540	digit	_	_	
30-12	5541-5547	should	_	_	
30-13	5548-5552	keep	_	_	
30-14	5553-5556	the	_	_	
30-15	5557-5562	style	_	_	
30-16	5563-5565	of	_	_	
30-17	5566-5569	the	_	_	
30-18	5570-5575	input	_	_	
30-19	5576-5579	but	_	_	
30-20	5580-5584	with	_	_	
30-21	5585-5586	a	_	_	
30-22	5587-5596	different	_	_	
30-23	5597-5604	content	_	_	
30-24	5604-5605	.	_	_	

#Text=For instance to generate the data for a regularized cAE you may have to run something like this:
#Text=
#Text=```
#Text=python test.py --arch="cae" --implicit_units=16 --type="gendata" --resume=".
31-1	5608-5611	For	_	_	
31-2	5612-5620	instance	_	_	
31-3	5621-5623	to	_	_	
31-4	5624-5632	generate	_	_	
31-5	5633-5636	the	_	_	
31-6	5637-5641	data	_	_	
31-7	5642-5645	for	_	_	
31-8	5646-5647	a	_	_	
31-9	5648-5659	regularized	_	_	
31-10	5660-5663	cAE	_	_	
31-11	5664-5667	you	_	_	
31-12	5668-5671	may	_	_	
31-13	5672-5676	have	_	_	
31-14	5677-5679	to	_	_	
31-15	5680-5683	run	_	_	
31-16	5684-5693	something	_	_	
31-17	5694-5698	like	_	_	
31-18	5699-5703	this	_	_	
31-19	5703-5704	:	_	_	
31-20	5706-5707	`	_	_	
31-21	5707-5708	`	_	_	
31-22	5708-5709	`	_	_	
31-23	5710-5716	python	*	SOFTWARE	
31-24	5717-5724	test.py	_	_	
31-25	5725-5726	-	_	_	
31-26	5726-5727	-	_	_	
31-27	5727-5731	arch	_	_	
31-28	5731-5732	=	_	_	
31-29	5732-5733	"	_	_	
31-30	5733-5736	cae	_	_	
31-31	5736-5737	"	_	_	
31-32	5738-5739	-	_	_	
31-33	5739-5740	-	_	_	
31-34	5740-5754	implicit_units	_	_	
31-35	5754-5755	=	_	_	
31-36	5755-5757	16	_	_	
31-37	5758-5759	-	_	_	
31-38	5759-5760	-	_	_	
31-39	5760-5764	type	_	_	
31-40	5764-5765	=	_	_	
31-41	5765-5766	"	_	_	
31-42	5766-5773	gendata	_	_	
31-43	5773-5774	"	_	_	
31-44	5775-5776	-	_	_	
31-45	5776-5777	-	_	_	
31-46	5777-5783	resume	_	_	
31-47	5783-5784	=	_	_	
31-48	5784-5785	"	_	_	
31-49	5785-5786	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16/model/131315_27032019_4679/model.ckpt" --path=".
32-1	5786-5787	/	_	_	
32-2	5787-5794	results	_	_	
32-3	5794-5795	/	_	_	
32-4	5795-5803	cae_ep10	_	_	
32-5	5803-5804	_	_	_	
32-6	5804-5816	wdecay0.0001	_	_	
32-7	5816-5817	_	_	_	
32-8	5817-5824	units16	_	_	
32-9	5824-5825	/	_	_	
32-10	5825-5830	model	_	_	
32-11	5830-5831	/	_	_	
32-12	5831-5837	131315	_	_	
32-13	5837-5838	_	_	_	
32-14	5838-5846	27032019	_	_	
32-15	5846-5847	_	_	_	
32-16	5847-5851	4679	_	_	
32-17	5851-5852	/	_	_	
32-18	5852-5862	model.ckpt	_	_	
32-19	5862-5863	"	_	_	
32-20	5864-5865	-	_	_	
32-21	5865-5866	-	_	_	
32-22	5866-5870	path	_	_	
32-23	5870-5871	=	_	_	
32-24	5871-5872	"	_	_	
32-25	5872-5873	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16"
#Text=```
#Text=
#Text=This will create a new folder named `gendata` with numpy features and labels of the artificial dataset.
33-1	5873-5874	/	_	_	
33-2	5874-5881	results	_	_	
33-3	5881-5882	/	_	_	
33-4	5882-5890	cae_ep10	_	_	
33-5	5890-5891	_	_	_	
33-6	5891-5903	wdecay0.0001	_	_	
33-7	5903-5904	_	_	_	
33-8	5904-5911	units16	_	_	
33-9	5911-5912	"	_	_	
33-10	5913-5914	`	_	_	
33-11	5914-5915	`	_	_	
33-12	5915-5916	`	_	_	
33-13	5918-5922	This	_	_	
33-14	5923-5927	will	_	_	
33-15	5928-5934	create	_	_	
33-16	5935-5936	a	_	_	
33-17	5937-5940	new	_	_	
33-18	5941-5947	folder	_	_	
33-19	5948-5953	named	_	_	
33-20	5954-5955	`	_	_	
33-21	5955-5962	gendata	_	_	
33-22	5962-5963	`	_	_	
33-23	5964-5968	with	_	_	
33-24	5969-5974	numpy	*	SOFTWARE	
33-25	5975-5983	features	_	_	
33-26	5984-5987	and	_	_	
33-27	5988-5994	labels	_	_	
33-28	5995-5997	of	_	_	
33-29	5998-6001	the	_	_	
33-30	6002-6012	artificial	_	_	
33-31	6013-6020	dataset	_	_	
33-32	6020-6021	.	_	_	

#Text=Those can be visualized with matplotlib.
34-1	6022-6027	Those	_	_	
34-2	6028-6031	can	_	_	
34-3	6032-6034	be	_	_	
34-4	6035-6045	visualized	_	_	
34-5	6046-6050	with	_	_	
34-6	6051-6061	matplotlib	*	SOFTWARE	
34-7	6061-6062	.	_	_	

#Text=The artificial data can also be used for testing the accuracy of an external classifier, in order to verify the quality of the samples.
35-1	6063-6066	The	_	_	
35-2	6067-6077	artificial	_	_	
35-3	6078-6082	data	_	_	
35-4	6083-6086	can	_	_	
35-5	6087-6091	also	_	_	
35-6	6092-6094	be	_	_	
35-7	6095-6099	used	_	_	
35-8	6100-6103	for	_	_	
35-9	6104-6111	testing	_	_	
35-10	6112-6115	the	_	_	
35-11	6116-6124	accuracy	_	_	
35-12	6125-6127	of	_	_	
35-13	6128-6130	an	_	_	
35-14	6131-6139	external	_	_	
35-15	6140-6150	classifier	_	_	
35-16	6150-6151	,	_	_	
35-17	6152-6154	in	_	_	
35-18	6155-6160	order	_	_	
35-19	6161-6163	to	_	_	
35-20	6164-6170	verify	_	_	
35-21	6171-6174	the	_	_	
35-22	6175-6182	quality	_	_	
35-23	6183-6185	of	_	_	
35-24	6186-6189	the	_	_	
35-25	6190-6197	samples	_	_	
35-26	6197-6198	.	_	_	

#Text=Metrics
#Text=--------
#Text=
#Text=Given the artificial data generated in the previous step it is now possible to measure the internal MSE and SSMI.
36-1	6200-6207	Metrics	_	_	
36-2	6208-6209	-	_	_	
36-3	6209-6210	-	_	_	
36-4	6210-6211	-	_	_	
36-5	6211-6212	-	_	_	
36-6	6212-6213	-	_	_	
36-7	6213-6214	-	_	_	
36-8	6214-6215	-	_	_	
36-9	6215-6216	-	_	_	
36-10	6218-6223	Given	_	_	
36-11	6224-6227	the	_	_	
36-12	6228-6238	artificial	_	_	
36-13	6239-6243	data	_	_	
36-14	6244-6253	generated	_	_	
36-15	6254-6256	in	_	_	
36-16	6257-6260	the	_	_	
36-17	6261-6269	previous	_	_	
36-18	6270-6274	step	_	_	
36-19	6275-6277	it	_	_	
36-20	6278-6280	is	_	_	
36-21	6281-6284	now	_	_	
36-22	6285-6293	possible	_	_	
36-23	6294-6296	to	_	_	
36-24	6297-6304	measure	_	_	
36-25	6305-6308	the	_	_	
36-26	6309-6317	internal	_	_	
36-27	6318-6321	MSE	*	EVALMETRIC	
36-28	6322-6325	and	_	_	
36-29	6326-6330	SSMI	*	EVALMETRIC	
36-30	6330-6331	.	_	_	

#Text=This can be done through the test type `metrics` that requires the path to the `gendata` folder.
37-1	6332-6336	This	_	_	
37-2	6337-6340	can	_	_	
37-3	6341-6343	be	_	_	
37-4	6344-6348	done	_	_	
37-5	6349-6356	through	_	_	
37-6	6357-6360	the	_	_	
37-7	6361-6365	test	_	_	
37-8	6366-6370	type	_	_	
37-9	6371-6372	`	_	_	
37-10	6372-6379	metrics	_	_	
37-11	6379-6380	`	_	_	
37-12	6381-6385	that	_	_	
37-13	6386-6394	requires	_	_	
37-14	6395-6398	the	_	_	
37-15	6399-6403	path	_	_	
37-16	6404-6406	to	_	_	
37-17	6407-6410	the	_	_	
37-18	6411-6412	`	_	_	
37-19	6412-6419	gendata	_	_	
37-20	6419-6420	`	_	_	
37-21	6421-6427	folder	_	_	
37-22	6427-6428	.	_	_	

#Text=The command to run may look like this:
#Text=
#Text=```
#Text=python test.py --arch="cae" --implicit_units=16 --type="metrics" --tot_samples=20 --resume="/home/mpatacchiola/Y-autoencoder-paper/code/results/cae_ep10_wdecay0.0001_units16/model/131315_27032019_4679/model.ckpt" --path=".
38-1	6429-6432	The	_	_	
38-2	6433-6440	command	_	_	
38-3	6441-6443	to	_	_	
38-4	6444-6447	run	_	_	
38-5	6448-6451	may	_	_	
38-6	6452-6456	look	_	_	
38-7	6457-6461	like	_	_	
38-8	6462-6466	this	_	_	
38-9	6466-6467	:	_	_	
38-10	6469-6470	`	_	_	
38-11	6470-6471	`	_	_	
38-12	6471-6472	`	_	_	
38-13	6473-6479	python	*	SOFTWARE	
38-14	6480-6487	test.py	_	_	
38-15	6488-6489	-	_	_	
38-16	6489-6490	-	_	_	
38-17	6490-6494	arch	_	_	
38-18	6494-6495	=	_	_	
38-19	6495-6496	"	_	_	
38-20	6496-6499	cae	_	_	
38-21	6499-6500	"	_	_	
38-22	6501-6502	-	_	_	
38-23	6502-6503	-	_	_	
38-24	6503-6517	implicit_units	_	_	
38-25	6517-6518	=	_	_	
38-26	6518-6520	16	_	_	
38-27	6521-6522	-	_	_	
38-28	6522-6523	-	_	_	
38-29	6523-6527	type	_	_	
38-30	6527-6528	=	_	_	
38-31	6528-6529	"	_	_	
38-32	6529-6536	metrics	_	_	
38-33	6536-6537	"	_	_	
38-34	6538-6539	-	_	_	
38-35	6539-6540	-	_	_	
38-36	6540-6551	tot_samples	_	_	
38-37	6551-6552	=	_	_	
38-38	6552-6554	20	_	_	
38-39	6555-6556	-	_	_	
38-40	6556-6557	-	_	_	
38-41	6557-6563	resume	_	_	
38-42	6563-6564	=	_	_	
38-43	6564-6565	"	_	_	
38-44	6565-6566	/	_	_	
38-45	6566-6570	home	_	_	
38-46	6570-6571	/	_	_	
38-47	6571-6583	mpatacchiola	_	_	
38-48	6583-6584	/	_	_	
38-49	6584-6603	Y-autoencoder-paper	_	_	
38-50	6603-6604	/	_	_	
38-51	6604-6608	code	_	_	
38-52	6608-6609	/	_	_	
38-53	6609-6616	results	_	_	
38-54	6616-6617	/	_	_	
38-55	6617-6625	cae_ep10	_	_	
38-56	6625-6626	_	_	_	
38-57	6626-6638	wdecay0.0001	_	_	
38-58	6638-6639	_	_	_	
38-59	6639-6646	units16	_	_	
38-60	6646-6647	/	_	_	
38-61	6647-6652	model	_	_	
38-62	6652-6653	/	_	_	
38-63	6653-6659	131315	_	_	
38-64	6659-6660	_	_	_	
38-65	6660-6668	27032019	_	_	
38-66	6668-6669	_	_	_	
38-67	6669-6673	4679	_	_	
38-68	6673-6674	/	_	_	
38-69	6674-6684	model.ckpt	_	_	
38-70	6684-6685	"	_	_	
38-71	6686-6687	-	_	_	
38-72	6687-6688	-	_	_	
38-73	6688-6692	path	_	_	
38-74	6692-6693	=	_	_	
38-75	6693-6694	"	_	_	
38-76	6694-6695	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16" --gendata_path=".
39-1	6695-6696	/	_	_	
39-2	6696-6703	results	_	_	
39-3	6703-6704	/	_	_	
39-4	6704-6712	cae_ep10	_	_	
39-5	6712-6713	_	_	_	
39-6	6713-6725	wdecay0.0001	_	_	
39-7	6725-6726	_	_	_	
39-8	6726-6733	units16	_	_	
39-9	6733-6734	"	_	_	
39-10	6735-6736	-	_	_	
39-11	6736-6737	-	_	_	
39-12	6737-6749	gendata_path	_	_	
39-13	6749-6750	=	_	_	
39-14	6750-6751	"	_	_	
39-15	6751-6752	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16/gendata/132252_27032019" 
#Text=```
#Text=
#Text=This will generate a folder named `samples` with the generated data produced for the first 20 samples in the test set, this value can be changed modifying the parameter `--tot_samples=20`.
40-1	6752-6753	/	_	_	
40-2	6753-6760	results	_	_	
40-3	6760-6761	/	_	_	
40-4	6761-6769	cae_ep10	_	_	
40-5	6769-6770	_	_	_	
40-6	6770-6782	wdecay0.0001	_	_	
40-7	6782-6783	_	_	_	
40-8	6783-6790	units16	_	_	
40-9	6790-6791	/	_	_	
40-10	6791-6798	gendata	_	_	
40-11	6798-6799	/	_	_	
40-12	6799-6805	132252	_	_	
40-13	6805-6806	_	_	_	
40-14	6806-6814	27032019	_	_	
40-15	6814-6815	"	_	_	
40-16	6817-6818	`	_	_	
40-17	6818-6819	`	_	_	
40-18	6819-6820	`	_	_	
40-19	6822-6826	This	_	_	
40-20	6827-6831	will	_	_	
40-21	6832-6840	generate	_	_	
40-22	6841-6842	a	_	_	
40-23	6843-6849	folder	_	_	
40-24	6850-6855	named	_	_	
40-25	6856-6857	`	_	_	
40-26	6857-6864	samples	_	_	
40-27	6864-6865	`	_	_	
40-28	6866-6870	with	_	_	
40-29	6871-6874	the	_	_	
40-30	6875-6884	generated	_	_	
40-31	6885-6889	data	_	_	
40-32	6890-6898	produced	_	_	
40-33	6899-6902	for	_	_	
40-34	6903-6906	the	_	_	
40-35	6907-6912	first	_	_	
40-36	6913-6915	20	_	_	
40-37	6916-6923	samples	_	_	
40-38	6924-6926	in	_	_	
40-39	6927-6930	the	_	_	
40-40	6931-6935	test	_	_	
40-41	6936-6939	set	_	_	
40-42	6939-6940	,	_	_	
40-43	6941-6945	this	_	_	
40-44	6946-6951	value	_	_	
40-45	6952-6955	can	_	_	
40-46	6956-6958	be	_	_	
40-47	6959-6966	changed	_	_	
40-48	6967-6976	modifying	_	_	
40-49	6977-6980	the	_	_	
40-50	6981-6990	parameter	_	_	
40-51	6991-6992	`	_	_	
40-52	6992-6993	-	_	_	
40-53	6993-6994	-	_	_	
40-54	6994-7005	tot_samples	_	_	
40-55	7005-7006	=	_	_	
40-56	7006-7008	20	_	_	
40-57	7008-7009	`	_	_	
40-58	7009-7010	.	_	_	

#Text=Moreover, the MSE and SSMI will be both printed on terminal and saved on a CSV file in the `metrics` folder.
41-1	7011-7019	Moreover	_	_	
41-2	7019-7020	,	_	_	
41-3	7021-7024	the	_	_	
41-4	7025-7028	MSE	*	EVALMETRIC	
41-5	7029-7032	and	_	_	
41-6	7033-7037	SSMI	*	EVALMETRIC	
41-7	7038-7042	will	_	_	
41-8	7043-7045	be	_	_	
41-9	7046-7050	both	_	_	
41-10	7051-7058	printed	_	_	
41-11	7059-7061	on	_	_	
41-12	7062-7070	terminal	_	_	
41-13	7071-7074	and	_	_	
41-14	7075-7080	saved	_	_	
41-15	7081-7083	on	_	_	
41-16	7084-7085	a	_	_	
41-17	7086-7089	CSV	_	_	
41-18	7090-7094	file	_	_	
41-19	7095-7097	in	_	_	
41-20	7098-7101	the	_	_	
41-21	7102-7103	`	_	_	
41-22	7103-7110	metrics	_	_	
41-23	7110-7111	`	_	_	
41-24	7112-7118	folder	_	_	
41-25	7118-7119	.	_	_	

#Text=Ensemble accuracy
#Text=------------------
#Text=
#Text=It is possible to use an external classifier, like a LeNet, to verify if the digit produced in the `gendata` step are recognized.
42-1	7121-7129	Ensemble	_	_	
42-2	7130-7138	accuracy	_	_	
42-3	7139-7140	-	_	_	
42-4	7140-7141	-	_	_	
42-5	7141-7142	-	_	_	
42-6	7142-7143	-	_	_	
42-7	7143-7144	-	_	_	
42-8	7144-7145	-	_	_	
42-9	7145-7146	-	_	_	
42-10	7146-7147	-	_	_	
42-11	7147-7148	-	_	_	
42-12	7148-7149	-	_	_	
42-13	7149-7150	-	_	_	
42-14	7150-7151	-	_	_	
42-15	7151-7152	-	_	_	
42-16	7152-7153	-	_	_	
42-17	7153-7154	-	_	_	
42-18	7154-7155	-	_	_	
42-19	7155-7156	-	_	_	
42-20	7156-7157	-	_	_	
42-21	7159-7161	It	_	_	
42-22	7162-7164	is	_	_	
42-23	7165-7173	possible	_	_	
42-24	7174-7176	to	_	_	
42-25	7177-7180	use	_	_	
42-26	7181-7183	an	_	_	
42-27	7184-7192	external	_	_	
42-28	7193-7203	classifier	_	_	
42-29	7203-7204	,	_	_	
42-30	7205-7209	like	_	_	
42-31	7210-7211	a	_	_	
42-32	7212-7217	LeNet	*	SOFTWARE	
42-33	7217-7218	,	_	_	
42-34	7219-7221	to	_	_	
42-35	7222-7228	verify	_	_	
42-36	7229-7231	if	_	_	
42-37	7232-7235	the	_	_	
42-38	7236-7241	digit	_	_	
42-39	7242-7250	produced	_	_	
42-40	7251-7253	in	_	_	
42-41	7254-7257	the	_	_	
42-42	7258-7259	`	_	_	
42-43	7259-7266	gendata	_	_	
42-44	7266-7267	`	_	_	
42-45	7268-7272	step	_	_	
42-46	7273-7276	are	_	_	
42-47	7277-7287	recognized	_	_	
42-48	7287-7288	.	_	_	

#Text=Once the LeNet has been trained (see `Training` section) it is possible to load the model and get the accuracy metric.
43-1	7289-7293	Once	_	_	
43-2	7294-7297	the	_	_	
43-3	7298-7303	LeNet	*	SOFTWARE	
43-4	7304-7307	has	_	_	
43-5	7308-7312	been	_	_	
43-6	7313-7320	trained	_	_	
43-7	7321-7322	(	_	_	
43-8	7322-7325	see	_	_	
43-9	7326-7327	`	_	_	
43-10	7327-7335	Training	_	_	
43-11	7335-7336	`	_	_	
43-12	7337-7344	section	_	_	
43-13	7344-7345	)	_	_	
43-14	7346-7348	it	_	_	
43-15	7349-7351	is	_	_	
43-16	7352-7360	possible	_	_	
43-17	7361-7363	to	_	_	
43-18	7364-7368	load	_	_	
43-19	7369-7372	the	_	_	
43-20	7373-7378	model	_	_	
43-21	7379-7382	and	_	_	
43-22	7383-7386	get	_	_	
43-23	7387-7390	the	_	_	
43-24	7391-7399	accuracy	_	_	
43-25	7400-7406	metric	_	_	
43-26	7406-7407	.	_	_	

#Text=The command will be similar to this one:
#Text=
#Text=```
#Text=python test.py --arch="lenet" --type="accuracy" --batch=30000 --resume=".
44-1	7408-7411	The	_	_	
44-2	7412-7419	command	_	_	
44-3	7420-7424	will	_	_	
44-4	7425-7427	be	_	_	
44-5	7428-7435	similar	_	_	
44-6	7436-7438	to	_	_	
44-7	7439-7443	this	_	_	
44-8	7444-7447	one	_	_	
44-9	7447-7448	:	_	_	
44-10	7450-7451	`	_	_	
44-11	7451-7452	`	_	_	
44-12	7452-7453	`	_	_	
44-13	7454-7460	python	*	PROGLANG	
44-14	7461-7468	test.py	_	_	
44-15	7469-7470	-	_	_	
44-16	7470-7471	-	_	_	
44-17	7471-7475	arch	_	_	
44-18	7475-7476	=	_	_	
44-19	7476-7477	"	_	_	
44-20	7477-7482	lenet	_	_	
44-21	7482-7483	"	_	_	
44-22	7484-7485	-	_	_	
44-23	7485-7486	-	_	_	
44-24	7486-7490	type	_	_	
44-25	7490-7491	=	_	_	
44-26	7491-7492	"	_	_	
44-27	7492-7500	accuracy	*	EVALMETRIC	
44-28	7500-7501	"	_	_	
44-29	7502-7503	-	_	_	
44-30	7503-7504	-	_	_	
44-31	7504-7509	batch	_	_	
44-32	7509-7510	=	_	_	
44-33	7510-7515	30000	_	_	
44-34	7516-7517	-	_	_	
44-35	7517-7518	-	_	_	
44-36	7518-7524	resume	_	_	
44-37	7524-7525	=	_	_	
44-38	7525-7526	"	_	_	
44-39	7526-7527	.	_	_	

#Text=/results/lenet_ep30_wdecay0.0001_lr0.0001/model/140744_28032019_14039/model.ckpt" --path=".
45-1	7527-7528	/	_	_	
45-2	7528-7535	results	_	_	
45-3	7535-7536	/	_	_	
45-4	7536-7546	lenet_ep30	_	_	
45-5	7546-7547	_	_	_	
45-6	7547-7559	wdecay0.0001	_	_	
45-7	7559-7560	_	_	_	
45-8	7560-7568	lr0.0001	_	_	
45-9	7568-7569	/	_	_	
45-10	7569-7574	model	_	_	
45-11	7574-7575	/	_	_	
45-12	7575-7581	140744	_	_	
45-13	7581-7582	_	_	_	
45-14	7582-7590	28032019	_	_	
45-15	7590-7591	_	_	_	
45-16	7591-7596	14039	_	_	
45-17	7596-7597	/	_	_	
45-18	7597-7607	model.ckpt	_	_	
45-19	7607-7608	"	_	_	
45-20	7609-7610	-	_	_	
45-21	7610-7611	-	_	_	
45-22	7611-7615	path	_	_	
45-23	7615-7616	=	_	_	
45-24	7616-7617	"	_	_	
45-25	7617-7618	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16" --gendata_path=".
46-1	7618-7619	/	_	_	
46-2	7619-7626	results	_	_	
46-3	7626-7627	/	_	_	
46-4	7627-7635	cae_ep10	_	_	
46-5	7635-7636	_	_	_	
46-6	7636-7648	wdecay0.0001	_	_	
46-7	7648-7649	_	_	_	
46-8	7649-7656	units16	_	_	
46-9	7656-7657	"	_	_	
46-10	7658-7659	-	_	_	
46-11	7659-7660	-	_	_	
46-12	7660-7672	gendata_path	_	_	
46-13	7672-7673	=	_	_	
46-14	7673-7674	"	_	_	
46-15	7674-7675	.	_	_	

#Text=/results/cae_ep10_wdecay0.0001_units16/gendata/132252_27032019" 
#Text=```
#Text=
#Text=The command will print the loss and accuracy on this dataset.
47-1	7675-7676	/	_	_	
47-2	7676-7683	results	_	_	
47-3	7683-7684	/	_	_	
47-4	7684-7692	cae_ep10	_	_	
47-5	7692-7693	_	_	_	
47-6	7693-7705	wdecay0.0001	_	_	
47-7	7705-7706	_	_	_	
47-8	7706-7713	units16	_	_	
47-9	7713-7714	/	_	_	
47-10	7714-7721	gendata	_	_	
47-11	7721-7722	/	_	_	
47-12	7722-7728	132252	_	_	
47-13	7728-7729	_	_	_	
47-14	7729-7737	27032019	_	_	
47-15	7737-7738	"	_	_	
47-16	7740-7741	`	_	_	
47-17	7741-7742	`	_	_	
47-18	7742-7743	`	_	_	
47-19	7745-7748	The	_	_	
47-20	7749-7756	command	_	_	
47-21	7757-7761	will	_	_	
47-22	7762-7767	print	_	_	
47-23	7768-7771	the	_	_	
47-24	7772-7776	loss	_	_	
47-25	7777-7780	and	_	_	
47-26	7781-7789	accuracy	*	EVALMETRIC	
47-27	7790-7792	on	_	_	
47-28	7793-7797	this	_	_	
47-29	7798-7805	dataset	_	_	
47-30	7805-7806	.	_	_	

#Text=Moreover, a CSV file will be stored in the subdir `test_gendata_accuracy` in the `--path` folder.
48-1	7807-7815	Moreover	_	_	
48-2	7815-7816	,	_	_	
48-3	7817-7818	a	_	_	
48-4	7819-7822	CSV	_	_	
48-5	7823-7827	file	_	_	
48-6	7828-7832	will	_	_	
48-7	7833-7835	be	_	_	
48-8	7836-7842	stored	_	_	
48-9	7843-7845	in	_	_	
48-10	7846-7849	the	_	_	
48-11	7850-7856	subdir	_	_	
48-12	7857-7858	`	_	_	
48-13	7858-7879	test_gendata_accuracy	_	_	
48-14	7879-7880	`	_	_	
48-15	7881-7883	in	_	_	
48-16	7884-7887	the	_	_	
48-17	7888-7889	`	_	_	
48-18	7889-7890	-	_	_	
48-19	7890-7891	-	_	_	
48-20	7891-7895	path	_	_	
48-21	7895-7896	`	_	_	
48-22	7897-7903	folder	_	_	
48-23	7903-7904	.	_	_	

#Text=The parameter `batch` define how many random samples to take from the gendata dataset, depending on your machine you can increase or decrease this value (the maximum size of the artificial dataset is 100000 features).
49-1	7905-7908	The	_	_	
49-2	7909-7918	parameter	_	_	
49-3	7919-7920	`	_	_	
49-4	7920-7925	batch	_	_	
49-5	7925-7926	`	_	_	
49-6	7927-7933	define	_	_	
49-7	7934-7937	how	_	_	
49-8	7938-7942	many	_	_	
49-9	7943-7949	random	_	_	
49-10	7950-7957	samples	_	_	
49-11	7958-7960	to	_	_	
49-12	7961-7965	take	_	_	
49-13	7966-7970	from	_	_	
49-14	7971-7974	the	_	_	
49-15	7975-7982	gendata	_	_	
49-16	7983-7990	dataset	_	_	
49-17	7990-7991	,	_	_	
49-18	7992-8001	depending	_	_	
49-19	8002-8004	on	_	_	
49-20	8005-8009	your	_	_	
49-21	8010-8017	machine	_	_	
49-22	8018-8021	you	_	_	
49-23	8022-8025	can	_	_	
49-24	8026-8034	increase	_	_	
49-25	8035-8037	or	_	_	
49-26	8038-8046	decrease	_	_	
49-27	8047-8051	this	_	_	
49-28	8052-8057	value	_	_	
49-29	8058-8059	(	_	_	
49-30	8059-8062	the	_	_	
49-31	8063-8070	maximum	_	_	
49-32	8071-8075	size	_	_	
49-33	8076-8078	of	_	_	
49-34	8079-8082	the	_	_	
49-35	8083-8093	artificial	_	_	
49-36	8094-8101	dataset	_	_	
49-37	8102-8104	is	_	_	
49-38	8105-8111	100000	_	_	
49-39	8112-8120	features	_	_	
49-40	8120-8121	)	_	_	
49-41	8121-8122	.	_	_	

#Text=License
#Text==========
#Text=
#Text=MIT License
#Text=
#Text=Copyright (c) 2019 Massimiliano Patacchiola, Patrick Fox-Roberts, Edward Rosten
#Text=
#Text=Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#Text=
#Text=The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
50-1	8125-8132	License	_	_	
50-2	8133-8134	=	_	_	
50-3	8134-8135	=	_	_	
50-4	8135-8136	=	_	_	
50-5	8136-8137	=	_	_	
50-6	8137-8138	=	_	_	
50-7	8138-8139	=	_	_	
50-8	8139-8140	=	_	_	
50-9	8140-8141	=	_	_	
50-10	8141-8142	=	_	_	
50-11	8144-8147	MIT	*[15]	LICENSE[15]	
50-12	8148-8155	License	*[15]	LICENSE[15]	
50-13	8157-8166	Copyright	_	_	
50-14	8167-8168	(	_	_	
50-15	8168-8169	c	_	_	
50-16	8169-8170	)	_	_	
50-17	8171-8175	2019	_	_	
50-18	8176-8188	Massimiliano	_	_	
50-19	8189-8200	Patacchiola	_	_	
50-20	8200-8201	,	_	_	
50-21	8202-8209	Patrick	_	_	
50-22	8210-8221	Fox-Roberts	_	_	
50-23	8221-8222	,	_	_	
50-24	8223-8229	Edward	_	_	
50-25	8230-8236	Rosten	_	_	
50-26	8238-8248	Permission	_	_	
50-27	8249-8251	is	_	_	
50-28	8252-8258	hereby	_	_	
50-29	8259-8266	granted	_	_	
50-30	8266-8267	,	_	_	
50-31	8268-8272	free	_	_	
50-32	8273-8275	of	_	_	
50-33	8276-8282	charge	_	_	
50-34	8282-8283	,	_	_	
50-35	8284-8286	to	_	_	
50-36	8287-8290	any	_	_	
50-37	8291-8297	person	_	_	
50-38	8298-8307	obtaining	_	_	
50-39	8308-8309	a	_	_	
50-40	8310-8314	copy	_	_	
50-41	8315-8317	of	_	_	
50-42	8318-8322	this	_	_	
50-43	8323-8331	software	_	_	
50-44	8332-8335	and	_	_	
50-45	8336-8346	associated	_	_	
50-46	8347-8360	documentation	_	_	
50-47	8361-8366	files	_	_	
50-48	8367-8368	(	_	_	
50-49	8368-8371	the	_	_	
50-50	8372-8373	"	_	_	
50-51	8373-8381	Software	_	_	
50-52	8381-8382	"	_	_	
50-53	8382-8383	)	_	_	
50-54	8383-8384	,	_	_	
50-55	8385-8387	to	_	_	
50-56	8388-8392	deal	_	_	
50-57	8393-8395	in	_	_	
50-58	8396-8399	the	_	_	
50-59	8400-8408	Software	_	_	
50-60	8409-8416	without	_	_	
50-61	8417-8428	restriction	_	_	
50-62	8428-8429	,	_	_	
50-63	8430-8439	including	_	_	
50-64	8440-8447	without	_	_	
50-65	8448-8458	limitation	_	_	
50-66	8459-8462	the	_	_	
50-67	8463-8469	rights	_	_	
50-68	8470-8472	to	_	_	
50-69	8473-8476	use	_	_	
50-70	8476-8477	,	_	_	
50-71	8478-8482	copy	_	_	
50-72	8482-8483	,	_	_	
50-73	8484-8490	modify	_	_	
50-74	8490-8491	,	_	_	
50-75	8492-8497	merge	_	_	
50-76	8497-8498	,	_	_	
50-77	8499-8506	publish	_	_	
50-78	8506-8507	,	_	_	
50-79	8508-8518	distribute	_	_	
50-80	8518-8519	,	_	_	
50-81	8520-8530	sublicense	_	_	
50-82	8530-8531	,	_	_	
50-83	8532-8535	and	_	_	
50-84	8535-8536	/	_	_	
50-85	8536-8538	or	_	_	
50-86	8539-8543	sell	_	_	
50-87	8544-8550	copies	_	_	
50-88	8551-8553	of	_	_	
50-89	8554-8557	the	_	_	
50-90	8558-8566	Software	_	_	
50-91	8566-8567	,	_	_	
50-92	8568-8571	and	_	_	
50-93	8572-8574	to	_	_	
50-94	8575-8581	permit	_	_	
50-95	8582-8589	persons	_	_	
50-96	8590-8592	to	_	_	
50-97	8593-8597	whom	_	_	
50-98	8598-8601	the	_	_	
50-99	8602-8610	Software	_	_	
50-100	8611-8613	is	_	_	
50-101	8614-8623	furnished	_	_	
50-102	8624-8626	to	_	_	
50-103	8627-8629	do	_	_	
50-104	8630-8632	so	_	_	
50-105	8632-8633	,	_	_	
50-106	8634-8641	subject	_	_	
50-107	8642-8644	to	_	_	
50-108	8645-8648	the	_	_	
50-109	8649-8658	following	_	_	
50-110	8659-8669	conditions	_	_	
50-111	8669-8670	:	_	_	
50-112	8672-8675	The	_	_	
50-113	8676-8681	above	_	_	
50-114	8682-8691	copyright	_	_	
50-115	8692-8698	notice	_	_	
50-116	8699-8702	and	_	_	
50-117	8703-8707	this	_	_	
50-118	8708-8718	permission	_	_	
50-119	8719-8725	notice	_	_	
50-120	8726-8731	shall	_	_	
50-121	8732-8734	be	_	_	
50-122	8735-8743	included	_	_	
50-123	8744-8746	in	_	_	
50-124	8747-8750	all	_	_	
50-125	8751-8757	copies	_	_	
50-126	8758-8760	or	_	_	
50-127	8761-8772	substantial	_	_	
50-128	8773-8781	portions	_	_	
50-129	8782-8784	of	_	_	
50-130	8785-8788	the	_	_	
50-131	8789-8797	Software	_	_	
50-132	8797-8798	.	_	_	

#Text=THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
51-1	8800-8803	THE	_	_	
51-2	8804-8812	SOFTWARE	_	_	
51-3	8813-8815	IS	_	_	
51-4	8816-8824	PROVIDED	_	_	
51-5	8825-8826	"	_	_	
51-6	8826-8828	AS	_	_	
51-7	8829-8831	IS	_	_	
51-8	8831-8832	"	_	_	
51-9	8832-8833	,	_	_	
51-10	8834-8841	WITHOUT	_	_	
51-11	8842-8850	WARRANTY	_	_	
51-12	8851-8853	OF	_	_	
51-13	8854-8857	ANY	_	_	
51-14	8858-8862	KIND	_	_	
51-15	8862-8863	,	_	_	
51-16	8864-8871	EXPRESS	_	_	
51-17	8872-8874	OR	_	_	
51-18	8875-8882	IMPLIED	_	_	
51-19	8882-8883	,	_	_	
51-20	8884-8893	INCLUDING	_	_	
51-21	8894-8897	BUT	_	_	
51-22	8898-8901	NOT	_	_	
51-23	8902-8909	LIMITED	_	_	
51-24	8910-8912	TO	_	_	
51-25	8913-8916	THE	_	_	
51-26	8917-8927	WARRANTIES	_	_	
51-27	8928-8930	OF	_	_	
51-28	8931-8946	MERCHANTABILITY	_	_	
51-29	8946-8947	,	_	_	
51-30	8948-8955	FITNESS	_	_	
51-31	8956-8959	FOR	_	_	
51-32	8960-8961	A	_	_	
51-33	8962-8972	PARTICULAR	_	_	
51-34	8973-8980	PURPOSE	_	_	
51-35	8981-8984	AND	_	_	
51-36	8985-9000	NONINFRINGEMENT	_	_	
51-37	9000-9001	.	_	_	

#Text=IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
52-1	9002-9004	IN	_	_	
52-2	9005-9007	NO	_	_	
52-3	9008-9013	EVENT	_	_	
52-4	9014-9019	SHALL	_	_	
52-5	9020-9023	THE	_	_	
52-6	9024-9031	AUTHORS	_	_	
52-7	9032-9034	OR	_	_	
52-8	9035-9044	COPYRIGHT	_	_	
52-9	9045-9052	HOLDERS	_	_	
52-10	9053-9055	BE	_	_	
52-11	9056-9062	LIABLE	_	_	
52-12	9063-9066	FOR	_	_	
52-13	9067-9070	ANY	_	_	
52-14	9071-9076	CLAIM	_	_	
52-15	9076-9077	,	_	_	
52-16	9078-9085	DAMAGES	_	_	
52-17	9086-9088	OR	_	_	
52-18	9089-9094	OTHER	_	_	
52-19	9095-9104	LIABILITY	_	_	
52-20	9104-9105	,	_	_	
52-21	9106-9113	WHETHER	_	_	
52-22	9114-9116	IN	_	_	
52-23	9117-9119	AN	_	_	
52-24	9120-9126	ACTION	_	_	
52-25	9127-9129	OF	_	_	
52-26	9130-9138	CONTRACT	_	_	
52-27	9138-9139	,	_	_	
52-28	9140-9144	TORT	_	_	
52-29	9145-9147	OR	_	_	
52-30	9148-9157	OTHERWISE	_	_	
52-31	9157-9158	,	_	_	
52-32	9159-9166	ARISING	_	_	
52-33	9167-9171	FROM	_	_	
52-34	9171-9172	,	_	_	
52-35	9173-9176	OUT	_	_	
52-36	9177-9179	OF	_	_	
52-37	9180-9182	OR	_	_	
52-38	9183-9185	IN	_	_	
52-39	9186-9196	CONNECTION	_	_	
52-40	9197-9201	WITH	_	_	
52-41	9202-9205	THE	_	_	
52-42	9206-9214	SOFTWARE	_	_	
52-43	9215-9217	OR	_	_	
52-44	9218-9221	THE	_	_	
52-45	9222-9225	USE	_	_	
52-46	9226-9228	OR	_	_	
52-47	9229-9234	OTHER	_	_	
52-48	9235-9243	DEALINGS	_	_	
52-49	9244-9246	IN	_	_	
52-50	9247-9250	THE	_	_	
52-51	9251-9259	SOFTWARE	_	_	
52-52	9259-9260	.	_	_	
