#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value


#Text=# DiHT
#Text="Filtering, Distillation, and Hard Negatives for Vision-Language Pre-Training" [[Paper](https://arxiv.org/abs/2301.02280)]
#Text=
#Text=## Installation
#Text=
#Text=```bash
#Text=git clone https://github.com/facebookresearch/diht
#Text=cd diht
#Text=pip install -r requirements.txt
#Text=pip install -e
1-1	0-1	#	_	_	
1-2	2-6	DiHT	*	SOFTWARE	
1-3	7-8	"	_	_	
1-4	8-17	Filtering	*[1]	PUBLICATION[1]	
1-5	17-18	,	*[1]	PUBLICATION[1]	
1-6	19-31	Distillation	*[1]	PUBLICATION[1]	
1-7	31-32	,	*[1]	PUBLICATION[1]	
1-8	33-36	and	*[1]	PUBLICATION[1]	
1-9	37-41	Hard	*[1]	PUBLICATION[1]	
1-10	42-51	Negatives	*[1]	PUBLICATION[1]	
1-11	52-55	for	*[1]	PUBLICATION[1]	
1-12	56-71	Vision-Language	*[1]	PUBLICATION[1]	
1-13	72-84	Pre-Training	*[1]	PUBLICATION[1]	
1-14	84-85	"	_	_	
1-15	86-87	[	_	_	
1-16	87-88	[	_	_	
1-17	88-93	Paper	_	_	
1-18	93-94	]	_	_	
1-19	94-95	(	_	_	
1-20	95-100	https	_	_	
1-21	100-101	:	_	_	
1-22	101-102	/	_	_	
1-23	102-103	/	_	_	
1-24	103-112	arxiv.org	_	_	
1-25	112-113	/	_	_	
1-26	113-116	abs	_	_	
1-27	116-117	/	_	_	
1-28	117-127	2301.02280	_	_	
1-29	127-128	)	_	_	
1-30	128-129	]	_	_	
1-31	131-132	#	_	_	
1-32	132-133	#	_	_	
1-33	134-146	Installation	_	_	
1-34	148-149	`	_	_	
1-35	149-150	`	_	_	
1-36	150-151	`	_	_	
1-37	151-155	bash	*	PROGLANG	
1-38	156-159	git	*	SOFTWARE	
1-39	160-165	clone	_	_	
1-40	166-171	https	_	_	
1-41	171-172	:	_	_	
1-42	172-173	/	_	_	
1-43	173-174	/	_	_	
1-44	174-184	github.com	_	_	
1-45	184-185	/	_	_	
1-46	185-201	facebookresearch	_	_	
1-47	201-202	/	_	_	
1-48	202-206	diht	*	SOFTWARE	
1-49	207-209	cd	_	_	
1-50	210-214	diht	_	_	
1-51	215-218	pip	*	SOFTWARE	
1-52	219-226	install	_	_	
1-53	227-228	-	_	_	
1-54	228-229	r	_	_	
1-55	230-246	requirements.txt	_	_	
1-56	247-250	pip	*	SOFTWARE	
1-57	251-258	install	_	_	
1-58	259-260	-	_	_	
1-59	260-261	e	_	_	

#Text=.
2-1	262-263	.	_	_	

#Text=# To install as an editable package
#Text=```
#Text=
#Text=You can use `pip install .` to install the codebase as a non-editable package.
#Text=
#Text=## Example
#Text=
#Text=```python
#Text=import torch
#Text=
#Text=from diht import model_zoo
#Text=from PIL import Image
#Text=
#Text=
#Text=text_tokenizer, image_transform, model = model_zoo.load_model(
#Text=    "diht_vitl14_336px", is_train=False
#Text=)
#Text=
#Text=image = Image.open("infer_image.png").convert("RGB")
#Text=image = image_transform(image).unsqueeze(0)
#Text=text_captions = ["a mountain", "a beach", "a desert"]
#Text=text = text_tokenizer(text_captions)
#Text=
#Text=with torch.no_grad():
#Text=    image_features, text_features, logit_scale = model(image, text)
#Text=    logits_per_image = logit_scale * image_features @ text_features.T
#Text=    probs = logits_per_image.softmax(dim=-1).numpy()
#Text=
#Text=print(f"text captions: {text_captions}")
#Text=print(f"text caption probs: {probs}")
#Text=```
#Text=
#Text=The above code snippet should output
#Text=```bash
#Text=text captions: ['a mountain', 'a beach', 'a desert']
#Text=text caption probs: [[0.99370664 0.00514017 0.00115326]]
#Text=```
#Text=
#Text=## Running on GPU/CPU
#Text=
#Text=By default the model runs on CPU, to run on GPU you can do `model = model.to(torch.device("cuda"))`.
3-1	265-266	#	_	_	
3-2	267-269	To	_	_	
3-3	270-277	install	_	_	
3-4	278-280	as	_	_	
3-5	281-283	an	_	_	
3-6	284-292	editable	_	_	
3-7	293-300	package	_	_	
3-8	301-302	`	_	_	
3-9	302-303	`	_	_	
3-10	303-304	`	_	_	
3-11	306-309	You	_	_	
3-12	310-313	can	_	_	
3-13	314-317	use	_	_	
3-14	318-319	`	_	_	
3-15	319-322	pip	*	SOFTWARE	
3-16	323-330	install	_	_	
3-17	331-332	.	_	_	
3-18	332-333	`	_	_	
3-19	334-336	to	_	_	
3-20	337-344	install	_	_	
3-21	345-348	the	_	_	
3-22	349-357	codebase	_	_	
3-23	358-360	as	_	_	
3-24	361-362	a	_	_	
3-25	363-375	non-editable	_	_	
3-26	376-383	package	_	_	
3-27	383-384	.	_	_	
3-28	386-387	#	_	_	
3-29	387-388	#	_	_	
3-30	389-396	Example	_	_	
3-31	398-399	`	_	_	
3-32	399-400	`	_	_	
3-33	400-401	`	_	_	
3-34	401-407	python	*	PROGLANG	
3-35	408-414	import	_	_	
3-36	415-420	torch	*	SOFTWARE	
3-37	422-426	from	_	_	
3-38	427-431	diht	*	SOFTWARE	
3-39	432-438	import	_	_	
3-40	439-448	model_zoo	_	_	
3-41	449-453	from	_	_	
3-42	454-457	PIL	*	SOFTWARE	
3-43	458-464	import	_	_	
3-44	465-470	Image	_	_	
3-45	473-487	text_tokenizer	_	_	
3-46	487-488	,	_	_	
3-47	489-504	image_transform	_	_	
3-48	504-505	,	_	_	
3-49	506-511	model	_	_	
3-50	512-513	=	_	_	
3-51	514-534	model_zoo.load_model	_	_	
3-52	534-535	(	_	_	
3-53	540-541	"	_	_	
3-54	541-552	diht_vitl14	_	_	
3-55	552-553	_	_	_	
3-56	553-558	336px	_	_	
3-57	558-559	"	_	_	
3-58	559-560	,	_	_	
3-59	561-569	is_train	_	_	
3-60	569-570	=	_	_	
3-61	570-575	False	_	_	
3-62	576-577	)	_	_	
3-63	579-584	image	_	_	
3-64	585-586	=	_	_	
3-65	587-597	Image.open	_	_	
3-66	597-598	(	_	_	
3-67	598-599	"	_	_	
3-68	599-614	infer_image.png	_	_	
3-69	614-615	"	_	_	
3-70	615-616	)	_	_	
3-71	616-617	.	_	_	
3-72	617-624	convert	_	_	
3-73	624-625	(	_	_	
3-74	625-626	"	_	_	
3-75	626-629	RGB	_	_	
3-76	629-630	"	_	_	
3-77	630-631	)	_	_	
3-78	632-637	image	_	_	
3-79	638-639	=	_	_	
3-80	640-655	image_transform	_	_	
3-81	655-656	(	_	_	
3-82	656-661	image	_	_	
3-83	661-662	)	_	_	
3-84	662-663	.	_	_	
3-85	663-672	unsqueeze	_	_	
3-86	672-673	(	_	_	
3-87	673-674	0	_	_	
3-88	674-675	)	_	_	
3-89	676-689	text_captions	_	_	
3-90	690-691	=	_	_	
3-91	692-693	[	_	_	
3-92	693-694	"	_	_	
3-93	694-695	a	_	_	
3-94	696-704	mountain	_	_	
3-95	704-705	"	_	_	
3-96	705-706	,	_	_	
3-97	707-708	"	_	_	
3-98	708-709	a	_	_	
3-99	710-715	beach	_	_	
3-100	715-716	"	_	_	
3-101	716-717	,	_	_	
3-102	718-719	"	_	_	
3-103	719-720	a	_	_	
3-104	721-727	desert	_	_	
3-105	727-728	"	_	_	
3-106	728-729	]	_	_	
3-107	730-734	text	_	_	
3-108	735-736	=	_	_	
3-109	737-751	text_tokenizer	_	_	
3-110	751-752	(	_	_	
3-111	752-765	text_captions	_	_	
3-112	765-766	)	_	_	
3-113	768-772	with	_	_	
3-114	773-786	torch.no_grad	_	_	
3-114.1	773-778	torch	*	SOFTWARE	
3-115	786-787	(	_	_	
3-116	787-788	)	_	_	
3-117	788-789	:	_	_	
3-118	794-808	image_features	_	_	
3-119	808-809	,	_	_	
3-120	810-823	text_features	_	_	
3-121	823-824	,	_	_	
3-122	825-836	logit_scale	_	_	
3-123	837-838	=	_	_	
3-124	839-844	model	_	_	
3-125	844-845	(	_	_	
3-126	845-850	image	_	_	
3-127	850-851	,	_	_	
3-128	852-856	text	_	_	
3-129	856-857	)	_	_	
3-130	862-878	logits_per_image	_	_	
3-131	879-880	=	_	_	
3-132	881-892	logit_scale	_	_	
3-133	893-894	*	_	_	
3-134	895-909	image_features	_	_	
3-135	910-911	@	_	_	
3-136	912-927	text_features.T	_	_	
3-137	932-937	probs	_	_	
3-138	938-939	=	_	_	
3-139	940-964	logits_per_image.softmax	_	_	
3-140	964-965	(	_	_	
3-141	965-968	dim	_	_	
3-142	968-969	=	_	_	
3-143	969-970	-	_	_	
3-144	970-971	1	_	_	
3-145	971-972	)	_	_	
3-146	972-973	.	_	_	
3-147	973-978	numpy	*	SOFTWARE	
3-148	978-979	(	_	_	
3-149	979-980	)	_	_	
3-150	982-987	print	_	_	
3-151	987-988	(	_	_	
3-152	988-994	f"text	_	_	
3-153	995-1003	captions	_	_	
3-154	1003-1004	:	_	_	
3-155	1005-1006	{	_	_	
3-156	1006-1019	text_captions	_	_	
3-157	1019-1020	}	_	_	
3-158	1020-1021	"	_	_	
3-159	1021-1022	)	_	_	
3-160	1023-1028	print	_	_	
3-161	1028-1029	(	_	_	
3-162	1029-1035	f"text	_	_	
3-163	1036-1043	caption	_	_	
3-164	1044-1049	probs	_	_	
3-165	1049-1050	:	_	_	
3-166	1051-1052	{	_	_	
3-167	1052-1057	probs	_	_	
3-168	1057-1058	}	_	_	
3-169	1058-1059	"	_	_	
3-170	1059-1060	)	_	_	
3-171	1061-1062	`	_	_	
3-172	1062-1063	`	_	_	
3-173	1063-1064	`	_	_	
3-174	1066-1069	The	_	_	
3-175	1070-1075	above	_	_	
3-176	1076-1080	code	_	_	
3-177	1081-1088	snippet	_	_	
3-178	1089-1095	should	_	_	
3-179	1096-1102	output	_	_	
3-180	1103-1104	`	_	_	
3-181	1104-1105	`	_	_	
3-182	1105-1106	`	_	_	
3-183	1106-1110	bash	*	PROGLANG	
3-184	1111-1115	text	_	_	
3-185	1116-1124	captions	_	_	
3-186	1124-1125	:	_	_	
3-187	1126-1127	[	_	_	
3-188	1127-1128	'	_	_	
3-189	1128-1129	a	_	_	
3-190	1130-1138	mountain	_	_	
3-191	1138-1139	'	_	_	
3-192	1139-1140	,	_	_	
3-193	1141-1142	'	_	_	
3-194	1142-1143	a	_	_	
3-195	1144-1149	beach	_	_	
3-196	1149-1150	'	_	_	
3-197	1150-1151	,	_	_	
3-198	1152-1153	'	_	_	
3-199	1153-1154	a	_	_	
3-200	1155-1161	desert	_	_	
3-201	1161-1162	'	_	_	
3-202	1162-1163	]	_	_	
3-203	1164-1168	text	_	_	
3-204	1169-1176	caption	_	_	
3-205	1177-1182	probs	_	_	
3-206	1182-1183	:	_	_	
3-207	1184-1185	[	_	_	
3-208	1185-1186	[	_	_	
3-209	1186-1196	0.99370664	_	_	
3-210	1197-1207	0.00514017	_	_	
3-211	1208-1218	0.00115326	_	_	
3-212	1218-1219	]	_	_	
3-213	1219-1220	]	_	_	
3-214	1221-1222	`	_	_	
3-215	1222-1223	`	_	_	
3-216	1223-1224	`	_	_	
3-217	1226-1227	#	_	_	
3-218	1227-1228	#	_	_	
3-219	1229-1236	Running	_	_	
3-220	1237-1239	on	_	_	
3-221	1240-1243	GPU	_	_	
3-222	1243-1244	/	_	_	
3-223	1244-1247	CPU	_	_	
3-224	1249-1251	By	_	_	
3-225	1252-1259	default	_	_	
3-226	1260-1263	the	_	_	
3-227	1264-1269	model	_	_	
3-228	1270-1274	runs	_	_	
3-229	1275-1277	on	_	_	
3-230	1278-1281	CPU	_	_	
3-231	1281-1282	,	_	_	
3-232	1283-1285	to	_	_	
3-233	1286-1289	run	_	_	
3-234	1290-1292	on	_	_	
3-235	1293-1296	GPU	_	_	
3-236	1297-1300	you	_	_	
3-237	1301-1304	can	_	_	
3-238	1305-1307	do	_	_	
3-239	1308-1309	`	_	_	
3-240	1309-1314	model	_	_	
3-241	1315-1316	=	_	_	
3-242	1317-1325	model.to	_	_	
3-243	1325-1326	(	_	_	
3-244	1326-1338	torch.device	_	_	
3-244.1	1326-1331	torch	*	SOFTWARE	
3-245	1338-1339	(	_	_	
3-246	1339-1340	"	_	_	
3-247	1340-1344	cuda	*	SOFTWARE	
3-248	1344-1345	"	_	_	
3-249	1345-1346	)	_	_	
3-250	1346-1347	)	_	_	
3-251	1347-1348	`	_	_	
3-252	1348-1349	.	_	_	

#Text=The image and text tensors will also have to be transferred accordingly.
#Text=
#Text=## Available Models
#Text=
#Text=```python
#Text=import diht
#Text=
#Text=
#Text=print(diht.available_models())
#Text=```
#Text=
#Text=## Example ImageNet-1K zero-shot evaluation
#Text=
#Text=A simple image classification zero-shot evaluation using a single GPU can be performed by running:
#Text=> **Note**: Download ImageNet-1K dataset from the original website.
4-1	1350-1353	The	_	_	
4-2	1354-1359	image	_	_	
4-3	1360-1363	and	_	_	
4-4	1364-1368	text	_	_	
4-5	1369-1376	tensors	_	_	
4-6	1377-1381	will	_	_	
4-7	1382-1386	also	_	_	
4-8	1387-1391	have	_	_	
4-9	1392-1394	to	_	_	
4-10	1395-1397	be	_	_	
4-11	1398-1409	transferred	_	_	
4-12	1410-1421	accordingly	_	_	
4-13	1421-1422	.	_	_	
4-14	1424-1425	#	_	_	
4-15	1425-1426	#	_	_	
4-16	1427-1436	Available	_	_	
4-17	1437-1443	Models	_	_	
4-18	1445-1446	`	_	_	
4-19	1446-1447	`	_	_	
4-20	1447-1448	`	_	_	
4-21	1448-1454	python	*	PROGLANG	
4-22	1455-1461	import	_	_	
4-23	1462-1466	diht	*	SOFTWARE	
4-24	1469-1474	print	_	_	
4-25	1474-1475	(	_	_	
4-26	1475-1496	diht.available_models	_	_	
4-26.1	1475-1479	diht	*	SOFTWARE	
4-27	1496-1497	(	_	_	
4-28	1497-1498	)	_	_	
4-29	1498-1499	)	_	_	
4-30	1500-1501	`	_	_	
4-31	1501-1502	`	_	_	
4-32	1502-1503	`	_	_	
4-33	1505-1506	#	_	_	
4-34	1506-1507	#	_	_	
4-35	1508-1515	Example	_	_	
4-36	1516-1524	ImageNet	*[2]	DATASET[2]	
4-37	1524-1525	-	*[2]	DATASET[2]	
4-38	1525-1527	1K	*[2]	DATASET[2]	
4-39	1528-1537	zero-shot	_	_	
4-40	1538-1548	evaluation	_	_	
4-41	1550-1551	A	_	_	
4-42	1552-1558	simple	_	_	
4-43	1559-1564	image	_	_	
4-44	1565-1579	classification	_	_	
4-45	1580-1589	zero-shot	_	_	
4-46	1590-1600	evaluation	_	_	
4-47	1601-1606	using	_	_	
4-48	1607-1608	a	_	_	
4-49	1609-1615	single	_	_	
4-50	1616-1619	GPU	_	_	
4-51	1620-1623	can	_	_	
4-52	1624-1626	be	_	_	
4-53	1627-1636	performed	_	_	
4-54	1637-1639	by	_	_	
4-55	1640-1647	running	_	_	
4-56	1647-1648	:	_	_	
4-57	1649-1650	>	_	_	
4-58	1651-1652	*	_	_	
4-59	1652-1653	*	_	_	
4-60	1653-1657	Note	_	_	
4-61	1657-1658	*	_	_	
4-62	1658-1659	*	_	_	
4-63	1659-1660	:	_	_	
4-64	1661-1669	Download	_	_	
4-65	1670-1678	ImageNet	*[3]	DATASET[3]	
4-66	1678-1679	-	*[3]	DATASET[3]	
4-67	1679-1681	1K	*[3]	DATASET[3]	
4-68	1682-1689	dataset	_	_	
4-69	1690-1694	from	_	_	
4-70	1695-1698	the	_	_	
4-71	1699-1707	original	_	_	
4-72	1708-1715	website	_	_	
4-73	1715-1716	.	_	_	

#Text=Edit `IMAGENET_ROOT` in `example_imagenet_eval.py` to match the location on your machine.
#Text=```
#Text=python example_imagenet_eval.py
#Text=```
#Text=For DiHT-L/14@336 the output should look like:
#Text=```
#Text=ImageNet1K acc@1 for diht_vitl14_336px: 77.9
#Text=```
#Text=
#Text=## Example retrieval zero-shot evaluation
#Text=
#Text=A simple retrieval zero-shot evaluation using a single GPU can be performed by running:
#Text=> **Note**: Download COCO and Flickr30K datasets from the original websites.
5-1	1717-1721	Edit	_	_	
5-2	1722-1723	`	_	_	
5-3	1723-1736	IMAGENET_ROOT	_	_	
5-4	1736-1737	`	_	_	
5-5	1738-1740	in	_	_	
5-6	1741-1742	`	_	_	
5-7	1742-1766	example_imagenet_eval.py	_	_	
5-7.1	1750-1758	imagenet	*	DATASET	
5-8	1766-1767	`	_	_	
5-9	1768-1770	to	_	_	
5-10	1771-1776	match	_	_	
5-11	1777-1780	the	_	_	
5-12	1781-1789	location	_	_	
5-13	1790-1792	on	_	_	
5-14	1793-1797	your	_	_	
5-15	1798-1805	machine	_	_	
5-16	1805-1806	.	_	_	
5-17	1807-1808	`	_	_	
5-18	1808-1809	`	_	_	
5-19	1809-1810	`	_	_	
5-20	1811-1817	python	*	PROGLANG	
5-21	1818-1842	example_imagenet_eval.py	_	_	
5-21.1	1826-1834	imagenet	*	DATASET	
5-22	1843-1844	`	_	_	
5-23	1844-1845	`	_	_	
5-24	1845-1846	`	_	_	
5-25	1847-1850	For	_	_	
5-26	1851-1857	DiHT-L	_	_	
5-26.1	1851-1855	DiHT	*	SOFTWARE	
5-27	1857-1858	/	_	_	
5-28	1858-1860	14	_	_	
5-29	1860-1861	@	_	_	
5-30	1861-1864	336	_	_	
5-31	1865-1868	the	_	_	
5-32	1869-1875	output	_	_	
5-33	1876-1882	should	_	_	
5-34	1883-1887	look	_	_	
5-35	1888-1892	like	_	_	
5-36	1892-1893	:	_	_	
5-37	1894-1895	`	_	_	
5-38	1895-1896	`	_	_	
5-39	1896-1897	`	_	_	
5-40	1898-1908	ImageNet1K	*	DATASET	
5-41	1909-1912	acc	*[4]	EVALMETRIC[4]	
5-42	1912-1913	@	*[4]	EVALMETRIC[4]	
5-43	1913-1914	1	*[4]	EVALMETRIC[4]	
5-44	1915-1918	for	_	_	
5-45	1919-1930	diht_vitl14	_	_	
5-45.1	1919-1923	diht	*	SOFTWARE	
5-46	1930-1931	_	_	_	
5-47	1931-1936	336px	_	_	
5-48	1936-1937	:	_	_	
5-49	1938-1942	77.9	_	_	
5-50	1943-1944	`	_	_	
5-51	1944-1945	`	_	_	
5-52	1945-1946	`	_	_	
5-53	1948-1949	#	_	_	
5-54	1949-1950	#	_	_	
5-55	1951-1958	Example	_	_	
5-56	1959-1968	retrieval	_	_	
5-57	1969-1978	zero-shot	_	_	
5-58	1979-1989	evaluation	_	_	
5-59	1991-1992	A	_	_	
5-60	1993-1999	simple	_	_	
5-61	2000-2009	retrieval	_	_	
5-62	2010-2019	zero-shot	_	_	
5-63	2020-2030	evaluation	_	_	
5-64	2031-2036	using	_	_	
5-65	2037-2038	a	_	_	
5-66	2039-2045	single	_	_	
5-67	2046-2049	GPU	_	_	
5-68	2050-2053	can	_	_	
5-69	2054-2056	be	_	_	
5-70	2057-2066	performed	_	_	
5-71	2067-2069	by	_	_	
5-72	2070-2077	running	_	_	
5-73	2077-2078	:	_	_	
5-74	2079-2080	>	_	_	
5-75	2081-2082	*	_	_	
5-76	2082-2083	*	_	_	
5-77	2083-2087	Note	_	_	
5-78	2087-2088	*	_	_	
5-79	2088-2089	*	_	_	
5-80	2089-2090	:	_	_	
5-81	2091-2099	Download	_	_	
5-82	2100-2104	COCO	*	DATASET	
5-83	2105-2108	and	_	_	
5-84	2109-2118	Flickr30K	*	DATASET	
5-85	2119-2127	datasets	_	_	
5-86	2128-2132	from	_	_	
5-87	2133-2136	the	_	_	
5-88	2137-2145	original	_	_	
5-89	2146-2154	websites	_	_	
5-90	2154-2155	.	_	_	

#Text=Json files (`coco_test.json` and `flickr30k_test.json`) can be downloaded from https://github.com/salesforce/ALBEF#download.
6-1	2156-2160	Json	_	_	
6-2	2161-2166	files	_	_	
6-3	2167-2168	(	_	_	
6-4	2168-2169	`	_	_	
6-5	2169-2183	coco_test.json	_	_	
6-5.1	2169-2173	coco	*	DATASET	
6-6	2183-2184	`	_	_	
6-7	2185-2188	and	_	_	
6-8	2189-2190	`	_	_	
6-9	2190-2209	flickr30k_test.json	_	_	
6-9.1	2190-2199	flickr30k	*	DATASET	
6-10	2209-2210	`	_	_	
6-11	2210-2211	)	_	_	
6-12	2212-2215	can	_	_	
6-13	2216-2218	be	_	_	
6-14	2219-2229	downloaded	_	_	
6-15	2230-2234	from	_	_	
6-16	2235-2240	https	_	_	
6-17	2240-2241	:	_	_	
6-18	2241-2242	/	_	_	
6-19	2242-2243	/	_	_	
6-20	2243-2253	github.com	_	_	
6-21	2253-2254	/	_	_	
6-22	2254-2264	salesforce	_	_	
6-23	2264-2265	/	_	_	
6-24	2265-2270	ALBEF	_	_	
6-25	2270-2271	#	_	_	
6-26	2271-2279	download	_	_	
6-27	2279-2280	.	_	_	

#Text=Edit `COCO_ROOT` and `FLICKR30K_ROOT` in `example_retrieval_eval.py` to match the locations on your machine.
#Text=```
#Text=python example_retrieval_eval.py
#Text=```
#Text=For DiHT-L/14@336 the output should look like:
#Text=```
#Text=COCO T2I r@1 for diht_vitl14_336px: 49.3
#Text=COCO I2T r@1 for diht_vitl14_336px: 65.3
#Text=
#Text=Flickr30K T2I r@1 for diht_vitl14_336px: 78.2
#Text=Flickr30K I2T r@1 for diht_vitl14_336px: 91.1
#Text=```
#Text=
#Text=## Zero-shot model performance
#Text=
#Text=| Model | ImageNet-1K | COCO T2I | COCO I2T | Flickr30K T2I | Flickr30K I2T |
#Text=| :---  |    :----:   |  :----:  |  :----:  |     :----:    |     :----:    |
#Text=|       |  Accuracy@1 | Recall@1 | Recall@1 |    Recall@1   |    Recall@1   |
#Text=| diht_vitb32_224px      | 68.0 | 40.6 | 59.3 | 68.6 | 84.4 |
#Text=| diht_vitb16_224px      | 72.2 | 43.3 | 60.3 | 72.9 | 89.8 |
#Text=| diht_vitl14_224px      | 77.0 | 48.0 | 65.1 | 76.7 | 92.0 |
#Text=| diht_vitl14_336px      | 77.9 | 49.3 | 65.3 | 78.2 | 91.1 |
#Text=
#Text=
#Text=## Citation
#Text=If you find this model useful, please consider citing our preprint using the citation below.
#Text=```
#Text=@article{rdk+23,
#Text=  title = {Filtering, Distillation, and Hard Negatives for Vision-Language Pre-Training},
#Text=  author = {Radenovic, Filip and Dubey, Abhimanyu and Kadian, Abhishek and Mihaylov, Todor and Vandenhende, Simon and Patel, Yash and Wen, Yi and Ramanathan, Vignesh and Mahajan, Dhruv},
#Text=  journal = {arXiv:2301.02280},
#Text=  year = {2023}
#Text=}
#Text=```
#Text=
#Text=## License
#Text=```
#Text=Copyright (c) Meta Platforms, Inc. and affiliates.
7-1	2281-2285	Edit	_	_	
7-2	2286-2287	`	_	_	
7-3	2287-2296	COCO_ROOT	_	_	
7-3.1	2287-2291	COCO	*	DATASET	
7-4	2296-2297	`	_	_	
7-5	2298-2301	and	_	_	
7-6	2302-2303	`	_	_	
7-7	2303-2317	FLICKR30K_ROOT	_	_	
7-7.1	2303-2312	FLICKR30K	*	DATASET	
7-8	2317-2318	`	_	_	
7-9	2319-2321	in	_	_	
7-10	2322-2323	`	_	_	
7-11	2323-2348	example_retrieval_eval.py	_	_	
7-12	2348-2349	`	_	_	
7-13	2350-2352	to	_	_	
7-14	2353-2358	match	_	_	
7-15	2359-2362	the	_	_	
7-16	2363-2372	locations	_	_	
7-17	2373-2375	on	_	_	
7-18	2376-2380	your	_	_	
7-19	2381-2388	machine	_	_	
7-20	2388-2389	.	_	_	
7-21	2390-2391	`	_	_	
7-22	2391-2392	`	_	_	
7-23	2392-2393	`	_	_	
7-24	2394-2400	python	*	PROGLANG	
7-25	2401-2426	example_retrieval_eval.py	_	_	
7-26	2427-2428	`	_	_	
7-27	2428-2429	`	_	_	
7-28	2429-2430	`	_	_	
7-29	2431-2434	For	_	_	
7-30	2435-2441	DiHT-L	_	_	
7-30.1	2435-2439	DiHT	*	SOFTWARE	
7-31	2441-2442	/	_	_	
7-32	2442-2444	14	_	_	
7-33	2444-2445	@	_	_	
7-34	2445-2448	336	_	_	
7-35	2449-2452	the	_	_	
7-36	2453-2459	output	_	_	
7-37	2460-2466	should	_	_	
7-38	2467-2471	look	_	_	
7-39	2472-2476	like	_	_	
7-40	2476-2477	:	_	_	
7-41	2478-2479	`	_	_	
7-42	2479-2480	`	_	_	
7-43	2480-2481	`	_	_	
7-44	2482-2486	COCO	*	DATASET	
7-45	2487-2490	T2I	_	_	
7-46	2491-2492	r	*[5]	EVALMETRIC[5]	
7-47	2492-2493	@	*[5]	EVALMETRIC[5]	
7-48	2493-2494	1	*[5]	EVALMETRIC[5]	
7-49	2495-2498	for	_	_	
7-50	2499-2510	diht_vitl14	_	_	
7-50.1	2499-2503	diht	*	SOFTWARE	
7-51	2510-2511	_	_	_	
7-52	2511-2516	336px	_	_	
7-53	2516-2517	:	_	_	
7-54	2518-2522	49.3	_	_	
7-55	2523-2527	COCO	*	DATASET	
7-56	2528-2531	I2T	_	_	
7-57	2532-2533	r	*[6]	EVALMETRIC[6]	
7-58	2533-2534	@	*[6]	EVALMETRIC[6]	
7-59	2534-2535	1	*[6]	EVALMETRIC[6]	
7-60	2536-2539	for	_	_	
7-61	2540-2551	diht_vitl14	_	_	
7-61.1	2540-2544	diht	*	SOFTWARE	
7-62	2551-2552	_	_	_	
7-63	2552-2557	336px	_	_	
7-64	2557-2558	:	_	_	
7-65	2559-2563	65.3	_	_	
7-66	2565-2574	Flickr30K	*	DATASET	
7-67	2575-2578	T2I	_	_	
7-68	2579-2580	r	*[7]	EVALMETRIC[7]	
7-69	2580-2581	@	*[7]	EVALMETRIC[7]	
7-70	2581-2582	1	*[7]	EVALMETRIC[7]	
7-71	2583-2586	for	_	_	
7-72	2587-2598	diht_vitl14	_	_	
7-72.1	2587-2591	diht	*	SOFTWARE	
7-73	2598-2599	_	_	_	
7-74	2599-2604	336px	_	_	
7-75	2604-2605	:	_	_	
7-76	2606-2610	78.2	_	_	
7-77	2611-2620	Flickr30K	*	DATASET	
7-78	2621-2624	I2T	_	_	
7-79	2625-2626	r	*[8]	EVALMETRIC[8]	
7-80	2626-2627	@	*[8]	EVALMETRIC[8]	
7-81	2627-2628	1	*[8]	EVALMETRIC[8]	
7-82	2629-2632	for	_	_	
7-83	2633-2644	diht_vitl14	_	_	
7-83.1	2633-2637	diht	*	SOFTWARE	
7-84	2644-2645	_	_	_	
7-85	2645-2650	336px	_	_	
7-86	2650-2651	:	_	_	
7-87	2652-2656	91.1	_	_	
7-88	2657-2658	`	_	_	
7-89	2658-2659	`	_	_	
7-90	2659-2660	`	_	_	
7-91	2662-2663	#	_	_	
7-92	2663-2664	#	_	_	
7-93	2665-2674	Zero-shot	_	_	
7-94	2675-2680	model	_	_	
7-95	2681-2692	performance	_	_	
7-96	2694-2695	|	_	_	
7-97	2696-2701	Model	_	_	
7-98	2702-2703	|	_	_	
7-99	2704-2712	ImageNet	*[9]	DATASET[9]	
7-100	2712-2713	-	*[9]	DATASET[9]	
7-101	2713-2715	1K	*[9]	DATASET[9]	
7-102	2716-2717	|	_	_	
7-103	2718-2722	COCO	*	DATASET	
7-104	2723-2726	T2I	_	_	
7-105	2727-2728	|	_	_	
7-106	2729-2733	COCO	*	DATASET	
7-107	2734-2737	I2T	_	_	
7-108	2738-2739	|	_	_	
7-109	2740-2749	Flickr30K	*	DATASET	
7-110	2750-2753	T2I	_	_	
7-111	2754-2755	|	_	_	
7-112	2756-2765	Flickr30K	*	DATASET	
7-113	2766-2769	I2T	_	_	
7-114	2770-2771	|	_	_	
7-115	2772-2773	|	_	_	
7-116	2774-2775	:	_	_	
7-117	2775-2776	-	_	_	
7-118	2776-2777	-	_	_	
7-119	2777-2778	-	_	_	
7-120	2780-2781	|	_	_	
7-121	2785-2786	:	_	_	
7-122	2786-2787	-	_	_	
7-123	2787-2788	-	_	_	
7-124	2788-2789	-	_	_	
7-125	2789-2790	-	_	_	
7-126	2790-2791	:	_	_	
7-127	2794-2795	|	_	_	
7-128	2797-2798	:	_	_	
7-129	2798-2799	-	_	_	
7-130	2799-2800	-	_	_	
7-131	2800-2801	-	_	_	
7-132	2801-2802	-	_	_	
7-133	2802-2803	:	_	_	
7-134	2805-2806	|	_	_	
7-135	2808-2809	:	_	_	
7-136	2809-2810	-	_	_	
7-137	2810-2811	-	_	_	
7-138	2811-2812	-	_	_	
7-139	2812-2813	-	_	_	
7-140	2813-2814	:	_	_	
7-141	2816-2817	|	_	_	
7-142	2822-2823	:	_	_	
7-143	2823-2824	-	_	_	
7-144	2824-2825	-	_	_	
7-145	2825-2826	-	_	_	
7-146	2826-2827	-	_	_	
7-147	2827-2828	:	_	_	
7-148	2832-2833	|	_	_	
7-149	2838-2839	:	_	_	
7-150	2839-2840	-	_	_	
7-151	2840-2841	-	_	_	
7-152	2841-2842	-	_	_	
7-153	2842-2843	-	_	_	
7-154	2843-2844	:	_	_	
7-155	2848-2849	|	_	_	
7-156	2850-2851	|	_	_	
7-157	2858-2859	|	_	_	
7-158	2861-2869	Accuracy	*[10]	EVALMETRIC[10]	
7-159	2869-2870	@	*[10]	EVALMETRIC[10]	
7-160	2870-2871	1	*[10]	EVALMETRIC[10]	
7-161	2872-2873	|	_	_	
7-162	2874-2880	Recall	*[11]	EVALMETRIC[11]	
7-163	2880-2881	@	*[11]	EVALMETRIC[11]	
7-164	2881-2882	1	*[11]	EVALMETRIC[11]	
7-165	2883-2884	|	_	_	
7-166	2885-2891	Recall	*[12]	EVALMETRIC[12]	
7-167	2891-2892	@	*[12]	EVALMETRIC[12]	
7-168	2892-2893	1	*[12]	EVALMETRIC[12]	
7-169	2894-2895	|	_	_	
7-170	2899-2905	Recall	*[13]	EVALMETRIC[13]	
7-171	2905-2906	@	*[13]	EVALMETRIC[13]	
7-172	2906-2907	1	*[13]	EVALMETRIC[13]	
7-173	2910-2911	|	_	_	
7-174	2915-2921	Recall	*[14]	EVALMETRIC[14]	
7-175	2921-2922	@	*[14]	EVALMETRIC[14]	
7-176	2922-2923	1	*[14]	EVALMETRIC[14]	
7-177	2926-2927	|	_	_	
7-178	2928-2929	|	_	_	
7-179	2930-2941	diht_vitb32	_	_	
7-179.1	2930-2934	diht	*	SOFTWARE	
7-180	2941-2942	_	_	_	
7-181	2942-2947	224px	_	_	
7-182	2953-2954	|	_	_	
7-183	2955-2959	68.0	_	_	
7-184	2960-2961	|	_	_	
7-185	2962-2966	40.6	_	_	
7-186	2967-2968	|	_	_	
7-187	2969-2973	59.3	_	_	
7-188	2974-2975	|	_	_	
7-189	2976-2980	68.6	_	_	
7-190	2981-2982	|	_	_	
7-191	2983-2987	84.4	_	_	
7-192	2988-2989	|	_	_	
7-193	2990-2991	|	_	_	
7-194	2992-3003	diht_vitb16	_	_	
7-194.1	2992-2996	diht	*	SOFTWARE	
7-195	3003-3004	_	_	_	
7-196	3004-3009	224px	_	_	
7-197	3015-3016	|	_	_	
7-198	3017-3021	72.2	_	_	
7-199	3022-3023	|	_	_	
7-200	3024-3028	43.3	_	_	
7-201	3029-3030	|	_	_	
7-202	3031-3035	60.3	_	_	
7-203	3036-3037	|	_	_	
7-204	3038-3042	72.9	_	_	
7-205	3043-3044	|	_	_	
7-206	3045-3049	89.8	_	_	
7-207	3050-3051	|	_	_	
7-208	3052-3053	|	_	_	
7-209	3054-3065	diht_vitl14	_	_	
7-209.1	3054-3058	diht	*	SOFTWARE	
7-210	3065-3066	_	_	_	
7-211	3066-3071	224px	_	_	
7-212	3077-3078	|	_	_	
7-213	3079-3083	77.0	_	_	
7-214	3084-3085	|	_	_	
7-215	3086-3090	48.0	_	_	
7-216	3091-3092	|	_	_	
7-217	3093-3097	65.1	_	_	
7-218	3098-3099	|	_	_	
7-219	3100-3104	76.7	_	_	
7-220	3105-3106	|	_	_	
7-221	3107-3111	92.0	_	_	
7-222	3112-3113	|	_	_	
7-223	3114-3115	|	_	_	
7-224	3116-3127	diht_vitl14	_	_	
7-224.1	3116-3120	diht	*	SOFTWARE	
7-225	3127-3128	_	_	_	
7-226	3128-3133	336px	_	_	
7-227	3139-3140	|	_	_	
7-228	3141-3145	77.9	_	_	
7-229	3146-3147	|	_	_	
7-230	3148-3152	49.3	_	_	
7-231	3153-3154	|	_	_	
7-232	3155-3159	65.3	_	_	
7-233	3160-3161	|	_	_	
7-234	3162-3166	78.2	_	_	
7-235	3167-3168	|	_	_	
7-236	3169-3173	91.1	_	_	
7-237	3174-3175	|	_	_	
7-238	3178-3179	#	_	_	
7-239	3179-3180	#	_	_	
7-240	3181-3189	Citation	_	_	
7-241	3190-3192	If	_	_	
7-242	3193-3196	you	_	_	
7-243	3197-3201	find	_	_	
7-244	3202-3206	this	_	_	
7-245	3207-3212	model	_	_	
7-246	3213-3219	useful	_	_	
7-247	3219-3220	,	_	_	
7-248	3221-3227	please	_	_	
7-249	3228-3236	consider	_	_	
7-250	3237-3243	citing	_	_	
7-251	3244-3247	our	_	_	
7-252	3248-3256	preprint	_	_	
7-253	3257-3262	using	_	_	
7-254	3263-3266	the	_	_	
7-255	3267-3275	citation	_	_	
7-256	3276-3281	below	_	_	
7-257	3281-3282	.	_	_	
7-258	3283-3284	`	_	_	
7-259	3284-3285	`	_	_	
7-260	3285-3286	`	_	_	
7-261	3287-3288	@	_	_	
7-262	3288-3295	article	_	_	
7-263	3295-3296	{	_	_	
7-264	3296-3299	rdk	_	_	
7-265	3299-3300	+	_	_	
7-266	3300-3302	23	_	_	
7-267	3302-3303	,	_	_	
7-268	3306-3311	title	_	_	
7-269	3312-3313	=	_	_	
7-270	3314-3315	{	_	_	
7-271	3315-3324	Filtering	*[15]	PUBLICATION[15]	
7-272	3324-3325	,	*[15]	PUBLICATION[15]	
7-273	3326-3338	Distillation	*[15]	PUBLICATION[15]	
7-274	3338-3339	,	*[15]	PUBLICATION[15]	
7-275	3340-3343	and	*[15]	PUBLICATION[15]	
7-276	3344-3348	Hard	*[15]	PUBLICATION[15]	
7-277	3349-3358	Negatives	*[15]	PUBLICATION[15]	
7-278	3359-3362	for	*[15]	PUBLICATION[15]	
7-279	3363-3378	Vision-Language	*[15]	PUBLICATION[15]	
7-280	3379-3391	Pre-Training	*[15]	PUBLICATION[15]	
7-281	3391-3392	}	_	_	
7-282	3392-3393	,	_	_	
7-283	3396-3402	author	_	_	
7-284	3403-3404	=	_	_	
7-285	3405-3406	{	_	_	
7-286	3406-3415	Radenovic	_	_	
7-287	3415-3416	,	_	_	
7-288	3417-3422	Filip	_	_	
7-289	3423-3426	and	_	_	
7-290	3427-3432	Dubey	_	_	
7-291	3432-3433	,	_	_	
7-292	3434-3443	Abhimanyu	_	_	
7-293	3444-3447	and	_	_	
7-294	3448-3454	Kadian	_	_	
7-295	3454-3455	,	_	_	
7-296	3456-3464	Abhishek	_	_	
7-297	3465-3468	and	_	_	
7-298	3469-3477	Mihaylov	_	_	
7-299	3477-3478	,	_	_	
7-300	3479-3484	Todor	_	_	
7-301	3485-3488	and	_	_	
7-302	3489-3500	Vandenhende	_	_	
7-303	3500-3501	,	_	_	
7-304	3502-3507	Simon	_	_	
7-305	3508-3511	and	_	_	
7-306	3512-3517	Patel	_	_	
7-307	3517-3518	,	_	_	
7-308	3519-3523	Yash	_	_	
7-309	3524-3527	and	_	_	
7-310	3528-3531	Wen	_	_	
7-311	3531-3532	,	_	_	
7-312	3533-3535	Yi	_	_	
7-313	3536-3539	and	_	_	
7-314	3540-3550	Ramanathan	_	_	
7-315	3550-3551	,	_	_	
7-316	3552-3559	Vignesh	_	_	
7-317	3560-3563	and	_	_	
7-318	3564-3571	Mahajan	_	_	
7-319	3571-3572	,	_	_	
7-320	3573-3578	Dhruv	_	_	
7-321	3578-3579	}	_	_	
7-322	3579-3580	,	_	_	
7-323	3583-3590	journal	_	_	
7-324	3591-3592	=	_	_	
7-325	3593-3594	{	_	_	
7-326	3594-3599	arXiv	_	_	
7-327	3599-3600	:	_	_	
7-328	3600-3610	2301.02280	_	_	
7-329	3610-3611	}	_	_	
7-330	3611-3612	,	_	_	
7-331	3615-3619	year	_	_	
7-332	3620-3621	=	_	_	
7-333	3622-3623	{	_	_	
7-334	3623-3627	2023	_	_	
7-335	3627-3628	}	_	_	
7-336	3629-3630	}	_	_	
7-337	3631-3632	`	_	_	
7-338	3632-3633	`	_	_	
7-339	3633-3634	`	_	_	
7-340	3636-3637	#	_	_	
7-341	3637-3638	#	_	_	
7-342	3639-3646	License	_	_	
7-343	3647-3648	`	_	_	
7-344	3648-3649	`	_	_	
7-345	3649-3650	`	_	_	
7-346	3651-3660	Copyright	_	_	
7-347	3661-3662	(	_	_	
7-348	3662-3663	c	_	_	
7-349	3663-3664	)	_	_	
7-350	3665-3669	Meta	_	_	
7-351	3670-3679	Platforms	_	_	
7-352	3679-3680	,	_	_	
7-353	3681-3684	Inc	_	_	
7-354	3684-3685	.	_	_	
7-355	3686-3689	and	_	_	
7-356	3690-3700	affiliates	_	_	
7-357	3700-3701	.	_	_	

#Text=All rights reserved.
8-1	3702-3705	All	_	_	
8-2	3706-3712	rights	_	_	
8-3	3713-3721	reserved	_	_	
8-4	3721-3722	.	_	_	

#Text=This source code is licensed under the license found in the
#Text=LICENSE file in the root directory of this source tree.
#Text=```
9-1	3723-3727	This	_	_	
9-2	3728-3734	source	_	_	
9-3	3735-3739	code	_	_	
9-4	3740-3742	is	_	_	
9-5	3743-3751	licensed	_	_	
9-6	3752-3757	under	_	_	
9-7	3758-3761	the	_	_	
9-8	3762-3769	license	_	_	
9-9	3770-3775	found	_	_	
9-10	3776-3778	in	_	_	
9-11	3779-3782	the	_	_	
9-12	3783-3790	LICENSE	_	_	
9-13	3791-3795	file	_	_	
9-14	3796-3798	in	_	_	
9-15	3799-3802	the	_	_	
9-16	3803-3807	root	_	_	
9-17	3808-3817	directory	_	_	
9-18	3818-3820	of	_	_	
9-19	3821-3825	this	_	_	
9-20	3826-3832	source	_	_	
9-21	3833-3837	tree	_	_	
9-22	3837-3838	.	_	_	
9-23	3839-3840	`	_	_	
9-24	3840-3841	`	_	_	
9-25	3841-3842	`	_	_	
